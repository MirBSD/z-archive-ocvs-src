head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.4
	tg-mergefixes-1-branch:1.1.1.4.0.8
	tg-mergefixes-1-base:1.1.1.4
	MIROS_X:1.1.1.4.0.6
	MIROS_X_BASE:1.1.1.4
	tg-mergetmp-3:1.1.1.4
	cvs-200411261545:1.1.1.4
	MIRBSD_XP_MIRPPC:1.1.1.4.0.4
	MIRBSD_XP_SPARC_BASE:1.1.1.4
	MIRBSD_XP_SPARC:1.1.1.4.0.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.4
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.48.28;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.48.28;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.17.31.05;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.12.22.21.10.36;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.05.16.08.24.29;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: math_group.h,v 1.6 2002/09/06 21:36:52 deraadt Exp $	*/
/*	$EOM: math_group.h,v 1.7 1999/04/17 23:20:40 niklas Exp $	*/

/*
 * Copyright (c) 1998 Niels Provos.  All rights reserved.
 * Copyright (c) 1999 Niklas Hallqvist.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Ericsson Radio Systems.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This code was written under funding by Ericsson Radio Systems.
 */

#ifndef _MATH_GROUP_H_
#define _MATH_GROUP_H_

enum groups {
  MODP,				/* F_p, Z modulo a prime */
  EC2N,				/* Elliptic Curve over the Field GF(2**N) */
  ECP				/* Elliptic Curve over the Field Z_p */
};

/*
 * The group on which diffie hellmann calculations are done.
 */

struct group {
  enum groups type;
  int id;			/* Group ID */
  int bits;			/* Number of key bits provided by this group */
  void *group;
  void *a, *b, *c, *d;
  void *gen;			/* Group Generator */
  int (*getlen) (struct group *);
  void (*getraw) (struct group *, void *, u_int8_t *);
  int (*setraw) (struct group *, void *, u_int8_t *, int);
  int (*setrandom) (struct group *, void *);
  int (*operation) (struct group *, void *, void *, void *);
};

/* Description of an Elliptic Group over GF(2**n) for Boot-Strapping */

struct ec2n_dscr {
  int id;
  int bits;				/* Key Bits provided by this group */
  char *polynomial;			/* Irreduceable polynomial */
  char *gen_x;				/* X - Coord. of Generator */
  char *a, *b;				/* Curve Parameters */
};

/* Description of F_p for Boot-Strapping */

struct modp_dscr {
  int id;
  int bits;				/* Key Bits provided by this group */
  char *prime;				/* Prime */
  char *gen;				/* Generator */
};

/* Prototypes */

void group_init (void);
void group_free (struct group *);
struct group *group_get (int);

void ec2n_free (struct group *);
struct group *ec2n_clone (struct group *, struct group *);
void ec2n_init (struct group *);

void modp_free (struct group *);
struct group *modp_clone (struct group *, struct group *);
void modp_init (struct group *);

#endif /* _MATH_GROUP_H_ */
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
/*	$OpenBSD: math_group.h,v 1.7 2003/06/03 14:28:16 ho Exp $	*/
d16 5
@


1.1.1.3
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
/*	$OpenBSD: math_group.h,v 1.8 2003/12/15 10:06:42 hshoexer Exp $	*/
d39 1
a39 2
  ECP,				/* Elliptic Curve over the Field Z_p */
  NOTYET			/* Not yet assigned */
@


1.1.1.4
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 2
a2 2
/* $OpenBSD: math_group.h,v 1.10 2004/04/15 18:39:26 deraadt Exp $	 */
/* $EOM: math_group.h,v 1.7 1999/04/17 23:20:40 niklas Exp $	 */
d37 4
a40 4
	MODP,			/* F_p, Z modulo a prime */
	EC2N,			/* Elliptic Curve over the Field GF(2**N) */
	ECP,			/* Elliptic Curve over the Field Z_p */
	NOTYET			/* Not yet assigned */
d48 11
a58 11
	enum groups     type;
	int             id;	/* Group ID */
	int             bits;	/* Number of key bits provided by this group */
	void           *group;
	void           *a, *b, *c, *d;
	void           *gen;	/* Group Generator */
	int             (*getlen) (struct group *);
	void            (*getraw) (struct group *, void *, u_int8_t *);
	int             (*setraw) (struct group *, void *, u_int8_t *, int);
	int             (*setrandom) (struct group *, void *);
	int             (*operation) (struct group *, void *, void *, void *);
d64 5
a68 5
	int             id;
	int             bits;	/* Key Bits provided by this group */
	char           *polynomial;	/* Irreduceable polynomial */
	char           *gen_x;	/* X - Coord. of Generator */
	char           *a, *b;	/* Curve Parameters */
d74 4
a77 4
	int             id;
	int             bits;	/* Key Bits provided by this group */
	char           *prime;	/* Prime */
	char           *gen;	/* Generator */
d82 11
a92 11
void            group_init(void);
void            group_free(struct group *);
struct group   *group_get(u_int32_t);

void            ec2n_free(struct group *);
struct group   *ec2n_clone(struct group *, struct group *);
void            ec2n_init(struct group *);

void            modp_free(struct group *);
struct group   *modp_clone(struct group *, struct group *);
void            modp_init(struct group *);
d94 1
a94 1
#endif				/* _MATH_GROUP_H_ */
@



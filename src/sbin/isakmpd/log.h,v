head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.7
	tg-mergefixes-1-branch:1.1.1.7.0.4
	tg-mergefixes-1-base:1.1.1.7
	MIROS_X:1.1.1.7.0.2
	MIROS_X_BASE:1.1.1.7
	tg-mergetmp-3:1.1.1.7
	cvs-200411261545:1.1.1.7
	MIRBSD_XP_MIRPPC:1.1.1.6.0.4
	MIRBSD_XP_SPARC_BASE:1.1.1.6
	MIRBSD_XP_SPARC:1.1.1.6.0.2
	MIRBSD_7quater:1.1.1.3
	cvs-200405160640:1.1.1.6
	cvs-200401271800:1.1.1.5
	cvs-200401261630:1.1.1.5
	cvs-200401021645:1.1.1.4
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.4
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.3
	MIRBSD_5:1.1.1.3
	cvs-200306082100:1.1.1.3
	ctm-3316:1.1.1.3
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.48.28;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.48.28;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.21.19.02.37;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.05.17.31.01;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.12.22.21.10.35;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.01.26.18.29.24;	author tg;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2004.05.16.08.24.24;	author tg;	state Stab;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.11.26.15.50.55;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: log.h,v 1.13 2002/06/09 08:13:06 todd Exp $	*/
/*	$EOM: log.h,v 1.19 2000/03/30 14:27:23 ho Exp $	*/

/*
 * Copyright (c) 1998, 1999 Niklas Hallqvist.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Ericsson Radio Systems.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This code was written under funding by Ericsson Radio Systems.
 */

#ifndef _LOG_H_
#define _LOG_H_

#include <sys/types.h>
#include <sys/socket.h>
#include <sys/uio.h>
#include <stdio.h>

/*
 * We cannot do the log strings dynamically sizeable as out of memory is one
 * of the situations we need to report about.
 */
#define LOG_SIZE	200

enum log_classes {
  LOG_MISC, LOG_TRANSPORT, LOG_MESSAGE, LOG_CRYPTO, LOG_TIMER, LOG_SYSDEP,
  LOG_SA, LOG_EXCHANGE, LOG_NEGOTIATION, LOG_POLICY, LOG_ENDCLASS
};
#define LOG_CLASSES_TEXT \
  { "Misc", "Trpt", "Mesg", "Cryp", "Timr", "Sdep", "SA  ", "Exch", "Negt", \
    "Plcy" }

/*
 * "Class" LOG_REPORT will always be logged to the current log channel,
 * regardless of level.
 */
#define LOG_PRINT  -1
#define LOG_REPORT -2

#ifdef USE_DEBUG

#define LOG_DBG(x)	log_debug x
#define LOG_DBG_BUF(x)	log_debug_buf x

extern void log_debug (int, int, const char *, ...)
     __attribute__ ((__format__ (__printf__, 3, 4)));
extern void log_debug_buf (int, int, const char *, const u_int8_t *, size_t);
extern void log_debug_cmd (int, int);
extern void log_debug_toggle (void);

#define PCAP_FILE_DEFAULT "/var/run/isakmpd.pcap"
extern void log_packet_init (char *);
extern void log_packet_iov (struct sockaddr *, struct sockaddr *,
			    struct iovec *, int);
extern void log_packet_restart (char *);
extern void log_packet_stop (void);

#else /* !USE_DEBUG */

#define LOG_DBG(x)
#define LOG_DBG_BUF(x)

#endif /* USE_DEBUG */

extern FILE *log_current (void);
extern void log_error (const char *, ...)
     __attribute__ ((__format__ (__printf__, 1, 2)));
extern void log_fatal (const char *, ...)
     __attribute__ ((__format__ (__printf__, 1, 2)));
extern void log_print (const char *, ...)
     __attribute__ ((__format__ (__printf__, 1, 2)));
extern void log_to (FILE *);
extern void log_init (void);

#endif /* _LOG_H_ */
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync MirBSD main source tree against OpenBSD-current,
which should be fairly stable after the Hackathon now.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.14 2003/05/15 00:24:50 ho Exp $	*/
a5 1
 * Copyright (c) 2001, 2002, 2003 Håkan Olsson.  All rights reserved.
@


1.1.1.3
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.15 2003/06/03 14:28:16 ho Exp $	*/
d16 5
@


1.1.1.4
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.16 2003/10/13 13:57:51 ho Exp $	*/
d49 1
a49 1
  LOG_SA, LOG_EXCHANGE, LOG_NEGOTIATION, LOG_POLICY, LOG_UI, LOG_ENDCLASS
d53 1
a53 1
    "Plcy", "UI  " }
@


1.1.1.5
log
@Import OpenBSD as of today again (seems pretty stable, I hope)

Prominent changes: more bgpd, tcpmd5; tcpdump/isakmpd fixes
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.17 2004/01/16 10:51:57 hshoexer Exp $	*/
a40 2
extern int verbose_logging;

a92 2
     __attribute__ ((__format__ (__printf__, 1, 2)));
extern void log_verbose (const char *, ...)
@


1.1.1.6
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 2
a2 2
/* $OpenBSD: log.h,v 1.20 2004/04/15 18:39:26 deraadt Exp $	 */
/* $EOM: log.h,v 1.19 2000/03/30 14:27:23 ho Exp $	 */
d41 1
a41 1
extern int      verbose_logging;
d50 2
a51 2
	LOG_MISC, LOG_TRANSPORT, LOG_MESSAGE, LOG_CRYPTO, LOG_TIMER, LOG_SYSDEP,
	LOG_SA, LOG_EXCHANGE, LOG_NEGOTIATION, LOG_POLICY, LOG_UI, LOG_ENDCLASS
d69 5
a73 6
extern void
log_debug(int, int, const char *,...)
__attribute__((__format__(__printf__, 3, 4)));
	extern void     log_debug_buf(int, int, const char *, const u_int8_t *, size_t);
	extern void     log_debug_cmd(int, int);
	extern void     log_debug_toggle(void);
d76 5
a80 5
	extern void     log_packet_init(char *);
	extern void     log_packet_iov(struct sockaddr *, struct sockaddr *,
				                       struct iovec *, int);
	extern void     log_packet_restart(char *);
	extern void     log_packet_stop(void);
d82 1
a82 1
#else				/* !USE_DEBUG */
d87 1
a87 1
#endif				/* USE_DEBUG */
d89 11
a99 13
extern FILE    *log_current(void);
extern void
log_error(const char *,...)
__attribute__((__format__(__printf__, 1, 2)));
	extern void     log_fatal(const char *,...)
                __attribute__((__format__(__printf__, 1, 2)));
	extern void     log_print(const char *,...)
                __attribute__((__format__(__printf__, 1, 2)));
	extern void     log_verbose(const char *,...)
                __attribute__((__format__(__printf__, 1, 2)));
	extern void     log_to(FILE *);
	extern void     log_init(int);
	extern void     log_reinit(void);
d101 1
a101 1
#endif				/* _LOG_H_ */
@


1.1.1.7
log
@another bunch of fixes from obsd, and a big isakmpd update (need testers!)
@
text
@d1 1
a1 1
/* $OpenBSD: log.h,v 1.21 2004/05/23 18:17:56 hshoexer Exp $	 */
d69 6
a74 5
extern void	log_debug(int, int, const char *,...)
		    __attribute__((__format__(__printf__, 3, 4)));
extern void     log_debug_buf(int, int, const char *, const u_int8_t *, size_t);
extern void     log_debug_cmd(int, int);
extern void     log_debug_toggle(void);
d77 2
a78 2
extern void     log_packet_init(char *);
extern void     log_packet_iov(struct sockaddr *, struct sockaddr *,
d80 2
a81 2
extern void     log_packet_restart(char *);
extern void     log_packet_stop(void);
d91 12
a102 11
extern void	log_error(const char *,...)
		    __attribute__((__format__(__printf__, 1, 2)));
extern void     log_fatal(const char *,...)
		    __attribute__((__format__(__printf__, 1, 2)));
extern void     log_print(const char *,...)
		    __attribute__((__format__(__printf__, 1, 2)));
extern void     log_verbose(const char *,...)
		    __attribute__((__format__(__printf__, 1, 2)));
extern void     log_to(FILE *);
extern void     log_init(int);
extern void     log_reinit(void);
@



head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.5
	tg-mergefixes-1-branch:1.1.1.5.0.4
	tg-mergefixes-1-base:1.1.1.5
	MIROS_X:1.1.1.5.0.2
	MIROS_X_BASE:1.1.1.5
	tg-mergetmp-3:1.1.1.5
	cvs-200411261545:1.1.1.5
	MIRBSD_XP_MIRPPC:1.1.1.4.0.4
	MIRBSD_XP_SPARC_BASE:1.1.1.4
	MIRBSD_XP_SPARC:1.1.1.4.0.2
	MIRBSD_7quater:1.1.1.3
	cvs-200405160640:1.1.1.4
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.3
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.05.21.19.02.40;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.21.19.02.40;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.17.31.07;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.19.12.42.35;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.05.16.08.24.36;	author tg;	state Stab;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.11.26.15.51.08;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: monitor.h,v 1.3 2003/05/18 19:37:46 ho Exp $	*/

/*
 * Copyright (c) 2003 Håkan Olsson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#if defined (USE_PRIVSEP)
#include <stdio.h>

#define ISAKMPD_PRIVSEP_USER "_isakmpd"

enum monitor_reqtypes
{
  MONITOR_GET_FD,
  MONITOR_GET_SOCKET,
  MONITOR_SETSOCKOPT,
  MONITOR_BIND,
  MONITOR_MKFIFO,
  MONITOR_SHUTDOWN,
#if defined (USE_X509)
  MONITOR_RSA_UPLOADKEY,
  MONITOR_RSA_GETKEY,
  MONITOR_RSA_ENCRYPT,
  MONITOR_RSA_FREEKEY,
#endif
};

pid_t	monitor_init (void);
void	monitor_loop (int);

int	mm_send_fd (int, int);
int	mm_receive_fd (int);

struct stat;
FILE 	*monitor_fopen (const char *, const char *);
int	monitor_open (const char *, int, mode_t);
int	monitor_stat (const char *, struct stat *);
int	monitor_socket (int, int, int);
int	monitor_setsockopt (int, int, int, const void *, socklen_t);
int	monitor_bind (int, const struct sockaddr *, socklen_t);
int	monitor_mkfifo (const char *, mode_t);

#if defined (USE_X509)
char	*monitor_RSA_upload_key (char *);
char	*monitor_RSA_get_private_key (char *, char *);
int	monitor_RSA_private_encrypt (int, unsigned char *, unsigned char **,
				     void *, int);
void	monitor_RSA_free (void *);
#endif

#else /* !USE_PRIVSEP */

#define monitor_fopen fopen
#define monitor_open open
#define monitor_stat stat
#define monitor_socket socket
#define monitor_setsockopt setsockopt
#define monitor_bind bind
#define monitor_mkfifo mkfifo

#if defined (USE_X509)
#define monitor_RSA_free RSA_free
#endif

#endif /* USE_PRIVSEP */
@


1.1.1.1
log
@Sync MirBSD main source tree against OpenBSD-current,
which should be fairly stable after the Hackathon now.
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
/*	$OpenBSD: monitor.h,v 1.4 2003/06/03 14:28:16 ho Exp $	*/
d14 2
@


1.1.1.3
log
@sync with OpenBSD, this gives us a fair amount of fixes
@
text
@d1 1
a1 1
/*	$OpenBSD: monitor.h,v 1.5 2003/06/10 16:41:29 deraadt Exp $	*/
d55 1
a55 1
FILE	*monitor_fopen (const char *, const char *);
@


1.1.1.4
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.8 2004/04/15 18:39:26 deraadt Exp $	 */
a26 3
#ifndef _MONITOR_H_
#define _MONITOR_H_

a27 4
#include <sys/types.h>
#include <sys/stat.h>

#include <dirent.h>
d32 14
a45 21
#define ISAKMP_PORT_DEFAULT	500

enum monitor_reqtypes {
	MONITOR_GET_FD,
	MONITOR_GET_SOCKET,
	MONITOR_SETSOCKOPT,
	MONITOR_BIND,
	MONITOR_MKFIFO,
	MONITOR_INIT_DONE,
	MONITOR_SHUTDOWN
};

enum priv_state {
	STATE_INIT,		/* just started */
	STATE_RUNNING,		/* running */
	STATE_QUIT		/* shutting down */
};

struct monitor_dirents {
	int             current;
	struct dirent **dirents;
d48 2
a49 2
pid_t           monitor_init(void);
void            monitor_loop(int);
d51 2
a52 2
int             mm_send_fd(int, int);
int             mm_receive_fd(int);
d54 16
a69 11
FILE           *monitor_fopen(const char *, const char *);
int             monitor_open(const char *, int, mode_t);
int             monitor_stat(const char *, struct stat *);
int             monitor_socket(int, int, int);
int             monitor_setsockopt(int, int, int, const void *, socklen_t);
int             monitor_bind(int, const struct sockaddr *, socklen_t);
int             monitor_mkfifo(const char *, mode_t);
struct monitor_dirents *monitor_opendir(const char *);
struct dirent  *monitor_readdir(struct monitor_dirents *);
int             monitor_closedir(struct monitor_dirents *);
void            monitor_init_done(void);
d71 1
a71 1
#else				/* !USE_PRIVSEP */
a79 3
#define monitor_opendir opendir
#define monitor_readdir readdir
#define monitor_closedir closedir
d81 5
a85 2
#endif				/* USE_PRIVSEP */
#endif				/* _MONITOR_H_ */
@


1.1.1.5
log
@another bunch of fixes from obsd, and a big isakmpd update (need testers!)
@
text
@d1 1
a1 1
/* $OpenBSD: monitor.h,v 1.12 2004/11/08 12:34:00 hshoexer Exp $	 */
a41 2
	MONITOR_UI_INIT,
	MONITOR_PFKEY_OPEN,
d62 1
a62 1
pid_t           monitor_init(int);
d71 1
d74 1
d77 1
a77 1
void            monitor_closedir(struct monitor_dirents *);
a79 4
void		monitor_ui_init(void);
int		monitor_pf_key_v2_open(void);
void		monitor_exit(int);

d82 4
a85 3
#define monitor_fopen	fopen
#define monitor_open	open
#define monitor_stat	stat
d87 4
a90 3
#define monitor_bind	bind
#define monitor_opendir	opendir
#define monitor_readdir	readdir
a91 4

#define monitor_ui_init	ui_init
#define monitor_pf_key_v2_open pf_key_v2_open
#define monitor_exit	exit
@



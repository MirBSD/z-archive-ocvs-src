head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.15
	tg-mergefixes-1-branch:1.1.1.15.0.8
	tg-mergefixes-1-base:1.1.1.15
	MIROS_X:1.1.1.15.0.6
	MIROS_X_BASE:1.1.1.15
	tg-mergetmp-3:1.1.1.15
	MIRBSD_XP_MIRPPC:1.1.1.15.0.4
	MIRBSD_XP_SPARC_BASE:1.1.1.15
	MIRBSD_XP_SPARC:1.1.1.15.0.2
	MIRBSD_7quater:1.1.1.12
	cvs-200405160640:1.1.1.15
	cvs-200401271800:1.1.1.14
	cvs-200401261630:1.1.1.14
	cvs-200401021645:1.1.1.14
	MIRBSD_7_ALPHA:1.1.1.12.0.6
	MIRBSD_7:1.1.1.12.0.4
	cvs-200312222040:1.1.1.13
	MIRBSD_7ter:1.1.1.12
	MIRBSD_7_DEV:1.1.1.12.0.2
	cvs-200310020700:1.1.1.12
	cvs-200309271030:1.1.1.12
	cvs-200309261655:1.1.1.11
	cvs-200309251530:1.1.1.11
	cvs-200308302005:1.1.1.11
	cvs-200308171200:1.1.1.10
	ctm-3496:1.1.1.10
	ctm-3449:1.1.1.9
	ctm-3437:1.1.1.9
	cvs-200307191805:1.1.1.9
	ctm-3425:1.1.1.9
	cvs-200307091500:1.1.1.9
	cvs-200307072125:1.1.1.9
	ctm-3389:1.1.1.9
	cvs-200307021520:1.1.1.8
	cvs-200306301805:1.1.1.7
	cvs-200306301405:1.1.1.7
	cvs-200306291430:1.1.1.7
	ctm-3341:1.1.1.6
	MIRBSD_5:1.1.1.6
	cvs-200306091240:1.1.1.6
	cvs-200306082100:1.1.1.6
	ctm-3316:1.1.1.5
	ctm-3272:1.1.1.5
	ctm-3264:1.1.1.5
	cvs-200305071630:1.1.1.5
	MIRBSD_4:1.1.1.4
	ctm-3203:1.1.1.4
	cvs-20030410-1130:1.1.1.3
	ctm-3155:1.1.1.2
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.48.40;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.48.40;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.03.29.19.42.15;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.04.10.14.44.42;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.04.15.17.37.18;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.05.07.17.43.44;	author tg;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.06.08.22.58.10;	author tg;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2003.06.29.17.27.31;	author tg;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2003.07.02.15.26.56;	author tg;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2003.07.06.15.40.12;	author tg;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2003.08.11.18.30.23;	author tg;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2003.08.30.23.01.34;	author tg;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	2003.09.27.11.17.29;	author tg;	state Exp;
branches;
next	1.1.1.13;

1.1.1.13
date	2003.12.22.21.10.52;	author tg;	state Exp;
branches;
next	1.1.1.14;

1.1.1.14
date	2004.01.02.18.01.21;	author tg;	state Exp;
branches;
next	1.1.1.15;

1.1.1.15
date	2004.05.16.08.26.33;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: pfctl.h,v 1.12 2003/03/06 12:50:40 henning Exp $ */

/*
 * Copyright (c) 2001 Daniel Hartmeier
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    - Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *    - Redistributions in binary form must reproduce the above
 *      copyright notice, this list of conditions and the following
 *      disclaimer in the documentation and/or other materials provided
 *      with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 */

#ifndef _PFCTL_H_
#define _PFCTL_H_

void	 pfr_set_fd(int);
int	 pfr_get_fd(void);
int	 pfr_clr_tables(int *, int);
int	 pfr_add_tables(struct pfr_table *, int, int *, int);
int	 pfr_del_tables(struct pfr_table *, int, int *, int);
int	 pfr_get_tables(struct pfr_table *, int *, int);
int	 pfr_get_tstats(struct pfr_tstats *, int *, int);
int	 pfr_clr_tstats(struct pfr_table *, int, int *, int);
int	 pfr_clr_addrs(struct pfr_table *, int *, int);
int	 pfr_add_addrs(struct pfr_table *, struct pfr_addr *, int, int *, int);
int	 pfr_del_addrs(struct pfr_table *, struct pfr_addr *, int, int *, int);
int	 pfr_set_addrs(struct pfr_table *, struct pfr_addr *, int, int *,
	     int *, int *, int *, int);
int	 pfr_get_addrs(struct pfr_table *, struct pfr_addr *, int *, int);
int	 pfr_get_astats(struct pfr_table *, struct pfr_astats *, int *, int);
int	 pfr_clr_astats(struct pfr_table *, struct pfr_addr *, int, int *, int);
int	 pfr_tst_addrs(struct pfr_table *, struct pfr_addr *, int, int *, int);
int	 pfr_set_tflags(struct pfr_table *, int, int, int, int *, int *, int);
int	 pfr_ina_begin(int *, int *, int);
int	 pfr_ina_commit(int, int *, int *, int);
int	 pfr_ina_define(struct pfr_table *, struct pfr_addr *, int, int *,
	    int *, int, int);
int	 pfctl_clear_tables(int);
int	 pfctl_show_tables(int);
int	 pfctl_command_tables(int, char *[], char *, char *, char *, int);
int	 pfctl_show_altq(int, int, int);

#ifndef DEFAULT_PRIORITY
#define DEFAULT_PRIORITY	1
#endif

#ifndef DEFAULT_QLIMIT
#define DEFAULT_QLIMIT		50
#endif

/*
 * generalized service curve used for admission control
 */
struct segment {
	LIST_ENTRY(segment)	_next;
	double			x, y, d, m;
};

int		 check_commit_altq(int, int);
void		 pfaltq_store(struct pf_altq *);
void		 pfaltq_free(struct pf_altq *);
struct pf_altq	*pfaltq_lookup(const char *);
struct pf_altq	*qname_to_pfaltq(const char *, const char *);
u_int32_t	 qname_to_qid(const char *);
char		*qid_to_qname(u_int32_t, const char *);
char		*rate2str(double);

void	 print_altq(const struct pf_altq *, unsigned, u_int16_t);
void	 print_queue(const struct pf_altq *, unsigned, u_int16_t);

void	 print_addr(struct pf_addr_wrap *, sa_family_t, int);
void	 print_host(struct pf_state_host *, sa_family_t, int);
void	 print_seq(struct pf_state_peer *);
void	 print_state(struct pf_state *, int);
int	 unmask(struct pf_addr *, sa_family_t);

int	 pfctl_cmdline_symset(char *);

#endif /* _PFCTL_H_ */
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD repository of CTM 3155 (roughly today at noon).
Mostly in order to go 3.3-current and ease further merges of
both OpenBSD and ELFdiffs after the MirBSD has been enabled
to build again.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.13 2003/03/27 18:01:57 henning Exp $ */
d60 1
a60 1
int	 pfctl_command_tables(int, char *[], char *, const char *, char *, int);
@


1.1.1.3
log
@Import OpenBSD cvs as of roughly 11:11 UTC today,
or CTM delta 3188/3189/3190.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.14 2003/04/05 21:44:46 henning Exp $ */
d89 1
a89 1
void	 print_queue(const struct pf_altq *, unsigned, u_int16_t, int);
@


1.1.1.4
log
@Import OpenBSD source with the "new" command line as well,
in order to be able to provide a MirBSD release which bases
upon a fairly current OpenBSD base source code tree deemed
stable enough.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.17 2003/04/14 14:50:46 henning Exp $ */
d83 3
d87 3
@


1.1.1.5
log
@Import OpenBSD source tree of short before 17:00 UTC today
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.18 2003/04/30 12:30:27 cedric Exp $ */
d58 3
a60 4
int	 pfctl_clear_tables(const char *, const char *, int);
int	 pfctl_show_tables(const char *, const char *, int);
int	 pfctl_command_tables(int, char *[], char *, const char *, char *,
	    const char *, const char *, int);
@


1.1.1.6
log
@Import OpenBSD CVS of roughly 2000-2200 UTC. Last import before release.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.19 2003/06/08 09:41:07 cedric Exp $ */
d38 1
a38 1
int	 pfr_clr_tables(struct pfr_table *, int *, int);
d41 2
a42 2
int	 pfr_get_tables(struct pfr_table *, struct pfr_table *, int *, int);
int	 pfr_get_tstats(struct pfr_table *, struct pfr_tstats *, int *, int);
@


1.1.1.7
log
@the previous cvs import did not finish due to 'memory fault'
sync with OpenBSD-cvs
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.20 2003/06/27 15:35:00 cedric Exp $ */
a57 3
void	 pfr_buf_load(char *, int, void (*)(char *, int));
char	*pfr_strerror(int);

@


1.1.1.8
log
@most important fixes from -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.21 2003/06/30 20:02:46 cedric Exp $ */
a35 12
enum {	PFRB_TABLES = 1, PFRB_TSTATS, PFRB_ADDRS, PFRB_ASTATS, PFRB_MAX };
struct pfr_buffer {
	int	 pfrb_type;	/* type of content, see enum above */
	int	 pfrb_size;	/* number of objects in buffer */
	int	 pfrb_msize;	/* maximum number of objects in buffer */
	caddr_t	 pfrb_caddr;	/* malloc'ated memory area */
};
#define PFRB_FOREACH(var, buf)				\
	for((var) = pfr_buf_next((buf), NULL);		\
	    (var) != NULL;				\
	    (var) = pfr_buf_next((buf), (var)))

a57 4
void	 pfr_buf_clear(struct pfr_buffer *);
int	 pfr_buf_add(struct pfr_buffer *, const void *);
void	*pfr_buf_next(struct pfr_buffer *, const void *);
int	 pfr_buf_grow(struct pfr_buffer *, int);
@


1.1.1.9
log
@Import OpenBSD base system minus kerberos from CTM,
kernel source from CVS right now (no diffs though)
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.23 2003/07/04 11:05:44 henning Exp $ */
d41 1
a41 1
	void	*pfrb_caddr;	/* malloc'ated memory area */
d44 1
a44 1
	for ((var) = pfr_buf_next((buf), NULL);		\
d74 1
a74 2
int	 pfr_buf_load(struct pfr_buffer *, char *, int,
	    int (*)(struct pfr_buffer *, char *, int));
@


1.1.1.10
log
@Import the complete OpenBSD source tree (base system)
as of CTM delta 3496 (roughly 1200 UTC today) into the
vendor branch.
Attention: this is a big update. Don't even try to
build this system, OpenBSD 3.4-beta, yet on your own.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.24 2003/07/31 22:25:54 cedric Exp $ */
d66 2
a67 2
int	 pfr_ina_begin(struct pfr_table *, int *, int *, int);
int	 pfr_ina_commit(struct pfr_table *, int, int *, int *, int);
@


1.1.1.11
log
@Synchronize with OpenBSD 3.4-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.25 2003/08/29 21:47:36 cedric Exp $ */
a82 1
void	 warn_namespace_collision(const char *);
@


1.1.1.12
log
@cvs is playing games with me.

@@@@@@ CONSIDER THE TREE LOCKED NOW @@@@@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.26 2003/09/26 21:44:09 cedric Exp $ */
d36 1
a36 2
enum {	PFRB_TABLES = 1, PFRB_TSTATS, PFRB_ADDRS, PFRB_ASTATS, PFRB_TRANS,
	PFRB_MAX };
a113 4
int	 pfctl_add_trans(struct pfr_buffer *, int, const char *, const char *);
u_int32_t 
	 pfctl_get_ticket(struct pfr_buffer *, int, const char *, const char *);
int	 pfctl_trans(int, struct pfr_buffer *, int, int);
@


1.1.1.13
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.28 2003/11/06 15:01:30 henning Exp $ */
d116 1
a116 1
u_int32_t
d118 1
a118 1
int	 pfctl_trans(int, struct pfr_buffer *, u_long, int);
@


1.1.1.14
log
@Import OpenBSD again, for various reasons.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.29 2003/12/31 11:18:24 cedric Exp $ */
d36 2
a37 2
enum {	PFRB_TABLES = 1, PFRB_TSTATS, PFRB_ADDRS, PFRB_ASTATS,
	PFRB_IFACES, PFRB_TRANS, PFRB_MAX };
a77 2
int      pfi_get_ifaces(const char *, struct pfi_if *, int *, int);
int      pfi_clr_istats(const char *, int *, int);
a84 1
int	 pfctl_show_ifaces(int);
@


1.1.1.15
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl.h,v 1.34 2004/04/09 12:42:06 cedric Exp $ */
d61 1
a61 1
	    int *, int *, int *, int);
d78 2
a79 2
int	 pfi_get_ifaces(const char *, struct pfi_if *, int *, int);
int	 pfi_clr_istats(const char *, int *, int);
a80 1
void	 pfctl_print_title(char *);
d85 1
a85 1
int	 pfctl_show_altq(int, const char *, int, int);
d87 1
a87 2
int	 pfctl_show_ifaces(const char *, int);
FILE	*pfctl_fopen(const char *, const char *);
@



head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.14
	tg-mergefixes-1-branch:1.1.1.14.0.8
	tg-mergefixes-1-base:1.1.1.14
	MIROS_X:1.1.1.14.0.6
	MIROS_X_BASE:1.1.1.14
	tg-mergetmp-3:1.1.1.14
	MIRBSD_XP_MIRPPC:1.1.1.14.0.4
	MIRBSD_XP_SPARC_BASE:1.1.1.14
	MIRBSD_XP_SPARC:1.1.1.14.0.2
	MIRBSD_7quater:1.1.1.11
	cvs-200405160640:1.1.1.14
	cvs-200401271800:1.1.1.13
	cvs-200401261630:1.1.1.13
	cvs-200401021645:1.1.1.13
	MIRBSD_7_ALPHA:1.1.1.11.0.6
	MIRBSD_7:1.1.1.11.0.4
	cvs-200312222040:1.1.1.12
	MIRBSD_7ter:1.1.1.11
	MIRBSD_7_DEV:1.1.1.11.0.2
	cvs-200310020700:1.1.1.11
	cvs-200309271030:1.1.1.11
	cvs-200309261655:1.1.1.10
	cvs-200309251530:1.1.1.10
	cvs-200308302005:1.1.1.10
	cvs-200308171200:1.1.1.9
	ctm-3496:1.1.1.9
	ctm-3449:1.1.1.8
	ctm-3437:1.1.1.8
	cvs-200307191805:1.1.1.8
	ctm-3425:1.1.1.8
	cvs-200307091500:1.1.1.7
	cvs-200307072125:1.1.1.7
	ctm-3389:1.1.1.7
	cvs-200307021520:1.1.1.6
	cvs-200306301805:1.1.1.6
	cvs-200306301405:1.1.1.6
	cvs-200306291430:1.1.1.6
	ctm-3341:1.1.1.6
	MIRBSD_5:1.1.1.6
	cvs-200306091240:1.1.1.6
	cvs-200306082100:1.1.1.6
	ctm-3316:1.1.1.6
	ctm-3272:1.1.1.6
	ctm-3264:1.1.1.5
	cvs-200305071630:1.1.1.5
	MIRBSD_4:1.1.1.4
	ctm-3203:1.1.1.4
	cvs-20030410-1130:1.1.1.3
	ctm-3155:1.1.1.2
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.48.40;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.48.40;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.03.29.19.42.15;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.04.10.14.44.42;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.04.15.17.37.18;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.05.07.17.43.43;	author tg;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.05.21.19.02.55;	author tg;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2003.07.06.15.40.12;	author tg;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2003.07.18.13.42.44;	author tg;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2003.08.11.18.30.23;	author tg;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2003.08.30.23.01.35;	author tg;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2003.09.27.11.17.29;	author tg;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	2003.12.22.21.10.52;	author tg;	state Exp;
branches;
next	1.1.1.13;

1.1.1.13
date	2004.01.02.18.01.22;	author tg;	state Exp;
branches;
next	1.1.1.14;

1.1.1.14
date	2004.05.16.08.26.42;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: pfctl_parser.h,v 1.50 2003/03/07 12:55:37 henning Exp $ */

/*
 * Copyright (c) 2001 Daniel Hartmeier
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    - Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *    - Redistributions in binary form must reproduce the above
 *      copyright notice, this list of conditions and the following
 *      disclaimer in the documentation and/or other materials provided
 *      with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 */

#ifndef _PFCTL_PARSER_H_
#define _PFCTL_PARSER_H_

#define PF_OPT_DISABLE		0x0001
#define PF_OPT_ENABLE		0x0002
#define PF_OPT_VERBOSE		0x0004
#define PF_OPT_NOACTION		0x0008
#define PF_OPT_QUIET		0x0010
#define PF_OPT_CLRRULECTRS	0x0020
#define PF_OPT_USEDNS		0x0040
#define PF_OPT_VERBOSE2		0x0080
#define PF_OPT_DUMMYACTION	0x0100
#define PF_OPT_DEBUG		0x0200

#define PF_TH_ALL		0xFF

#define PF_NAT_PROXY_PORT_LOW	50001
#define PF_NAT_PROXY_PORT_HIGH	65535

#define FCNT_NAMES { \
	"searches", \
	"inserts", \
	"removals", \
	NULL \
}

struct pfctl {
	int dev;
	int opts;
	int loadopt;
	u_int32_t rule_nr;
	struct pfioc_pooladdr paddr;
	struct pfioc_rule *prule[PF_RULESET_MAX];
	struct pfioc_altq *paltq;
	struct pfioc_queue *pqueue;
};

enum pfctl_iflookup_mode {
	PFCTL_IFLOOKUP_HOST,
	PFCTL_IFLOOKUP_NET,
	PFCTL_IFLOOKUP_BCAST
};

struct node_if {
	char			 ifname[IFNAMSIZ];
	u_int8_t		 not;
	u_int			 ifa_flags;
	struct node_if		*next;
	struct node_if		*tail;
};

struct node_host {
	struct pf_addr_wrap	 addr;
	struct pf_addr		 bcast;
	sa_family_t		 af;
	u_int8_t		 not;
	u_int32_t		 ifindex;	/* link-local IPv6 addrs */
	char			*ifname;
	u_int			 ifa_flags;
	struct node_host	*next;
	struct node_host	*tail;
};

int	pfctl_add_rule(struct pfctl *, struct pf_rule *);
int	pfctl_add_altq(struct pfctl *, struct pf_altq *);
int	pfctl_add_pool(struct pfctl *, struct pf_pool *, sa_family_t);
void	pfctl_clear_pool(struct pf_pool *);

int	pfctl_set_timeout(struct pfctl *, const char *, int, int);
int	pfctl_set_optimization(struct pfctl *, const char *);
int	pfctl_set_limit(struct pfctl *, const char *, unsigned int);
int	pfctl_set_logif(struct pfctl *, char *);

int	parse_rules(FILE *, struct pfctl *);
int	parse_flags(char *);

void	print_filter(struct pf_rule *, int);
void	print_pool(struct pf_pool *, u_int16_t, u_int16_t, sa_family_t, int);
void	print_rule(struct pf_rule *, int);
void	print_nat(struct pf_rule *, int);
void	print_binat(struct pf_rule *, int);
void	print_rdr(struct pf_rule *, int);
void	print_status(struct pf_status *);

int	eval_pfaltq(struct pfctl *, struct pf_altq *, u_int32_t, u_int16_t);
int	eval_pfqueue(struct pfctl *, struct pf_altq *, u_int32_t, u_int16_t);

void	pfctl_begin_table(void);
void	pfctl_append_addr(char *, int, int);
void	pfctl_append_file(char *);
void	pfctl_define_table(char *, int, int, int);
void	pfctl_commit_table(void);

struct icmptypeent {
	char *name;
	u_int8_t type;
};

struct icmpcodeent {
	char *name;
	u_int8_t type;
	u_int8_t code;
};

const struct icmptypeent *geticmptypebynumber(u_int8_t, u_int8_t);
const struct icmptypeent *geticmptypebyname(char *, u_int8_t);
const struct icmpcodeent *geticmpcodebynumber(u_int8_t, u_int8_t, u_int8_t);
const struct icmpcodeent *geticmpcodebyname(u_long, char *, u_int8_t);

struct pf_timeout {
	const char	*name;
	int		 timeout;
};

#define PFCTL_FLAG_ALL		0x01
#define PFCTL_FLAG_FILTER	0x02
#define PFCTL_FLAG_NAT		0x04
#define PFCTL_FLAG_OPTION	0x08
#define PFCTL_FLAG_ALTQ		0x10
#define PFCTL_FLAG_TABLE	0x20

extern const struct pf_timeout pf_timeouts[];

void			 set_ipmask(struct node_host *, u_int8_t);
void			 ifa_load(void);
struct node_host	*ifa_exists(const char *);
struct node_host	*ifa_lookup(const char *, enum pfctl_iflookup_mode);
struct node_host	*host(const char *, int);

#endif /* _PFCTL_PARSER_H_ */
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD repository of CTM 3155 (roughly today at noon).
Mostly in order to go 3.3-current and ease further merges of
both OpenBSD and ELFdiffs after the MirBSD has been enabled
to build again.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.51 2003/03/27 18:01:57 henning Exp $ */
d127 1
a127 1
	const char *name;
d132 1
a132 1
	const char *name;
@


1.1.1.3
log
@Import OpenBSD cvs as of roughly 11:11 UTC today,
or CTM delta 3188/3189/3190.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.53 2003/04/05 23:56:32 henning Exp $ */
d109 1
d112 3
d160 1
a160 1
struct node_host	*host(const char *);
@


1.1.1.4
log
@Import OpenBSD source with the "new" command line as well,
in order to be able to provide a MirBSD release which bases
upon a fairly current OpenBSD base source code tree deemed
stable enough.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.57 2003/04/14 14:50:46 henning Exp $ */
a95 28
struct node_queue_bw {
	u_int32_t	bw_absolute;
	u_int16_t	bw_percent;
};

struct node_hfsc_sc {
	struct node_queue_bw	m1;	/* slope of 1st segment; bps */
	u_int			d;	/* x-projection of m1; msec */
	struct node_queue_bw	m2;	/* slope of 2nd segment; bps */
	u_int8_t		used;
};

struct node_hfsc_opts {
	struct node_hfsc_sc	realtime;
	struct node_hfsc_sc	linkshare;
	struct node_hfsc_sc	upperlimit;
	int			flags;
};

struct node_queue_opt {
	int			 qtype;
	union {
		struct cbq_opts		cbq_opts;
		struct priq_opts	priq_opts;
		struct node_hfsc_opts	hfsc_opts;
	}			 data;
};

d113 2
a114 8
int	eval_pfaltq(struct pfctl *, struct pf_altq *, struct node_queue_bw *,
	    struct node_queue_opt *);
int	eval_pfqueue(struct pfctl *, struct pf_altq *, struct node_queue_bw *,
	    struct node_queue_opt *);

void	 print_altq(const struct pf_altq *, unsigned, struct node_queue_bw *);
void	 print_queue(const struct pf_altq *, unsigned, struct node_queue_bw *,
	     int);
@


1.1.1.5
log
@Import OpenBSD source tree of short before 17:00 UTC today
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.59 2003/04/30 12:30:27 cedric Exp $ */
a67 2
	const char *anchor;
	const char *ruleset;
d146 1
a146 2
void	 print_altq(const struct pf_altq *, unsigned, struct node_queue_bw *,
	     struct node_queue_opt *);
d148 1
a148 1
	     int, struct node_queue_opt *);
d153 1
a153 1
void	pfctl_define_table(char *, int, int, int, const char *, const char *);
@


1.1.1.6
log
@Sync MirBSD main source tree against OpenBSD-current,
which should be fairly stable after the Hackathon now.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.61 2003/05/19 20:21:53 henning Exp $ */
a125 2
int	pfctl_rules(int, char *, int, char *, char *);

a137 1
int	pfctl_load_anchors(int, int);
a189 1
int			 check_netmask(struct node_host *, sa_family_t);
@


1.1.1.7
log
@Import OpenBSD base system minus kerberos from CTM,
kernel source from CVS right now (no diffs though)
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.63 2003/07/03 21:09:13 cedric Exp $ */
a62 2
	int tticket;			/* table ticket */
	int tdirty;			/* kernel dirty */
a67 1
	struct pfr_buffer *ab;		/* address buffer */
d156 5
a160 2
int	pfctl_define_table(char *, int, int, int, const char *, const char *,
	    struct pfr_buffer *, int);
a197 3

int			 append_addr(struct pfr_buffer *, char *, int);
int			 append_addr_not(struct pfr_buffer *, char *, int, int);
@


1.1.1.8
log
@Synchronize source tree with OpenBSD
note: due to recent changes in the codebase of OpenBSD,
out libcom_err will be incompatible with theirs...
but this is no issue because we don't provide a dynamically
linked one, and theirs won't be provided longer any more anyways.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.65 2003/07/18 06:30:07 cedric Exp $ */
d70 1
a128 9
SIMPLEQ_HEAD(node_tinithead, node_tinit);
struct node_tinit {	/* table initializer */
	SIMPLEQ_ENTRY(node_tinit)	 entries;
	struct node_host		*host;
	char				*file;
};

struct pfr_buffer;	/* forward definition */

a146 1
void	print_tabledef(const char *, int, int, struct node_tinithead *);
d159 1
a159 1
int	pfctl_define_table(char *, int, int, const char *, const char *,
d183 1
d200 1
a200 2
int			 append_addr_host(struct pfr_buffer *,
			    struct node_host *, int, int);
@


1.1.1.9
log
@Import the complete OpenBSD source tree (base system)
as of CTM delta 3496 (roughly 1200 UTC today) into the
vendor branch.
Attention: this is a big update. Don't even try to
build this system, OpenBSD 3.4-beta, yet on your own.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.66 2003/07/31 22:25:54 cedric Exp $ */
d63 1
a63 1
	u_int32_t tticket;		/* table ticket */
d169 1
a169 1
	    struct pfr_buffer *, u_int32_t);
@


1.1.1.10
log
@Synchronize with OpenBSD 3.4-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.67 2003/08/21 19:12:09 frantzen Exp $ */
a35 2
#define PF_OSFP_FILE		"/etc/pf.os"

a99 7
struct node_os {
	char			*os;
	pf_osfp_t		 fingerprint;
	struct node_os		*next;
	struct node_os		*tail;
};

a169 8

void		 pfctl_clear_fingerprints(int, int);
int		 pfctl_file_fingerprints(int, int, const char *);
pf_osfp_t	 pfctl_get_fingerprint(const char *);
int		 pfctl_load_fingerprints(int, int);
char		*pfctl_lookup_fingerprint(pf_osfp_t, char *, size_t);
void		 pfctl_show_fingerprints(int);

@


1.1.1.11
log
@cvs is playing games with me.

@@@@@@ CONSIDER THE TREE LOCKED NOW @@@@@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.68 2003/09/26 21:44:09 cedric Exp $ */
d69 1
a71 1
	struct pfr_buffer *trans;
d146 1
a146 1
int	pfctl_rules(int, char *, int, char *, char *, struct pfr_buffer *);
d160 1
a160 1
int	pfctl_load_anchors(int, int, struct pfr_buffer *);
@


1.1.1.12
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.71 2003/12/15 07:11:30 mcbride Exp $ */
a156 2
int	pfctl_set_hostid(struct pfctl *, u_int32_t);
int	pfctl_set_debug(struct pfctl *, char *);
a162 1
void	print_src_node(struct pf_src_node *, int);
d165 1
a165 1
void	print_status(struct pf_status *, int);
@


1.1.1.13
log
@Import OpenBSD again, for various reasons.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.72 2003/12/31 11:18:24 cedric Exp $ */
d76 6
a92 1
	struct pf_addr		 peer;
a100 4
/* special flags used by ifa_exists */
#define PF_IFA_FLAG_GROUP	0x10000
#define PF_IFA_FLAG_DYNAMIC	0x20000
#define PF_IFA_FLAG_CLONABLE	0x40000
d223 2
a224 2
struct node_host	*ifa_exists(const char *, int);
struct node_host	*ifa_lookup(const char *, int);
@


1.1.1.14
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
/*	$OpenBSD: pfctl_parser.h,v 1.75 2004/04/14 11:16:43 cedric Exp $ */
a47 1
#define PF_OPT_SHOWALL		0x0400
a78 1
	u_int8_t		 dynamic; /* antispoof */
d175 1
a175 1
	    struct node_queue_opt *);
d177 1
a177 1
	    int, struct node_queue_opt *);
@



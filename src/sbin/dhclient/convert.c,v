head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.2
	tg-mergefixes-1-branch:1.1.1.2.0.8
	tg-mergefixes-1-base:1.1.1.2
	MIROS_X:1.1.1.2.0.6
	MIROS_X_BASE:1.1.1.2
	tg-mergetmp-3:1.1.1.2
	cvs-200411261545:1.1.1.2
	cvs-200411231505:1.1.1.2
	MIRBSD_XP_MIRPPC:1.1.1.2.0.4
	MIRBSD_XP_SPARC_BASE:1.1.1.2
	MIRBSD_XP_SPARC:1.1.1.2.0.2
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2004.01.26.18.28.37;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.01.26.18.28.37;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.05.16.08.22.46;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* convert.c

   Safe copying of option values into and out of the option buffer, which
   can't be assumed to be aligned. */

/*
 * Copyright (c) 1995, 1996 The Internet Software Consortium.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of The Internet Software Consortium nor the names
 *    of its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INTERNET SOFTWARE CONSORTIUM AND
 * CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE INTERNET SOFTWARE CONSORTIUM OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * This software has been written for the Internet Software Consortium
 * by Ted Lemon <mellon@@fugue.com> in cooperation with Vixie
 * Enterprises.  To learn more about the Internet Software Consortium,
 * see ``http://www.vix.com/isc''.  To learn more about Vixie
 * Enterprises, see ``http://www.vix.com''.
 */

#include "dhcpd.h"

u_int32_t getULong (buf)
	unsigned char *buf;
{
	u_int32_t ibuf;

	memcpy (&ibuf, buf, sizeof (ibuf));
	return ntohl (ibuf);
}

int32_t getLong (buf)
	unsigned char *buf;
{
	int32_t ibuf;

	memcpy (&ibuf, buf, sizeof (ibuf));
	return ntohl (ibuf);
}

u_int16_t getUShort (buf)
	unsigned char *buf;
{
	u_int16_t ibuf;

	memcpy (&ibuf, buf, sizeof (ibuf));
	return ntohs (ibuf);
}

int16_t getShort (buf)
	unsigned char *buf;
{
	int16_t ibuf;

	memcpy (&ibuf, buf, sizeof (ibuf));
	return ntohs (ibuf);
}

void putULong (obuf, val)
	unsigned char *obuf;
	u_int32_t val;
{
	u_int32_t tmp = htonl (val);
	memcpy (obuf, &tmp, sizeof tmp);
}

void putLong (obuf, val)
	unsigned char *obuf;
	int32_t val;
{
	int32_t tmp = htonl (val);
	memcpy (obuf, &tmp, sizeof tmp);
}

void putUShort (obuf, val)
	unsigned char *obuf;
	unsigned int val;
{
	u_int16_t tmp = htons (val);
	memcpy (obuf, &tmp, sizeof tmp);
}

void putShort (obuf, val)
	unsigned char *obuf;
	int val;
{
	int16_t tmp = htons (val);
	memcpy (obuf, &tmp, sizeof tmp);
}

@


1.1.1.1
log
@Import OpenBSD as of today again (seems pretty stable, I hope)

Prominent changes: more bgpd, tcpmd5; tcpdump/isakmpd fixes
@
text
@@


1.1.1.2
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
/*	$OpenBSD: convert.c,v 1.5 2004/02/07 11:35:59 henning Exp $	*/
d3 2
a4 4
/*
 * Safe copying of option values into and out of the option buffer,
 * which can't be assumed to be aligned.
 */
d46 2
a47 2
u_int32_t
getULong(unsigned char *buf)
d51 2
a52 2
	memcpy(&ibuf, buf, sizeof(ibuf));
	return (ntohl(ibuf));
d55 2
a56 2
int32_t
getLong(unsigned char *(buf))
d60 2
a61 2
	memcpy(&ibuf, buf, sizeof(ibuf));
	return (ntohl(ibuf));
d64 2
a65 2
u_int16_t
getUShort(unsigned char *buf)
d69 2
a70 2
	memcpy(&ibuf, buf, sizeof(ibuf));
	return (ntohs(ibuf));
d73 2
a74 2
int16_t
getShort(unsigned char *buf)
d78 2
a79 2
	memcpy(&ibuf, buf, sizeof(ibuf));
	return (ntohs(ibuf));
d82 3
a84 2
void
putULong(unsigned char *obuf, u_int32_t val)
d86 2
a87 3
	u_int32_t tmp = htonl(val);

	memcpy(obuf, &tmp, sizeof(tmp));
d90 3
a92 2
void
putLong(unsigned char *obuf, int32_t val)
d94 2
a95 3
	int32_t tmp = htonl(val);

	memcpy(obuf, &tmp, sizeof(tmp));
d98 3
a100 2
void
putUShort(unsigned char *obuf, unsigned int val)
d102 2
a103 3
	u_int16_t tmp = htons(val);

	memcpy(obuf, &tmp, sizeof(tmp));
d106 3
a108 2
void
putShort(unsigned char *obuf, int val)
d110 3
a112 1
	int16_t tmp = htons(val);
a113 2
	memcpy(obuf, &tmp, sizeof(tmp));
}
@


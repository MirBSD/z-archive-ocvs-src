head	1.2;
access;
symbols
	MIRBSD_XP_MIRPPC:1.1.1.3.0.10
	MIRBSD_XP_SPARC_BASE:1.1.1.3
	MIRBSD_XP_SPARC:1.1.1.3.0.8
	MIRBSD_7quater:1.1.1.3
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.3
	MIRBSD_5:1.1.1.3
	cvs-200306082100:1.1.1.3
	ctm-3316:1.1.1.3
	ctm-3272:1.1.1.3
	ctm-3264:1.1.1.3
	cvs-200305071630:1.1.1.3
	MIRBSD_4:1.1.1.2
	ctm-3203:1.1.1.2
	cvs-20030410-1130:1.1.1.2
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.12.09.19.00.15;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.35.39;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.35.39;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.10.13.58.11;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.07.17.16.46;	author tg;	state Stab;
branches;
next	;


desc
@@


1.2
log
@* games went off to ports/games/bsdgames
* don't install isakmpd or ctm samples
@
text
@/*	$OpenBSD: convert.c,v 1.4 2002/12/06 21:48:51 millert Exp $	*/
/*	$NetBSD: convert.c,v 1.2 1995/03/24 03:58:34 cgd Exp $	*/

/*
 *	Convert Phantasia 3.3.1 and 3.3.1+ characs file format to 3.3.2
 *
 */

#include "include.h"
#include "oldplayer.h"

struct oldplayer	Oldplayer;		/* old format structure */
struct player	Newplayer;			/* new format structure */

char	Oldpfile[] = DEST/characs";		/* old format file */
char	Newpfile[] = DEST/newcharacs";		/* new format file */

/************************************************************************
/
/ FUNCTION NAME: main()
/
/ FUNCTION: convert old Phantasia player file to new format
/
/ AUTHOR: C. Robertson, 9/1/85  E. A. Estes, 3/12/86
/
/ ARGUMENTS: none
/
/ RETURN VALUE: none
/
/ MODULES CALLED: time(), exit(), fread(), fopen(), srandomdev(), floor(), 
/	random(), strcmp(), fwrite(), strcpy(), fclose(), fprintf()
/
/ GLOBAL INPUTS: _iob[], Oldplayer, Newplayer
/
/ GLOBAL OUTPUTS: Oldplayer, Newplayer
/
/ DESCRIPTION:
/	Read in old player structures and write out to new file in
/	new format.
/	Old player file is unmodified.
/	New file is "DEST/newcharacs".
/	#define PHANTPLUS to convert from 3.3.1+.
/
/************************************************************************/

main()
{
FILE	*oldcharac, *newcharac;		/* to open old and new files */

    if ((oldcharac = fopen(Oldpfile, "r")) == NULL)
	{
	fprintf(stderr, "Cannot open original character file!\n");
	exit(1);
	}

    if ((newcharac = fopen(Newpfile, "w")) == NULL)
	{
	fprintf(stderr, "Cannot create new character file!\n");
	exit(1);
	}

    srandomdev();	/* prime random numbers */

    while (fread((char *) &Oldplayer, sizeof(struct oldplayer), 1, oldcharac) == 1)
	/* read and convert old structures into new */
	{
	Newplayer.p_experience = Oldplayer.o_experience;
	Newplayer.p_level = (double) Oldplayer.o_level;
	Newplayer.p_strength =  Oldplayer.o_strength;
	Newplayer.p_sword =  Oldplayer.o_sword;
	Newplayer.p_might =  0.0;		/* game will calculate */
	Newplayer.p_energy =  Oldplayer.o_energy;
	Newplayer.p_maxenergy =  Oldplayer.o_maxenergy;
	Newplayer.p_shield =  Oldplayer.o_shield;
	Newplayer.p_quickness = (double) Oldplayer.o_quickness;
	Newplayer.p_quksilver = (double) Oldplayer.o_quksilver;
	Newplayer.p_speed = 0.0;		/* game will calculate */
	Newplayer.p_magiclvl = Oldplayer.o_magiclvl;
	Newplayer.p_mana = Oldplayer.o_mana;
	Newplayer.p_brains = Oldplayer.o_brains;
	Newplayer.p_poison = Oldplayer.o_poison;
	Newplayer.p_gold = Oldplayer.o_gold;
	Newplayer.p_gems = Oldplayer.o_gems;
	Newplayer.p_sin = Oldplayer.o_sin;
	Newplayer.p_x = Oldplayer.o_x;
	Newplayer.p_y = Oldplayer.o_y;
	Newplayer.p_1scratch = Oldplayer.o_1scratch;
	Newplayer.p_2scratch = Oldplayer.o_2scratch;

	Newplayer.p_ring.ring_type = Oldplayer.o_ring.ring_type;
	Newplayer.p_ring.ring_duration = Oldplayer.o_ring.ring_duration;
	Newplayer.p_ring.ring_inuse = FALSE;

	Newplayer.p_age = (long) Oldplayer.o_degenerated * N_AGE;

	Newplayer.p_degenerated = Oldplayer.o_degenerated + 1;

	/* convert character type into character type and special type */

	if (Oldplayer.o_type < 0)
	    /* player with crown */
	    Oldplayer.o_type = -Oldplayer.o_type;

	if (Oldplayer.o_type == 99)
	    /* valar */
	    {
	    Newplayer.p_specialtype = SC_VALAR;
	    Newplayer.p_type = (short) ROLL(C_MAGIC, C_EXPER - C_MAGIC + 1);
	    Newplayer.p_lives = Oldplayer.o_ring.ring_duration;
	    }
	else if (Oldplayer.o_type == 90)
	    /* ex-valar */
	    {
	    Newplayer.p_specialtype = SC_EXVALAR;
	    Newplayer.p_type = (short) ROLL(C_MAGIC, C_EXPER - C_MAGIC + 1);
	    Newplayer.p_lives = 0;
	    }
	else if (Oldplayer.o_type > 20)
	    /* council of wise */
	    {
	    Newplayer.p_specialtype = SC_COUNCIL;
	    Newplayer.p_type = Oldplayer.o_type - 20;
	    Newplayer.p_lives = Oldplayer.o_ring.ring_duration;
	    }
	else if (Oldplayer.o_type > 10)
	    /* king */
	    {
	    Newplayer.p_specialtype = SC_KING;
	    Newplayer.p_type = Oldplayer.o_type - 10;
	    Newplayer.p_lives = 0;
	    }
	else
	    /* normal player */
	    {
	    Newplayer.p_specialtype = SC_NONE;
	    Newplayer.p_type = Oldplayer.o_type;
	    Newplayer.p_lives = 0;
	    }

	Newplayer.p_lives = 0;
	Newplayer.p_crowns = Oldplayer.o_crowns;
	Newplayer.p_charms = Oldplayer.o_charms;
	Newplayer.p_amulets = Oldplayer.o_amulets;
	Newplayer.p_holywater = Oldplayer.o_holywater;
	Newplayer.p_lastused = Oldplayer.o_lastused;

	/* convert status and name into status */

	Newplayer.p_status = Oldplayer.o_status + S_OFF;
	if (strcmp(Oldplayer.m_name, "<null>") == 0)
	    /* unused recored */
	    Newplayer.p_status = S_NOTUSED;
	if (Oldplayer.o_quickness < 0)
	    /* hung up player */
	    {
	    Newplayer.p_quickness = (double) Oldplayer.o_tampered;
	    Oldplayer.o_tampered = T_OFF;
	    Newplayer.p_status = S_HUNGUP;
	    }

	Newplayer.p_tampered = Oldplayer.o_tampered + T_OFF;
	Newplayer.p_istat = I_OFF;

	Newplayer.p_palantir = Oldplayer.o_palantir;
	Newplayer.p_blessing = Oldplayer.o_blessing;
	Newplayer.p_virgin = Oldplayer.o_virgin;
	Newplayer.p_blindness = Oldplayer.o_blindness;

	strcpy(Newplayer.p_name, Oldplayer.o_name);
	strcpy(Newplayer.p_password, Oldplayer.o_password);
	strcpy(Newplayer.p_login, Oldplayer.o_login);

	/* write new structure */
	fwrite((char *) &Newplayer, sizeof(Newplayer), 1, newcharac);
	}

    fclose(oldcharac);		/* close files */
    fclose(newcharac);

    exit(0);
}
/**/
/************************************************************************
/
/ FUNCTION NAME: drandom()
/
/ FUNCTION: return a random number between 0.0 < 1.0
/
/ AUTHOR: E. A. Estes, 2/7/86
/
/ ARGUMENTS: none
/
/ RETURN VALUE: random number
/
/ MODULES CALLED: random()
/
/ GLOBAL INPUTS: none
/
/ GLOBAL OUTPUTS: none
/
/ DESCRIPTION:
/	Return a random number.
/
/************************************************************************/

double
drandom()
{
    if (sizeof(int) != 2)
	return((double) (random() & 0x7fff) / 32768.0);
    else
	return((double) random() / 32768.0);
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD cvs as of roughly 11:11 UTC today,
or CTM delta 3188/3189/3190.
@
text
@d1 1
a1 1
/*	$OpenBSD: convert.c,v 1.5 2003/04/06 18:50:38 deraadt Exp $	*/
d169 3
a171 6
	strlcpy(Newplayer.p_name, Oldplayer.o_name,
		sizeof Newplayer.p_name);
	strlcpy(Newplayer.p_password, Oldplayer.o_password,
		sizeof Newplayer.p_password);
	strlcpy(Newplayer.p_login, Oldplayer.o_login,
		sizeof Newplayer.p_login);
@


1.1.1.3
log
@Import OpenBSD source tree of short before 17:00 UTC today
@
text
@d1 1
a1 1
/*	$OpenBSD: convert.c,v 1.6 2003/04/25 21:37:47 deraadt Exp $	*/
d31 1
a31 1
/	random(), strcmp(), fwrite(), strlcpy(), fclose(), fprintf()
@



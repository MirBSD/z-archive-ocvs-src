head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.4
	tg-mergefixes-1-branch:1.1.1.4.0.4
	tg-mergefixes-1-base:1.1.1.4
	MIROS_X:1.1.1.4.0.2
	MIROS_X_BASE:1.1.1.4
	tg-mergetmp-3:1.1.1.4
	cvs-200412031430:1.1.1.4
	MIRBSD_XP_MIRPPC:1.1.1.3.0.10
	cvs-200410171015:1.1.1.4
	cvs-200410141645:1.1.1.4
	MIRBSD_XP_SPARC_BASE:1.1.1.3
	MIRBSD_XP_SPARC:1.1.1.3.0.8
	MIRBSD_7quater:1.1.1.3
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310081815:1.1.1.3
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309261610:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.2
	cvs-200307072125:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200307021520:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1
	ctm-3203:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.04.24.21.11.30;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.27.14.19.05;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.04.15.17.35.52;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.17.29.34;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.07.18.13.40.55;	author tg;	state Stab;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.10.14.17.15.51;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@re-add back the file
@
text
@/*	$OpenBSD: ldasm.S,v 1.4 2003/02/02 16:57:58 deraadt Exp $ */

/*
 * Copyright (c) 2002 Dale Rahn
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed under OpenBSD by
 *	Dale Rahn.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WsdfARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */


#define DL_DATA_SIZE      (16*4)
#include <sys/syscall.h>
#include <machine/asm.h>

	.text
	.align  4
	.globl  _dl_start
	.type   _dl_start,@@function
_dl_start:
	movl	%esp,%eax		# save stack pointer for _rtld
	pushl	%ebx			# save ps_strings
	subl	$DL_DATA_SIZE,%esp	# allocate dl_data
	movl	%esp,%ebx
	movl	%ebx,%edi		# save dl_data arg for dl_boot
	pushl	%ebx			# push dl_data for dl_boot_bind

	mov	%eax, %esi		# save stack for dl_boot

	pushl	%eax			# load saved SP for dl_boot_bind

	call	_dl_boot_bind@@PLT	# _dl_boot_bind(sp,dl_data)

	pushl	%edi			# push saved dl_data
	movl	%edi,%ebp
	movl	(7*4)(%ebp),%eax
	pushl	%eax			# push loff from dl_data

	movl	%esi,%ebp
	movl	$4,%eax
	imull	0(%ebp),%eax
	addl	$8,%eax
	addl	%ebp,%eax
	push	%eax			# push envp

	leal	4(%ebp),%eax
	push	%eax			# push argv

	call	_dl_boot@@PLT		# _dl_boot(argv,envp,loff,dl_data)

	addl	$4*4,%esp			# pop args

	addl	$DL_DATA_SIZE,%esp	# return dl_data

	popl	%ebx			# %ebx = ps_strings - XXXDSR
	popl	%edx			# %edx = cleanup - XXXDSR
	popl	%ecx			# %ecx = obj_main - XXXDSR
	jmp	*%eax

	.section	".text"
	.align		4
	.global _dl_close
	.type _dl_close,@@function
_dl_close:
	mov	$SYS_close, %eax
	int	$0x80
	jb	1f
	ret

	.section	".text"
	.align		4
	.global _dl_exit
	.type _dl_exit,@@function
_dl_exit:
	mov	$SYS_exit, %eax
	int	$0x80
	ret


	.section	".text"
	.align		4
	.global _dl_issetugid
	.type _dl_issetugid,@@function
_dl_issetugid:
	mov	$SYS_issetugid, %eax
	int	$0x80
	jb	1f		 /* error: result = -errno */
	ret


	.section	".text"
	.align		4
	.global _dl__syscall
	.type _dl__syscall,@@function
_dl__syscall:
	mov	$SYS___syscall, %eax
	int	$0x80
	jb	1f		 /* error: result = -errno */
	ret


	.section	".text"
	.align		4
	.global _dl_munmap
	.type _dl_munmap,@@function
_dl_munmap:
	mov	$SYS_munmap, %eax
	int	$0x80
	jb	1f		 /* error: result = -errno */
	ret


	.section	".text"
	.align		4
	.global _dl_mprotect
	.type _dl_mprotect,@@function
_dl_mprotect:
	mov	$SYS_mprotect, %eax
	int	$0x80
	jb	1f		 /* error: result = -errno */
	ret


	.section	".text"
	.align		4
	.global _dl_open
	.type _dl_open,@@function
_dl_open:
	mov	$SYS_open, %eax
	int	$0x80
	jb	1f		 /* error: result = -errno */
	ret


	.section	".text"
	.align		4
	.global _dl_read
	.type _dl_read,@@function
_dl_read:
	mov	$SYS_read, %eax
	int	$0x80
	jb	1f		 /* error: result = -errno */
	ret


	.section	".text"
	.align		4
	.global _dl_write
	.type _dl_write,@@function
_dl_write:
	mov	$SYS_write, %eax
	int	$0x80
	jb	1f		 /* error: result = -errno */
	ret


	.section	".text"
	.align		4
	.global _dl_stat
	.type _dl_stat,@@function
_dl_stat:
	mov	$SYS_stat, %eax
	int	$0x80
	jb	1f		 /* error: result = -errno */
	ret


	.section	".text"
	.align		4
	.global _dl_fstat
	.type _dl_fstat,@@function
_dl_fstat:
	mov	$SYS_fstat, %eax
	int	$0x80
	jb	1f		 /* error: result = -errno */
	ret


	.section	".text"
	.align		4
	.global _dl_fcntl
	.type _dl_fcntl,@@function
_dl_fcntl:
	mov	$SYS_fcntl, %eax
	int	$0x80
	jb	1f		 /* error: result = -errno */
	ret


	.section	".text"
	.align		4
	.global _dl_getdirentries
	.type _dl_getdirentries,@@function
_dl_getdirentries:
	mov	$SYS_getdirentries, %eax
	int	$0x80
	jb	1f		 /* error: result = -errno */
	ret

1:
	/* error: result = -errno; - handled here. */
	neg	%eax
	ret


	/* _dl_sigprocmask: does not handle NULL new set */

	.section	".text"
	.align		4
	.global _dl_sigprocmask
	.type _dl_sigprocmask,@@function
_dl_sigprocmask:
	movl	8(%esp), %ecx
	movl    (%ecx),%ecx
	movl	%ecx,8(%esp)		# to new mask arg
	mov	$SYS_sigprocmask, %eax
	int	$0x80
	jb	1f		 /* error: result = -errno */
	movl	12(%esp),%ecx		# fetch old mask requested
	testl	%ecx,%ecx		# test if old mask requested
	jz	2f
	movl	%eax,(%ecx)		# store old mask
	xorl	%eax,%eax
2:	ret

1:	/* error: result = -errno; - handled here. */
	neg	%eax
	ret


	.align 4
	.global _dl_bind_start
	.type _dl_bind_start,@@function
_dl_bind_start:
	pushf				# save registers
	pushl   %eax
	pushl   %ecx
	pushl   %edx
	pushl   %ebx
	pushl   %ebp
	pushl   %esi
	pushl   %edi
	pushl   %ds
	pushl   %es

	pushl   44(%esp)		# Copy of reloff
	pushl   44(%esp)		# Copy of obj
	call    _dl_bind@@PLT		# Call the binder
	addl    $8,%esp			# pop binder args
	movl    %eax,44(%esp)		# Store function to be called in obj

	popl    %es			# restore registers
	popl    %ds
	popl    %edi
	popl    %esi
	popl    %ebp
	popl    %ebx
	popl    %edx
	popl    %ecx
	popl    %eax
	popf

	leal    4(%esp),%esp		# Discard reloff, do not change eflags
	ret
@


1.1
log
@re-add a "not so important" directory that just went away
without telling me so.
It did even vanish from the CVS repository. I think, CVS
is buggy.
@
text
@a288 1

@


1.1.1.1
log
@Import OpenBSD source with the "new" command line as well,
in order to be able to provide a MirBSD release which bases
upon a fairly current OpenBSD base source code tree deemed
stable enough.
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
/*	$OpenBSD: ldasm.S,v 1.6 2003/06/03 01:35:30 drahn Exp $ */
a4 1
 * All rights reserved.
d14 6
a208 10
	int	$0x80
	jb	1f		 /* error: result = -errno */
	ret

	.section	".text"
	.align		4
	.global _dl_sysctl
	.type _dl_sysctl,@@function
_dl_sysctl:
	mov	$SYS___sysctl, %eax
@


1.1.1.3
log
@Synchronize source tree with OpenBSD
note: due to recent changes in the codebase of OpenBSD,
out libcom_err will be incompatible with theirs...
but this is no issue because we don't provide a dynamically
linked one, and theirs won't be provided longer any more anyways.
@
text
@d1 1
a1 1
/*	$OpenBSD: ldasm.S,v 1.7 2003/07/09 21:01:10 drahn Exp $ */
d18 1
a18 1
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
a42 1
	pushl	$0			# push 0 for dynamicp (unused on i386)
d70 1
a70 1
	addl	$5*4,%esp		# pop args
@


1.1.1.4
log
@pretty kawaii ld.so
@
text
@d1 1
a1 1
/*	$OpenBSD: ldasm.S,v 1.8 2004/05/25 15:56:18 deraadt Exp $ */
d31 1
a31 1
#define DL_DATA_SIZE	(16*4)
@



head	1.5;
access;
symbols
	tg-mergetmp-mirosx-1:1.5
	tg-mergefixes-1-branch:1.5.0.8
	tg-mergefixes-1-base:1.5
	MIROS_X:1.5.0.6
	MIROS_X_BASE:1.5
	tg-mergetmp-3:1.5
	cvs-200412111650:1.1.1.1
	MIRBSD_XP_MIRPPC:1.5.0.4
	MIRBSD_XP_SPARC_BASE:1.5
	MIRBSD_XP_SPARC:1.5.0.2
	cvs-200405160640:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.5
date	2004.09.26.21.40.41;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.26.21.39.56;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.23.16.43.58;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.23.12.47.02;	author tg;	state Stab;
branches;
next	1.1;

1.1
date	2004.05.16.07.17.44;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.16.07.17.44;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@oops
@
text
@.\"	$MirBSD: src/bin/md5/cksum.1,v 1.4 2004/09/26 21:39:56 tg Exp $
.\"	$OpenBSD: cksum.1,v 1.2 2004/05/04 18:32:51 jmc Exp $
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)cksum.1	8.2 (Berkeley) 4/28/95
.\"
.Dd April 30, 2004
.Dt CKSUM 1
.Os
.Sh NAME
.Nm cksum ,
.Nm sum
.Nd display file checksums and block counts
.Sh SYNOPSIS
.Nm cksum
.Bk -words
.Oo
.Fl b | p | t | x |
.Fl c Oo Ar checklist ... Oc |
.Fl s Ar string |
.Ar file ...
.Oc
.Op Fl a Ar algorithm
.Op Fl o Ar 1 | 2
.Ek
.Nm sum
.Op Ar file ...
.Sh DESCRIPTION
The
.Nm cksum
utility writes to the standard output a single line for each input file.
The format of this line varies with the algorithm being used as follows:
.Bl -tag -width Ds
.It cksum
The output line consists of three whitespace separated fields: a
.Tn CRC
checksum, the number of octets in the input,
and name of the file or string.
If no file name is specified, the standard input is used and no file name
is written.
.It sum
The output line consists of three whitespace separated fields: a
.Tn CRC
checksum, the number of kilobytes in the input,
and name of the file or string.
If no file name is specified, the standard input is used and no file name
is written.
.It sysvsum
The output line consists of three whitespace separated fields: a
.Tn CRC
checksum, the number of 512-byte blocks in the input,
and name of the file or string.
If no file name is specified, the standard input is used and no file name
is written.
.It all others
The output line consists of four whitespace separated fields:
the name of the algorithm used, the name of the file or string in
parentheses, an equals sign, and the cryptographic hash of the input.
If no file name is specified, the standard input is used and only
the cryptographic hash is output.
.El
.Pp
The
.Nm sum
utility is identical to the
.Nm cksum
utility, except that it defaults to using historic algorithm 1, as
described below.
It is provided for compatibility only.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl a Ar algorithm
Use the specified algorithm instead of the default (cksum).
Supported algorithms include
.Ar cksum ,
.Ar md4 ,
.Ar md5 ,
.Ar rmd160 ,
.Ar sha1 ,
.Ar sha256 ,
.Ar sha384 ,
.Ar sha512 ,
.Ar sum ,
and
.Ar sysvsum .
Algorithms specified by the
.Fl a
option are case-insensitive.
.It Fl b
Print the checksum as binary to stdout.
.It Xo
.Fl c
.Oo Ar checklist ... Oc
.Xc
Compares all checksums contained in the file
.Ar checklist
with newly computed checksums for the corresponding files.
Output consists of the digest used, the file name,
and an OK or FAILED for the result of the comparison.
This will validate any of the supported checksums.
If no file is given, stdin is used.
.It Fl o Ar 1 | 2
Use historic algorithms instead of the (superior) default one
(see below).
.It Fl p
Echoes stdin to stdout and appends the
checksum to stdout.
.It Fl s Ar string
Prints a checksum of the given
.Ar string .
.It Fl t
Runs a built-in time trial.
.It Fl x
Runs a built-in test script.
.El
.Pp
Algorithm 1 (aka
.Ar sum )
is the algorithm used by historic
.Bx
systems as the
.Nm sum
algorithm and by historic
.At V
systems as the
.Nm sum
algorithm when using the
.Fl r
option.
This is a 16-bit checksum, with a right rotation before each addition;
overflow is discarded.
.Pp
Algorithm 2 (aka
.Ar sysvsum )
is the algorithm used by historic
.At V
systems as the
default
.Nm sum
algorithm.
This is a 32-bit checksum, and is defined as follows:
.Bd -unfilled -offset indent
s = sum of all bytes;
r = s % 2^16 + (s % 2^32) / 2^16;
cksum = (r % 2^16) + r / 2^16;
.Ed
.Pp
Both algorithm 1 and 2 write to the standard output the same fields as
the default algorithm, except that the size of the file in bytes is
replaced with the size of the file in blocks.
For historic reasons, the block size is 1024 for algorithm 1 and 512
for algorithm 2.
Partial blocks are rounded up.
.Pp
The default
.Tn CRC
used is based on the polynomial used for
.Tn CRC
error checking
in the networking standard
.St -iso8802-3 .
The
.Tn CRC
checksum encoding is defined by the generating polynomial:
.Bd -unfilled -offset indent
G(x) = x^32 + x^26 + x^23 + x^22 + x^16 + x^12 +
     x^11 + x^10 + x^8 + x^7 + x^5 + x^4 + x^2 + x + 1
.Ed
.Pp
Mathematically, the
.Tn CRC
value corresponding to a given file is defined by
the following procedure:
.Bd -filled -offset indent
The
.Ar n
bits to be evaluated are considered to be the coefficients of a mod 2
polynomial M(x) of degree
.Ar n Ns \-1 .
These
.Ar n
bits are the bits from the file, with the most significant bit being the most
significant bit of the first octet of the file and the last bit being the least
significant bit of the last octet, padded with zero bits (if necessary) to
achieve an integral number of octets, followed by one or more octets
representing the length of the file as a binary value, least significant octet
first.
The smallest number of octets capable of representing this integer are used.
.Pp
M(x) is multiplied by x^32 (i.e., shifted left 32 bits) and divided by
G(x) using mod 2 division, producing a remainder R(x) of degree <= 31.
.Pp
The coefficients of R(x) are considered to be a 32-bit sequence.
.Pp
The bit sequence is complemented and the result is the CRC.
.Ed
.Pp
The other available algorithms are described in their respective
man pages in section 3 of the manual.
.Sh DIAGNOSTICS
The
.Nm cksum
and
.Nm sum
utilities exit 0 on success or >0 if an error occurred.
.Sh SEE ALSO
.Xr md5 1 ,
.Xr rmd160 1 ,
.Xr sha1 1
.Pp
The default calculation is identical to that given in pseudo-code
in the following
.Tn ACM
article:
.Rs
.%T "Computation of Cyclic Redundancy Checks Via Table Lookup"
.%A Dilip V. Sarwate
.%J "Communications of the \\*(tNACM\\*(sP"
.%D "August 1988"
.Re
.Sh STANDARDS
The
.Nm cksum
utility is compliant with the
.St -p1003.2-92
specification.
.Sh HISTORY
A
.Nm sum
command appeared in
.At v2 .
The
.Nm cksum
utility appeared in
.Bx 4.4 .
.Sh WARNING
Do not use the
.Ar cksum ,
.Ar md4 ,
.Ar sum ,
or
.Ar sysvsum
algorithms to detect hostile binary modifications.
An attacker can trivially produce backdoored daemons which have the same
checksum as the standard versions.
Use a cryptographic-strength checksum (such as RIPEMD-160) instead.
@


1.4
log
@md4(1) is dead beef
@
text
@d1 1
a1 1
.\"	$MirBSD: src/bin/md5/cksum.1,v 1.3 2004/09/23 16:43:58 tg Exp $
d106 1
a236 1
.Xr md4 1 ,
@


1.3
log
@add option to binarize output (eg. for b64encode -r afterwards)
@
text
@d1 1
a1 1
.\"	$MirBSD: src/bin/md5/cksum.1,v 1.2 2004/05/23 12:47:02 tg Stab $
a105 1
.Ar md4 ,
@


1.2
log
@* merge OpenBSD 3.5-current
* retain local changes to ls and md5 (md4, hint hint)
* fix up ksh (limits - we still have 4096 bytes input buffer;
  random usage)
* fix manpages (mdX, ksh)
@
text
@d1 1
a1 1
.\"	$MirBSD$
d47 1
a47 1
.Fl p | t | x |
d119 2
@


1.1
log
@Initial revision
@
text
@d1 1
d235 1
d275 1
a275 1
Use a cryptographic-strength checksum (such as MD5) instead.
@


1.1.1.1
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@@

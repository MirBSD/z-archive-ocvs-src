head	1.6;
access;
symbols
	tg-mergetmp-mirosx-1:1.6
	MIROS_X:1.6.0.2
	MIROS_X_BASE:1.6
	mksh-18:1.6
	mirbsdksh-1_17:1.6
	MIRBSD_XP_MIRPPC:1.3.0.4
	mirbsdksh-1_16:1.6
	cvs-200411032110:1.1.1.1
	cvs-200411031520:1.1.1.1
	MIRBSD_XP_SPARC_BASE:1.3
	MIRBSD_XP_SPARC:1.3.0.2
	mirbsdksh-1_12:1.2
	cvs-200408271355:1.1.1.1
	MIRBSD_7quater:1.2
	mirbsdksh-1_11:1.2
	mirbsdksh-1_10:1.2
	cvs-200405160640:1.1.1.1
	mirbsdksh-1_6:1.1.1.1
	mirbsdksh-1_5:1.1.1.1
	mirbsdksh-1_4:1.1.1.1
	mirbsdksh-1_3:1.1.1.1
	mirbsdksh-1_2:1.1.1.1
	ksh_maintainer:1.1.1.1.0.10
	pdksh-5_2_14:1.1.3.1
	tg:1.1.3
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.2.0.2
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2004.10.28.11.53.41;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.28.11.11.18;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.28.11.03.23;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.21.11.57.09;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.24.19.56.08;	author tg;	state Stab;
branches;
next	1.1;

1.1
date	2003.03.22.17.34.59;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.3.1;
next	;

1.1.1.1
date	2003.03.22.17.34.59;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2004.03.21.00.34.10;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@run GNU protoize
protect header files
nuke some dead code
regenerate configure script
let silly code die
@
text
@/**	$MirBSD: src/bin/ksh/expand.h,v 1.5 2004/10/28 11:11:18 tg Exp $ */
/*	$OpenBSD: expand.h,v 1.3 2001/03/26 16:19:45 todd Exp $	*/

#ifndef EXPAND_H
#define EXPAND_H

/*
 * Expanding strings
 */

#define X_EXTRA		8	/* this many extra bytes in X string */

#if 0				/* Usage */
	XString xs;
	char *xp;

	Xinit(xs, xp, 128, ATEMP); /* allocate initial string */
	while ((c = generate()) {
		Xcheck(xs, xp);	/* expand string if necessary */
		Xput(xs, xp, c); /* add character */
	}
	return Xclose(xs, xp);	/* resize string */
/*
 * NOTE:
 *     The Xcheck and Xinit macros have a magic + X_EXTRA in the lengths.
 *     This is so that you can put up to X_EXTRA characters in a XString
 *     before calling Xcheck. (See yylex in lex.c)
 */
#endif /* 0 */

typedef struct XString {
	char   *end, *beg;	/* end, begin of string */
	size_t	len;		/* length */
	Area	*areap;		/* area to allocate/free from */
} XString;

typedef char * XStringP;

/* initialize expandable string */
#define	Xinit(xs, xp, length, area) do { \
			(xs).len = length; \
			(xs).areap = (area); \
			(xs).beg = alloc((xs).len + X_EXTRA, (xs).areap); \
			(xs).end = (xs).beg + (xs).len; \
			xp = (xs).beg; \
		} while (0)

/* stuff char into string */
#define	Xput(xs, xp, c)	(*xp++ = (c))

/* check if there are at least n bytes left */
#define	XcheckN(xs, xp, n) do { \
		    int more = ((xp) + (n)) - (xs).end; \
		    if (more > 0) \
			xp = Xcheck_grow_(&xs, xp, more); \
		} while (0)

/* check for overflow, expand string */
#define Xcheck(xs, xp)	XcheckN(xs, xp, 1)

/* free string */
#define	Xfree(xs, xp)	afree((void*) (xs).beg, (xs).areap)

/* close, return string */
#define	Xclose(xs, xp)	(char*) aresize((void*)(xs).beg, \
					(size_t)((xp) - (xs).beg), (xs).areap)
/* begin of string */
#define	Xstring(xs, xp)	((xs).beg)

#define Xnleft(xs, xp) ((xs).end - (xp))	/* may be less than 0 */
#define	Xlength(xs, xp) ((xp) - (xs).beg)
#define Xsize(xs, xp) ((xs).end - (xs).beg)
#define	Xsavepos(xs, xp) ((xp) - (xs).beg)
#define	Xrestpos(xs, xp, n) ((xs).beg + (n))

char *	Xcheck_grow_(XString *xsp, char *xp, size_t more);

/*
 * expandable vector of generic pointers
 */

typedef struct XPtrV {
	void  **cur;		/* next avail pointer */
	void  **beg, **end;	/* begin, end of vector */
} XPtrV;

#define	XPinit(x, n) do { \
			void **vp__; \
			vp__ = (void**) alloc(sizeofN(void*, n), ATEMP); \
			(x).cur = (x).beg = vp__; \
			(x).end = vp__ + n; \
		    } while (0)

#define	XPput(x, p) do { \
			if ((x).cur >= (x).end) { \
				int n = XPsize(x); \
				(x).beg = (void**) aresize((void*) (x).beg, \
						   sizeofN(void*, n*2), ATEMP); \
				(x).cur = (x).beg + n; \
				(x).end = (x).cur + n; \
			} \
			*(x).cur++ = (p); \
		} while (0)

#define	XPptrv(x)	((x).beg)
#define	XPsize(x)	((x).cur - (x).beg)

#define	XPclose(x)	(void**) aresize((void*)(x).beg, \
					 sizeofN(void*, XPsize(x)), ATEMP)

#define	XPfree(x)	afree((void*) (x).beg, ATEMP)

#endif	/* ndef EXPAND_H */
@


1.5
log
@de-register, de-inline, de-__P
@
text
@d1 1
a1 1
/**	$MirBSD: src/bin/ksh/expand.h,v 1.4 2004/10/28 11:03:23 tg Exp $ */
d4 3
d112 2
@


1.4
log
@-Wall -Werror -W -pedantic clean
@
text
@d1 1
a1 1
/**	$MirBSD: src/bin/ksh/expand.h,v 1.3 2004/09/21 11:57:09 tg Exp $ */
d73 1
a73 1
char *	Xcheck_grow_	ARGS((XString *xsp, char *xp, size_t more));
@


1.3
log
@unify spacing of RCS IDs
@
text
@d1 1
a1 1
/**	$MirBSD$ */
d73 1
a73 1
char *	Xcheck_grow_	ARGS((XString *xsp, char *xp, int more));
d85 1
a85 1
			register void **vp__; \
@


1.2
log
@polish, mop up whitespace, etc.

passes regressions on MirOS
@
text
@d1 2
a2 2
/* $MirBSD$ */
/* $OpenBSD: expand.h,v 1.3 2001/03/26 16:19:45 todd Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$OpenBSD: expand.h,v 1.3 2001/03/26 16:19:45 todd Exp $	*/
@


1.1.3.1
log
@Import upstream pdksh-5.2.14 (latest version) in order to be able
to play around with it a bit
@
text
@d1 2
a5 1
/* $Id$ */
d15 1
a15 1
		Xcheck(xs, xp);	/* expand string if neccessary */
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

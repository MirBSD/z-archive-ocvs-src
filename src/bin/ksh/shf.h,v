head	1.5;
access;
symbols
	tg-mergetmp-mirosx-1:1.5
	MIROS_X:1.5.0.2
	MIROS_X_BASE:1.5
	mksh-18:1.5
	mirbsdksh-1_17:1.5
	MIRBSD_XP_MIRPPC:1.3.0.4
	mirbsdksh-1_16:1.5
	cvs-200411032110:1.1.1.1
	cvs-200411031520:1.1.1.1
	MIRBSD_XP_SPARC_BASE:1.3
	MIRBSD_XP_SPARC:1.3.0.2
	mirbsdksh-1_12:1.2
	cvs-200408271355:1.1.1.1
	MIRBSD_7quater:1.2
	mirbsdksh-1_11:1.2
	mirbsdksh-1_10:1.2
	cvs-200405160640:1.1.1.1
	mirbsdksh-1_6:1.1.1.1
	mirbsdksh-1_5:1.1.1.1
	mirbsdksh-1_4:1.1.1.1
	mirbsdksh-1_3:1.1.1.1
	mirbsdksh-1_2:1.1.1.1
	ksh_maintainer:1.1.1.1.0.10
	pdksh-5_2_14:1.1.3.1
	tg:1.1.3
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.2.0.2
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.10.28.11.53.43;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.28.11.11.19;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.21.11.57.14;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.24.19.56.18;	author tg;	state Stab;
branches;
next	1.1;

1.1
date	2003.03.22.17.35.03;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.3.1;
next	;

1.1.1.1
date	2003.03.22.17.35.03;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2004.03.21.00.34.16;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@run GNU protoize
protect header files
nuke some dead code
regenerate configure script
let silly code die
@
text
@/**	$MirBSD: src/bin/ksh/shf.h,v 1.4 2004/10/28 11:11:19 tg Exp $ */
/*	$OpenBSD: shf.h,v 1.2 1999/01/08 20:25:02 millert Exp $	*/

#ifndef SHF_H
#define SHF_H

/*
 * Shell file I/O routines
 */

#define SHF_BSIZE	512

#define shf_fileno(shf)	((shf)->fd)
#define shf_setfileno(shf,nfd)	((shf)->fd = (nfd))
#define shf_getc(shf) ((shf)->rnleft > 0 ? (shf)->rnleft--, *(shf)->rp++ : \
			shf_getchar(shf))
#define shf_putc(c, shf)	((shf)->wnleft == 0 ? shf_putchar((c), (shf)) \
					: ((shf)->wnleft--, *(shf)->wp++ = (c)))
#define shf_eof(shf)		((shf)->flags & SHF_EOF)
#define shf_error(shf)		((shf)->flags & SHF_ERROR)
#define shf_errno(shf)		((shf)->errno_)
#define shf_clearerr(shf)	((shf)->flags &= ~(SHF_EOF | SHF_ERROR))

/* Flags passed to shf_*open() */
#define SHF_RD		0x0001
#define SHF_WR		0x0002
#define SHF_RDWR	  (SHF_RD|SHF_WR)
#define SHF_ACCMODE	  0x0003	/* mask */
#define SHF_GETFL	0x0004		/* use fcntl() to figure RD/WR flags */
#define SHF_UNBUF	0x0008		/* unbuffered I/O */
#define SHF_CLEXEC	0x0010		/* set close on exec flag */
#define SHF_MAPHI	0x0020		/* make fd > FDBASE (and close orig)
					 * (shf_open() only) */
#define SHF_DYNAMIC	0x0040		/* string: increase buffer as needed */
#define SHF_INTERRUPT	0x0080		/* EINTR in read/write causes error */
/* Flags used internally */
#define SHF_STRING	0x0100		/* a string, not a file */
#define SHF_ALLOCS	0x0200		/* shf and shf->buf were alloc()ed */
#define SHF_ALLOCB	0x0400		/* shf->buf was alloc()ed */
#define SHF_ERROR	0x0800		/* read()/write() error */
#define SHF_EOF		0x1000		/* read eof (sticky) */
#define SHF_READING	0x2000		/* currently reading: rnleft,rp valid */
#define SHF_WRITING	0x4000		/* currently writing: wnleft,wp valid */


struct shf {
	int flags;		/* see SHF_* */
	unsigned char *rp;	/* read: current position in buffer */
	int rbsize;		/* size of buffer (1 if SHF_UNBUF) */
	int rnleft;		/* read: how much data left in buffer */
	unsigned char *wp;	/* write: current position in buffer */
	int wbsize;		/* size of buffer (0 if SHF_UNBUF) */
	int wnleft;		/* write: how much space left in buffer */
	unsigned char *buf;	/* buffer */
	int fd;			/* file descriptor */
	int errno_;		/* saved value of errno after error */
	int bsize;		/* actual size of buf */
	Area *areap;		/* area shf/buf were allocated in */
};

extern struct shf shf_iob[];

struct shf *shf_open(const char *name, int oflags, int mode,
			      int sflags);
struct shf *shf_fdopen(int fd, int sflags, struct shf *shf);
struct shf *shf_reopen(int fd, int sflags, struct shf *shf);
struct shf *shf_sopen(char *buf, int bsize, int sflags,
			      struct shf *shf);
int	    shf_close(struct shf *shf);
int	    shf_fdclose(struct shf *shf);
char	   *shf_sclose(struct shf *shf);
int	    shf_finish(struct shf *shf);
int	    shf_flush(struct shf *shf);
int	    shf_seek(struct shf *shf, off_t where, int from);
int	    shf_read(char *buf, int bsize, struct shf *shf);
char	   *shf_getse(char *buf, int bsize, struct shf *shf);
int	    shf_getchar(struct shf *shf);
int	    shf_ungetc(int c, struct shf *shf);
int	    shf_putchar(int c, struct shf *shf);
int	    shf_puts(const char *s, struct shf *shf);
int	    shf_write(const char *buf, int nbytes, struct shf *shf);
int	    shf_fprintf(struct shf *shf, const char *fmt, ...);
int	    shf_snprintf(char *buf, int bsize, const char *fmt, ...);
char	    *shf_smprintf(const char *fmt, ...);
int	    shf_vfprintf(struct shf *, const char *fmt, va_list args);

#endif /* SHF_H */
@


1.4
log
@de-register, de-inline, de-__P
@
text
@d1 1
a1 1
/**	$MirBSD: src/bin/ksh/shf.h,v 1.3 2004/09/21 11:57:14 tg Exp $ */
d5 1
a5 1
# define SHF_H
@


1.3
log
@unify spacing of RCS IDs
@
text
@d1 1
a1 1
/**	$MirBSD$ */
d63 23
a85 23
struct shf *shf_open	ARGS((const char *name, int oflags, int mode,
			      int sflags));
struct shf *shf_fdopen	ARGS((int fd, int sflags, struct shf *shf));
struct shf *shf_reopen  ARGS((int fd, int sflags, struct shf *shf));
struct shf *shf_sopen	ARGS((char *buf, int bsize, int sflags,
			      struct shf *shf));
int	    shf_close	ARGS((struct shf *shf));
int	    shf_fdclose	ARGS((struct shf *shf));
char	   *shf_sclose	ARGS((struct shf *shf));
int	    shf_finish	ARGS((struct shf *shf));
int	    shf_flush	ARGS((struct shf *shf));
int	    shf_seek	ARGS((struct shf *shf, off_t where, int from));
int	    shf_read	ARGS((char *buf, int bsize, struct shf *shf));
char	   *shf_getse	ARGS((char *buf, int bsize, struct shf *shf));
int	    shf_getchar	ARGS((struct shf *shf));
int	    shf_ungetc	ARGS((int c, struct shf *shf));
int	    shf_putchar	ARGS((int c, struct shf *shf));
int	    shf_puts	ARGS((const char *s, struct shf *shf));
int	    shf_write	ARGS((const char *buf, int nbytes, struct shf *shf));
int	    shf_fprintf ARGS((struct shf *shf, const char *fmt, ...));
int	    shf_snprintf ARGS((char *buf, int bsize, const char *fmt, ...));
char	    *shf_smprintf ARGS((const char *fmt, ...));
int	    shf_vfprintf ARGS((struct shf *, const char *fmt, va_list args));
@


1.2
log
@polish, mop up whitespace, etc.

passes regressions on MirOS
@
text
@d1 2
a2 2
/* $MirBSD$ */
/* $OpenBSD: shf.h,v 1.2 1999/01/08 20:25:02 millert Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$OpenBSD: shf.h,v 1.2 1999/01/08 20:25:02 millert Exp $	*/
@


1.1.3.1
log
@Import upstream pdksh-5.2.14 (latest version) in order to be able
to play around with it a bit
@
text
@d1 2
a8 1
/* $Id$ */
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

head	1.2;
access;
symbols
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.07.18.12.28.13;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.12.22.21.09.38;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.12.22.21.09.38;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke regression tests

noone actually uses them (I've run them about half a dozen times only),
some of the tests (eg. everything PF) are broken, some of the code is
broken... and the adventurous are invited to use CVS and fix them,
maybe on a tagged branch.
@
text
@# $OpenBSD: varfunction.sh,v 1.1 2003/12/15 05:28:40 otto Exp $
#
# Calling 
#
#	FOO=bar f
#
# where f is a ksh style function, should not set FOO in the current env.
# If f is a bourne style function, FOO should be set. Furthermore,
# the function should receive a correct value of FOO. Additionally,
# setting FOO in the function itself should not change the value in
# global environment.
#
# Inspired by PR 2450.
#
function k {
	if [ x$FOO != xbar ]; then
		echo 1
		return 1
	fi
	x=$(env | grep FOO)
	if [ "x$x" != "xFOO=bar" ]; then
		echo 2
		return 1;
	fi
	FOO=foo
	return 0
}

b () {
	if [ x$FOO != xbar ]; then
		echo 3
		return 1
	fi
	x=$(env | grep FOO)
	if [ "x$x" != "xFOO=bar" ]; then
		echo 4
		return 1;
	fi
	FOO=foo
	return 0
}

FOO=bar k
if [ $? != 0 ]; then
	exit 1
fi
if [ x$FOO != x ]; then
	exit 1
fi

FOO=bar b
if [ $? != 0 ]; then
	exit 1
fi
if [ x$FOO != xbar ]; then
	exit 1
fi

FOO=barbar

FOO=bar k
if [ $? != 0 ]; then
	exit 1
fi
if [ x$FOO != xbarbar ]; then
	exit 1
fi

FOO=bar b
if [ $? != 0 ]; then
	exit 1
fi
if [ x$FOO != xbar ]; then
	exit 1
fi

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@@

head	1.2;
access;
symbols
	cvs-200405160640:1.1.1.4
	cvs-200401271800:1.1.1.4
	cvs-200401261630:1.1.1.4
	cvs-200401021645:1.1.1.4
	cvs-200312222040:1.1.1.4
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.09.22.22.00.48;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.48.09;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.48.09;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.21.19.01.59;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.08.11.18.28.30;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.12.22.21.09.52;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@there is no point in having a pfctl regression test when the
syntax changed and I don't bother to update them to Kibi-bits.
@
text
@@@0 pass in quick on enc0 fastroute all 
[ Skip steps: i=3 d=3 p=6 sa=8 sp=end da=4 dp=6 ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@1 pass in quick on enc0 fastroute inet all 
[ Skip steps: i=3 d=3 p=6 sa=8 sp=end da=4 dp=6 ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@2 pass in quick on enc0 fastroute inet6 all 
[ Skip steps: p=6 sa=8 sp=end da=4 dp=6 ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@3 pass out quick on tun0 route-to tun1 inet all 
[ Skip steps: i=end d=6 f=5 p=6 sa=8 sp=end dp=6 ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@4 pass out quick on tun0 route-to tun1 inet from any to 192.168.1.1 
[ Skip steps: i=end d=6 p=6 sa=8 sp=end dp=6 ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@5 pass out quick on tun0 route-to tun1 inet6 from any to fec0::1 
[ Skip steps: i=end sa=8 sp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@6 block drop in on tun0 dup-to (tun1 192.168.1.1) inet proto tcp from any to any port = ftp 
[ Skip steps: i=end d=end p=8 sa=8 sp=end da=8 dp=8 ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@7 block drop in on tun0 dup-to (tun1 fec0::1) inet6 proto tcp from any to any port = ftp 
[ Skip steps: i=end d=end sp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@8 pass in quick on tun0 route-to tun1 inet from 192.168.1.1 to 10.1.1.1 
[ Skip steps: i=end d=end p=10 sp=end dp=10 ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@9 pass in quick on tun0 route-to tun1 inet6 from fec0::/64 to fec1::2 
[ Skip steps: i=end d=end sp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@10 block drop in on tun0 reply-to (tun1 192.168.1.1) inet proto tcp from any to any port = ftp 
[ Skip steps: i=end d=end p=12 sa=12 sp=end da=12 dp=12 ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@11 block drop in on tun0 reply-to (tun1 fec0::1) inet6 proto tcp from any to any port = ftp 
[ Skip steps: i=end d=end sp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@12 pass in quick on tun0 reply-to tun1 inet from 192.168.1.1 to 10.1.1.1 
[ Skip steps: i=end d=end p=end sp=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@13 pass in quick on tun0 reply-to tun1 inet6 from fec0::/64 to fec1::2 
[ Skip steps: i=end d=end p=end sp=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@14 pass in quick on tun0 dup-to (tun1 192.168.1.100) inet from 192.168.1.1 to 10.1.1.1 
[ Skip steps: i=end d=end p=end sp=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@@15 pass in quick on tun0 dup-to (tun1 fec1::2) inet6 from fec0::/64 to fec1::2 
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync MirBSD main source tree against OpenBSD-current,
which should be fairly stable after the Hackathon now.
@
text
@d2 4
a5 3
  [ Skip steps: i=3 d=3 p=6 sa=8 sp=end da=4 dp=6 ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d7 4
a10 3
  [ Skip steps: i=3 d=3 p=6 sa=8 sp=end da=4 dp=6 ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d12 4
a15 3
  [ Skip steps: p=6 sa=8 sp=end da=4 dp=6 ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d17 4
a20 3
  [ Skip steps: i=end d=6 f=5 p=6 sa=8 sp=end dp=6 ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d22 4
a25 3
  [ Skip steps: i=end d=6 p=6 sa=8 sp=end dp=6 ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d27 4
a30 3
  [ Skip steps: i=end sa=8 sp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d32 4
a35 3
  [ Skip steps: i=end d=end p=8 sa=8 sp=end da=8 dp=8 ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d37 4
a40 3
  [ Skip steps: i=end d=end sp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d42 4
a45 3
  [ Skip steps: i=end d=end p=10 sp=end dp=10 ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d47 4
a50 3
  [ Skip steps: i=end d=end sp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d52 4
a55 3
  [ Skip steps: i=end d=end p=12 sa=12 sp=end da=12 dp=12 ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d57 4
a60 3
  [ Skip steps: i=end d=end sp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d62 4
a65 3
  [ Skip steps: i=end d=end p=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d67 4
a70 3
  [ Skip steps: i=end d=end p=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d72 4
a75 3
  [ Skip steps: i=end d=end p=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
d77 4
a80 3
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@


1.1.1.3
log
@Import the complete OpenBSD source tree (base system)
as of CTM delta 3496 (roughly 1200 UTC today) into the
vendor branch.
Attention: this is a big update. Don't even try to
build this system, OpenBSD 3.4-beta, yet on your own.
@
text
@d1 1
a1 1
@@0 pass in quick on enc0 fastroute all
d5 1
a5 1
@@1 pass in quick on enc0 fastroute inet all
d9 1
a9 1
@@2 pass in quick on enc0 fastroute inet6 all
d13 1
a13 1
@@3 pass out quick on tun0 route-to tun1 inet all
d17 1
a17 1
@@4 pass out quick on tun0 route-to tun1 inet from any to 192.168.1.1
d21 1
a21 1
@@5 pass out quick on tun0 route-to tun1 inet6 from any to fec0::1
d25 1
a25 1
@@6 block drop in on tun0 dup-to (tun1 192.168.1.1) inet proto tcp from any to any port = ftp
d29 1
a29 1
@@7 block drop in on tun0 dup-to (tun1 fec0::1) inet6 proto tcp from any to any port = ftp
d33 1
a33 1
@@8 pass in quick on tun0 route-to tun1 inet from 192.168.1.1 to 10.1.1.1
d37 1
a37 1
@@9 pass in quick on tun0 route-to tun1 inet6 from fec0::/64 to fec1::2
d41 1
a41 1
@@10 block drop in on tun0 reply-to (tun1 192.168.1.1) inet proto tcp from any to any port = ftp
d45 1
a45 1
@@11 block drop in on tun0 reply-to (tun1 fec0::1) inet6 proto tcp from any to any port = ftp
d49 1
a49 1
@@12 pass in quick on tun0 reply-to tun1 inet from 192.168.1.1 to 10.1.1.1
d53 1
a53 1
@@13 pass in quick on tun0 reply-to tun1 inet6 from fec0::/64 to fec1::2
d57 1
a57 1
@@14 pass in quick on tun0 dup-to (tun1 192.168.1.100) inet from 192.168.1.1 to 10.1.1.1
d61 1
a61 1
@@15 pass in quick on tun0 dup-to (tun1 fec1::2) inet6 from fec0::/64 to fec1::2
@


1.1.1.4
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d13 1
a13 1
@@3 pass out quick on tun1000000 route-to tun1000001 inet all
d17 1
a17 1
@@4 pass out quick on tun1000000 route-to tun1000001 inet from any to 192.168.1.1
d21 1
a21 1
@@5 pass out quick on tun1000000 route-to tun1000001 inet6 from any to fec0::1
d25 1
a25 1
@@6 block drop in on tun1000000 dup-to (tun1000001 192.168.1.1) inet proto tcp from any to any port = ftp
d29 1
a29 1
@@7 block drop in on tun1000000 dup-to (tun1000001 fec0::1) inet6 proto tcp from any to any port = ftp
d33 1
a33 1
@@8 pass in quick on tun1000000 route-to tun1000001 inet from 192.168.1.1 to 10.1.1.1
d37 1
a37 1
@@9 pass in quick on tun1000000 route-to tun1000001 inet6 from fec0::/64 to fec1::2
d41 1
a41 1
@@10 block drop in on tun1000000 reply-to (tun1000001 192.168.1.1) inet proto tcp from any to any port = ftp
d45 1
a45 1
@@11 block drop in on tun1000000 reply-to (tun1000001 fec0::1) inet6 proto tcp from any to any port = ftp
d49 1
a49 1
@@12 pass in quick on tun1000000 reply-to tun1000001 inet from 192.168.1.1 to 10.1.1.1
d53 1
a53 1
@@13 pass in quick on tun1000000 reply-to tun1000001 inet6 from fec0::/64 to fec1::2
d57 1
a57 1
@@14 pass in quick on tun1000000 dup-to (tun1000001 192.168.1.100) inet from 192.168.1.1 to 10.1.1.1
d61 1
a61 1
@@15 pass in quick on tun1000000 dup-to (tun1000001 fec1::2) inet6 from fec0::/64 to fec1::2
@



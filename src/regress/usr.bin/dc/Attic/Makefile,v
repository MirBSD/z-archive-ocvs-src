head	1.2;
access;
symbols
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261610:1.1.1.1
	cvs-200309251530:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.07.18.12.30.40;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.09.25.16.32.00;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.09.25.16.32.00;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.22.21.10.12;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke regression tests

noone actually uses them (I've run them about half a dozen times only),
some of the tests (eg. everything PF) are broken, some of the code is
broken... and the adventurous are invited to use CVS and fix them,
maybe on a tagged branch.
@
text
@# $OpenBSD: Makefile,v 1.1 2003/09/21 19:30:07 otto Exp $

DC=dc

REGRESS_TARGETS=t1 t2 t4 t5 t6 t7 t8 t9

# .in: input file
# .out: desired result

# t1: basic operations, prints "dc: Runtime warning: non-zero scale in exponent"
# t2: factoring program
# t4: more string ops
# t5: bc output, computing exp
# t6: nesting level and tail recursion
# t7: number input and string handling
# t8: bc output, array operations
# t9: output for different bases and wrapping of long lines

all: clean ${REGRESS_TARGET}

.SUFFIXES: .in

.in:
	@@echo ${*}
	@@${DC} ${.CURDIR}/${*}.in > ${*}.log
	@@cmp -s ${.CURDIR}/${*}.out ${*}.log || \
		(echo "XXX ${*} failed" && false)

# Clean all files generated
clean:
	rm -f *.log

.include <bsd.regress.mk>
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Release Time. Synchronize with OpenBSD 3.4-current (base system).
@
text
@@


1.1.1.2
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2003/12/17 15:11:36 otto Exp $
d3 1
a3 1
DC=dc -x
d5 1
a5 2
REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 \
	t18 t19 t20
a11 1
# t3: string handling
a17 11
# t10: test J and M operators
# t11: test extended comparison operators
# t12: test r operator, prints two "stack empty" warnings
# t13: test #, n and a
# t14: test N, G, ( and {
# t15: more N, G, ( and {
# t16: even more N, G, ( and {
# t17: test R (drop)
# t18: read uninitialized and initialized array locations
# t19: test extended registers
# t20: towers of hanoi
@


head	1.2;
access;
symbols
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.07.18.12.28.47;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.48.09;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.48.09;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.11.18.28.08;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke regression tests

noone actually uses them (I've run them about half a dozen times only),
some of the tests (eg. everything PF) are broken, some of the code is
broken... and the adventurous are invited to use CVS and fix them,
maybe on a tagged branch.
@
text
@/*
 * $OpenBSD: sigret.c,v 1.4 2002/04/30 01:59:47 deraadt Exp $
 *
 * Public Domain
 *
 * Playing games with sigreturn.   Check if calling sigreturn from a
 * signal handler screws anything up.
 *
 * Run with:
 *	-a:	use an alternate signal stack
 *
 *	-b:	call sigreturn from outside of a signal handler
 *		An error is OK
 *
 *	-c:	clobber the sigcontext before calling sigreturn
 *		the program should die
 *
 *	-f:	don't use sigreturn -- fall through the signal handler
 *		-c, and -i options ignored when used
 *
 *	-i:	call sigreturn from a function called by the signal handler
 *
 */

#include <sys/time.h>

#include <err.h>
#include <signal.h>
#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

/*
 * sigalarm occurs 50 times/second.  Stop running after 10 seconds
 * (100 interrupts).
 */
#define MAX_INTERRUPTS	500

int failed;
int altstack;
int badcall;
int clobbercall;
int fallthru;
int indirect;

volatile int count;
struct sigcontext gscp;
int gscp_loaded;

static void
usage(const char * err, ...)
{
	extern const char * __progname;

	if (err) {
		va_list ap;
		va_start(ap, err);
		vwarnx(err, ap);
		va_end(ap);
	}
	fprintf(stderr, "usage: %s [-abcfi]\n", __progname);
	exit(1);
}

void
indirect_return(struct sigcontext * scp)
{
	sigreturn(scp);
}

void
sig_handler(int sig, siginfo_t *blah, void *x)
{
	struct sigcontext * scp = x;

	count++;

	if (!fallthru) {
		if (clobbercall)
			memset(scp, 0, sizeof *scp);
		if (indirect)
			indirect_return(scp);
		else if (badcall) {
			gscp = *scp;
			gscp_loaded = 1;
		} else
			sigreturn(scp);
	}
}

void
test2(char *fmt)
{
	char *ofmt = fmt;

	if (gscp_loaded) {
		gscp_loaded = 0;
		sigreturn(&gscp);
	}

	for (; *fmt; fmt++)
	  switch (*fmt) {
	  case 'i':
	  case 'c':
	  case 'l':
	  case 'p':
	    break;
	  default:
	    failed = 1;
	    fprintf(stderr,
		    "unexpected character 0x%02x `%c' in %s: count %d\n",
		    *fmt, *fmt, ofmt, count);
	  }
}

int
main(int argc, char * argv[])
{
	extern char *optarg;
	extern int optind;

	int opt;

	struct sigaction act;
	struct sigaltstack ss;

	while ((opt = getopt(argc, argv, "abcfi")) != -1) {
		switch (opt) {
		case 'a':
			/* use sigaltstack */
			altstack = 1;
			break;
		case 'b':
			/* call outside of sig_handler */
			badcall = 1;
			break;
		case 'c':
			/* force error by munging sigcontext */
			clobbercall = 1;
			break;
		case 'f':
			/* don't use sigreturn */
			fallthru = 1;
			break;
		case 'i':
			/* call sigreturn indirectly */
			indirect = 1;
			break;
		}
	}

	/* make sure there is no other cruft left on the command line */
	if (optind != argc)
		usage("unknown argument -- %s", argv[ optind ]);

	if (altstack) {
		if ((ss.ss_sp = malloc(SIGSTKSZ)) == NULL)
			errx(1, "ss_sp malloc");

		ss.ss_size = SIGSTKSZ;
		ss.ss_flags = 0;
		if (sigaltstack(&ss,0) == -1)
			err(1, "sigaltstack");
	}

	sigfillset(&act.sa_mask);
	act.sa_sigaction = sig_handler;
	act.sa_flags = SA_RESTART;
	if (altstack)
		act.sa_flags |= SA_ONSTACK;
	sigaction(SIGALRM, &act, NULL);

	ualarm(10000, 10000);

	while (count < MAX_INTERRUPTS)
		test2("iclp");

	return failed;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import the complete OpenBSD source tree (base system)
as of CTM delta 3496 (roughly 1200 UTC today) into the
vendor branch.
Attention: this is a big update. Don't even try to
build this system, OpenBSD 3.4-beta, yet on your own.
@
text
@d2 1
a2 1
 * $OpenBSD: sigret.c,v 1.5 2003/07/31 21:48:04 deraadt Exp $
d67 1
a67 1
static void
d73 1
a73 1
static void
d93 1
a93 1
static void
@


head	1.2;
access;
symbols
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.07.18.12.28.37;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.48.09;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.48.09;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.05.16.08.17.45;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke regression tests

noone actually uses them (I've run them about half a dozen times only),
some of the tests (eg. everything PF) are broken, some of the code is
broken... and the adventurous are invited to use CVS and fix them,
maybe on a tagged branch.
@
text
@== basic ones
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host ::1 serv http
ai1: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv www
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host 127.0.0.1 serv http
ai1: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv www
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host localhost serv http
ai1: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv www cname "localhost"
ai2: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv www cname "localhost"
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host ::1 serv tftp
ai1: flags 0x2 family 24 socktype 2 protocol 17 addrlen 28 host ::1 serv 69
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host 127.0.0.1 serv tftp
ai1: flags 0x2 family 2 socktype 2 protocol 17 addrlen 16 host 127.0.0.1 serv 69
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host localhost serv tftp
ai1: flags 0x2 family 24 socktype 2 protocol 17 addrlen 28 host ::1 serv 69 cname "localhost"
ai2: flags 0x2 family 2 socktype 2 protocol 17 addrlen 16 host 127.0.0.1 serv 69 cname "localhost"
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host ::1 serv echo
ai1: flags 0x2 family 24 socktype 2 protocol 17 addrlen 28 host ::1 serv echo
ai2: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv echo
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host 127.0.0.1 serv echo
ai1: flags 0x2 family 2 socktype 2 protocol 17 addrlen 16 host 127.0.0.1 serv echo
ai2: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv echo
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host localhost serv echo
ai1: flags 0x2 family 24 socktype 2 protocol 17 addrlen 28 host ::1 serv echo cname "localhost"
ai2: flags 0x2 family 2 socktype 2 protocol 17 addrlen 16 host 127.0.0.1 serv echo cname "localhost"
ai3: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv echo cname "localhost"
ai4: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv echo cname "localhost"

== specific address family
arg: flags 0x2 family 2 socktype 0 protocol 0 addrlen 0 host localhost serv http
ai1: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv www cname "localhost"
arg: flags 0x2 family 24 socktype 0 protocol 0 addrlen 0 host localhost serv http
ai1: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv www cname "localhost"

== empty hostname
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host (empty) serv http
ai1: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv www
ai2: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv www
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host (empty) serv echo
ai1: flags 0x2 family 24 socktype 2 protocol 17 addrlen 28 host ::1 serv echo
ai2: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv echo
ai3: flags 0x2 family 2 socktype 2 protocol 17 addrlen 16 host 127.0.0.1 serv echo
ai4: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv echo
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host (empty) serv tftp
ai1: flags 0x2 family 24 socktype 2 protocol 17 addrlen 28 host ::1 serv 69
ai2: flags 0x2 family 2 socktype 2 protocol 17 addrlen 16 host 127.0.0.1 serv 69
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host (empty) serv 80
service not supported for ai_socktype
arg: flags 0x3 family 0 socktype 0 protocol 0 addrlen 0 host (empty) serv http
ai1: flags 0x3 family 24 socktype 1 protocol 6 addrlen 28 host :: serv www
ai2: flags 0x3 family 2 socktype 1 protocol 6 addrlen 16 host 0.0.0.0 serv www
arg: flags 0x3 family 0 socktype 0 protocol 0 addrlen 0 host (empty) serv echo
ai1: flags 0x3 family 24 socktype 2 protocol 17 addrlen 28 host :: serv echo
ai2: flags 0x3 family 24 socktype 1 protocol 6 addrlen 28 host :: serv echo
ai3: flags 0x3 family 2 socktype 2 protocol 17 addrlen 16 host 0.0.0.0 serv echo
ai4: flags 0x3 family 2 socktype 1 protocol 6 addrlen 16 host 0.0.0.0 serv echo
arg: flags 0x3 family 0 socktype 0 protocol 0 addrlen 0 host (empty) serv tftp
ai1: flags 0x3 family 24 socktype 2 protocol 17 addrlen 28 host :: serv 69
ai2: flags 0x3 family 2 socktype 2 protocol 17 addrlen 16 host 0.0.0.0 serv 69
arg: flags 0x3 family 0 socktype 0 protocol 0 addrlen 0 host (empty) serv 80
service not supported for ai_socktype
arg: flags 0x2 family 0 socktype 1 protocol 0 addrlen 0 host (empty) serv 80
ai1: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv www
ai2: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv www
arg: flags 0x2 family 0 socktype 2 protocol 0 addrlen 0 host (empty) serv 80
ai1: flags 0x2 family 24 socktype 2 protocol 17 addrlen 28 host ::1 serv www
ai2: flags 0x2 family 2 socktype 2 protocol 17 addrlen 16 host 127.0.0.1 serv www

== empty servname
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host ::1 serv (empty)
ai1: flags 0x2 family 24 socktype 2 protocol 17 addrlen 28 host ::1 serv 0
ai2: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv 0
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host 127.0.0.1 serv (empty)
ai1: flags 0x2 family 2 socktype 2 protocol 17 addrlen 16 host 127.0.0.1 serv 0
ai2: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv 0
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host localhost serv (empty)
ai1: flags 0x2 family 24 socktype 2 protocol 17 addrlen 28 host ::1 serv 0 cname "localhost"
ai2: flags 0x2 family 2 socktype 2 protocol 17 addrlen 16 host 127.0.0.1 serv 0 cname "localhost"
ai3: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv 0 cname "localhost"
ai4: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv 0 cname "localhost"
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host (empty) serv (empty)
name or service is not known

== sock_raw
arg: flags 0x2 family 0 socktype 3 protocol 0 addrlen 0 host localhost serv (empty)
ai1: flags 0x2 family 24 socktype 3 protocol 0 addrlen 28 host ::1 serv 0 cname "localhost"
ai2: flags 0x2 family 2 socktype 3 protocol 0 addrlen 16 host 127.0.0.1 serv 0 cname "localhost"
arg: flags 0x2 family 0 socktype 3 protocol 59 addrlen 0 host localhost serv (empty)
ai1: flags 0x2 family 24 socktype 3 protocol 59 addrlen 28 host ::1 serv 0 cname "localhost"
ai2: flags 0x2 family 2 socktype 3 protocol 59 addrlen 16 host 127.0.0.1 serv 0 cname "localhost"
arg: flags 0x2 family 0 socktype 3 protocol 59 addrlen 0 host localhost serv 80
service not supported for ai_socktype
arg: flags 0x2 family 0 socktype 3 protocol 59 addrlen 0 host localhost serv www
service not supported for ai_socktype
arg: flags 0x2 family 0 socktype 3 protocol 59 addrlen 0 host ::1 serv (empty)
ai1: flags 0x2 family 24 socktype 3 protocol 59 addrlen 28 host ::1 serv 0

== unsupported family
arg: flags 0x2 family 99 socktype 0 protocol 0 addrlen 0 host localhost serv (empty)
ai_family not supported

== the following items are specified in jinmei scopeaddr format doc.
arg: flags 0x2 family 0 socktype 0 protocol 0 addrlen 0 host fe80::1%lo0 serv http
ai1: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host fe80::1%lo0 serv www

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d7 2
a8 2
ai1: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv www
ai2: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv www
d14 2
a15 2
ai1: flags 0x2 family 24 socktype 2 protocol 17 addrlen 28 host ::1 serv 69
ai2: flags 0x2 family 2 socktype 2 protocol 17 addrlen 16 host 127.0.0.1 serv 69
d23 4
a26 4
ai1: flags 0x2 family 24 socktype 2 protocol 17 addrlen 28 host ::1 serv echo
ai2: flags 0x2 family 2 socktype 2 protocol 17 addrlen 16 host 127.0.0.1 serv echo
ai3: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv echo
ai4: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv echo
d30 1
a30 1
ai1: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv www
d32 1
a32 1
ai1: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv www
d76 4
a79 4
ai1: flags 0x2 family 24 socktype 2 protocol 17 addrlen 28 host ::1 serv 0
ai2: flags 0x2 family 2 socktype 2 protocol 17 addrlen 16 host 127.0.0.1 serv 0
ai3: flags 0x2 family 24 socktype 1 protocol 6 addrlen 28 host ::1 serv 0
ai4: flags 0x2 family 2 socktype 1 protocol 6 addrlen 16 host 127.0.0.1 serv 0
d85 2
a86 2
ai1: flags 0x2 family 24 socktype 3 protocol 0 addrlen 28 host ::1 serv 0
ai2: flags 0x2 family 2 socktype 3 protocol 0 addrlen 16 host 127.0.0.1 serv 0
d88 2
a89 2
ai1: flags 0x2 family 24 socktype 3 protocol 59 addrlen 28 host ::1 serv 0
ai2: flags 0x2 family 2 socktype 3 protocol 59 addrlen 16 host 127.0.0.1 serv 0
@


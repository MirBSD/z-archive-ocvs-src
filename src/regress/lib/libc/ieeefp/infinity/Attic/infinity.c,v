head	1.2;
access;
symbols
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.07.18.12.28.40;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.01.26.18.25.45;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.01.26.18.25.45;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke regression tests

noone actually uses them (I've run them about half a dozen times only),
some of the tests (eg. everything PF) are broken, some of the code is
broken... and the adventurous are invited to use CVS and fix them,
maybe on a tagged branch.
@
text
@/*	$OpenBSD: infinity.c,v 1.2 2004/01/16 19:34:37 miod Exp $	*/
/*
 * Written by Miodrag Vallat, 2004 - Public Domain
 * Inspired from Perl's t/op/arith test #134
 */

#include <math.h>
#include <signal.h>
#include <unistd.h>

void
sigfpe(int signum)
{
	/* looks like we don't handle fp overflow correctly... */
	_exit(1);
}

int
main(int argc, char *argv[])
{
	int opt;
	double d, two;
	int i;
	char method = 'a';

	while ((opt = getopt(argc, argv, "amnp")) != -1)
		method = (char)opt;

	signal(SIGFPE, sigfpe);

	switch (method) {
	case 'a':
		/* try to produce +Inf through addition */
		d = 1.0;
		for (i = 2000; i != 0; i--) {
			d = d + d;
		}
		/* result should be _positive_ infinity */
		if (!isinf(d) || copysign(1.0, d) < 0.0)
			return (1);
		break;
	case 'm':
		/* try to produce +Inf through multiplication */
		d = 1.0;
		two = 2.0;
		for (i = 2000; i != 0; i--) {
			d = d * two;
		}
		/* result should be _positive_ infinity */
		if (!isinf(d) || copysign(1.0, d) < 0.0)
			return (1);
		break;
	case 'n':
		/* try to produce -Inf through subtraction */
		d = -1.0;
		for (i = 2000; i != 0; i--) {
			d = d + d;
		}
		/* result should be _negative_ infinity */
		if (!isinf(d) || copysign(1.0, d) > 0.0)
			return (1);
		break;
	case 'p':
		/* try to produce -Inf through multiplication */
		d = -1.0;
		two = 2.0;
		for (i = 2000; i != 0; i--) {
			d = d * two;
		}
		/* result should be _negative_ infinity */
		if (!isinf(d) || copysign(1.0, d) > 0.0)
			return (1);
		break;
	}

	return (0);
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD as of today again (seems pretty stable, I hope)

Prominent changes: more bgpd, tcpmd5; tcpdump/isakmpd fixes
@
text
@@

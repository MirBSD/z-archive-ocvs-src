head	1.2;
access;
symbols
	MIRBSD_7quater:1.1.1.3
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.3
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.07.18.12.29.22;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.48.09;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.48.09;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.17.29.57;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.19.12.41.39;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke regression tests

noone actually uses them (I've run them about half a dozen times only),
some of the tests (eg. everything PF) are broken, some of the code is
broken... and the adventurous are invited to use CVS and fix them,
maybe on a tagged branch.
@
text
@#	$OpenBSD: Makefile,v 1.10 2002/09/26 11:39:50 markus Exp $

CLEANFILES+= testdsa.key testdsa.pem rsakey.pem rsacert.pem dsa512.pem

REGRESS_TARGETS=ossltests ssl-enc ssl-dsa ssl-rsa 

OPENSSL=/usr/sbin/openssl
CLEAR1=p
CIPHER=cipher
CLEAR2=clear

BNTEST=		bntest
ECTEST=		ectest
EXPTEST=	exptest
SHATEST=	shatest
SHA1TEST=	sha1test
RMDTEST=	rmdtest
MD2TEST=	md2test
MD4TEST=	md4test
MD5TEST=	md5test
HMACTEST=	hmactest
RC2TEST=	rc2test
RC4TEST=	rc4test
BFTEST=		bftest
CASTTEST=	casttest
DESTEST=	destest
RANDTEST=	randtest
DHTEST=		dhtest
DSATEST=	dsatest
RSATEST=	rsa_test
ENGINETEST=	enginetest
EVPTEST=	evp_test


CLEANFILES+=	$(BNTEST).c $(ECTEST).c $(HMACTEST).c \
	$(SHATEST).c $(SHA1TEST).c $(MDC2TEST).c $(RMDTEST).c \
	$(RANDTEST).c $(DHTEST).c $(ENGINETEST).c \
	$(CASTTEST).c $(EXPTEST).c $(DSATEST).c $(RSATEST).c \
	$(EVPTEST).c $(DESTEST).c ${RC2TEST}.c ${RC4TEST}.c ${MD2TEST}.c \
	${MD4TEST}.c ${MD5TEST}.c

CLEANFILES+=	$(BNTEST) $(ECTEST) $(HMACTEST) \
	$(SHATEST) $(SHA1TEST) $(MDC2TEST) $(RMDTEST) \
	$(RANDTEST) $(DHTEST) $(ENGINETEST) \
	$(CASTTEST) $(EXPTEST) $(DSATEST) $(RSATEST) \
	$(EVPTEST) $(DESTEST) ${RC2TEST} ${RC4TEST} ${MD2TEST} ${MD4TEST} \
	${MD5TEST}\

CLEANFILES+= ${BNTEST}.out

OTESTS= ${ENGINETEST}  \
	${EXPTEST} ${RANDTEST} \
	${MD2TEST} ${MD4TEST} ${MD5TEST} \
	${SHATEST} ${SHA1TEST} ${HMACTEST} ${RMDTEST} ${MDC2TEST} \
	${CASTTEST} ${RC2TEST} ${RC4TEST} ${DESTEST} \
	${DHTEST} ${DSATEST} ${RSATEST} \
	${ECTEST}

${CLEAR1}: openssl.cnf
	cat ${.CURDIR}/openssl.cnf > ${CLEAR1}

CLEANFILES+=${CLEAR1}

ENCTARGETS=rc4 des-cfb des-ede-cfb des-ede3-cfb des-ofb des-ede-ofb des-ede3-ofb
ENCTARGETS+=des-ecb des-ede des-ede3 desx des-cbc des-ede-cbc des-ede3-cbc
ENCTARGETS+=rc2-ecb rc2-cfb rc2-ofb rc2-cbc bf-ecb bf-cfb bf-ofb bf-cbc rc4
ENCTARGETS+=cast5-ecb cast5-cfb cast5-ofb cast5-cbc

.for ENC in ${ENCTARGETS}
${CIPHER}.${ENC}: ${CLEAR1}
	${OPENSSL} ${ENC} -bufsize 113 -e -k test < ${CLEAR1} > ${CIPHER}.${ENC}
${CIPHER}.${ENC}.b64: ${CLEAR1}
	${OPENSSL} ${ENC} -bufsize 113 -a -e -k test < ${CLEAR1} > ${CIPHER}.${ENC}.b64

${CLEAR2}.${ENC}: ${CIPHER}.${ENC}
	${OPENSSL} ${ENC} -bufsize 157 -d -k test < ${CIPHER}.${ENC} > ${CLEAR2}.${ENC}
${CLEAR2}.${ENC}.b64: ${CIPHER}.${ENC}.b64
	${OPENSSL} ${ENC} -bufsize 157 -a -d -k test < ${CIPHER}.${ENC}.b64 > ${CLEAR2}.${ENC}.b64

ssl-enc-${ENC}: ${CLEAR1} ${CLEAR2}.${ENC}
	cmp ${CLEAR1} ${CLEAR2}.${ENC}
ssl-enc-${ENC}.b64: ${CLEAR1} ${CLEAR2}.${ENC}.b64
	cmp ${CLEAR1} ${CLEAR2}.${ENC}.b64

REGRESS_TARGETS+=ssl-enc-${ENC} ssl-enc-${ENC}.b64
CLEANFILES+=${CIPHER}.${ENC} ${CIPHER}.${ENC}.b64 ${CLEAR2}.${ENC} ${CLEAR2}.${ENC}.b64 e_os.h .rnd
.endfor

ssl-enc:
	sh ${.CURDIR}/testenc.sh ${.OBJDIR} ${.CURDIR}
ssl-dsa:
	sh ${.CURDIR}/testdsa.sh ${.OBJDIR} ${.CURDIR}
ssl-rsa:
	sh ${.CURDIR}/testrsa.sh ${.OBJDIR} ${.CURDIR}

e_os.h: ${.CURDIR}/../../../lib/libssl/src/e_os.h
	cp ${.CURDIR}/../../../lib/libssl/src/e_os.h ${.OBJDIR}

ossltests: ${OTESTS} ${BNTEST} ${EVPTEST}
	@@echo running ${BNTEST}, check ${.OBJDIR}/${BNTEST}.out if this fails.
	${.OBJDIR}/${BNTEST} > ${.OBJDIR}/${BNTEST}.out 2>&1
.for OT in ${OTESTS}
	@@echo running ${OT}
	${.OBJDIR}/${OT} 
.endfor
	@@echo running ${EVPTEST}
	${.OBJDIR}/${EVPTEST} ${.CURDIR}/../../../lib/libssl/src/crypto/evp/evptests.txt

$(BNTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/bn/bntest.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/bn/bntest.c ${.OBJDIR}

$(BNTEST): ${BNTEST}.c e_os.h
	cc -O -o $(BNTEST) ${BNTEST}.c -lcrypto

$(EXPTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/bn/exptest.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/bn/exptest.c ${.OBJDIR}

$(EXPTEST): ${EXPTEST}.c e_os.h
	cc -O -o $(EXPTEST) ${EXPTEST}.c -lcrypto

$(ECTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/ec/ectest.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/ec/ectest.c ${.OBJDIR}

$(ECTEST): ${ECTEST}.c e_os.h
	cc -O -o $(ECTEST) ${ECTEST}.c -lcrypto

$(EVPTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/evp/${EVPTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/evp/${EVPTEST}.c ${.OBJDIR}
$(EVPTEST): ${EVPTEST}.c e_os.h
	cc -O -o $(EVPTEST) ${EVPTEST}.c -lcrypto

$(SHATEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/sha/${SHATEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/sha/${SHATEST}.c ${.OBJDIR}
$(SHATEST): ${SHATEST}.c e_os.h
	cc -O -o $(SHATEST) ${SHATEST}.c -lcrypto

$(SHA1TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/sha/${SHA1TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/sha/${SHA1TEST}.c ${.OBJDIR}
$(SHA1TEST): ${SHA1TEST}.c e_os.h
	cc -O -o $(SHA1TEST) ${SHA1TEST}.c -lcrypto

$(RANDTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/rand/${RANDTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/rand/${RANDTEST}.c ${.OBJDIR}
$(RANDTEST): ${RANDTEST}.c e_os.h
	cc -O -o $(RANDTEST) ${RANDTEST}.c -lcrypto

$(RMDTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/ripemd/${RMDTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/ripemd/${RMDTEST}.c ${.OBJDIR}
$(RMDTEST): ${RMDTEST}.c e_os.h
	cc -O -o $(RMDTEST) ${RMDTEST}.c -lcrypto

$(DHTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/dh/${DHTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/dh/${DHTEST}.c ${.OBJDIR}

$(DHTEST): ${DHTEST}.c e_os.h
	cc -O -o $(DHTEST) ${DHTEST}.c -lcrypto

$(ENGINETEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/engine/${ENGINETEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/engine/${ENGINETEST}.c ${.OBJDIR}

$(ENGINETEST): ${ENGINETEST}.c e_os.h
	cc -O -o $(ENGINETEST) ${ENGINETEST}.c -lcrypto

$(CASTTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/cast/${CASTTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/cast/${CASTTEST}.c ${.OBJDIR}

$(CASTTEST): ${CASTTEST}.c e_os.h
	cc -O -o $(CASTTEST) ${CASTTEST}.c -lcrypto

$(RSATEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/rsa/${RSATEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/rsa/${RSATEST}.c ${.OBJDIR}

$(RSATEST): ${RSATEST}.c e_os.h
	cc -O -o $(RSATEST) ${RSATEST}.c -lcrypto

$(DSATEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/dsa/${DSATEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/dsa/${DSATEST}.c ${.OBJDIR}

$(DSATEST): ${DSATEST}.c e_os.h
	cc -O -o $(DSATEST) ${DSATEST}.c -lcrypto


$(HMACTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/hmac/${HMACTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/hmac/${HMACTEST}.c ${.OBJDIR}

$(HMACTEST): ${HMACTEST}.c e_os.h
	cc -O -o $(HMACTEST) ${HMACTEST}.c -lcrypto

$(DESTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/des/${DESTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/des/${DESTEST}.c ${.OBJDIR}

$(DESTEST): ${DESTEST}.c e_os.h
	cc -O -o $(DESTEST) ${DESTEST}.c -lcrypto

$(BFTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/bf/${BFTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/bf/${BFTEST}.c ${.OBJDIR}

$(BFTEST): ${BFTEST}.c e_os.h
	cc -O -o $(BFTEST) ${BFTEST}.c -lcrypto

$(RC2TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/rc2/${RC2TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/rc2/${RC2TEST}.c ${.OBJDIR}

$(RC2TEST): ${RC2TEST}.c e_os.h
	cc -O -o $(RC2TEST) ${RC2TEST}.c -lcrypto

$(RC4TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/rc4/${RC4TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/rc4/${RC4TEST}.c ${.OBJDIR}

$(RC4TEST): ${RC4TEST}.c e_os.h
	cc -O -o $(RC4TEST) ${RC4TEST}.c -lcrypto

$(MD2TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/md2/${MD2TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/md2/${MD2TEST}.c ${.OBJDIR}

$(MD2TEST): ${MD2TEST}.c e_os.h
	cc -O -o $(MD2TEST) ${MD2TEST}.c -lcrypto

$(MD4TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/md4/${MD4TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/md4/${MD4TEST}.c ${.OBJDIR}

$(MD4TEST): ${MD4TEST}.c e_os.h
	cc -O -o $(MD4TEST) ${MD4TEST}.c -lcrypto

$(MD5TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/md5/${MD5TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/md5/${MD5TEST}.c ${.OBJDIR}

$(MD5TEST): ${MD5TEST}.c e_os.h
	cc -O -o $(MD5TEST) ${MD5TEST}.c -lcrypto

.include <bsd.regress.mk>
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2003/05/24 08:37:14 markus Exp $
a33 3
SSLDIR=	${.CURDIR}/../../../lib/libssl/src/crypto

CFLAGS= -O -I${SSLDIR} -I${SSLDIR}/..
d86 1
a86 1
CLEANFILES+=${CIPHER}.${ENC} ${CIPHER}.${ENC}.b64 ${CLEAR2}.${ENC} ${CLEAR2}.${ENC}.b64 .rnd
d96 3
d107 1
a107 1
	${.OBJDIR}/${EVPTEST} ${SSLDIR}/evp/evptests.txt
d109 2
a110 2
$(BNTEST).c: ${SSLDIR}/bn/bntest.c
	cp ${SSLDIR}/bn/bntest.c ${.OBJDIR}
d112 2
a113 2
$(BNTEST): ${BNTEST}.c
	cc ${CFLAGS} -o $(BNTEST) ${BNTEST}.c -lcrypto
d115 2
a116 2
$(EXPTEST).c: ${SSLDIR}/bn/exptest.c
	cp ${SSLDIR}/bn/exptest.c ${.OBJDIR}
d118 2
a119 2
$(EXPTEST): ${EXPTEST}.c
	cc ${CFLAGS} -o $(EXPTEST) ${EXPTEST}.c -lcrypto
d121 2
a122 2
$(ECTEST).c: ${SSLDIR}/ec/ectest.c
	cp ${SSLDIR}/ec/ectest.c ${.OBJDIR}
d124 2
a125 2
$(ECTEST): ${ECTEST}.c
	cc ${CFLAGS} -o $(ECTEST) ${ECTEST}.c -lcrypto
d127 4
a130 4
$(EVPTEST).c: ${SSLDIR}/evp/${EVPTEST}.c
	cp ${SSLDIR}/evp/${EVPTEST}.c ${.OBJDIR}
$(EVPTEST): ${EVPTEST}.c
	cc ${CFLAGS} -o $(EVPTEST) ${EVPTEST}.c -lcrypto
d132 4
a135 4
$(SHATEST).c: ${SSLDIR}/sha/${SHATEST}.c
	cp ${SSLDIR}/sha/${SHATEST}.c ${.OBJDIR}
$(SHATEST): ${SHATEST}.c
	cc ${CFLAGS} -o $(SHATEST) ${SHATEST}.c -lcrypto
d137 4
a140 4
$(SHA1TEST).c: ${SSLDIR}/sha/${SHA1TEST}.c
	cp ${SSLDIR}/sha/${SHA1TEST}.c ${.OBJDIR}
$(SHA1TEST): ${SHA1TEST}.c
	cc ${CFLAGS} -o $(SHA1TEST) ${SHA1TEST}.c -lcrypto
d142 4
a145 4
$(RANDTEST).c: ${SSLDIR}/rand/${RANDTEST}.c
	cp ${SSLDIR}/rand/${RANDTEST}.c ${.OBJDIR}
$(RANDTEST): ${RANDTEST}.c
	cc ${CFLAGS} -o $(RANDTEST) ${RANDTEST}.c -lcrypto
d147 4
a150 4
$(RMDTEST).c: ${SSLDIR}/ripemd/${RMDTEST}.c
	cp ${SSLDIR}/ripemd/${RMDTEST}.c ${.OBJDIR}
$(RMDTEST): ${RMDTEST}.c
	cc ${CFLAGS} -o $(RMDTEST) ${RMDTEST}.c -lcrypto
d152 2
a153 2
$(DHTEST).c: ${SSLDIR}/dh/${DHTEST}.c
	cp ${SSLDIR}/dh/${DHTEST}.c ${.OBJDIR}
d155 2
a156 2
$(DHTEST): ${DHTEST}.c
	cc ${CFLAGS} -o $(DHTEST) ${DHTEST}.c -lcrypto
d158 2
a159 2
$(ENGINETEST).c: ${SSLDIR}/engine/${ENGINETEST}.c
	cp ${SSLDIR}/engine/${ENGINETEST}.c ${.OBJDIR}
d161 2
a162 2
$(ENGINETEST): ${ENGINETEST}.c
	cc ${CFLAGS} -o $(ENGINETEST) ${ENGINETEST}.c -lcrypto
d164 2
a165 2
$(CASTTEST).c: ${SSLDIR}/cast/${CASTTEST}.c
	cp ${SSLDIR}/cast/${CASTTEST}.c ${.OBJDIR}
d167 2
a168 2
$(CASTTEST): ${CASTTEST}.c
	cc ${CFLAGS} -o $(CASTTEST) ${CASTTEST}.c -lcrypto
d170 2
a171 2
$(RSATEST).c: ${SSLDIR}/rsa/${RSATEST}.c
	cp ${SSLDIR}/rsa/${RSATEST}.c ${.OBJDIR}
d173 2
a174 2
$(RSATEST): ${RSATEST}.c
	cc ${CFLAGS} -o $(RSATEST) ${RSATEST}.c -lcrypto
d176 2
a177 2
$(DSATEST).c: ${SSLDIR}/dsa/${DSATEST}.c
	cp ${SSLDIR}/dsa/${DSATEST}.c ${.OBJDIR}
d179 2
a180 2
$(DSATEST): ${DSATEST}.c
	cc ${CFLAGS} -o $(DSATEST) ${DSATEST}.c -lcrypto
d183 2
a184 2
$(HMACTEST).c: ${SSLDIR}/hmac/${HMACTEST}.c
	cp ${SSLDIR}/hmac/${HMACTEST}.c ${.OBJDIR}
d186 2
a187 2
$(HMACTEST): ${HMACTEST}.c
	cc ${CFLAGS} -o $(HMACTEST) ${HMACTEST}.c -lcrypto
d189 2
a190 2
$(DESTEST).c: ${SSLDIR}/des/${DESTEST}.c
	cp ${SSLDIR}/des/${DESTEST}.c ${.OBJDIR}
d192 2
a193 2
$(DESTEST): ${DESTEST}.c
	cc ${CFLAGS} -o $(DESTEST) ${DESTEST}.c -lcrypto
d195 2
a196 2
$(BFTEST).c: ${SSLDIR}/bf/${BFTEST}.c
	cp ${SSLDIR}/bf/${BFTEST}.c ${.OBJDIR}
d198 2
a199 2
$(BFTEST): ${BFTEST}.c
	cc ${CFLAGS} -o $(BFTEST) ${BFTEST}.c -lcrypto
d201 2
a202 2
$(RC2TEST).c: ${SSLDIR}/rc2/${RC2TEST}.c
	cp ${SSLDIR}/rc2/${RC2TEST}.c ${.OBJDIR}
d204 2
a205 2
$(RC2TEST): ${RC2TEST}.c
	cc ${CFLAGS} -o $(RC2TEST) ${RC2TEST}.c -lcrypto
d207 2
a208 2
$(RC4TEST).c: ${SSLDIR}/rc4/${RC4TEST}.c
	cp ${SSLDIR}/rc4/${RC4TEST}.c ${.OBJDIR}
d210 2
a211 2
$(RC4TEST): ${RC4TEST}.c
	cc ${CFLAGS} -o $(RC4TEST) ${RC4TEST}.c -lcrypto
d213 2
a214 2
$(MD2TEST).c: ${SSLDIR}/md2/${MD2TEST}.c
	cp ${SSLDIR}/md2/${MD2TEST}.c ${.OBJDIR}
d216 2
a217 2
$(MD2TEST): ${MD2TEST}.c
	cc ${CFLAGS} -o $(MD2TEST) ${MD2TEST}.c -lcrypto
d219 2
a220 2
$(MD4TEST).c: ${SSLDIR}/md4/${MD4TEST}.c
	cp ${SSLDIR}/md4/${MD4TEST}.c ${.OBJDIR}
d222 2
a223 2
$(MD4TEST): ${MD4TEST}.c
	cc ${CFLAGS} -o $(MD4TEST) ${MD4TEST}.c -lcrypto
d225 2
a226 2
$(MD5TEST).c: ${SSLDIR}/md5/${MD5TEST}.c
	cp ${SSLDIR}/md5/${MD5TEST}.c ${.OBJDIR}
d228 2
a229 2
$(MD5TEST): ${MD5TEST}.c
	cc ${CFLAGS} -o $(MD5TEST) ${MD5TEST}.c -lcrypto
@


1.1.1.3
log
@sync with OpenBSD, this gives us a fair amount of fixes
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2003/06/16 03:15:14 mickey Exp $
d43 1
a43 1
	${MD4TEST}.c ${MD5TEST}.c ${BFTEST}.c
d50 1
a50 1
	${MD5TEST} ${BFTEST}
d58 1
a58 1
	${CASTTEST} ${BFTEST} ${RC2TEST} ${RC4TEST} ${DESTEST} \
@



head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.12.23.14.53.34;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.12.22.20.31.05;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.12.22.20.31.05;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* merge (ie, remove) OpenBSD
* merge _some_ of the OpenBSD diffs into libiberty headers (not code)
* copy idea of espie@@openbsd to replace libiberty-md5 by libc-md5,
  but cast more in the header and remove md5.c
* while here - getopt is in libc, too
* bump major of libiberty
* libiberty testsuite passes all but 3 java tests
@
text
@/*

@@deftypefn Supplemental int waitpid (int @@var{pid}, int *@@var{status}, int)

This is a wrapper around the @@code{wait} function.  Any ``special''
values of @@var{pid} depend on your implementation of @@code{wait}, as
does the return value.  The third argument is unused in @@libib{}.

@@end deftypefn

*/

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

/* On some systems (such as WindISS), you must include <sys/types.h>
   to get the definition of "pid_t" before you include <sys/wait.h>.  */
#include <sys/types.h>

#ifdef HAVE_SYS_WAIT_H
#include <sys/wait.h>
#endif

pid_t
waitpid (pid, stat_loc, options)
     pid_t pid;
     int *stat_loc, options;
{
  for (;;)
    {
      int wpid = wait(stat_loc);
      if (wpid == pid || wpid == -1)
	return wpid;
    }
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@@

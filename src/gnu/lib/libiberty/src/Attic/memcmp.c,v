head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.2
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	cvs-200312222040:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.12.23.14.53.18;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.12.22.20.31.02;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.12.22.20.31.02;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.01.02.17.16.58;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* merge (ie, remove) OpenBSD
* merge _some_ of the OpenBSD diffs into libiberty headers (not code)
* copy idea of espie@@openbsd to replace libiberty-md5 by libc-md5,
  but cast more in the header and remove md5.c
* while here - getopt is in libc, too
* bump major of libiberty
* libiberty testsuite passes all but 3 java tests
@
text
@/* memcmp -- compare two memory regions.
   This function is in the public domain.  */

/*

@@deftypefn Supplemental int memcmp (const void *@@var{x}, const void *@@var{y}, size_t @@var{count})

Compares the first @@var{count} bytes of two areas of memory.  Returns
zero if they are the same, a value less than zero if @@var{x} is
lexically less than @@var{y}, or a value greater than zero if @@var{x}
is lexically greater than @@var{y}.  Note that lexical order is determined
as if comparing unsigned char arrays.

@@end deftypefn

*/

#include <ansidecl.h>
#ifdef __STDC__
#include <stddef.h>
#else
#define size_t unsigned long
#endif

int
DEFUN(memcmp, (str1, str2, count),
      const PTR str1 AND const PTR str2 AND size_t count)
{
  register const unsigned char *s1 = (const unsigned char*)str1;
  register const unsigned char *s2 = (const unsigned char*)str2;

  while (count-- > 0)
    {
      if (*s1++ != *s2++)
	  return s1[-1] < s2[-1] ? -1 : 1;
    }
  return 0;
}

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@@


1.1.1.2
log
@Import OpenBSD again, for various reasons.
@
text
@d19 1
a19 1
#ifdef ANSI_PROTOTYPES
d26 2
a27 4
memcmp (str1, str2, count)
     const PTR str1;
     const PTR str2;
     size_t count;
@


head	1.3;
access;
symbols
	MIRBSD_7quater:1.1.2.1
	MIRBSD_7_ALPHA:1.1.2.1.0.6
	MIRBSD_7:1.1.2.1.0.4
	MIRBSD_7ter:1.1.2.1
	MIRBSD_7_DEV:1.1.2.1.0.2
	binutils_2_14:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@ * @;


1.3
date	2004.08.09.19.35.21;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2003.11.29.23.26.43;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.23.15.13.21;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.09.23.15.13.21;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update; new location; new shlib version (2.0)
old hash table functions are now "in"
@
text
@/* calloc -- allocate memory which has been initialized to zero.
   This function is in the public domain. */

/*

@@deftypefn Supplemental void* calloc (size_t @@var{nelem}, size_t @@var{elsize})

Uses @@code{malloc} to allocate storage for @@var{nelem} objects of
@@var{elsize} bytes each, then zeros the memory.

@@end deftypefn

*/
 
#include "ansidecl.h"
#include "libiberty.h"
 
#ifdef ANSI_PROTOTYPES
#include <stddef.h>
#else
#define size_t unsigned long
#endif

/* For systems with larger pointers than ints, this must be declared.  */
PTR malloc PARAMS ((size_t));

PTR
calloc (nelem, elsize)
  size_t nelem, elsize;
{
  register PTR ptr;  

  if (nelem == 0 || elsize == 0)
    nelem = elsize = 1;
  
  ptr = malloc (nelem * elsize);
  if (ptr) bzero (ptr, nelem * elsize);
  
  return ptr;
}
@


1.2
log
@make libiberty string-function free and nuke unused files
@
text
@@


1.1
log
@Initial revision
@
text
@d16 2
a25 1
void bzero PARAMS ((PTR, size_t));
@


1.1.2.1
log
@Import GNU libiberty (LGPL licenced) from the FSF binutils 2.14 sources
via the vendor branch (to ease future updating)
@
text
@@

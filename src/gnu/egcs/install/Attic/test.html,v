head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.04.06.15.56.56;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.38.16;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.38.16;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@No need to have those here more than once.
Updated with templates from www.fsf.org:
 - COPYING
	GPL v2
 - COPYING.DOC
	GFDL v1.1
 - COPYING.LIB
	LGPL v2.1 (Lesser GPL)
 - COPYING.LIB.v2
	LGPL v2.0 (Library GPL)
 - COPYING.v1
	GPL v1
@
text
@<html>

<head>
<title>Installing GCC: Testing</title>
</head>

<body>
<h1 align="center">Installing GCC: Testing</h1>

<p><strong>Please note that this is only applicable to current development
versions of GCC and GCC 3.0 or later. GCC 2.95.x does not come with a
testsuite.</strong></p>

<p>Before you install GCC, you might wish to run the testsuite. This
step is optional and may require you to download additional software.</p>

<p>First, you must have <a href="download.html">downloaded the
testsuites</a>. The full distribution contains testsuites; only if you
downloaded the "core" compiler plus any front ends, you do not have the
testsuites.</p>

<p>Second, you must have a current version of dejagnu installed;
dejagnu 1.3 is not sufficient.  We have made dejagnu snapshots available at
<a href="ftp://gcc.gnu.org/pub/gcc/infrastructure">ftp://gcc.gnu.org/pub/gcc/infrastructure</a>
until a new version of dejagnu has been released.</p>

<p>A few targets require specific preparations:</p>

<ul>

<li>
In order to run the libio tests on targets which do not fully
support Unix/POSIX commands (e.g. Cgwin), the references to the dbz
directory may be deleted from libio/configure.in.
</li>

<li>
<p>When there is difficulty resolving paths to the files init.tcl and
runtest.exp, the following environment variables should be set
appropriately, for example:</p>

<blockquote><code>
TCL_LIBRARY = /usr/share/tcl8.0<br>
DEJAGNULIBS = /usr/share/dejagnu
</code></blockquote>

<p>On systems such as Cygwin, these paths are required to be actual
paths, not mounts or links; presumably this is due to some lack of
portability in the dejagnu code.</p>
</li>
</ul>

<p>Finally, you can run the testsuite (which may take a long time):</p>
<blockquote><code>
cd <i>objdir</i>; make -k check
</code></blockquote>

<p>The testing process will try to test as many components in the GCC
distribution as possible, including the C, C++ and Fortran compilers as
well as the C++ runtime libraries.</p>


<h2>How can I run the test suite on selected tests?</h2>

<p>As a first possibility to cut down the number of tests that are run it is
possible to use `<code>make check-gcc</code>` or `<code>make check-g++</code>`
in the gcc subdirectory of the object directory. To further cut down the
tests the following is possible:</p>

<blockquote><code>
  make check-gcc RUNTESTFLAGS="execute.exp &lt;other options&gt;"
</code></blockquote>

<p>This will run all gcc execute tests in the testsuite.</p>

<blockquote><code>
  make check-g++ RUNTESTFLAGS="old-deja.exp=9805* &lt;other options&gt;"
</code></blockquote>

<p>This will run the g++ "old-deja" tests in the testsuite where the filename
matches 9805*.</p>

<p>The *.exp files are located in the testsuite directories of the GCC
source, the most important ones being compile.exp, execute.exp, dg.exp
and old-deja.exp. To get a list of the possible *.exp files, pipe the
output of `<code>make check</code>` into a file and look at the
"<code>Running ...  .exp</code>" lines.


<h2>How to interpret test results</h2>

<p>After the testsuite has run you'll find various *.sum and *.log
files in the testsuite subdirectories. The *.log files contain a
detailed log of the compiler invocations and the corresponding
results, the *.sum files summarize the results. These summaries list
all the tests that have been run with a corresponding status code:</p>

<ul>
<li>PASS: the test passed as expected
<li>FAIL: the test unexpectedly failed
<li>XFAIL: the test failed as expected
<li>UNSUPPORTED: the test is not supported on this platform
<li>ERROR: the testsuite detected an error
<li>WARNING: the testsuite detected a possible problem
</ul>

<p> It is normal for some tests to report
unexpected failures.  At the current time our testing harness does not allow
fine grained control over whether or not a test is expected to fail.  We expect
to fix this problem in future releases.</p>


<h2>Submitting test results</h2>

<p>If you want to report the results to the GCC project, use the
<code>contrib/test_summary</code> shell script. Start it in the objdir with</p>
<blockquote><code>
<i>srcdir</i>/contrib/test_summary -p your_commentary.txt -m gcc-testresults@@gcc.gnu.org |sh
</code></blockquote>

<p>This script uses the <code>Mail</code> program to send the results, so
make sure it is in your PATH. The file your_commentary.txt is
prepended to the testsuite summary and should contain any special
remarks you have on your results or your build environment. Please
do not edit the testsuite result block or the subject line, as these
messages are automatically parsed and presented at the <a
href="http://gcc.gnu.org/testresults/">GCC testresults</a> web
page.  Here you can also gather information on how specific tests
behave on different platforms and compare them with your results. A
few failing testcases are possible even on released versions and you
should look here first if you think your results are unreasonable.</p>

</body>
</html>
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

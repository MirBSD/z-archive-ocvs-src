head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.04.06.16.22.32;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.36.22;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.36.22;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of other unneeded files *g*
g++ g77 gobjc and their testsuites
gcc texinfo documentation

gcc.1 -> pgcc.1

=> {man,info} gcc should yield gcc 3.2 documentation now
@
text
@/* info.h -- Public #include File (module.h template V1.0)
   Copyright (C) 1995 Free Software Foundation, Inc.
   Contributed by James Craig Burley.

This file is part of GNU Fortran.

GNU Fortran is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU Fortran is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Fortran; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA
02111-1307, USA.

   Owning Modules:
      info.c

   Modifications:
      30-Aug-90	 JCB  2.0
	 Extensive rewrite for new cleaner approach.
*/

/* Allow multiple inclusion to work. */

#ifndef _H_f_info
#define _H_f_info

/* Simple definitions and enumerations. */

typedef enum
  {
#define FFEINFO_BASICTYPE(KWD,LNAM,SNAM) KWD,
#include "info-b.def"
#undef FFEINFO_BASICTYPE
    FFEINFO_basictype
  } ffeinfoBasictype;

typedef enum
  {				/* If these kindtypes aren't in size order,
				   change _kindtype_max. */
    FFEINFO_kindtypeNONE,
    FFEINFO_kindtypeINTEGER1,
    FFEINFO_kindtypeINTEGER2,
    FFEINFO_kindtypeINTEGER3,
    FFEINFO_kindtypeINTEGER4,
    FFEINFO_kindtypeINTEGER5,
    FFEINFO_kindtypeINTEGER6,
    FFEINFO_kindtypeINTEGER7,
    FFEINFO_kindtypeINTEGER8,
    FFEINFO_kindtypeLOGICAL1 = 1,	/* Ok to omit, but ok to overlap. */
    FFEINFO_kindtypeLOGICAL2,
    FFEINFO_kindtypeLOGICAL3,
    FFEINFO_kindtypeLOGICAL4,
    FFEINFO_kindtypeLOGICAL5,
    FFEINFO_kindtypeLOGICAL6,
    FFEINFO_kindtypeLOGICAL7,
    FFEINFO_kindtypeLOGICAL8,
    FFEINFO_kindtypeREAL1 = 1,	/* Ok to omit, but ok to overlap. */
    FFEINFO_kindtypeREAL2,
    FFEINFO_kindtypeREAL3,
    FFEINFO_kindtypeREAL4,
    FFEINFO_kindtypeREAL5,
    FFEINFO_kindtypeREAL6,
    FFEINFO_kindtypeREAL7,
    FFEINFO_kindtypeREAL8,
    FFEINFO_kindtypeCHARACTER1 = 1,	/* Ok to omit, but ok to overlap. */
    FFEINFO_kindtypeCHARACTER2,
    FFEINFO_kindtypeCHARACTER3,
    FFEINFO_kindtypeCHARACTER4,
    FFEINFO_kindtypeCHARACTER5,
    FFEINFO_kindtypeCHARACTER6,
    FFEINFO_kindtypeCHARACTER7,
    FFEINFO_kindtypeCHARACTER8,
    FFEINFO_kindtypeANY,
    FFEINFO_kindtype
  } ffeinfoKindtype;

typedef enum
  {
#define FFEINFO_KIND(KWD,LNAM,SNAM) KWD,
#include "info-k.def"
#undef FFEINFO_KIND
    FFEINFO_kind
  } ffeinfoKind;

typedef enum
  {
#define FFEINFO_WHERE(KWD,LNAM,SNAM) KWD,
#include "info-w.def"
#undef FFEINFO_WHERE
    FFEINFO_where
  } ffeinfoWhere;

/* Typedefs. */

typedef struct _ffeinfo_ ffeinfo;
typedef char ffeinfoRank;

/* Include files needed by this one. */

#include "target.h"
#include "type.h"

/* Structure definitions. */

struct _ffeinfo_
  {
    ffeinfoBasictype basictype;
    ffeinfoKindtype kindtype;
    ffeinfoRank rank;
    ffeinfoKind kind;
    ffeinfoWhere where;
    ffetargetCharacterSize size;
  };

/* Global objects accessed by users of this module. */


/* Declare functions with prototypes. */

ffeinfoBasictype ffeinfo_basictype_combine (ffeinfoBasictype l,
					    ffeinfoBasictype r);
const char *ffeinfo_basictype_string (ffeinfoBasictype basictype);
void ffeinfo_init_0 (void);
const char *ffeinfo_kind_message (ffeinfoKind kind);
const char *ffeinfo_kind_string (ffeinfoKind kind);
ffeinfoKindtype ffeinfo_kindtype_max(ffeinfoBasictype bt,
				     ffeinfoKindtype k1,
				     ffeinfoKindtype k2);
const char *ffeinfo_kindtype_string (ffeinfoKindtype kind_type);
const char *ffeinfo_where_string (ffeinfoWhere where);
ffeinfo ffeinfo_new (ffeinfoBasictype basictype, ffeinfoKindtype kindtype,
		     ffeinfoRank rank, ffeinfoKind kind, ffeinfoWhere where,
		     ffetargetCharacterSize size);
void ffeinfo_set_type (ffeinfoBasictype basictype, ffeinfoKindtype kindtype,
		       ffetype type);
ffetype ffeinfo_type (ffeinfoBasictype basictype, ffeinfoKindtype kindtype);

/* Define macros. */

#define ffeinfo_basictype(i) (i.basictype)
#define ffeinfo_init_1()
#define ffeinfo_init_2()
#define ffeinfo_init_3()
#define ffeinfo_init_4()
#define ffeinfo_kind(i) (i.kind)
#define ffeinfo_kindtype(i) (i.kindtype)
#ifdef __GNUC__
#define ffeinfo_new(bt,kt,r,k,w,sz) \
  ((ffeinfo) {(bt), (kt), (r), (k), (w), (sz)})
#endif
#define ffeinfo_new_any()						      \
  ffeinfo_new (FFEINFO_basictypeANY, FFEINFO_kindtypeANY, 0,		      \
	       FFEINFO_kindANY, FFEINFO_whereANY,			      \
	       FFETARGET_charactersizeNONE)
#define ffeinfo_new_null()						      \
  ffeinfo_new (FFEINFO_basictypeNONE, FFEINFO_kindtypeNONE, 0,		      \
	       FFEINFO_kindNONE, FFEINFO_whereNONE,			      \
	       FFETARGET_charactersizeNONE)
#define ffeinfo_rank(i) (i.rank)
#define ffeinfo_size(i) (i.size)
#define ffeinfo_terminate_0()
#define ffeinfo_terminate_1()
#define ffeinfo_terminate_2()
#define ffeinfo_terminate_3()
#define ffeinfo_terminate_4()
#define ffeinfo_use(i) i
#define ffeinfo_where(i) (i.where)

#define FFEINFO_kindtypeINTEGERDEFAULT FFEINFO_kindtypeINTEGER1
#define FFEINFO_kindtypeLOGICALDEFAULT FFEINFO_kindtypeLOGICAL1
#define FFEINFO_kindtypeREALDEFAULT FFEINFO_kindtypeREAL1
#define FFEINFO_kindtypeREALDOUBLE FFEINFO_kindtypeREAL2
#define FFEINFO_kindtypeREALQUAD FFEINFO_kindtypeREAL3
#define FFEINFO_kindtypeCHARACTERDEFAULT FFEINFO_kindtypeCHARACTER1

/* End of #include file. */

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

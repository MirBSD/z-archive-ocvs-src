head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@;; @;


1.2
date	2004.07.18.13.37.54;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.36.55;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.36.55;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke egcs (pgcc, gcc2) and simplify the system a bit
also fix placement of GNUSYSTEM_AUX_DIR equation in <bsd.own.mk> while here
remove some sparc and xc-old/xc-mit remnants
for now, all distribution lists are mi, since we only have 1 arch

XXX comp is second-largest now (after xfont), need ideas, come to IRC

agreed: <benz|lernen> joa, warum nicht
@
text
@/* This is an assembly language implementation of libgcc1.c for the sparclite
   processor.

   These routines are all from the Sparclite User's Guide, slightly edited
   to match the desired calling convention, and also to optimize them.  */

#ifdef L_udivsi3
.text
	.align 4
	.global .udiv
	.proc	04
.udiv:
	wr	%g0,%g0,%y	! Not a delayed write for sparclite
	tst	%g0
	divscc	%o0,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	retl
	divscc	%g1,%o1,%o0
#endif

#ifdef L_umodsi3
.text
	.align 4
	.global .urem
	.proc	04
.urem:
	wr	%g0,%g0,%y	! Not a delayed write for sparclite
	tst	%g0
	divscc	%o0,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	divscc	%g1,%o1,%g1
	bl 1f
	rd	%y,%o0
	retl
	nop
1:	retl
	add	%o0,%o1,%o0
#endif

#ifdef L_divsi3
.text
	.align 4
	.global .div
	.proc	04
! ??? This routine could be made faster if was optimized, and if it was
! rewritten to only calculate the quotient.
.div:
	wr	%g0,%g0,%y	! Not a delayed write for sparclite
	mov	%o1,%o4
	tst	%o1
	bl,a	1f
	sub	%g0,%o4,%o4
1:	tst	%o0
	bl,a	2f
	mov	-1,%y
2:	divscc	%o0,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	be	6f
	mov	%y,%o3
	bg	4f
	addcc	%o3,%o4,%g0
	be,a	6f
	mov	%g0,%o3
	tst	%o0
	bl	5f
	tst	%g1
	ba	5f
	add	%o3,%o4,%o3
4:	subcc	%o3,%o4,%g0
	be,a	6f
	mov	%g0,%o3
	tst	%o0
	bge	5f
	tst	%g1
	sub	%o3,%o4,%o3
5:	bl,a	6f
	add	%g1,1,%g1
6:	tst	%o1
	bl,a	7f
	sub	%g0,%g1,%g1
7:	retl
	mov	%g1,%o0		! Quotient is in %g1.
#endif

#ifdef L_modsi3
.text
	.align 4
	.global .rem
	.proc	04
! ??? This routine could be made faster if was optimized, and if it was
! rewritten to only calculate the remainder.
.rem:
	wr	%g0,%g0,%y	! Not a delayed write for sparclite
	mov	%o1,%o4
	tst	%o1
	bl,a	1f
	sub	%g0,%o4,%o4
1:	tst	%o0
	bl,a	2f
	mov	-1,%y
2:	divscc	%o0,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	divscc	%g1,%o4,%g1
	be	6f
	mov	%y,%o3
	bg	4f
	addcc	%o3,%o4,%g0
	be,a	6f
	mov	%g0,%o3
	tst	%o0
	bl	5f
	tst	%g1
	ba	5f
	add	%o3,%o4,%o3
4:	subcc	%o3,%o4,%g0
	be,a	6f
	mov	%g0,%o3
	tst	%o0
	bge	5f
	tst	%g1
	sub	%o3,%o4,%o3
5:	bl,a	6f
	add	%g1,1,%g1
6:	tst	%o1
	bl,a	7f
	sub	%g0,%g1,%g1
7:	retl
	mov	%o3,%o0		! Remainder is in %o3.
#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.07.18.13.38.52;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.36.59;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.36.59;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke egcs (pgcc, gcc2) and simplify the system a bit
also fix placement of GNUSYSTEM_AUX_DIR equation in <bsd.own.mk> while here
remove some sparc and xc-old/xc-mit remnants
for now, all distribution lists are mi, since we only have 1 arch

XXX comp is second-largest now (after xfont), need ideas, come to IRC

agreed: <benz|lernen> joa, warum nicht
@
text
@/* Configuration for GNU C-compiler for Vax.
   Copyright (C) 1987, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.

This file is part of GNU CC.

GNU CC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU CC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU CC; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

/* #defines that need visibility everywhere.  */
#define FALSE 0
#define TRUE 1

/* Other configurations get these via autoconfig.  */
#define STDC_HEADERS 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#ifdef __DECC
#define HAVE_UNISTD_H 1
#endif

#if defined(VAXC) || defined(__DECC)
/* if compiling with VAXC, need to fix problem with <stdio.h>
   which defines a macro called FILE_TYPE that breaks "tree.h".
   Fortunately it uses #ifndef to suppress multiple inclusions.
   Three possible cases:
	1) <stdio.h> has already been included -- ours will be no-op;
	2) <stdio.h> will be included after us -- "theirs" will be no-op;
	3) <stdio.h> isn't needed -- including it here shouldn't hurt.
   In all three cases, the problem macro will be removed here.  */
#include <stdio.h>
#undef FILE_TYPE
#endif

/* target machine dependencies.
   tm.h is a symbolic link to the actual target specific file.   */
#include "tm.h"

/* This describes the machine the compiler is hosted on.  */
#define HOST_BITS_PER_CHAR 8
#define HOST_BITS_PER_SHORT 16
#define HOST_BITS_PER_INT 32
#define HOST_BITS_PER_LONG 32
#define HOST_BITS_PER_LONGLONG 64

#define HOST_FLOAT_FORMAT VAX_FLOAT_FORMAT

#define SUCCESS_EXIT_CODE 1
#define FATAL_EXIT_CODE (44 | 0x10000000)  /* Abort, and no DCL message.  */

/* A couple of conditionals for execution machine are controlled here.  */
#ifndef VMS
#define VMS
#endif

#ifndef __GNUC__
/* not present, at least in VAX-11 C (VMS) v2.2 */
#define R_OK 4
#define W_OK 2
#define X_OK 1
#define F_OK 0
#endif

#define GCC_INCLUDE_DIR "///not used with VMS///"	/* nonsense string for now */

/* and define a local equivalent (sort of) for unlink */
#define unlink remove

/* Used by the preprocessor to limit size of disk I/O chunks.
   64K - 1 is the maximum supported by VAXCRTL.  Amounts in excess
   of 35 blocks will bypass the VMS V6.x VIOC [Virtual I/O Cache],
   so we'll pick a limit of 16K (32 blocks).  */
#define MAX_READ_LEN	(32 * 512)
#define MAX_WRITE_LEN	(32 * 512)

/* Under VMS a directory specification can be enclosed either in square
   brackets or in angle brackets.  Thus we need to check both.  This
   macro is used to help compare filenames in cp-lex.c.

   We also need to make sure that the names are all lower case, because
   we must be able to compare filenames to determine if a file implements
   a class.  */

#define FILE_NAME_NONDIRECTORY(C)				\
({								\
   char * pnt_ = (C), * pnt1_;					\
   pnt1_ = pnt_ - 1;						\
   while (*++pnt1_)						\
     if ((*pnt1_ >= 'A' && *pnt1_ <= 'Z')) *pnt1_ |= 0x20;	\
   pnt1_ = rindex (pnt_, ']'); 					\
   pnt1_ = (pnt1_ == 0 ? rindex (pnt_, '>') : pnt1_);		\
   pnt1_ = (pnt1_ == 0 ? rindex (pnt_, ':') : pnt1_);		\
   (pnt1_ == 0 ? pnt_ : pnt1_ + 1);				\
 })

/* Macro to generate the name of the cross reference file.  The standard
   one does not work, since it was written assuming that the conventions
   of a unix style filesystem will work on the host system.  */

#define XREF_FILE_NAME(BUFF, NAME)	\
  s = FILE_NAME_NONDIRECTORY (NAME);			\
  if (s == NAME) sprintf(BUFF, "%s_gxref", NAME);	\
  else {						\
    strcpy(BUFF, NAME);					\
    strcat(BUFF, "_gxref");				\
  }

/* Macro that is used in cp-xref.c to determine whether a file name is
   absolute or not.  */

#define FILE_NAME_ABSOLUTE_P(NAME)	\
	(FILE_NAME_NONDIRECTORY (NAME) != (&NAME[1]))

/* FILE_NAME_JOINER is defined to be the characters that are inserted between 
   a directory name and a filename in order to make an absolute file
   specification.  Under VMS the directory specification contains all of the
   required characters, so we define this to be a null string.  */

#define FILE_NAME_JOINER ""

/* vprintf() has been available since VMS V4.6.  */

#define HAVE_VPRINTF

#if defined(VAXC) || defined(__DECC)

/* Customizations/kludges for building with DEC's VAX C compiler
   rather than GCC.  */

#define NO_SYS_PARAMS_H		/* don't have <sys/params.h> */
#define USE_C_ALLOCA		/* using alloca.c */
#define QSORT_WORKAROUND	/* do not use VAXCRTL's qsort */

/* use ANSI/SYSV style byte manipulation routines instead of BSD ones */
/* rename all too-long external symbol names to avoid warnings */
#define check_for_full_enumeration_handling	check_for_full_enum_handling
#define current_function_contains_functions	curfunc_contains_functions
#define current_function_epilogue_delay_list	curfunc_epilogue_delay_list
#define current_function_has_nonlocal_goto	curfunc_has_nonlocal_goto
#define current_function_has_nonlocal_label	curfunc_has_nonlocal_label
#define current_function_internal_arg_pointer	curfunc_internal_arg_pointer
#define current_function_outgoing_args_size	curfunc_outgoing_args_size
#define current_function_pretend_args_size	curfunc_pretend_args_size
#define current_function_returns_pcc_struct	curfunc_returns_pcc_struct
#define current_function_returns_pointer	curfunc_returns_pointer
#define current_function_uses_const_pool	curfunc_uses_const_pool
#define current_function_uses_pic_offset_table	curfunc_uses_pic_offset_table
#define dbxout_resume_previous_source_file	dbxout_resume_previous_src_file
#define expand_builtin_extract_return_addr	expand_builtin_extract_ret_addr
#define expand_builtin_set_return_addr_reg	expand_builtin_set_ret_addr_reg
#define expand_start_loop_continue_elsewhere	expnd_start_loop_cont_elsewhere
#define flag_schedule_insns_after_reload	flag_sched_insns_after_reload
#define get_dynamic_handler_chain_libfunc	get_dynamic_hndlr_chain_libfunc
#define lookup_name_current_level_global	lookup_name_current_level_gbl
#define maybe_building_objc_message_expr	maybe_building_objc_msg_expr
#define mesg_implicit_function_declaration	mesg_implicit_func_declaration
#define output_deferred_addressed_constants	output_deferred_addr_constants
#define protect_cleanup_actions_with_terminate  protect_cleanup_act_w_terminate
#define reg_overlap_mentioned_for_reload_p	reg_overlap_mtnd_for_reload_p
#define reposition_prologue_and_epilogue_notes	repos_prolog_and_epilog_notes
#define rtx_equal_function_value_matters	rtx_equal_func_value_matters
#define set_new_first_and_last_label_num	set_new_first_and_last_lbl_num
#define thread_prologue_and_epilogue_insns	thread_prolog_and_epilog_insns
#endif

/* We need to avoid the library qsort routine, due to a serious bug
   in VAXCRTL.  (Sorting anything with size that's not a multiple of 4
   after having previously sorted something that was a multiple of 4
   can produce wrong results and result in data corruption.)  We'll
   use our own substitute (in vax.c) instead.  */
/* #define QSORT_WORKAROUND */
#ifdef QSORT_WORKAROUND
#define qsort not_qsort
#endif

#ifdef __DECC
/* DECC$SHR doesn't have VAXCRTL's bugs.  */
#undef QSORT_WORKAROUND
#undef qsort
/* Avoid a lot of informational level diagnostics about implicitly
   declared functions.  */
#include <stdlib.h>
#include <string.h>
/* this is for genopinit.c */
 #pragma message disable (undefescap)
#endif

#if defined(USE_C_ALLOCA) && !defined(alloca)
/* Declare alloca() using similar logic to that in alloca.c.  */
#ifdef __STDC__
extern void *alloca(unsigned);
#else
extern char *alloca();
#endif
#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

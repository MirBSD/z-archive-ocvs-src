head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.04.06.16.22.42;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.37.04;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.37.04;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of other unneeded files *g*
g++ g77 gobjc and their testsuites
gcc texinfo documentation

gcc.1 -> pgcc.1

=> {man,info} gcc should yield gcc 3.2 documentation now
@
text
@/* Shift right, logical. */

DEFTREECODE (URSHIFT_EXPR, "urshift_expr", '2', 2)

/* Return -1, 0, 1 depending on whether the first argument is
   less, equal, or greater to the second argument. */
DEFTREECODE (COMPARE_EXPR, "compare_expr", '2', 2)

/* Same as COMPARE_EXPR, but if either value is NaN, the result is -1. */
DEFTREECODE (COMPARE_L_EXPR, "compare_l_expr", '2', 2)
/* Same as COMPARE_EXPR, but if either value is NaN, the result is 1. */
DEFTREECODE (COMPARE_G_EXPR, "compare_g_expr", '2', 2)

/* Unary plus. Operand 0 is the expression the unary plus is applied
   to */
DEFTREECODE (UNARY_PLUS_EXPR, "unary_plus_expr", '1', 1)

/* New array creation expression.
   Operand 0 is the array base type.
   Operand 1 is the list of dimension expressions. 
   Operand 2 is the number of other dimensions of unspecified range.
   Once patched, the node will bear the type of the created array.  */
DEFTREECODE (NEW_ARRAY_EXPR, "new_array_expr", 'e', 3)

/* New class creation expression.
   Operand 0 is the name of the class to be created
   Operand 1 is the argument list used to select a constructor.
   There is no operand 2.  That slot is used for the
   CALL_EXPR_RTL macro (see preexpand_calls).
   The type should be the one of the created class.  */
DEFTREECODE (NEW_CLASS_EXPR, "new_class_expr", 'e', 3)

/* Defines `this' as an expression.  */
DEFTREECODE (THIS_EXPR, "this", '1', 0)

/* Case statement expression.
   Operand 1 is the case value.  */
DEFTREECODE (CASE_EXPR, "case", 'x', 1)

/* Default statement expression. */
DEFTREECODE (DEFAULT_EXPR, "default", 'x', 0)

/* Try expression
   Operand 0 is the tried block,
   Operand 1 contains chained catch nodes. */
DEFTREECODE (TRY_EXPR, "try-catch-finally", 'e', 2)

/* Catch clause.
   Operand 0 is the catch clause block, which contains the declaration of
   the catch clause parameter.  */
DEFTREECODE (CATCH_EXPR, "catch", '1', 1)

/* Synchronized statement.
   Operand 0 is the expression on which we whish to synchronize,
   Operand 1 is the synchronized expression block.  */
DEFTREECODE (SYNCHRONIZED_EXPR, "synchronized", 'e', 2)

/* Throw statement.
   Operand 0 is the throw expresion.  */
DEFTREECODE (THROW_EXPR, "throw", '1', 1)

/* Conditional operator.
   Operand 0 is the condition expression
   Operand 1 is the then-value
   Operand 2 is the else-value.  */
DEFTREECODE (CONDITIONAL_EXPR, "?:", 'e', 3)

/* instanceof operator.
   Operand 0 is the expression that is getting tested
   Operand 1 is the class used for the test.  */
DEFTREECODE (INSTANCEOF_EXPR, "instanceof", 'e', 2)

/* Array initializers.
   Operand 0 is the (sub) array target to initialize, left to NULL_TREE
   when the node is created.
   Operand 1 is a CONSTRUCTOR node.  */
DEFTREECODE (NEW_ARRAY_INIT, "new_array_init", '1', 1)
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

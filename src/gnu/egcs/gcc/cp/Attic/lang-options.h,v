head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.04.06.16.22.17;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.36.16;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.36.16;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove a bunch of other unneeded files *g*
g++ g77 gobjc and their testsuites
gcc texinfo documentation

gcc.1 -> pgcc.1

=> {man,info} gcc should yield gcc 3.2 documentation now
@
text
@/* Definitions for switches for C++.
   Copyright (C) 1995, 96-97, 1998 Free Software Foundation, Inc.

This file is part of GNU CC.

GNU CC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU CC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU CC; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

DEFINE_LANG_NAME ("C++")
     
/* This is the contribution to the `lang_options' array in gcc.c for
   g++.  */

  { "-faccess-control", "" },
  { "-fno-access-control", "Do not obey access control semantics" },
  { "-fall-virtual", "Make all member functions virtual" },
  { "-fno-all-virtual", "" },
  { "-falt-external-templates", "Change when template instances are emitted" },
  { "-fno-alt-external-templates", "" },
  { "-fansi-overloading", "" },
  { "-fno-ansi-overloading", "" },
  { "-fcheck-new", "Check the return value of new" },
  { "-fno-check-new", "" },
  { "-fconserve-space", "Reduce size of object files" },
  { "-fno-conserve-space", "" },
  { "-fconst-strings", "" },
  { "-fno-const-strings", "Make string literals `char[]' instead of `const char[]'" },
  { "-fdefault-inline", "" },
  { "-fno-default-inline", "Do not inline member functions by default"},
  { "-frtti", "" },
  { "-fno-rtti", "Do not generate run time type descriptor information" },
  { "-felide-constructors", "" },
  { "-fno-elide-constructors", "" },
  { "-fenum-int-equiv", "" },
  { "-fno-enum-int-equiv", "" },
  { "-fexternal-templates", "" },
  { "-fno-external-templates", "" },
  { "-ffor-scope", "" },
  { "-fno-for-scope", "Scope of for-init-statement vars extends outside" },
  { "-fguiding-decls", "Implement guiding declarations" },
  { "-fno-guiding-decls", "" },
  { "-fgnu-keywords", "" },
  { "-fno-gnu-keywords", "Do not recognise GNU defined keywords" },
  { "-fhandle-exceptions", "" },
  { "-fno-handle-exceptions", "" },
  { "-fhandle-signatures", "Handle signature language constructs" },
  { "-fno-handle-signatures", "" },
  { "-fhonor-std", "Treat the namespace `std' as a normal namespace" },
  { "-fno-honor-std", "" },
  { "-fhuge-objects", "Enable support for huge objects" },
  { "-fno-huge-objects", "" },
  { "-fimplement-inlines", "" },
  { "-fno-implement-inlines", "Export functions even if they can be inlined" },
  { "-fimplicit-templates", "" },
  { "-fno-implicit-templates", "Only emit explicit template instatiations" },
  { "-fimplicit-inline-templates", "" },
  { "-fno-implicit-inline-templates", "Only emit explicit instatiations of inline templates" },
  { "-finit-priority", "Handle the init_priority attribute" },
  { "-fno-init-priority", "" },
  { "-flabels-ok", "Labels can be used as first class objects" },
  { "-fno-labels-ok", "" },
  { "-fmemoize-lookups", "" },
  { "-fno-memoize-lookups", "" },
  { "-fname-mangling-version-", "" },
  { "-fnew-abi", "Enable experimental ABI changes" },
  { "-fno-new-abi", "" },
  { "-fnonnull-objects", "" },
  { "-fno-nonnull-objects", "Do not assume that a reference is always valid" },
  { "-foperator-names", "Recognise and/bitand/bitor/compl/not/or/xor" },
  { "-fno-operator-names", "" },
  { "-foptional-diags", "" },
  { "-fno-optional-diags", "Disable optional diagnostics" },
  { "-fpermissive", "Downgrade conformance errors to warnings" },
  { "-fno-permissive", "" },
  { "-frepo", "Enable automatic template instantiation" },
  { "-fno-repo", "" },
  { "-fsave-memoized", "" },
  { "-fno-save-memoized", "" },
  { "-fsquangle", "Enable squashed name mangling" },
  { "-fno-squangle", "" },
  { "-fstats", "Display statistics accumulated during compilation" },
  { "-fno-stats", "" },
  { "-fstrict-prototype", "" },
  { "-fno-strict-prototype", "Do not assume that empty prototype means no args" },
  { "-ftemplate-depth-", "Specify maximum template instantiation depth"},
  { "-fthis-is-variable", "Make 'this' not be type '* const'"  },
  { "-fno-this-is-variable", "" },
  { "-fvtable-gc", "Discard unused virtual functions" },
  { "-fno-vtable-gc", "" },
  { "-fvtable-thunks", "Implement vtables using thunks" },
  { "-fno-vtable-thunks", "" },
  { "-fweak", "Emit common-like symbols as weak symbols" },
  { "-fno-weak", "" },
  { "-fxref", "Emit cross referencing information" },
  { "-fno-xref", "" },

  { "-Wreturn-type", "Warn about inconsistent return types" },
  { "-Wno-return-type", "" },
  { "-Woverloaded-virtual", "Warn about overloaded virtual function names" },
  { "-Wno-overloaded-virtual", "" },
  { "-Wctor-dtor-privacy", "" },
  { "-Wno-ctor-dtor-privacy", "Don't warn when all ctors/dtors are private" },
  { "-Wnon-virtual-dtor", "Warn about non virtual destructors" },
  { "-Wno-non-virtual-dtor", "" },
  { "-Wextern-inline", "Warn when a function is declared extern, then inline" },
  { "-Wno-extern-inline", "" },
  { "-Wreorder", "Warn when the compiler reorders code" },
  { "-Wno-reorder", "" },
  { "-Wsynth", "Warn when synthesis behaviour differs from Cfront" },
  { "-Wno-synth", "" },
  { "-Wpmf-conversions", "" },
  { "-Wno-pmf-conversions", "Don't warn when type converting pointers to member functions" },
  { "-Weffc++", "Warn about violations of Effective C++ style rules" },
  { "-Wno-effc++", "" },
  { "-Wsign-promo", "Warn when overload promotes from unsigned to signed" },
  { "-Wno-sign-promo", "" },
  { "-Wold-style-cast", "Warn if a C style cast is used in a program" },
  { "-Wno-old-style-cast", "" },
  { "-Wnon-template-friend", "" }, 
  { "-Wno-non-template-friend", "Don't warn when non-templatized friend functions are declared within a template" },
  { "-Wdeprecated", "" },
  { "-Wno-deprecated", "Don't announce deprecation of compiler features" },
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

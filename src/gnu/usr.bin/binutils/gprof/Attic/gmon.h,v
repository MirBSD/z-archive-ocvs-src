head	1.4;
access;
symbols
	binutils-2_15:1.1.2.2
	cvs-200406091940:1.1.1.2
	MIRBSD_7quater:1.2
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.2.0.6
	MIRBSD_7:1.2.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.2
	MIRBSD_7_DEV:1.2.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	binutils_2_14:1.1.2.2
	binutils_2_11_2:1.1.2.1
	FSF:1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2004.08.11.21.17.47;	author tg;	state dead;
branches;
next	1.3;

1.3
date	2004.06.10.19.03.31;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.23.21.05.10;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.40.52;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2003.03.22.17.40.52;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.06.09.20.30.09;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2003.09.23.15.43.35;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.09.23.16.09.22;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove old binutils
@
text
@/*
 * Copyright (c) 1983, 1991, 1993, 2001
 *      The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
#ifndef gmon_h
#define gmon_h

/* Size of the 4.4BSD gmon header */
#define GMON_HDRSIZE_BSD44_32 (4 + 4 + 4 + 4 + 4 + (3 * 4))
#define GMON_HDRSIZE_BSD44_64 (8 + 8 + 4 + 4 + 4 + (3 * 4))

#if 0 /* For documentation purposes only.  */
  struct raw_phdr
    {
      char low_pc[sizeof(void *)]; /* base pc address of sample buffer */
      char high_pc[sizeof(void *)];/* max pc address of sampled buffer */
      char ncnt[4];		   /* size of sample buffer (plus this
				      header) */

      char version[4];		   /* version number */
      char profrate[4];		   /* profiling clock rate */
      char spare[3*4];		   /* reserved */
    };
#endif

#define GMONVERSION     0x00051879

/* Size of the old BSD gmon header */
#define GMON_HDRSIZE_OLDBSD_32 (4 + 4 + 4) 

/* FIXME: Checking host compiler defines here means that we can't
   use a cross gprof alpha OSF.  */
#if defined(__alpha__) && defined (__osf__) 
#define GMON_HDRSIZE_OLDBSD_64 (8 + 8 + 4 + 4)
#else
#define GMON_HDRSIZE_OLDBSD_64 (8 + 8 + 4)
#endif

#if 0 /* For documentation purposes only.  */
  struct old_raw_phdr
    {
      char low_pc[sizeof(void *)]; /* base pc address of sample buffer */
      char high_pc[sizeof(void *)];/* max pc address of sampled buffer */
      char ncnt[4];		   /* size of sample buffer (plus this
				      header) */
#if defined (__alpha__) && defined (__osf__)
      /*
       * DEC's OSF v3.0 uses 4 bytes of padding to bring the header to
       * a size that is a multiple of 8.
       */
      char pad[4];
#endif
    };
#endif

/*
 * Histogram counters are unsigned shorts:
 */
#define	HISTCOUNTER unsigned short

/*
 * Fraction of text space to allocate for histogram counters here, 1/2:
 */
#define	HISTFRACTION	2

/*
 * Fraction of text space to allocate for from hash buckets.  The
 * value of HASHFRACTION is based on the minimum number of bytes of
 * separation between two subroutine call points in the object code.
 * Given MIN_SUBR_SEPARATION bytes of separation the value of
 * HASHFRACTION is calculated as:
 *
 *      HASHFRACTION = MIN_SUBR_SEPARATION / (2 * sizeof(short) - 1);
 *
 * For the VAX, the shortest two call sequence is:
 *
 *      calls   $0,(r0)
 *      calls   $0,(r0)
 *
 * which is separated by only three bytes, thus HASHFRACTION is
 * calculated as:
 *
 *      HASHFRACTION = 3 / (2 * 2 - 1) = 1
 *
 * Note that the division above rounds down, thus if MIN_SUBR_FRACTION
 * is less than three, this algorithm will not work!
 */
#define	HASHFRACTION 1

/*
 * Percent of text space to allocate for tostructs with a minimum:
 */
#define ARCDENSITY	2
#define MINARCS		50

struct tostruct
  {
    char *selfpc;
    int count;
    unsigned short link;
  };

/*
 * A raw arc, with pointers to the calling site and the called site
 * and a count.  Everything is defined in terms of characters so
 * as to get a packed representation (otherwise, different compilers
 * might introduce different padding):
 */
#if 0 /* For documentation purposes only.  */
  struct raw_arc
    {
      char from_pc[sizeof(void *)];
      char self_pc[sizeof(void *)];
      char count[sizeof(long)];
    };
#endif

/*
 * General rounding functions:
 */
#define ROUNDDOWN(x,y)	(((x)/(y))*(y))
#define ROUNDUP(x,y)	((((x)+(y)-1)/(y))*(y))

#endif /* gmon_h */
@


1.3
log
@first foolish attempt to merge the last piece
won't probably work, but I want it backed up,
since there's a lot of work and time in it
@
text
@@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@d2 1
a2 1
 * Copyright (c) 1983, 1993, 2001
@


1.1
log
@Initial revision
@
text
@d32 17
a48 12
struct raw_phdr
  {
    /* FIXME: Checking a host compiler define means that we can't use
       a cross gprof to the alpha.  */
    char low_pc[GMON_PTR_SIZE];	/* base pc address of sample buffer */
    char high_pc[GMON_PTR_SIZE];/* max pc address of sampled buffer */
    char ncnt[4];		/* size of sample buffer (plus this header) */

    char version[4];		/* version number */
    char profrate[4];		/* profiling clock rate */
    char spare[3*4];		/* reserved */
  };
d52 10
a61 5
struct old_raw_phdr
  {
    char low_pc[GMON_PTR_SIZE];	/* base pc address of sample buffer */
    char high_pc[GMON_PTR_SIZE];/* max pc address of sampled buffer */
    char ncnt[4];		/* size of sample buffer (plus this header) */
d63 7
a69 2
    /* FIXME: Checking host compiler defines here means that we can't
       use a cross gprof alpha OSF.  */
d71 7
a77 5
    /*
     * DEC's OSF v3.0 uses 4 bytes of padding to bring the header to
     * a size that is a multiple of 8.
     */
    char pad[4];
a78 1
  };
d133 8
a140 6
struct raw_arc
  {
    char from_pc[GMON_PTR_SIZE];
    char self_pc[GMON_PTR_SIZE];
    char count[4];
  };
@


1.1.2.1
log
@vendor-branch-i-fy GNU binutils (2.11.2) to facilitate an update
@
text
@d1 3
a3 3
/*-
 * Copyright (c) 1991, 2001 The Regents of the University of California.
 * All rights reserved.
d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
a27 2
 *
 *	@@(#)gmon.h	5.2 (Berkeley) 5/6/91
@


1.1.2.2
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@d1 3
a3 3
/*
 * Copyright (c) 1983, 1991, 1993, 2001
 *      The Regents of the University of California.  All rights reserved.
d13 5
a17 1
 * 3. Neither the name of the University nor the names of its contributors
d32 2
d38 12
a49 17
/* Size of the 4.4BSD gmon header */
#define GMON_HDRSIZE_BSD44_32 (4 + 4 + 4 + 4 + 4 + (3 * 4))
#define GMON_HDRSIZE_BSD44_64 (8 + 8 + 4 + 4 + 4 + (3 * 4))

#if 0 /* For documentation purposes only.  */
  struct raw_phdr
    {
      char low_pc[sizeof(void *)]; /* base pc address of sample buffer */
      char high_pc[sizeof(void *)];/* max pc address of sampled buffer */
      char ncnt[4];		   /* size of sample buffer (plus this
				      header) */

      char version[4];		   /* version number */
      char profrate[4];		   /* profiling clock rate */
      char spare[3*4];		   /* reserved */
    };
#endif
d53 5
a57 2
/* Size of the old BSD gmon header */
#define GMON_HDRSIZE_OLDBSD_32 (4 + 4 + 4) 
d59 2
a60 15
/* FIXME: Checking host compiler defines here means that we can't
   use a cross gprof alpha OSF.  */
#if defined(__alpha__) && defined (__osf__) 
#define GMON_HDRSIZE_OLDBSD_64 (8 + 8 + 4 + 4)
#else
#define GMON_HDRSIZE_OLDBSD_64 (8 + 8 + 4)
#endif

#if 0 /* For documentation purposes only.  */
  struct old_raw_phdr
    {
      char low_pc[sizeof(void *)]; /* base pc address of sample buffer */
      char high_pc[sizeof(void *)];/* max pc address of sampled buffer */
      char ncnt[4];		   /* size of sample buffer (plus this
				      header) */
d62 5
a66 7
      /*
       * DEC's OSF v3.0 uses 4 bytes of padding to bring the header to
       * a size that is a multiple of 8.
       */
      char pad[4];
#endif
    };
d68 1
d123 6
a128 8
#if 0 /* For documentation purposes only.  */
  struct raw_arc
    {
      char from_pc[sizeof(void *)];
      char self_pc[sizeof(void *)];
      char count[sizeof(long)];
    };
#endif
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIXÆ, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync of src/gnu with OpenBSD (promised a long time ago)
@
text
@d2 1
a2 1
 * Copyright (c) 1983, 1991, 1993, 2001
d32 12
a43 17
/* Size of the 4.4BSD gmon header */
#define GMON_HDRSIZE_BSD44_32 (4 + 4 + 4 + 4 + 4 + (3 * 4))
#define GMON_HDRSIZE_BSD44_64 (8 + 8 + 4 + 4 + 4 + (3 * 4))

#if 0 /* For documentation purposes only.  */
  struct raw_phdr
    {
      char low_pc[sizeof(void *)]; /* base pc address of sample buffer */
      char high_pc[sizeof(void *)];/* max pc address of sampled buffer */
      char ncnt[4];		   /* size of sample buffer (plus this
				      header) */

      char version[4];		   /* version number */
      char profrate[4];		   /* profiling clock rate */
      char spare[3*4];		   /* reserved */
    };
#endif
d47 5
a51 10
/* Size of the old BSD gmon header */
#define GMON_HDRSIZE_OLDBSD_32 (4 + 4 + 4) 

/* FIXME: Checking host compiler defines here means that we can't
   use a cross gprof alpha OSF.  */
#if defined(__alpha__) && defined (__osf__) 
#define GMON_HDRSIZE_OLDBSD_64 (8 + 8 + 4 + 4)
#else
#define GMON_HDRSIZE_OLDBSD_64 (8 + 8 + 4)
#endif
d53 2
a54 7
#if 0 /* For documentation purposes only.  */
  struct old_raw_phdr
    {
      char low_pc[sizeof(void *)]; /* base pc address of sample buffer */
      char high_pc[sizeof(void *)];/* max pc address of sampled buffer */
      char ncnt[4];		   /* size of sample buffer (plus this
				      header) */
d56 5
a60 7
      /*
       * DEC's OSF v3.0 uses 4 bytes of padding to bring the header to
       * a size that is a multiple of 8.
       */
      char pad[4];
#endif
    };
d62 1
d117 6
a122 8
#if 0 /* For documentation purposes only.  */
  struct raw_arc
    {
      char from_pc[sizeof(void *)];
      char self_pc[sizeof(void *)];
      char count[sizeof(long)];
    };
#endif
@


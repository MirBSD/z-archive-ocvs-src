head	1.3;
access;
symbols
	binutils-2_15:1.1.2.2
	cvs-200406091940:1.1.1.2
	MIRBSD_7quater:1.2
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.2.0.6
	MIRBSD_7:1.2.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.2
	MIRBSD_7_DEV:1.2.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	binutils_2_14:1.1.2.2
	binutils_2_11_2:1.1.2.1
	FSF:1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2004.08.11.20.53.21;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2003.09.23.21.00.40;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.39.10;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2003.03.22.17.39.10;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.06.09.20.26.59;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2003.09.23.15.40.54;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.09.23.16.04.35;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove old binutils
@
text
@/* NLM (NetWare Loadable Module) swapping routines for BFD.
   Copyright 1993, 2000, 2001 Free Software Foundation, Inc.

   Written by Fred Fish @@ Cygnus Support, using ELF support as the
   template.

This file is part of BFD, the Binary File Descriptor library.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

/* Although this is a header file, it defines functions.  It is
   included by NLM backends to define swapping functions that vary
   from one NLM to another.  The backend code must arrange for
   Nlm_External_xxxx to be defined appropriately, and can then include
   this file to get the swapping routines.

   At the moment this is only needed for one structure, the fixed NLM
   file header.  */

static void nlm_swap_fixed_header_in PARAMS ((bfd *, PTR,
					      Nlm_Internal_Fixed_Header *));
static void nlm_swap_fixed_header_out PARAMS ((bfd *,
					       Nlm_Internal_Fixed_Header *,
					       PTR));

/* Translate an NLM fixed length file header in external format into an NLM
   file header in internal format.  */

static void
nlm_swap_fixed_header_in (abfd, realsrc, dst)
     bfd *abfd;
     PTR realsrc;
     Nlm_Internal_Fixed_Header *dst;
{
  Nlm_External_Fixed_Header *src = (Nlm_External_Fixed_Header *) realsrc;
  memcpy (dst->signature, src->signature, NLM_SIGNATURE_SIZE);
  memcpy (dst->moduleName, src->moduleName, NLM_MODULE_NAME_SIZE);
  dst->version =
    H_GET_32 (abfd, src->version);
  dst->codeImageOffset =
    H_GET_32 (abfd, src->codeImageOffset);
  dst->codeImageSize =
    H_GET_32 (abfd, src->codeImageSize);
  dst->dataImageOffset =
    H_GET_32 (abfd, src->dataImageOffset);
  dst->dataImageSize =
    H_GET_32 (abfd, src->dataImageSize);
  dst->uninitializedDataSize =
    H_GET_32 (abfd, src->uninitializedDataSize);
  dst->customDataOffset =
    H_GET_32 (abfd, src->customDataOffset);
  dst->customDataSize =
    H_GET_32 (abfd, src->customDataSize);
  dst->moduleDependencyOffset =
    H_GET_32 (abfd, src->moduleDependencyOffset);
  dst->numberOfModuleDependencies =
    H_GET_32 (abfd, src->numberOfModuleDependencies);
  dst->relocationFixupOffset =
    H_GET_32 (abfd, src->relocationFixupOffset);
  dst->numberOfRelocationFixups =
    H_GET_32 (abfd, src->numberOfRelocationFixups);
  dst->externalReferencesOffset =
    H_GET_32 (abfd, src->externalReferencesOffset);
  dst->numberOfExternalReferences =
    H_GET_32 (abfd, src->numberOfExternalReferences);
  dst->publicsOffset =
    H_GET_32 (abfd, src->publicsOffset);
  dst->numberOfPublics =
    H_GET_32 (abfd, src->numberOfPublics);
  dst->debugInfoOffset =
    H_GET_32 (abfd, src->debugInfoOffset);
  dst->numberOfDebugRecords =
    H_GET_32 (abfd, src->numberOfDebugRecords);
  dst->codeStartOffset =
    H_GET_32 (abfd, src->codeStartOffset);
  dst->exitProcedureOffset =
    H_GET_32 (abfd, src->exitProcedureOffset);
  dst->checkUnloadProcedureOffset =
    H_GET_32 (abfd, src->checkUnloadProcedureOffset);
  dst->moduleType =
    H_GET_32 (abfd, src->moduleType);
  dst->flags =
    H_GET_32 (abfd, src->flags);
}

/* Translate an NLM fixed length file header in internal format into
   an NLM file header in external format.  */

static void
nlm_swap_fixed_header_out (abfd, src, realdst)
     bfd *abfd;
     Nlm_Internal_Fixed_Header *src;
     PTR realdst;
{
  Nlm_External_Fixed_Header *dst = (Nlm_External_Fixed_Header *) realdst;
  memset (dst, 0, sizeof *dst);
  memcpy (dst->signature, src->signature, NLM_SIGNATURE_SIZE);
  memcpy (dst->moduleName, src->moduleName, NLM_MODULE_NAME_SIZE);
  H_PUT_32 (abfd, src->version,
	    dst->version);
  H_PUT_32 (abfd, src->codeImageOffset,
	    dst->codeImageOffset);
  H_PUT_32 (abfd, src->codeImageSize,
	    dst->codeImageSize);
  H_PUT_32 (abfd, src->dataImageOffset,
	    dst->dataImageOffset);
  H_PUT_32 (abfd, src->dataImageSize,
	    dst->dataImageSize);
  H_PUT_32 (abfd, src->uninitializedDataSize,
	    dst->uninitializedDataSize);
  H_PUT_32 (abfd, src->customDataOffset,
	    dst->customDataOffset);
  H_PUT_32 (abfd, src->customDataSize,
	    dst->customDataSize);
  H_PUT_32 (abfd, src->moduleDependencyOffset,
	    dst->moduleDependencyOffset);
  H_PUT_32 (abfd, src->numberOfModuleDependencies,
	    dst->numberOfModuleDependencies);
  H_PUT_32 (abfd, src->relocationFixupOffset,
	    dst->relocationFixupOffset);
  H_PUT_32 (abfd, src->numberOfRelocationFixups,
	    dst->numberOfRelocationFixups);
  H_PUT_32 (abfd, src->externalReferencesOffset,
	    dst->externalReferencesOffset);
  H_PUT_32 (abfd, src->numberOfExternalReferences,
	    dst->numberOfExternalReferences);
  H_PUT_32 (abfd, src->publicsOffset,
	    dst->publicsOffset);
  H_PUT_32 (abfd, src->numberOfPublics,
	    dst->numberOfPublics);
  H_PUT_32 (abfd, src->debugInfoOffset,
	    dst->debugInfoOffset);
  H_PUT_32 (abfd, src->numberOfDebugRecords,
	    dst->numberOfDebugRecords);
  H_PUT_32 (abfd, src->codeStartOffset,
	    dst->codeStartOffset);
  H_PUT_32 (abfd, src->exitProcedureOffset,
	    dst->exitProcedureOffset);
  H_PUT_32 (abfd, src->checkUnloadProcedureOffset,
	    dst->checkUnloadProcedureOffset);
  H_PUT_32 (abfd, src->moduleType,
	    dst->moduleType);
  H_PUT_32 (abfd, src->flags,
	    dst->flags);
}
@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright 1993, 2000 Free Software Foundation, Inc.
d51 1
a51 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->version);
d53 1
a53 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->codeImageOffset);
d55 1
a55 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->codeImageSize);
d57 1
a57 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->dataImageOffset);
d59 1
a59 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->dataImageSize);
d61 1
a61 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->uninitializedDataSize);
d63 1
a63 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->customDataOffset);
d65 1
a65 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->customDataSize);
d67 1
a67 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->moduleDependencyOffset);
d69 1
a69 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->numberOfModuleDependencies);
d71 1
a71 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->relocationFixupOffset);
d73 1
a73 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->numberOfRelocationFixups);
d75 1
a75 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->externalReferencesOffset);
d77 1
a77 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->numberOfExternalReferences);
d79 1
a79 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->publicsOffset);
d81 1
a81 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->numberOfPublics);
d83 1
a83 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->debugInfoOffset);
d85 1
a85 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->numberOfDebugRecords);
d87 1
a87 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->codeStartOffset);
d89 1
a89 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->exitProcedureOffset);
d91 1
a91 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->checkUnloadProcedureOffset);
d93 1
a93 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->moduleType);
d95 1
a95 1
    bfd_h_get_32 (abfd, (bfd_byte *) src->flags);
d111 46
a156 46
  bfd_h_put_32 (abfd, (bfd_vma) src->version,
		(bfd_byte *) dst->version);
  bfd_h_put_32 (abfd, (bfd_vma) src->codeImageOffset,
		(bfd_byte *) dst->codeImageOffset);
  bfd_h_put_32 (abfd, (bfd_vma) src->codeImageSize,
		(bfd_byte *) dst->codeImageSize);
  bfd_h_put_32 (abfd, (bfd_vma) src->dataImageOffset,
		(bfd_byte *) dst->dataImageOffset);
  bfd_h_put_32 (abfd, (bfd_vma) src->dataImageSize,
		(bfd_byte *) dst->dataImageSize);
  bfd_h_put_32 (abfd, (bfd_vma) src->uninitializedDataSize,
		(bfd_byte *) dst->uninitializedDataSize);
  bfd_h_put_32 (abfd, (bfd_vma) src->customDataOffset,
		(bfd_byte *) dst->customDataOffset);
  bfd_h_put_32 (abfd, (bfd_vma) src->customDataSize,
		(bfd_byte *) dst->customDataSize);
  bfd_h_put_32 (abfd, (bfd_vma) src->moduleDependencyOffset,
		(bfd_byte *) dst->moduleDependencyOffset);
  bfd_h_put_32 (abfd, (bfd_vma) src->numberOfModuleDependencies,
		(bfd_byte *) dst->numberOfModuleDependencies);
  bfd_h_put_32 (abfd, (bfd_vma) src->relocationFixupOffset,
		(bfd_byte *) dst->relocationFixupOffset);
  bfd_h_put_32 (abfd, (bfd_vma) src->numberOfRelocationFixups,
		(bfd_byte *) dst->numberOfRelocationFixups);
  bfd_h_put_32 (abfd, (bfd_vma) src->externalReferencesOffset,
		(bfd_byte *) dst->externalReferencesOffset);
  bfd_h_put_32 (abfd, (bfd_vma) src->numberOfExternalReferences,
		(bfd_byte *) dst->numberOfExternalReferences);
  bfd_h_put_32 (abfd, (bfd_vma) src->publicsOffset,
		(bfd_byte *) dst->publicsOffset);
  bfd_h_put_32 (abfd, (bfd_vma) src->numberOfPublics,
		(bfd_byte *) dst->numberOfPublics);
  bfd_h_put_32 (abfd, (bfd_vma) src->debugInfoOffset,
		(bfd_byte *) dst->debugInfoOffset);
  bfd_h_put_32 (abfd, (bfd_vma) src->numberOfDebugRecords,
		(bfd_byte *) dst->numberOfDebugRecords);
  bfd_h_put_32 (abfd, (bfd_vma) src->codeStartOffset,
		(bfd_byte *) dst->codeStartOffset);
  bfd_h_put_32 (abfd, (bfd_vma) src->exitProcedureOffset,
		(bfd_byte *) dst->exitProcedureOffset);
  bfd_h_put_32 (abfd, (bfd_vma) src->checkUnloadProcedureOffset,
		(bfd_byte *) dst->checkUnloadProcedureOffset);
  bfd_h_put_32 (abfd, (bfd_vma) src->moduleType,
		(bfd_byte *) dst->moduleType);
  bfd_h_put_32 (abfd, (bfd_vma) src->flags,
		(bfd_byte *) dst->flags);
@


1.1.2.1
log
@vendor-branch-i-fy GNU binutils (2.11.2) to facilitate an update
@
text
@@


1.1.2.2
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@d2 1
a2 1
   Copyright 1993, 2000, 2001 Free Software Foundation, Inc.
d51 1
a51 1
    H_GET_32 (abfd, src->version);
d53 1
a53 1
    H_GET_32 (abfd, src->codeImageOffset);
d55 1
a55 1
    H_GET_32 (abfd, src->codeImageSize);
d57 1
a57 1
    H_GET_32 (abfd, src->dataImageOffset);
d59 1
a59 1
    H_GET_32 (abfd, src->dataImageSize);
d61 1
a61 1
    H_GET_32 (abfd, src->uninitializedDataSize);
d63 1
a63 1
    H_GET_32 (abfd, src->customDataOffset);
d65 1
a65 1
    H_GET_32 (abfd, src->customDataSize);
d67 1
a67 1
    H_GET_32 (abfd, src->moduleDependencyOffset);
d69 1
a69 1
    H_GET_32 (abfd, src->numberOfModuleDependencies);
d71 1
a71 1
    H_GET_32 (abfd, src->relocationFixupOffset);
d73 1
a73 1
    H_GET_32 (abfd, src->numberOfRelocationFixups);
d75 1
a75 1
    H_GET_32 (abfd, src->externalReferencesOffset);
d77 1
a77 1
    H_GET_32 (abfd, src->numberOfExternalReferences);
d79 1
a79 1
    H_GET_32 (abfd, src->publicsOffset);
d81 1
a81 1
    H_GET_32 (abfd, src->numberOfPublics);
d83 1
a83 1
    H_GET_32 (abfd, src->debugInfoOffset);
d85 1
a85 1
    H_GET_32 (abfd, src->numberOfDebugRecords);
d87 1
a87 1
    H_GET_32 (abfd, src->codeStartOffset);
d89 1
a89 1
    H_GET_32 (abfd, src->exitProcedureOffset);
d91 1
a91 1
    H_GET_32 (abfd, src->checkUnloadProcedureOffset);
d93 1
a93 1
    H_GET_32 (abfd, src->moduleType);
d95 1
a95 1
    H_GET_32 (abfd, src->flags);
d111 46
a156 46
  H_PUT_32 (abfd, src->version,
	    dst->version);
  H_PUT_32 (abfd, src->codeImageOffset,
	    dst->codeImageOffset);
  H_PUT_32 (abfd, src->codeImageSize,
	    dst->codeImageSize);
  H_PUT_32 (abfd, src->dataImageOffset,
	    dst->dataImageOffset);
  H_PUT_32 (abfd, src->dataImageSize,
	    dst->dataImageSize);
  H_PUT_32 (abfd, src->uninitializedDataSize,
	    dst->uninitializedDataSize);
  H_PUT_32 (abfd, src->customDataOffset,
	    dst->customDataOffset);
  H_PUT_32 (abfd, src->customDataSize,
	    dst->customDataSize);
  H_PUT_32 (abfd, src->moduleDependencyOffset,
	    dst->moduleDependencyOffset);
  H_PUT_32 (abfd, src->numberOfModuleDependencies,
	    dst->numberOfModuleDependencies);
  H_PUT_32 (abfd, src->relocationFixupOffset,
	    dst->relocationFixupOffset);
  H_PUT_32 (abfd, src->numberOfRelocationFixups,
	    dst->numberOfRelocationFixups);
  H_PUT_32 (abfd, src->externalReferencesOffset,
	    dst->externalReferencesOffset);
  H_PUT_32 (abfd, src->numberOfExternalReferences,
	    dst->numberOfExternalReferences);
  H_PUT_32 (abfd, src->publicsOffset,
	    dst->publicsOffset);
  H_PUT_32 (abfd, src->numberOfPublics,
	    dst->numberOfPublics);
  H_PUT_32 (abfd, src->debugInfoOffset,
	    dst->debugInfoOffset);
  H_PUT_32 (abfd, src->numberOfDebugRecords,
	    dst->numberOfDebugRecords);
  H_PUT_32 (abfd, src->codeStartOffset,
	    dst->codeStartOffset);
  H_PUT_32 (abfd, src->exitProcedureOffset,
	    dst->exitProcedureOffset);
  H_PUT_32 (abfd, src->checkUnloadProcedureOffset,
	    dst->checkUnloadProcedureOffset);
  H_PUT_32 (abfd, src->moduleType,
	    dst->moduleType);
  H_PUT_32 (abfd, src->flags,
	    dst->flags);
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIXÆ, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync of src/gnu with OpenBSD (promised a long time ago)
@
text
@d2 1
a2 1
   Copyright 1993, 2000, 2001 Free Software Foundation, Inc.
d51 1
a51 1
    H_GET_32 (abfd, src->version);
d53 1
a53 1
    H_GET_32 (abfd, src->codeImageOffset);
d55 1
a55 1
    H_GET_32 (abfd, src->codeImageSize);
d57 1
a57 1
    H_GET_32 (abfd, src->dataImageOffset);
d59 1
a59 1
    H_GET_32 (abfd, src->dataImageSize);
d61 1
a61 1
    H_GET_32 (abfd, src->uninitializedDataSize);
d63 1
a63 1
    H_GET_32 (abfd, src->customDataOffset);
d65 1
a65 1
    H_GET_32 (abfd, src->customDataSize);
d67 1
a67 1
    H_GET_32 (abfd, src->moduleDependencyOffset);
d69 1
a69 1
    H_GET_32 (abfd, src->numberOfModuleDependencies);
d71 1
a71 1
    H_GET_32 (abfd, src->relocationFixupOffset);
d73 1
a73 1
    H_GET_32 (abfd, src->numberOfRelocationFixups);
d75 1
a75 1
    H_GET_32 (abfd, src->externalReferencesOffset);
d77 1
a77 1
    H_GET_32 (abfd, src->numberOfExternalReferences);
d79 1
a79 1
    H_GET_32 (abfd, src->publicsOffset);
d81 1
a81 1
    H_GET_32 (abfd, src->numberOfPublics);
d83 1
a83 1
    H_GET_32 (abfd, src->debugInfoOffset);
d85 1
a85 1
    H_GET_32 (abfd, src->numberOfDebugRecords);
d87 1
a87 1
    H_GET_32 (abfd, src->codeStartOffset);
d89 1
a89 1
    H_GET_32 (abfd, src->exitProcedureOffset);
d91 1
a91 1
    H_GET_32 (abfd, src->checkUnloadProcedureOffset);
d93 1
a93 1
    H_GET_32 (abfd, src->moduleType);
d95 1
a95 1
    H_GET_32 (abfd, src->flags);
d111 46
a156 46
  H_PUT_32 (abfd, src->version,
	    dst->version);
  H_PUT_32 (abfd, src->codeImageOffset,
	    dst->codeImageOffset);
  H_PUT_32 (abfd, src->codeImageSize,
	    dst->codeImageSize);
  H_PUT_32 (abfd, src->dataImageOffset,
	    dst->dataImageOffset);
  H_PUT_32 (abfd, src->dataImageSize,
	    dst->dataImageSize);
  H_PUT_32 (abfd, src->uninitializedDataSize,
	    dst->uninitializedDataSize);
  H_PUT_32 (abfd, src->customDataOffset,
	    dst->customDataOffset);
  H_PUT_32 (abfd, src->customDataSize,
	    dst->customDataSize);
  H_PUT_32 (abfd, src->moduleDependencyOffset,
	    dst->moduleDependencyOffset);
  H_PUT_32 (abfd, src->numberOfModuleDependencies,
	    dst->numberOfModuleDependencies);
  H_PUT_32 (abfd, src->relocationFixupOffset,
	    dst->relocationFixupOffset);
  H_PUT_32 (abfd, src->numberOfRelocationFixups,
	    dst->numberOfRelocationFixups);
  H_PUT_32 (abfd, src->externalReferencesOffset,
	    dst->externalReferencesOffset);
  H_PUT_32 (abfd, src->numberOfExternalReferences,
	    dst->numberOfExternalReferences);
  H_PUT_32 (abfd, src->publicsOffset,
	    dst->publicsOffset);
  H_PUT_32 (abfd, src->numberOfPublics,
	    dst->numberOfPublics);
  H_PUT_32 (abfd, src->debugInfoOffset,
	    dst->debugInfoOffset);
  H_PUT_32 (abfd, src->numberOfDebugRecords,
	    dst->numberOfDebugRecords);
  H_PUT_32 (abfd, src->codeStartOffset,
	    dst->codeStartOffset);
  H_PUT_32 (abfd, src->exitProcedureOffset,
	    dst->exitProcedureOffset);
  H_PUT_32 (abfd, src->checkUnloadProcedureOffset,
	    dst->checkUnloadProcedureOffset);
  H_PUT_32 (abfd, src->moduleType,
	    dst->moduleType);
  H_PUT_32 (abfd, src->flags,
	    dst->flags);
@


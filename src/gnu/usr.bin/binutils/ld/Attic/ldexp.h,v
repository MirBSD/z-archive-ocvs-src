head	1.3;
access;
symbols
	binutils-2_15:1.1.2.3
	cvs-200406091940:1.1.1.2
	MIRBSD_7quater:1.2
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.2.0.6
	MIRBSD_7:1.2.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.2
	MIRBSD_7_DEV:1.2.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	binutils_2_14:1.1.2.2
	binutils_2_11_2:1.1.2.1
	FSF:1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2004.08.11.21.20.15;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2003.09.23.21.05.34;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.41.01;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2003.03.22.17.41.01;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.06.09.20.25.08;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2003.09.23.15.43.20;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.09.23.16.08.42;	author tg;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2004.07.15.17.18.18;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove old binutils
@
text
@/* ldexp.h -
   Copyright 1991, 1992, 1993, 1994, 1995, 1998, 1999, 2000, 2001, 2002
   Free Software Foundation, Inc.

   This file is part of GLD, the Gnu Linker.

   GLD is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   GLD is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GLD; see the file COPYING.  If not, write to the Free
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */

#ifndef LDEXP_H
#define LDEXP_H

/* The result of an expression tree */
typedef struct {
  bfd_vma value;
  char *str;
  struct lang_output_section_statement_struct *section;
  bfd_boolean valid_p;
} etree_value_type;

typedef struct {
  int node_code;
  enum {
    etree_binary,
    etree_trinary,
    etree_unary,
    etree_name,
    etree_assign,
    etree_provide,
    etree_provided,
    etree_undef,
    etree_unspec,
    etree_value,
    etree_assert,
    etree_rel
  } node_class;
} node_type;

typedef union etree_union {
  node_type type;
  struct {
    node_type type;
    union etree_union *lhs;
    union etree_union *rhs;
  } binary;
  struct {
    node_type type;
    union etree_union *cond;
    union etree_union *lhs;
    union etree_union *rhs;
  } trinary;
  struct {
    node_type type;
    const char *dst;
    union etree_union *src;
  } assign;
  struct {
    node_type type;
    union etree_union *child;
  } unary;
  struct {
    node_type type;
    const char *name;
  } name;
  struct {
    node_type type;
    bfd_vma value;
    char *str;
  } value;
  struct {
    node_type type;
    asection *section;
    bfd_vma value;
  } rel;
  struct {
    node_type type;
    union etree_union *child;
    const char *message;
  } assert_s;
} etree_type;

extern struct exp_data_seg {
  enum {
    exp_dataseg_none,
    exp_dataseg_align_seen,
    exp_dataseg_end_seen,
    exp_dataseg_adjust
  } phase;
  bfd_vma base, end, pagesize;
} exp_data_seg;

typedef struct _fill_type fill_type;

etree_type *exp_intop
  PARAMS ((bfd_vma));
etree_type *exp_bigintop
  PARAMS ((bfd_vma, char *));
etree_type *exp_relop
  PARAMS ((asection *, bfd_vma));
etree_value_type invalid
  PARAMS ((void));
etree_value_type exp_fold_tree
  PARAMS ((etree_type *, struct lang_output_section_statement_struct *,
	   lang_phase_type, bfd_vma, bfd_vma *));
etree_type *exp_binop
  PARAMS ((int, etree_type *, etree_type *));
etree_type *exp_trinop
  PARAMS ((int,etree_type *, etree_type *, etree_type *));
etree_type *exp_unop
  PARAMS ((int, etree_type *));
etree_type *exp_nameop
  PARAMS ((int, const char *));
etree_type *exp_assop
  PARAMS ((int, const char *, etree_type *));
etree_type *exp_provide
  PARAMS ((const char *, etree_type *));
etree_type *exp_assert
  PARAMS ((etree_type *, const char *));
void exp_print_tree
  PARAMS ((etree_type *));
bfd_vma exp_get_vma
  PARAMS ((etree_type *, bfd_vma, char *, lang_phase_type));
int exp_get_value_int
  PARAMS ((etree_type *, int, char *, lang_phase_type));
fill_type *exp_get_fill
  PARAMS ((etree_type *, fill_type *, char *, lang_phase_type));
bfd_vma exp_get_abs_int
  PARAMS ((etree_type *, int, char *, lang_phase_type));
bfd_vma align_n
  PARAMS ((bfd_vma, bfd_vma));

#endif
@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright 1991, 1992, 1993, 1994, 1995, 1998, 1999, 2000, 2001
d28 1
d30 1
a30 1
  boolean valid_p;
d35 14
a48 12
  enum { etree_binary,
	   etree_trinary,
	   etree_unary,
	   etree_name,
	   etree_assign,
	   etree_provide,
	   etree_provided,
	   etree_undef,
	   etree_unspec,
	   etree_value,
	   etree_assert,
	   etree_rel } node_class;
d66 1
a66 1
    CONST char *dst;
a68 1

d75 1
a75 1
    CONST char *name;
d80 1
d94 49
a142 18
etree_type *exp_intop PARAMS ((bfd_vma));
etree_type *exp_relop PARAMS ((asection *, bfd_vma));
etree_value_type invalid PARAMS ((void));
etree_value_type exp_fold_tree PARAMS ((etree_type *, struct
					lang_output_section_statement_struct *,
					lang_phase_type,
					bfd_vma, bfd_vma *));
etree_type *exp_binop PARAMS ((int, etree_type *, etree_type *));
etree_type *exp_trinop PARAMS ((int,etree_type *, etree_type *, etree_type *));
etree_type *exp_unop PARAMS ((int, etree_type *));
etree_type *exp_nameop PARAMS ((int, CONST char *));
etree_type *exp_assop PARAMS ((int, CONST char *, etree_type *));
etree_type *exp_provide PARAMS ((const char *, etree_type *));
etree_type *exp_assert PARAMS ((etree_type *, const char *));
void exp_print_tree PARAMS ((etree_type *));
bfd_vma exp_get_vma PARAMS ((etree_type *, bfd_vma, char *, lang_phase_type));
int exp_get_value_int PARAMS ((etree_type *, int, char *, lang_phase_type));
bfd_vma exp_get_abs_int PARAMS ((etree_type *, int, char *, lang_phase_type));
@


1.1.2.1
log
@vendor-branch-i-fy GNU binutils (2.11.2) to facilitate an update
@
text
@@


1.1.2.2
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@d2 1
a2 1
   Copyright 1991, 1992, 1993, 1994, 1995, 1998, 1999, 2000, 2001, 2002
a27 1
  char *str;
d29 1
a29 1
  bfd_boolean valid_p;
d34 12
a45 14
  enum {
    etree_binary,
    etree_trinary,
    etree_unary,
    etree_name,
    etree_assign,
    etree_provide,
    etree_provided,
    etree_undef,
    etree_unspec,
    etree_value,
    etree_assert,
    etree_rel
  } node_class;
d63 1
a63 1
    const char *dst;
d66 1
d73 1
a73 1
    const char *name;
a77 1
    char *str;
d91 18
a108 49
extern struct exp_data_seg {
  enum {
    exp_dataseg_none,
    exp_dataseg_align_seen,
    exp_dataseg_end_seen,
    exp_dataseg_adjust
  } phase;
  bfd_vma base, end, pagesize;
} exp_data_seg;

typedef struct _fill_type fill_type;

etree_type *exp_intop
  PARAMS ((bfd_vma));
etree_type *exp_bigintop
  PARAMS ((bfd_vma, char *));
etree_type *exp_relop
  PARAMS ((asection *, bfd_vma));
etree_value_type invalid
  PARAMS ((void));
etree_value_type exp_fold_tree
  PARAMS ((etree_type *, struct lang_output_section_statement_struct *,
	   lang_phase_type, bfd_vma, bfd_vma *));
etree_type *exp_binop
  PARAMS ((int, etree_type *, etree_type *));
etree_type *exp_trinop
  PARAMS ((int,etree_type *, etree_type *, etree_type *));
etree_type *exp_unop
  PARAMS ((int, etree_type *));
etree_type *exp_nameop
  PARAMS ((int, const char *));
etree_type *exp_assop
  PARAMS ((int, const char *, etree_type *));
etree_type *exp_provide
  PARAMS ((const char *, etree_type *));
etree_type *exp_assert
  PARAMS ((etree_type *, const char *));
void exp_print_tree
  PARAMS ((etree_type *));
bfd_vma exp_get_vma
  PARAMS ((etree_type *, bfd_vma, char *, lang_phase_type));
int exp_get_value_int
  PARAMS ((etree_type *, int, char *, lang_phase_type));
fill_type *exp_get_fill
  PARAMS ((etree_type *, fill_type *, char *, lang_phase_type));
bfd_vma exp_get_abs_int
  PARAMS ((etree_type *, int, char *, lang_phase_type));
bfd_vma align_n
  PARAMS ((bfd_vma, bfd_vma));
@


1.1.2.3
log
@GNU Binutils, version 2.15
@
text
@d2 2
a3 2
   Copyright 1991, 1992, 1993, 1994, 1995, 1998, 1999, 2000, 2001, 2002,
   2003, 2004 Free Software Foundation, Inc.
d107 1
a107 1
  (bfd_vma);
d109 1
a109 1
  (bfd_vma, char *);
d111 1
a111 1
  (asection *, bfd_vma);
d113 1
a113 1
  (void);
d115 2
a116 2
  (etree_type *, struct lang_output_section_statement_struct *,
   lang_phase_type, bfd_vma, bfd_vma *);
d118 1
a118 1
  (int, etree_type *, etree_type *);
d120 1
a120 1
  (int,etree_type *, etree_type *, etree_type *);
d122 1
a122 1
  (int, etree_type *);
d124 1
a124 1
  (int, const char *);
d126 1
a126 1
  (int, const char *, etree_type *);
d128 1
a128 1
  (const char *, etree_type *);
d130 1
a130 1
  (etree_type *, const char *);
d132 1
a132 1
  (etree_type *);
d134 1
a134 1
  (etree_type *, bfd_vma, char *, lang_phase_type);
d136 1
a136 1
  (etree_type *, int, char *, lang_phase_type);
d138 1
a138 1
  (etree_type *, fill_type *, char *, lang_phase_type);
d140 3
a142 1
  (etree_type *, int, char *, lang_phase_type);
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIXÆ, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync of src/gnu with OpenBSD (promised a long time ago)
@
text
@d2 1
a2 1
   Copyright 1991, 1992, 1993, 1994, 1995, 1998, 1999, 2000, 2001, 2002
a27 1
  char *str;
d29 1
a29 1
  bfd_boolean valid_p;
d34 12
a45 14
  enum {
    etree_binary,
    etree_trinary,
    etree_unary,
    etree_name,
    etree_assign,
    etree_provide,
    etree_provided,
    etree_undef,
    etree_unspec,
    etree_value,
    etree_assert,
    etree_rel
  } node_class;
d63 1
a63 1
    const char *dst;
d66 1
d73 1
a73 1
    const char *name;
a77 1
    char *str;
d91 18
a108 49
extern struct exp_data_seg {
  enum {
    exp_dataseg_none,
    exp_dataseg_align_seen,
    exp_dataseg_end_seen,
    exp_dataseg_adjust
  } phase;
  bfd_vma base, end, pagesize;
} exp_data_seg;

typedef struct _fill_type fill_type;

etree_type *exp_intop
  PARAMS ((bfd_vma));
etree_type *exp_bigintop
  PARAMS ((bfd_vma, char *));
etree_type *exp_relop
  PARAMS ((asection *, bfd_vma));
etree_value_type invalid
  PARAMS ((void));
etree_value_type exp_fold_tree
  PARAMS ((etree_type *, struct lang_output_section_statement_struct *,
	   lang_phase_type, bfd_vma, bfd_vma *));
etree_type *exp_binop
  PARAMS ((int, etree_type *, etree_type *));
etree_type *exp_trinop
  PARAMS ((int,etree_type *, etree_type *, etree_type *));
etree_type *exp_unop
  PARAMS ((int, etree_type *));
etree_type *exp_nameop
  PARAMS ((int, const char *));
etree_type *exp_assop
  PARAMS ((int, const char *, etree_type *));
etree_type *exp_provide
  PARAMS ((const char *, etree_type *));
etree_type *exp_assert
  PARAMS ((etree_type *, const char *));
void exp_print_tree
  PARAMS ((etree_type *));
bfd_vma exp_get_vma
  PARAMS ((etree_type *, bfd_vma, char *, lang_phase_type));
int exp_get_value_int
  PARAMS ((etree_type *, int, char *, lang_phase_type));
fill_type *exp_get_fill
  PARAMS ((etree_type *, fill_type *, char *, lang_phase_type));
bfd_vma exp_get_abs_int
  PARAMS ((etree_type *, int, char *, lang_phase_type));
bfd_vma align_n
  PARAMS ((bfd_vma, bfd_vma));
@


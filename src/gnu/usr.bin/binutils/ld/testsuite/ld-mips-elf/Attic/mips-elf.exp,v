head	1.2;
access;
symbols
	binutils-2_15:1.1.2.2
	binutils_2_14:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2003.09.23.21.06.56;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.09.23.16.09.03;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.09.23.16.09.03;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2004.07.15.17.19.45;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@# Expect script for MIPS ELF linker tests
#   Copyright 2002, 2003 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#

if { [istarget mips*-*-*] } then {
    set has_newabi [expr [istarget *-*-irix6*] || [istarget mips64*-*-linux*]]

    set elf [expr [istarget mips*-*-elf] || [istarget mips*-*-linux*] || \
		  [istarget mips*-*-netbsd] || [istarget mips*-*-irix*]]
    set linux_gnu [expr [istarget mips*-*-linux*]]
    set embedded_elf [expr [istarget mips*-*-elf]]


    if { $elf } {
	# Check MIPS16 markings being passed through link.
	run_dump_test "mips16-1"

	# MIPS branch offset final link checking.
	run_dump_test "branch-misc-1"

	# Test multi-got link.
	run_dump_test "multi-got-1"
 
	if $has_newabi {
	    run_dump_test "elf-rel-got-n32"
	    run_dump_test "elf-rel-xgot-n32"
	    run_dump_test "elf-rel-got-n64"
	    run_dump_test "elf-rel-xgot-n64"

	    run_dump_test "relax-jalr-n32"
	    run_dump_test "relax-jalr-n32-shared"
	    run_dump_test "relax-jalr-n64"
	    run_dump_test "relax-jalr-n64-shared"
	}
    }

    if { $linux_gnu } {
	run_dump_test "rel32-o32"
	run_dump_test "rel32-n32"
	run_dump_test "rel64"
    }


    if { $embedded_elf } {
	# Check basic Embedded-PIC PC-relative HI/LO relocs.
	run_dump_test "empic1-ln"
	run_dump_test "empic1-lp"
	run_dump_test "empic1-mn"
	run_dump_test "empic1-mp"
	run_dump_test "empic1-sn"
	run_dump_test "empic1-sp"

	# Embedded-PIC PC-relative HI/LO reloc edge-case regression tests.
	# As of 2001-12-26, the linker botches the fwd-0 and rev-1 tests.
	run_dump_test "empic2-fwd-0"
	run_dump_test "empic2-fwd-1"
	run_dump_test "empic2-rev-0"
	run_dump_test "empic2-rev-1"

	# Check generation of embedded relocs section.
	run_dump_test "emrelocs-eb"
	run_dump_test "emrelocs-el"

	run_dump_test "region1"
    }
}
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@@


1.1.2.2
log
@GNU Binutils, version 2.15
@
text
@d19 2
a20 3
if {![istarget mips*-*-*] || ![is_elf_format]} {
    return
}
d22 28
a49 3
set has_newabi [expr [istarget *-*-irix6*] || [istarget mips64*-*-linux*]]
set linux_gnu [expr [istarget mips*-*-linux*]]
set embedded_elf [expr [istarget mips*-*-elf]]
d51 5
a56 5
# Check MIPS16 markings being passed through link.
run_dump_test "mips16-1"

# MIPS branch offset final link checking.
run_dump_test "branch-misc-1"
d58 19
a76 13
# Test multi-got link.
run_dump_test "multi-got-1"

if $has_newabi {
    run_dump_test "elf-rel-got-n32"
    run_dump_test "elf-rel-xgot-n32"
    if { $linux_gnu } {
	run_dump_test "elf-rel-got-n64-linux"
	run_dump_test "elf-rel-xgot-n64-linux"
    } else {
	run_dump_test "elf-rel-got-n64"
	run_dump_test "elf-rel-xgot-n64"
    }
d78 1
a78 45
    run_dump_test "relax-jalr-n32"
    run_dump_test "relax-jalr-n32-shared"
    run_dump_test "relax-jalr-n64"
    run_dump_test "relax-jalr-n64-shared"
}

if { $linux_gnu } {
    run_dump_test "rel32-o32"
    run_dump_test "rel32-n32"
    run_dump_test "rel64"
}

if { $embedded_elf } {
    # Check basic Embedded-PIC PC-relative HI/LO relocs.
    run_dump_test "empic1-ln"
    run_dump_test "empic1-lp"
    run_dump_test "empic1-mn"
    run_dump_test "empic1-mp"
    run_dump_test "empic1-sn"
    run_dump_test "empic1-sp"

    # Embedded-PIC PC-relative HI/LO reloc edge-case regression tests.
    # As of 2001-12-26, the linker botches the fwd-0 and rev-1 tests.
    run_dump_test "empic2-fwd-0"
    run_dump_test "empic2-fwd-1"
    run_dump_test "empic2-rev-0"
    run_dump_test "empic2-rev-1"

    # Check generation of embedded relocs section.
    run_dump_test "emrelocs-eb"
    run_dump_test "emrelocs-el"

    run_dump_test "region1"
}

if $embedded_elf {
    # This could work on other targets too, but would need the appropriate
    # ld -m switch.
    run_dump_test "reloc-1-rel"
}
if $has_newabi {
    run_dump_test "reloc-1-n32"
    if $linux_gnu {
	# Uses a linux-specific ld -m switch
	run_dump_test "reloc-1-n64"
a79 5
}
run_dump_test "reloc-2"
if $embedded_elf {
    run_dump_test "reloc-3-r"
    run_dump_test "reloc-3-srec"
@


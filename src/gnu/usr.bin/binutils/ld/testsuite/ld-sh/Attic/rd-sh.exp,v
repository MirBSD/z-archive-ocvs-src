head	1.2;
access;
symbols
	binutils-2_15:1.1.2.2
	binutils_2_14:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2003.09.23.21.07.36;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.09.23.16.09.14;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.09.23.16.09.14;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2004.07.15.17.20.27;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@# Expect script for run_dump_test based ld-sh tests.
#   Copyright 2001 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# Written by Hans-Peter Nilsson (hp@@bitrange.com)
#

# This file is kept separate from sh.exp, because having it separate
# simplifies selective testing, like in "make check-ld
# RUNTESTFLAGS=rd-sh.exp=shared-1".  It is assumed that sh.exp is a place
# for constructs where the name of the test is harder to extract and
# select than here.

if ![istarget sh*-*-*] {
    return
}

global ASFLAGS
set asflags_save "$ASFLAGS"

if {[istarget sh64*-*-*] || [istarget sh5*-*-*]} then {
    set ASFLAGS "$ASFLAGS -isa=SHcompact"
}

set rd_test_list [lsort [glob -nocomplain $srcdir/$subdir/*.d]]
foreach shtest $rd_test_list {
    # We need to strip the ".d", but can leave the dirname.
    verbose [file rootname $shtest]
    run_dump_test [file rootname $shtest]
    if [string match $srcdir/$subdir/*-dso.d $shtest] {
	# Copy the output of the DSO-createing test to .so file.
	# Notice that a DSO-creating test must preceed the tests
	# which need that DSO in sort-order by name.
	set cmd "cp tmpdir/dump tmpdir/[file rootname [file tail $shtest]].so"
	send_log "$cmd\n"
	set cmdret [catch "exec $cmd" comp_output]
	send_log "$comp_output\n"
	# FIXME: What if it fails?  Need we do something?
    }
}
set ASFLAGS "$asflags_save"
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@@


1.1.2.2
log
@GNU Binutils, version 2.15
@
text
@a31 1
global LDFLAGS
a32 1
set ldflags_save "$LDFLAGS"
a35 7
    if [istarget sh64*-*-linux*] {
        set LDFLAGS "$LDFLAGS -mshlelf32_linux"
    } elseif { [istarget sh64*-*-netbsd*] || [istarget sh5*-*-netbsd*] } {
        set LDFLAGS "$LDFLAGS -mshlelf32_nbsd -e_start"
    } else {
        set LDFLAGS "$LDFLAGS -mshlelf32"
    }
a54 1
set LDFLAGS "$ldflags_save"
@


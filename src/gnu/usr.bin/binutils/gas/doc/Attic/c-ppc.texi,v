head	1.2;
access;
symbols
	binutils-2_15:1.1.2.2
	cvs-200406091940:1.1.1.1
	openbsd:1.1.1
	MIRBSD_7quater:1.1.2.1
	MIRBSD_7_ALPHA:1.1.2.1.0.6
	MIRBSD_7:1.1.2.1.0.4
	MIRBSD_7ter:1.1.2.1
	MIRBSD_7_DEV:1.1.2.1.0.2
	binutils_2_14:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2003.11.04.17.25.50;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.09.23.16.05.46;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2004.06.09.20.31.48;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2003.09.23.16.05.46;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2004.07.15.17.11.44;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Yours sincerely, licence auditor, strikes again.


Remove stuff under the so-called "GNU Free Documentation License".

You are actually even breaching the licence when you are
storing GFDL-licenced documents on an encrypted filesystem,
or "even  storing  it  on  a  file-sharing  system  with
non-world-readable permissions", according to the information
found at http://home.twcny.rr.com/nerode/neroden/fdl.html
via Slashdot.

I am thinking whether to adopt the (amended) Debian Social
Contract, and either the DFSG or the OSD (or both) for MirOS.
(see the /. story)

src/gnu/libstdc++:

| The Docs: FDL
|
|    The documentation shipped with the library and made available over the
|    web,   including   the  pages  generated  from  source  comments,  are
|    copyrighted  by  the  Free  Software  Foundation, and placed under the
|    [3]GNU   Free   Documentation   License  version  1.1.  There  are  no
|    Front-Cover Texts, no Back-Cover Texts, and no Invariant Sections.

Of course this doesn't apply to documentation for libstdc++ generated by
ourselfes from GPL'd or LGPL'd files, because the GFDL is incompatible
with both of them.


Hint: if you can dig out older versions of the GNU tools man pages, such
as gcc 3.0 and binutils 2.12/2.13 (for example), which are not yet GFDL
licenced, please give me a hint (I'm not actively searching myself now)
or mail them to me, and be sure I'll commit them, together with a warning
about inactuality.
@
text
@@@c Copyright 2001, 2002
@@c Free Software Foundation, Inc.
@@c This is part of the GAS manual.
@@c For copying conditions, see the file as.texinfo.
@@ifset GENERIC
@@page
@@node PPC-Dependent
@@chapter PowerPC Dependent Features
@@end ifset
@@ifclear GENERIC
@@node Machine Dependencies
@@chapter PowerPC Dependent Features
@@end ifclear

@@cindex PowerPC support
@@menu
* PowerPC-Opts::                Options
@@end menu

@@node PowerPC-Opts
@@section Options

@@cindex options for PowerPC
@@cindex PowerPC options
@@cindex architectures, PowerPC
@@cindex PowerPC architectures
The PowerPC chip family includes several successive levels, using the same
core instruction set, but including a few additional instructions at
each level.  There are exceptions to this however.  For details on what
instructions each variant supports, please see the chip's architecture
reference manual.

The following table lists all available PowerPC options.

@@table @@code
@@item -mpwrx | -mpwr2
Generate code for POWER/2 (RIOS2).

@@item -mpwr
Generate code for POWER (RIOS1)

@@item -m601
Generate code for PowerPC 601.

@@item -mppc, -mppc32, -m603, -m604
Generate code for PowerPC 603/604.

@@item -m403, -m405
Generate code for PowerPC 403/405.

@@item -m7400, -m7410, -m7450, -m7455
Generate code for PowerPC 7400/7410/7450/7455.

@@item -mppc64, -m620
Generate code for PowerPC 620/625/630.

@@item -mppc64bridge
Generate code for PowerPC 64, including bridge insns.

@@item -mbooke64
Generate code for 64-bit BookE.

@@item -mbooke, mbooke32
Generate code for 32-bit BookE.

@@item -maltivec
Generate code for processors with AltiVec instructions.

@@item -mpower4
Generate code for Power4 architecture.

@@item -mcom
Generate code Power/PowerPC common instructions.

@@item -many
Generate code for any architecture (PWR/PWRX/PPC).

@@item -mregnames
Allow symbolic names for registers.

@@item -mno-regnames
Do not allow symbolic names for registers.

@@item -mrelocatable
Support for GCC's -mrelocatble option.

@@item -mrelocatable-lib
Support for GCC's -mrelocatble-lib option.

@@item -memb
Set PPC_EMB bit in ELF flags.

@@item -mlittle, -mlittle-endian
Generate code for a little endian machine.

@@item -mbig, -mbig-endian
Generate code for a big endian machine.

@@item -msolaris
Generate code for Solaris.

@@item -mno-solaris
Do not generate code for Solaris.
@@end table
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Sync of src/gnu with OpenBSD (promised a long time ago)
@
text
@@


1.1.2.1
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@@


1.1.2.2
log
@GNU Binutils, version 2.15
@
text
@a17 1
* PowerPC-Pseudo::              PowerPC Assembler Directives
a50 3
@@item -m440
Generate code for PowerPC 440.  BookE and some 405 instructions.

a103 18
@@end table


@@node PowerPC-Pseudo
@@section PowerPC Assembler Directives

@@cindex directives for PowerPC
@@cindex PowerPC directives
A number of assembler directives are available for PowerPC.  The
following table is far from complete.

@@table @@code
@@item .machine "string"
This directive allows you to change the machine for which code is
generated.  @@code{"string"} may be any of the -m cpu selection options
(without the -m) enclosed in double quotes, @@code{"push"}, or
@@code{"pop"}.  @@code{.machine "push"} saves the currently selected
cpu, which may be restored with @@code{.machine "pop"}.
@


head	1.3;
access;
symbols
	binutils-2_15:1.1.2.2
	cvs-200406091940:1.1.1.2
	MIRBSD_7quater:1.2
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.2.0.6
	MIRBSD_7:1.2.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.2
	MIRBSD_7_DEV:1.2.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	binutils_2_14:1.1.2.2
	binutils_2_11_2:1.1.2.1
	FSF:1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2003.11.04.17.25.52;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2003.09.23.21.02.17;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.39.37;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2003.03.22.17.39.37;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.06.09.20.31.47;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2003.09.23.15.41.44;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.09.23.16.05.47;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Yours sincerely, licence auditor, strikes again.


Remove stuff under the so-called "GNU Free Documentation License".

You are actually even breaching the licence when you are
storing GFDL-licenced documents on an encrypted filesystem,
or "even  storing  it  on  a  file-sharing  system  with
non-world-readable permissions", according to the information
found at http://home.twcny.rr.com/nerode/neroden/fdl.html
via Slashdot.

I am thinking whether to adopt the (amended) Debian Social
Contract, and either the DFSG or the OSD (or both) for MirOS.
(see the /. story)

src/gnu/libstdc++:

| The Docs: FDL
|
|    The documentation shipped with the library and made available over the
|    web,   including   the  pages  generated  from  source  comments,  are
|    copyrighted  by  the  Free  Software  Foundation, and placed under the
|    [3]GNU   Free   Documentation   License  version  1.1.  There  are  no
|    Front-Cover Texts, no Back-Cover Texts, and no Invariant Sections.

Of course this doesn't apply to documentation for libstdc++ generated by
ourselfes from GPL'd or LGPL'd files, because the GFDL is incompatible
with both of them.


Hint: if you can dig out older versions of the GNU tools man pages, such
as gcc 3.0 and binutils 2.12/2.13 (for example), which are not yet GFDL
licenced, please give me a hint (I'm not actively searching myself now)
or mail them to me, and be sure I'll commit them, together with a warning
about inactuality.
@
text
@@@c Copyright 1991, 1992, 1993, 1994, 1995, 1997, 1999
@@c Free Software Foundation, Inc.
@@c This is part of the GAS manual.
@@c For copying conditions, see the file as.texinfo.
@@ifset GENERIC
@@page
@@node Sparc-Dependent
@@chapter SPARC Dependent Features
@@end ifset
@@ifclear GENERIC
@@node Machine Dependencies
@@chapter SPARC Dependent Features
@@end ifclear

@@cindex SPARC support
@@menu
* Sparc-Opts::                  Options
* Sparc-Aligned-Data::		Option to enforce aligned data
* Sparc-Float::                 Floating Point
* Sparc-Directives::            Sparc Machine Directives
@@end menu

@@node Sparc-Opts
@@section Options

@@cindex options for SPARC
@@cindex SPARC options
@@cindex architectures, SPARC
@@cindex SPARC architectures
The SPARC chip family includes several successive levels, using the same
core instruction set, but including a few additional instructions at
each level.  There are exceptions to this however.  For details on what
instructions each variant supports, please see the chip's architecture
reference manual.

By default, @@code{@@value{AS}} assumes the core instruction set (SPARC
v6), but ``bumps'' the architecture level as needed: it switches to
successively higher architectures as it encounters instructions that
only exist in the higher levels.

If not configured for SPARC v9 (@@code{sparc64-*-*}) GAS will not bump
passed sparclite by default, an option must be passed to enable the
v9 instructions.

GAS treats sparclite as being compatible with v8, unless an architecture
is explicitly requested.  SPARC v9 is always incompatible with sparclite.

@@c The order here is the same as the order of enum sparc_opcode_arch_val
@@c to give the user a sense of the order of the "bumping".

@@table @@code
@@kindex -Av6
@@kindex Av7
@@kindex -Av8
@@kindex -Asparclet
@@kindex -Asparclite
@@kindex -Av9
@@kindex -Av9a
@@item -Av6 | -Av7 | -Av8 | -Asparclet | -Asparclite
@@itemx -Av8plus | -Av8plusa | -Av9 | -Av9a
Use one of the @@samp{-A} options to select one of the SPARC
architectures explicitly.  If you select an architecture explicitly,
@@code{@@value{AS}} reports a fatal error if it encounters an instruction
or feature requiring an incompatible or higher level.

@@samp{-Av8plus} and @@samp{-Av8plusa} select a 32 bit environment.

@@samp{-Av9} and @@samp{-Av9a} select a 64 bit environment and are not
available unless GAS is explicitly configured with 64 bit environment
support.

@@samp{-Av8plusa} and @@samp{-Av9a} enable the SPARC V9 instruction set with
UltraSPARC extensions.

@@item -xarch=v8plus | -xarch=v8plusa
For compatibility with the Solaris v9 assembler.  These options are
equivalent to -Av8plus and -Av8plusa, respectively.

@@item -bump
Warn whenever it is necessary to switch to another level.
If an architecture level is explicitly requested, GAS will not issue
warnings until that level is reached, and will then bump the level
as required (except between incompatible levels).

@@item -32 | -64
Select the word size, either 32 bits or 64 bits.
These options are only available with the ELF object file format,
and require that the necessary BFD support has been included.
@@end table

@@node Sparc-Aligned-Data
@@section Enforcing aligned data

@@cindex data alignment on SPARC
@@cindex SPARC data alignment
SPARC GAS normally permits data to be misaligned.  For example, it
permits the @@code{.long} pseudo-op to be used on a byte boundary.
However, the native SunOS and Solaris assemblers issue an error when
they see misaligned data.

@@kindex --enforce-aligned-data
You can use the @@code{--enforce-aligned-data} option to make SPARC GAS
also issue an error about misaligned data, just as the SunOS and Solaris
assemblers do.

The @@code{--enforce-aligned-data} option is not the default because gcc
issues misaligned data pseudo-ops when it initializes certain packed
data structures (structures defined using the @@code{packed} attribute).
You may have to assemble with GAS in order to initialize packed data
structures in your own code.

@@ignore
@@c FIXME: (sparc) Fill in "syntax" section!
@@c subsection syntax
I don't know anything about Sparc syntax.  Someone who does
will have to write this section.
@@end ignore

@@node Sparc-Float
@@section Floating Point

@@cindex floating point, SPARC (@@sc{ieee})
@@cindex SPARC floating point (@@sc{ieee})
The Sparc uses @@sc{ieee} floating-point numbers.

@@node Sparc-Directives
@@section Sparc Machine Directives

@@cindex SPARC machine directives
@@cindex machine directives, SPARC
The Sparc version of @@code{@@value{AS}} supports the following additional
machine directives:

@@table @@code
@@cindex @@code{align} directive, SPARC
@@item .align
This must be followed by the desired alignment in bytes.

@@cindex @@code{common} directive, SPARC
@@item .common
This must be followed by a symbol name, a positive number, and
@@code{"bss"}.  This behaves somewhat like @@code{.comm}, but the
syntax is different.

@@cindex @@code{half} directive, SPARC
@@item .half
This is functionally identical to @@code{.short}.

@@cindex @@code{nword} directive, SPARC
@@item .nword
On the Sparc, the @@code{.nword} directive produces native word sized value,
ie. if assembling with -32 it is equivalent to @@code{.word}, if assembling
with -64 it is equivalent to @@code{.xword}.

@@cindex @@code{proc} directive, SPARC
@@item .proc
This directive is ignored.  Any text following it on the same
line is also ignored.

@@cindex @@code{register} directive, SPARC
@@item .register
This directive declares use of a global application or system register.
It must be followed by a register name %g2, %g3, %g6 or %g7, comma and
the symbol name for that register.  If symbol name is @@code{#scratch},
it is a scratch register, if it is @@code{#ignore}, it just suppresses any
errors about using undeclared global register, but does not emit any
information about it into the object file.  This can be useful e.g. if you
save the register before use and restore it after.

@@cindex @@code{reserve} directive, SPARC
@@item .reserve
This must be followed by a symbol name, a positive number, and
@@code{"bss"}.  This behaves somewhat like @@code{.lcomm}, but the
syntax is different.

@@cindex @@code{seg} directive, SPARC
@@item .seg
This must be followed by @@code{"text"}, @@code{"data"}, or
@@code{"data1"}.  It behaves like @@code{.text}, @@code{.data}, or
@@code{.data 1}.

@@cindex @@code{skip} directive, SPARC
@@item .skip
This is functionally identical to the @@code{.space} directive.

@@cindex @@code{word} directive, SPARC
@@item .word
On the Sparc, the @@code{.word} directive produces 32 bit values,
instead of the 16 bit values it produces on many other machines.

@@cindex @@code{xword} directive, SPARC
@@item .xword
On the Sparc V9 processor, the @@code{.xword} directive produces
64 bit values.
@@end table
@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@@


1.1
log
@Initial revision
@
text
@d165 1
a165 1
it is a scratch register, if it is @@code{#ignore}, it just surpresses any
@


1.1.2.1
log
@vendor-branch-i-fy GNU binutils (2.11.2) to facilitate an update
@
text
@@


1.1.2.2
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@d165 1
a165 1
it is a scratch register, if it is @@code{#ignore}, it just suppresses any
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIXÆ, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync of src/gnu with OpenBSD (promised a long time ago)
@
text
@d165 1
a165 1
it is a scratch register, if it is @@code{#ignore}, it just suppresses any
@


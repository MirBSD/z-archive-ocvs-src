head	1.3;
access;
symbols
	binutils-2_15:1.1.2.3
	cvs-200406091940:1.1.1.2
	MIRBSD_7quater:1.2
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.2.0.6
	MIRBSD_7:1.2.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.2
	MIRBSD_7_DEV:1.2.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	binutils_2_14:1.1.2.2
	binutils_2_11_2:1.1.2.1
	FSF:1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2004.08.11.21.01.50;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2003.09.23.21.02.06;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.39.33;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2003.03.22.17.39.33;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.06.09.20.31.28;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2003.09.23.15.41.35;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.09.23.16.05.31;	author tg;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2004.07.15.17.11.01;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove old binutils
@
text
@/* tc-mips.h -- header file for tc-mips.c.
   Copyright 1993, 1994, 1995, 1996, 1997, 2000, 2001, 2002, 2003
   Free Software Foundation, Inc.
   Contributed by the OSF and Ralph Campbell.
   Written by Keith Knowles and Ralph Campbell, working independently.
   Modified for ECOFF support by Ian Lance Taylor of Cygnus Support.

   This file is part of GAS.

   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */

#ifndef TC_MIPS

#define TC_MIPS

#ifdef ANSI_PROTOTYPES
struct frag;
struct expressionS;
#endif

/* Default to big endian.  */
#ifndef TARGET_BYTES_BIG_ENDIAN
#define TARGET_BYTES_BIG_ENDIAN		1
#endif

#define TARGET_ARCH bfd_arch_mips

#define WORKING_DOT_WORD	1
#define OLD_FLOAT_READS
#define REPEAT_CONS_EXPRESSIONS
#define RELOC_EXPANSION_POSSIBLE
#define MAX_RELOC_EXPANSION 3
#define LOCAL_LABELS_FB 1

/* Maximum symbol offset that can be encoded in a BFD_RELOC_GPREL16
   relocation: */
#define MAX_GPREL_OFFSET (0x7FF0)

#define md_relax_frag(segment, fragp, stretch) \
  mips_relax_frag(segment, fragp, stretch)
extern int mips_relax_frag PARAMS ((asection *, struct frag *, long));

#define md_undefined_symbol(name)	(0)
#define md_operand(x)

extern void mips_handle_align PARAMS ((struct frag *));
#define HANDLE_ALIGN(fragp)  mips_handle_align (fragp)

#define MAX_MEM_FOR_RS_ALIGN_CODE  (1 + 2)

/* We permit PC relative difference expressions when generating
   embedded PIC code.  */
#define DIFF_EXPR_OK

/* Tell assembler that we have an itbl_mips.h header file to include.  */
#define HAVE_ITBL_CPU

/* The endianness of the target format may change based on command
   line arguments.  */
#define TARGET_FORMAT mips_target_format()
extern const char *mips_target_format PARAMS ((void));

/* MIPS PIC level.  */

enum mips_pic_level
{
  /* Do not generate PIC code.  */
  NO_PIC,

  /* Generate PIC code as in the SVR4 MIPS ABI.  */
  SVR4_PIC,

  /* Generate PIC code without using a global offset table: the data
     segment has a maximum size of 64K, all data references are off
     the $gp register, and all text references are PC relative.  This
     is used on some embedded systems.  */
  EMBEDDED_PIC
};

extern enum mips_pic_level mips_pic;

struct mips_cl_insn
{
  unsigned long insn_opcode;
  const struct mips_opcode *insn_mo;
  /* The next two fields are used when generating mips16 code.  */
  bfd_boolean use_extend;
  unsigned short extend;
};

extern int tc_get_register PARAMS ((int frame));

#define md_after_parse_args() mips_after_parse_args()
extern void mips_after_parse_args PARAMS ((void));

#define tc_init_after_args() mips_init_after_args()
extern void mips_init_after_args PARAMS ((void));

#define md_parse_long_option(arg) mips_parse_long_option (arg)
extern int mips_parse_long_option PARAMS ((const char *));

#define tc_frob_label(sym) mips_define_label (sym)
extern void mips_define_label PARAMS ((symbolS *));

#define tc_frob_file_before_adjust() mips_frob_file_before_adjust ()
extern void mips_frob_file_before_adjust PARAMS ((void));

#define tc_frob_file_before_fix() mips_frob_file ()
extern void mips_frob_file PARAMS ((void));

#if defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF)
#define tc_frob_file_after_relocs mips_frob_file_after_relocs
extern void mips_frob_file_after_relocs PARAMS ((void));
#endif

#define tc_fix_adjustable(fixp) mips_fix_adjustable (fixp)
extern int mips_fix_adjustable PARAMS ((struct fix *));

/* Global syms must not be resolved, to support ELF shared libraries.
   When generating embedded code, we don't have shared libs.  */
#define EXTERN_FORCE_RELOC			\
  (OUTPUT_FLAVOR == bfd_target_elf_flavour	\
   && mips_pic != EMBEDDED_PIC)

/* When generating embedded PIC code we must keep PC relative
   relocations.  */
#define TC_FORCE_RELOCATION(FIX) mips_force_relocation (FIX)
extern int mips_force_relocation PARAMS ((struct fix *));

#define TC_FORCE_RELOCATION_SUB_SAME(FIX, SEG) \
  (! SEG_NORMAL (SEG) || mips_force_relocation (FIX))

/* We use this to turn branches to global symbols into branches to
   local symbols, so that they can be simplified.  */
#define TC_VALIDATE_FIX(fixp, this_segment, skip_label) \
  do \
    if (! mips_validate_fix ((fixp), (this_segment))) \
      goto skip_label; \
  while (0)
extern int mips_validate_fix PARAMS ((struct fix *, asection *));

/* Register mask variables.  These are set by the MIPS assembly code
   and used by ECOFF and possibly other object file formats.  */
extern unsigned long mips_gprmask;
extern unsigned long mips_cprmask[4];

#if defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF)

#define elf_tc_final_processing mips_elf_final_processing
extern void mips_elf_final_processing PARAMS ((void));

#define ELF_TC_SPECIAL_SECTIONS \
  { ".sdata",	SHT_PROGBITS,	SHF_ALLOC + SHF_WRITE + SHF_MIPS_GPREL	}, \
  { ".sbss",	SHT_NOBITS,	SHF_ALLOC + SHF_WRITE + SHF_MIPS_GPREL	}, \
  { ".lit4",	SHT_PROGBITS,	SHF_ALLOC + SHF_WRITE + SHF_MIPS_GPREL	}, \
  { ".lit8",	SHT_PROGBITS,	SHF_ALLOC + SHF_WRITE + SHF_MIPS_GPREL	}, \
  { ".ucode",	SHT_MIPS_UCODE,	0					}, \
  { ".mdebug",	SHT_MIPS_DEBUG,	0					},
/* Other special sections not generated by the assembler: .reginfo,
   .liblist, .conflict, .gptab, .got, .dynamic, .rel.dyn.  */

#endif

extern void md_mips_end PARAMS ((void));
#define md_end()	md_mips_end()

#define USE_GLOBAL_POINTER_OPT	(OUTPUT_FLAVOR == bfd_target_ecoff_flavour \
				 || OUTPUT_FLAVOR == bfd_target_coff_flavour \
				 || OUTPUT_FLAVOR == bfd_target_elf_flavour)

extern void mips_pop_insert PARAMS ((void));
#define md_pop_insert()		mips_pop_insert()

extern void mips_flush_pending_output PARAMS ((void));
#define md_flush_pending_output mips_flush_pending_output

extern void mips_enable_auto_align PARAMS ((void));
#define md_elf_section_change_hook()	mips_enable_auto_align()

extern enum dwarf2_format mips_dwarf2_format PARAMS ((void));
#define DWARF2_FORMAT() mips_dwarf2_format ()

#define DWARF2_ADDR_SIZE(bfd) \
  (DWARF2_FORMAT () == dwarf2_format_32bit ? 4 : 8)

typedef struct {
  offsetT tc_fr_offset;
} tc_frag_data_type;
#define TC_FRAG_TYPE tc_frag_data_type

#endif /* TC_MIPS */
@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright 1993, 1994, 1995, 1996, 1997, 2000, 2001
d48 1
a48 1
/* Maximum symbol offset that can be encoded in a BFD_RELOC_MIPS_GPREL
d50 1
a50 1
#define MAX_GPREL_OFFSET (0x7FF4)
d52 3
a54 2
#define md_relax_frag(segment, fragp, stretch) mips_relax_frag(fragp, stretch)
extern int mips_relax_frag PARAMS ((struct frag *, long));
d76 19
d100 1
a100 1
  boolean use_extend;
d106 3
d121 1
a121 1
#define tc_frob_file() mips_frob_file ()
a128 4
#define TC_CONS_FIX_NEW cons_fix_new_mips
extern void cons_fix_new_mips
  PARAMS ((struct frag *, int, unsigned int, struct expressionS *));

d132 6
d140 1
a140 1
#define TC_FORCE_RELOCATION(fixp) mips_force_relocation (fixp)
d143 11
a153 2
/* md_apply_fix sets fx_done correctly.  */
#define TC_HANDLE_FX_DONE 1
d192 11
@


1.1.2.1
log
@vendor-branch-i-fy GNU binutils (2.11.2) to facilitate an update
@
text
@@


1.1.2.2
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@d2 1
a2 1
   Copyright 1993, 1994, 1995, 1996, 1997, 2000, 2001, 2002, 2003
d48 1
a48 1
/* Maximum symbol offset that can be encoded in a BFD_RELOC_GPREL16
d50 1
a50 1
#define MAX_GPREL_OFFSET (0x7FF0)
d52 2
a53 3
#define md_relax_frag(segment, fragp, stretch) \
  mips_relax_frag(segment, fragp, stretch)
extern int mips_relax_frag PARAMS ((asection *, struct frag *, long));
a74 19
/* MIPS PIC level.  */

enum mips_pic_level
{
  /* Do not generate PIC code.  */
  NO_PIC,

  /* Generate PIC code as in the SVR4 MIPS ABI.  */
  SVR4_PIC,

  /* Generate PIC code without using a global offset table: the data
     segment has a maximum size of 64K, all data references are off
     the $gp register, and all text references are PC relative.  This
     is used on some embedded systems.  */
  EMBEDDED_PIC
};

extern enum mips_pic_level mips_pic;

d80 1
a80 1
  bfd_boolean use_extend;
a85 3
#define md_after_parse_args() mips_after_parse_args()
extern void mips_after_parse_args PARAMS ((void));

d98 1
a98 1
#define tc_frob_file_before_fix() mips_frob_file ()
d106 4
a112 6
/* Global syms must not be resolved, to support ELF shared libraries.
   When generating embedded code, we don't have shared libs.  */
#define EXTERN_FORCE_RELOC			\
  (OUTPUT_FLAVOR == bfd_target_elf_flavour	\
   && mips_pic != EMBEDDED_PIC)

d115 1
a115 1
#define TC_FORCE_RELOCATION(FIX) mips_force_relocation (FIX)
d118 2
a119 11
#define TC_FORCE_RELOCATION_SUB_SAME(FIX, SEG) \
  (! SEG_NORMAL (SEG) || mips_force_relocation (FIX))

/* We use this to turn branches to global symbols into branches to
   local symbols, so that they can be simplified.  */
#define TC_VALIDATE_FIX(fixp, this_segment, skip_label) \
  do \
    if (! mips_validate_fix ((fixp), (this_segment))) \
      goto skip_label; \
  while (0)
extern int mips_validate_fix PARAMS ((struct fix *, asection *));
a157 11

extern enum dwarf2_format mips_dwarf2_format PARAMS ((void));
#define DWARF2_FORMAT() mips_dwarf2_format ()

#define DWARF2_ADDR_SIZE(bfd) \
  (DWARF2_FORMAT () == dwarf2_format_32bit ? 4 : 8)

typedef struct {
  offsetT tc_fr_offset;
} tc_frag_data_type;
#define TC_FRAG_TYPE tc_frag_data_type
@


1.1.2.3
log
@GNU Binutils, version 2.15
@
text
@d26 1
d29 1
d32 1
d49 1
a49 1
   relocation.  */
d54 1
a54 1
extern int mips_relax_frag (asection *, struct frag *, long);
d59 1
a59 1
extern void mips_handle_align (struct frag *);
d74 1
a74 1
extern const char *mips_target_format (void);
d104 1
a104 1
extern int tc_get_register (int frame);
d107 1
a107 1
extern void mips_after_parse_args (void);
d110 1
a110 1
extern void mips_init_after_args (void);
d113 1
a113 1
extern int mips_parse_long_option (const char *);
d116 1
a116 1
extern void mips_define_label (symbolS *);
d119 1
a119 1
extern void mips_frob_file_before_adjust (void);
d122 1
a122 1
extern void mips_frob_file (void);
d126 1
a126 1
extern void mips_frob_file_after_relocs (void);
d130 1
a130 4
extern int mips_fix_adjustable (struct fix *);

/* Values passed to md_apply_fix3 don't include symbol values.  */
#define MD_APPLY_SYM_VALUE(FIX) 0
d141 1
a141 1
extern int mips_force_relocation (struct fix *);
d153 1
a153 1
extern int mips_validate_fix (struct fix *, asection *);
d163 11
a173 1
extern void mips_elf_final_processing (void);
d177 1
a177 1
extern void md_mips_end (void);
d184 1
a184 1
extern void mips_pop_insert (void);
d187 1
a187 1
extern void mips_flush_pending_output (void);
d190 1
a190 1
extern void mips_enable_auto_align (void);
d193 1
a193 1
extern enum dwarf2_format mips_dwarf2_format (void);
d196 7
a202 1
#define DWARF2_ADDR_SIZE(bfd) mips_dwarf2_addr_size ()
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIXÆ, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync of src/gnu with OpenBSD (promised a long time ago)
@
text
@d2 1
a2 1
   Copyright 1993, 1994, 1995, 1996, 1997, 2000, 2001, 2002, 2003
d48 1
a48 1
/* Maximum symbol offset that can be encoded in a BFD_RELOC_GPREL16
d50 1
a50 1
#define MAX_GPREL_OFFSET (0x7FF0)
d52 2
a53 3
#define md_relax_frag(segment, fragp, stretch) \
  mips_relax_frag(segment, fragp, stretch)
extern int mips_relax_frag PARAMS ((asection *, struct frag *, long));
a74 19
/* MIPS PIC level.  */

enum mips_pic_level
{
  /* Do not generate PIC code.  */
  NO_PIC,

  /* Generate PIC code as in the SVR4 MIPS ABI.  */
  SVR4_PIC,

  /* Generate PIC code without using a global offset table: the data
     segment has a maximum size of 64K, all data references are off
     the $gp register, and all text references are PC relative.  This
     is used on some embedded systems.  */
  EMBEDDED_PIC
};

extern enum mips_pic_level mips_pic;

d80 1
a80 1
  bfd_boolean use_extend;
a85 3
#define md_after_parse_args() mips_after_parse_args()
extern void mips_after_parse_args PARAMS ((void));

d98 1
a98 1
#define tc_frob_file_before_fix() mips_frob_file ()
d106 4
a112 6
/* Global syms must not be resolved, to support ELF shared libraries.
   When generating embedded code, we don't have shared libs.  */
#define EXTERN_FORCE_RELOC			\
  (OUTPUT_FLAVOR == bfd_target_elf_flavour	\
   && mips_pic != EMBEDDED_PIC)

d115 1
a115 1
#define TC_FORCE_RELOCATION(FIX) mips_force_relocation (FIX)
d118 2
a119 11
#define TC_FORCE_RELOCATION_SUB_SAME(FIX, SEG) \
  (! SEG_NORMAL (SEG) || mips_force_relocation (FIX))

/* We use this to turn branches to global symbols into branches to
   local symbols, so that they can be simplified.  */
#define TC_VALIDATE_FIX(fixp, this_segment, skip_label) \
  do \
    if (! mips_validate_fix ((fixp), (this_segment))) \
      goto skip_label; \
  while (0)
extern int mips_validate_fix PARAMS ((struct fix *, asection *));
a157 11

extern enum dwarf2_format mips_dwarf2_format PARAMS ((void));
#define DWARF2_FORMAT() mips_dwarf2_format ()

#define DWARF2_ADDR_SIZE(bfd) \
  (DWARF2_FORMAT () == dwarf2_format_32bit ? 4 : 8)

typedef struct {
  offsetT tc_fr_offset;
} tc_frag_data_type;
#define TC_FRAG_TYPE tc_frag_data_type
@


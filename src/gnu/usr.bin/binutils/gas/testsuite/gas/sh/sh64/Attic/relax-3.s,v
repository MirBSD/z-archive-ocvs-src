head	1.2;
access;
symbols
	binutils-2_15:1.1.2.1
	binutils_2_14:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2003.09.23.21.04.53;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.09.23.16.06.48;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.09.23.16.06.48;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@! Check relaxation for MOVI PC-relative expansions.  Unfortunately, we
! can't check the 32 and 48 bit limit on a host with 32-bit longs, so we
! just check going from first state to the second state.

	.mode SHmedia
	.text
start:
	nop
start2:
	movi	(x0-4-$),r3
x1:
	movi	(x0-1-$),r4
	.space 32768-4,0
x0:
	movi	(x1-$),r5
	movi	(x1+3-$),r6

! These PC-relative expressions are here because of past bugs leading to
! premature symbol evaluation and assignment when they were exposed to
! relaxation.
! The expected result may need future tweaking if advances are done in
! relaxation.  At the time of this writing the expressions are not
! relaxed although the numbers will be in the right range finally.

	movi	(x1-x0),r7
	movi	(x0-1-x1),r8
	movi	(y1-y0),r8

	.section .text.another,"ax"
y0:
	movi	(x1-start2),r9
y1:
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@@

head	1.2;
access;
symbols
	binutils-2_15:1.1.2.1
	binutils_2_14:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2003.09.23.21.04.42;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.09.23.16.06.47;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.09.23.16.06.47;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@#
# s390/s390x tests
#
proc run_list_test { name opts } {
    global srcdir subdir
    set testname "s390 $name"
    set file $srcdir/$subdir/$name
    gas_run ${name}.s $opts ">&dump.out"
    if { [regexp_diff "dump.out" "${file}.l"] } then {
	fail $testname
	verbose "output is [file_contents "dump.out"]" 2
	exit
	return
    }
    pass $testname
}

if [expr [istarget "s390-*-*"] ||  [istarget "s390x-*-*"]]  then {

    run_dump_test "opcode"
    run_dump_test "reloc"
    run_dump_test "operands"

#    # PIC is only supported on ELF targets.
#    if { ([istarget "*-*-elf*"] || [istarget "*-*-linux*"] ) } then {
#	run_dump_test "s390pic"
#    }
}

if [istarget "s390x-*-*"] then {

    run_dump_test "opcode64"
    run_dump_test "reloc64"
    run_dump_test "operands64"
}
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@@

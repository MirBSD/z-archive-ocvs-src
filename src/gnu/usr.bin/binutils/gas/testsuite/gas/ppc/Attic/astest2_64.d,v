head	1.2;
access;
symbols
	binutils-2_15:1.1.2.2
	binutils_2_14:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2003.09.23.21.04.37;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.09.23.16.06.46;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.09.23.16.06.46;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2004.07.15.17.14.54;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@#objdump: -Dr
#name: PowerPC 64-bit test 2

.*: +file format elf64-powerpc

Disassembly of section \.text:

0000000000000000 <foo>:
   0:	60 00 00 00 	nop
   4:	60 00 00 00 	nop
   8:	60 00 00 00 	nop
   c:	48 00 00 04 	b	10 <foo\+0x10>
  10:	48 00 00 08 	b	18 <foo\+0x18>
  14:	48 00 00 00 	b	14 <foo\+0x14>
			14: R_PPC64_REL24	x
  18:	48 00 00 04 	b	1c <foo\+0x1c>
			18: R_PPC64_REL24	\.data\+0x4
  1c:	48 00 00 00 	b	1c <foo\+0x1c>
			1c: R_PPC64_REL24	z
  20:	48 00 00 14 	b	34 <foo\+0x34>
			20: R_PPC64_REL24	z\+0x14
  24:	48 00 00 04 	b	28 <foo\+0x28>
  28:	48 00 00 00 	b	28 <foo\+0x28>
			28: R_PPC64_REL24	a
  2c:	48 00 00 48 	b	74 <apfour>
  30:	48 00 00 04 	b	34 <foo\+0x34>
			30: R_PPC64_REL24	a\+0x4
  34:	48 00 00 44 	b	78 <apfour\+0x4>
  38:	00 00 00 38 	\.long 0x38
			38: R_PPC64_ADDR32	\.text\+0x38
  3c:	00 00 00 44 	\.long 0x44
			3c: R_PPC64_ADDR32	\.text\+0x44
  40:	00 00 00 00 	\.long 0x0
			40: R_PPC64_REL32	x
  44:	00 00 00 04 	\.long 0x4
			44: R_PPC64_REL32	x\+0x4
	\.\.\.
			48: R_PPC64_REL32	z
			4c: R_PPC64_REL32	y
			50: R_PPC64_ADDR32	x
			54: R_PPC64_ADDR32	y
			58: R_PPC64_ADDR32	z
  5c:	ff ff ff fc 	fnmsub	f31,f31,f31,f31
			5c: R_PPC64_ADDR32	x\+0xfffffffffffffffc
  60:	ff ff ff fc 	fnmsub	f31,f31,f31,f31
			60: R_PPC64_ADDR32	y\+0xfffffffffffffffc
  64:	ff ff ff fc 	fnmsub	f31,f31,f31,f31
			64: R_PPC64_ADDR32	z\+0xfffffffffffffffc
  68:	00 00 00 08 	\.long 0x8
  6c:	00 00 00 08 	\.long 0x8

0000000000000070 <a>:
  70:	00 00 00 00 	\.long 0x0
			70: R_PPC64_ADDR32	a

0000000000000074 <apfour>:
	\.\.\.
			74: R_PPC64_ADDR32	b
			78: R_PPC64_ADDR32	apfour
  7c:	ff ff ff fc 	fnmsub	f31,f31,f31,f31
  80:	00 00 00 02 	\.long 0x2
			80: R_PPC64_ADDR32	apfour\+0x2
  84:	00 00 00 00 	\.long 0x0
Disassembly of section \.data:

0000000000000000 <x>:
   0:	00 00 00 00 	\.long 0x0

0000000000000004 <y>:
   4:	00 00 00 00 	\.long 0x0
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@@


1.1.2.2
log
@GNU Binutils, version 2.15
@
text
@d12 3
a14 3
   c:	48 00 00 04 	b       10 <foo\+0x10>
  10:	48 00 00 08 	b       18 <foo\+0x18>
  14:	48 00 00 00 	b       14 <foo\+0x14>
d16 1
a16 1
  18:	48 00 00 04 	b       1c <foo\+0x1c>
d18 1
a18 1
  1c:	48 00 00 00 	b       1c <foo\+0x1c>
d20 1
a20 1
  20:	48 00 00 14 	b       34 <foo\+0x34>
d22 2
a23 2
  24:	48 00 00 04 	b       28 <foo\+0x28>
  28:	48 00 00 00 	b       28 <foo\+0x28>
d25 2
a26 2
  2c:	48 00 00 48 	b       74 <apfour>
  30:	48 00 00 04 	b       34 <foo\+0x34>
d28 1
a28 1
  34:	48 00 00 44 	b       78 <apfour\+0x4>
d43 1
a43 1
  5c:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
d45 1
a45 1
  60:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
d47 1
a47 1
  64:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
d60 1
a60 1
  7c:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
@


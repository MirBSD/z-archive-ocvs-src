head	1.2;
access;
symbols
	binutils-2_15:1.1.2.1
	binutils_2_14:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2003.09.23.21.05.04;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.09.23.16.07.51;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.09.23.16.07.51;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@#
# Some generic xtensa tests
#
if [istarget xtensa*-*-*] then {
    gas_test_error "j_too_far.s" "" "Check for jump out of range error"

    set testname "j_too_far.s: error line number reporting"
    gas_start "j_too_far.s" ""
    set x1 0
    while 1 {
        expect {
            -re ":4: Error:.*too large"           { set x1 1 }
            timeout                             { perror "timeout\n"; break }
            eof                                 { break }
        }
    }
    gas_finish
    if [all_ones $x1] then { pass $testname } else { fail $testname }


    gas_test "entry_misalign.s" "" "" "Xtensa Entry misalignment"
    set testname "entry_misalign.s: Force entry misalignment"
    objdump_start_no_subdir "a.out" "-d -j .text"
    set x1 0
    while 1 {
	expect {
	    -re "^.*2:.*entry" { set x1 1 }
	    timeout            { perror "timeout\n"; break }
	    eof                { break }
	}
    }
    objdump_finish
    if [all_ones $x1] then { pass $testname } else { fail $testname }


    gas_test "entry_misalign2.s" "" "" "Xtensa Entry misalignment(2)"
    set testname "entry_misalign2.s: Force entry misalignment(2)"
    objdump_start_no_subdir "a.out" "-d -j .text"
    set x1 0
    while 1 {
	expect {
	    -re "^.*2:.*entry" { set x1 1 }
	    timeout            { perror "timeout\n"; break }
	    eof                { break }
	}
    }
    objdump_finish
    if [all_ones $x1] then { pass $testname } else { fail $testname }

    gas_test "entry_align.s" "" "" "Xtensa autoalign entry"
    set testname "entry_align.s: autoalign entry"
    objdump_start_no_subdir "a.out" "-d -j .text"
    set x1 0
    while 1 {
	expect {
	    -re "^.*4:.*entry" { set x1 1 }
	    timeout            { perror "timeout\n"; break }
	    eof                { break }
	}
    }
    objdump_finish
    if [all_ones $x1] then { pass $testname } else { fail $testname }

    gas_test "loop_misalign.s" "" "" "Xtensa Loop misalignment"
    set testname "loop_misalign.s: Force loop misalignment"
    objdump_start_no_subdir "a.out" "-d -j .text"
    set x1 0
    while 1 {
	expect {
	    -re "^.*0:.*loop" { set x1 1 }
	    timeout            { perror "timeout\n"; break }
	    eof                { break }
	}
    }
    objdump_finish
    if [all_ones $x1] then { pass $testname } else { fail $testname }


    gas_test "loop_align.s" "" "" "Xtensa autoalign loop"
    set testname "loop_align.s: autoalign loop"
    objdump_start_no_subdir "a.out" "-d -j .text"
    set x1 0
    while 1 {
	expect {
	    -re "^.*2:.*loop" { set x1 1 }
	    timeout            { perror "timeout\n"; break }
	    eof                { break }
	}
    }
    objdump_finish
    if [all_ones $x1] then { pass $testname } else { fail $testname }


}

if [info exists errorInfo] then {
    unset errorInfo
    }
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@@

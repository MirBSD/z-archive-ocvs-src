head	1.2;
access;
symbols
	binutils-2_15:1.1.2.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	binutils_2_14:1.1.2.1
	binutils_2_11_2:1.1.2.1
	FSF:1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.17.42.02;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.39.46;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2003.03.22.17.39.46;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2003.09.23.15.41.58;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove the FSF changelog files and other unused files; use cvsweb or anoncvs to retrieve them
@
text
@$AT = '@@';
print <<END
.text
	.type _start,${AT}function
_start:

	add r101 = r102, r103
(p1)	add r104 = r105, r106
	add r107 = r108, r109, 1
(p2)	add r110 = r111, r112, 1

	adds r20 = 0, r10
(p1)	adds r21 = 1, r10
	adds r22 = -1, r10
	adds r23 = -0x2000, r10
(p2)	adds r24 = 0x1FFF, r10

	addl r30 = 0, r1
	addl r31 = 1, r1
(p1)	addl r32 = -1, r1
	addl r33 = -0x2000, r1
	addl r34 = 0x1FFF, r1
	addl r35 = -0x200000, r1
	addl r36 = 0x1FFFFF, r1

	add r11 = 0, r10
	add r12 = 0x1234, r10
	add r13 = 0x1234, r1
	add r14 = 0x12345, r1

	addp4 r20 = r3, r10
(p1)	addp4 r21 = 1, r10
	addp4 r22 = -1, r10

	sub r101 = r102, r103
(p2)	sub r110 = r111, r112, 1
	sub r120 = 0, r3
	sub r121 = 1, r3
	sub r122 = -1, r3
	sub r123 = -128, r3
	sub r124 = 127, r3

	and r8 = r9, r10
(p3)	and r11 = -128, r12

(p4)	or r8 = r9, r10
	or r11 = -128, r12

	xor r8 = r9, r10
	xor r11 = -128, r12

	andcm r8 = r9, r10
	andcm r11 = -128, r12

	shladd r8 = r30, 1, r31
	shladd r9 = r30, 2, r31
	shladd r10 = r30, 3, r31
	shladd r11 = r30, 4, r31

	shladdp4 r8 = r30, 1, r31
	shladdp4 r9 = r30, 2, r31
	shladdp4 r10 = r30, 3, r31
	shladdp4 r11 = r30, 4, r31

	padd1 r10 = r30, r31
	padd1.sss r11 = r30, r31
	padd1.uus r12 = r30, r31
	padd1.uuu r13 = r30, r31
	padd2 r14 = r30, r31
	padd2.sss r15 = r30, r31
	padd2.uus r16 = r30, r31
	padd2.uuu r17 = r30, r31
	padd4 r18 = r30, r31

	psub1 r10 = r30, r31
	psub1.sss r11 = r30, r31
	psub1.uus r12 = r30, r31
	psub1.uuu r13 = r30, r31
	psub2 r14 = r30, r31
	psub2.sss r15 = r30, r31
	psub2.uus r16 = r30, r31
	psub2.uuu r17 = r30, r31
	psub4 r18 = r30, r31

	pavg1 r10 = r30, r31
	pavg1.raz r10 = r30, r31
	pavg2 r10 = r30, r31
	pavg2.raz r10 = r30, r31

	pavgsub1 r10 = r30, r31
	pavgsub2 r10 = r30, r31

	pcmp1.eq r10 = r30, r31
	pcmp2.eq r10 = r30, r31
	pcmp4.eq r10 = r30, r31
	pcmp1.gt r10 = r30, r31
	pcmp2.gt r10 = r30, r31
	pcmp4.gt r10 = r30, r31

	pshladd2 r10 = r11, 1, r12
	pshladd2 r10 = r11, 3, r12

	pshradd2 r10 = r11, 1, r12
	pshradd2 r10 = r11, 2, r12

END
;

@@cmp2 = ( ".eq", ".ne" );
@@cmp6 = ( @@cmp2, ".lt", ".le", ".gt", ".ge" );
@@cmp10 = ( @@cmp6, ".ltu", ".leu", ".gtu", ".geu" );

@@ctype = ( ".and", ".or", ".or.andcm", ".orcm", ".andcm", ".and.orcm" );

foreach $C ( "cmp", "cmp4" ) {
  foreach $u ( "", ".unc" ) {
    foreach $i (@@cmp10) {
      print "\t${C}${i}${u} p2, p3 = r3, r4\n";
      print "\t${C}${i}${u} p2, p3 = 3, r4\n";
    }
    print "\n";
  }
  
  foreach $i (@@cmp2) {
    foreach $c (@@ctype) {
      print "\t${C}${i}${c} p2, p3 = r3, r4\n";
      print "\t${C}${i}${c} p2, p3 = 3, r4\n";
    }
    print "\n";
  }
      
  foreach $i (@@cmp6) {
    foreach $c (@@ctype) {
      print "\t${C}${i}${c} p2, p3 = r0, r4\n";
      print "\t${C}${i}${c} p2, p3 = r4, r0\n";
    }
    print "\n";
  }
}

# Pad to a bundle boundary with known nops.
print "nop.i 0; nop.i 0\n";
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@vendor-branch-i-fy GNU binutils (2.11.2) to facilitate an update
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

head	1.2;
access;
symbols
	binutils-2_15:1.1.2.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	binutils_2_14:1.1.2.1
	binutils_2_11_2:1.1.2.1
	FSF:1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.17.42.03;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.39.46;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2003.03.22.17.39.46;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2003.09.23.15.41.59;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove the FSF changelog files and other unused files; use cvsweb or anoncvs to retrieve them
@
text
@print ".text\n\t.type _start,@@", "function\n_start:\n\n";

@@sf = ( "", ".s0", ".s1", ".s2", ".s3" );

# Arithmetic

foreach $i ( "fma", "fma.s", "fma.d", "fpma",
	     "fms", "fms.s", "fms.d", "fpms",
	     "fnma", "fnma.s", "fnma.d", "fpnma" ) {
  foreach $s (@@sf) {
    print "\t${i}${s} f4 = f5, f6, f7\n";
  }
  print "\n";
}

foreach $i ( "fmpy", "fmpy.s", "fmpy.d", "fpmpy",
	     "fadd", "fadd.s", "fadd.d",
	     "fsub", "fsub.s", "fsub.d",
	     "fnmpy", "fnmpy.s", "fnmpy.d", "fpnmpy" ) {
  foreach $s (@@sf) {
    print "\t${i}${s} f4 = f5, f6\n";
  }
  print "\n";
}

foreach $i ( "fnorm", "fnorm.s", "fnorm.d" ) { 
  foreach $s (@@sf) {
    print "\t${i}${s} f4 = f5\n";
  }
  print "\n";
}

# Fixed Point Multiply Add

foreach $s ( ".l", ".lu", ".h", ".hu" ) {
  print "\txma${s} f4 = f5, f6, f7\n";
}
print "\n";

foreach $s ( ".l", ".lu", ".h", ".hu" ) {
  print "\txmpy${s} f4 = f5, f6\n";
}
print "\n";

# Parallel Floating Point Select

print "\tfselect f4 = f5, f6, f7\n\n";

# Floating Point Compare

@@cmp = ( ".eq", ".lt", ".le", ".unord", ".gt", ".ge", ".neq", ".nlt", 
	 ".nle", ".ngt", ".nge", ".ord" );

@@fctype = ( "", ".unc" );

foreach $c (@@cmp) {
  foreach $u (@@fctype) {
    foreach $s (@@sf) {
      print "\tfcmp${c}${u}${s} p3, p4 = f4, f5\n";
    }
  }
  print "\n";
}

# Floating Point Class

foreach $u (@@fctype) {
  foreach $c ( '@@nat', '@@qnan', '@@snan', '@@pos', '@@neg', '@@unorm',
	       '@@norm', '@@inf', '0x1ff' ) {
    foreach $m ( ".m", ".nm" ) {
      print "\tfclass${m}${u} p3, p4 = f4, $c\n";
    }
  }
  print "\n";
}

# Approximation

foreach $i ( "frcpa", "fprcpa" ) {
  foreach $s (@@sf) {
    print "\t${i}${s} f4, p5 = f6, f7\n";
  }
  print "\n";
}

foreach $i ( "frsqrta", "fprsqrta" ) {
  foreach $s (@@sf) {
    print "\t${i}${s} f4, p5 = f6\n";
  }
  print "\n";
}

# Min/Max

foreach $i ( "fmin", "fmax", "famin", "famax",
	     "fpmin", "fpmax", "fpamin", "fpamax" ) {
  foreach $s (@@sf) {
    print "\t${i}${s} f4 = f5, f6\n";
  }
  print "\n";
}

# Parallel Compare

foreach $c (@@cmp) {
  foreach $s (@@sf) {
    print "\tfpcmp${c}${s} f3 = f4, f5\n";
  }
  print "\n";
}

# Merge and Logical

foreach $i ( "fmerge.s", "fmerge.ns", "fmerge.se", "fmix.lr", "fmix.r",
	     "fmix.l", "fsxt.l", "fpack", "fswap", "fswap.nl", "fswap.nr",
	     "fand", "fandcm", "for", "fxor", "fpmerge.s", "fpmerge.ns",
	     "fpmerge.se" ) {
  print "\t$i f4 = f5, f6\n";
}
print "\n";

foreach $i ( "fabs", "fneg", "fnegabs", "fpabs", "fpneg", "fpnegabs" ) {
  print "\t$i f4 = f5\n";
}
print "\n";

# Convert Floating to Fixed

foreach $b ( "fcvt", "fpcvt" ) {
  foreach $f ( ".fx", ".fxu" ) {
    foreach $t ( "", ".trunc" ) {
      foreach $s (@@sf) {
	print "\t${b}${f}${t}${s} f4 = f5\n";
      }
      print "\n";
    }
  }
}

# Convert Fixed to Floating

foreach $e ( ".xf", ".xuf" ) {
  print "\tfcvt$e f4 = f5\n";
}
print "\n";

# Set Controls

foreach $s (@@sf) {
  print "\tfsetc$s 0, 0\n";
  print "\tfsetc$s 0x3f, 0x3f\n";
}
print "\n";

# Clear flags

foreach $s (@@sf) {
  print "\tfclrf$s\n";
}
print "\n";

# Check flags

foreach $s (@@sf) {
  print "\tfchkf$s _start\n";
}
print "\n";

# Misc

print "\tbreak.f 0\n";
print "\tnop.f 0;;\n";
print "\n";

@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@vendor-branch-i-fy GNU binutils (2.11.2) to facilitate an update
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

head	1.2;
access;
symbols
	binutils-2_15:1.1.2.2
	binutils_2_14:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2003.09.23.21.04.11;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.09.23.16.06.40;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.09.23.16.06.40;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2004.07.15.17.14.29;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@#as: -linker-allocated-gregs
#objdump: -drt

# Since we don't merge BPO-relocs until linking with
# -linker-allocated-gregs, we automatically correctly handle the two
# seemingly neighboring comm-symbols that don't merge well at
# assembly-time.

.*:     file format elf64-mmix

SYMBOL TABLE:
0+ l    d  \.text	0+ 
0+ l    d  \.data	0+ 
0+ l    d  \.bss	0+ 
0+ l       \.bss	0+4 comm_symbol3
0+4 l       \.bss	0+4 comm_symbol4
0+4       O \*COM\*	0+4 comm_symbol1
0+4       O \*COM\*	0+4 comm_symbol2

Disassembly of section \.text:

0+ <\.text>:
   0:	232a0000 	addu \$42,\$0,0
			2: R_MMIX_BASE_PLUS_OFFSET	comm_symbol1
   4:	232b0000 	addu \$43,\$0,0
			6: R_MMIX_BASE_PLUS_OFFSET	comm_symbol2
   8:	232c0000 	addu \$44,\$0,0
			a: R_MMIX_BASE_PLUS_OFFSET	\.bss
   c:	232d0000 	addu \$45,\$0,0
			e: R_MMIX_BASE_PLUS_OFFSET	\.bss\+0x4
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@@


1.1.2.2
log
@GNU Binutils, version 2.15
@
text
@d15 2
a16 2
0+ l     O \.bss	0+4 comm_symbol3
0+4 l     O \.bss	0+4 comm_symbol4
@


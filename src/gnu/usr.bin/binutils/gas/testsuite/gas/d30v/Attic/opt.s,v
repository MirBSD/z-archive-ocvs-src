head	1.2;
access;
symbols
	binutils-2_15:1.1.2.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	binutils_2_14:1.1.2.1
	binutils_2_11_2:1.1.2.1
	FSF:1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.17.41.52;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.39.41;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2003.03.22.17.39.41;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2003.09.23.15.41.50;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove the FSF changelog files and other unused files; use cvsweb or anoncvs to retrieve them
@
text
@# D30V parallel optimization test
# assemble with "-O"
	
	.text
start:	
	abs	r1,r2
	abs	r3,r4

	notfg	f0,f4
	notfg	f1,f2
		
	abs	r1,r2
	notfg	f1,f2

# both change C flag
	add	r1,r2,r3
	notfg	C,f0

# one uses and one changes C flag	
	add	r1,r2,r3
	notfg	f0,C

	bra	.
	abs	r1,r2

	abs	r1,r2	
	bra	.

	bsr	.
	abs	r1,r2
	
	abs	r1,r2	
	abs	r1,r2	
	bsr	.
	
	ldb	r1,@@(r2,r3)
	stb	r7,@@(r8,r9)

	stb	r7,@@(r8,r9)	
	ldb	r1,@@(r2,r3)

	ldb	r7,@@(r8,r9)	
	ldb	r1,@@(r2,r3)

	stb	r7,@@(r8,r9)	
	stb	r1,@@(r2,r3)

	add     r3, r3, r6
	stw     r2, @@(r3, 0)
			
# should be serial because of conditional execution
        cmple   f0,r4,r5
        jmp/tx  0x0

        cmple   f0,r4,r5
        jmp/fx  0x0

        cmple   f0,r4,r5
        jmp/xt  0x0

        cmple   f0,r4,r5
        jmp/xf  0x0

        cmple   f0,r4,r5
        jmp/tt  0x0

        cmple   f0,r4,r5
        jmp/tf  0x0
					
        cmple   f1,r4,r5
        jmp/tx  0x0

        cmple   f1,r4,r5
        jmp/xt  0x0

	# serial because of the r4 dependency
	add	r4, r0, 1
	cmple	f0, r4, r5

	# parallel
	add	r4, r0, 1
	cmple	f0, r3, r5

	# serial because ld2w loads r5
	ld2w	r4,@@(r0,r6)
	adds	r5,r19,r20

	# serial because ld2w loads r5
	ld2w	r4,@@(r0,r6)
	adds	r3,r5,r20

	# parallel even though ld2w uses r6 and adds changes it
	ld2w	r4,@@(r0,r6)
	adds	r6,r19,r20

	# parallel
	ld2w	r4,@@(r0,r6)
	adds	r7,r19,r20

	# parallel
	ld2w	r4,@@(r0,r6)
	adds	r7,r0,r20

	# parallel even though st2w uses r5 and adds modifies it
	st2w	r4,@@(r0,r6)
	adds	r5,r19,r20

	# parallel, both use but don't modify r5
	st2w	r4,@@(r0,r6)
	adds	r3,r5,r20

	# parallel even though st2w uses r6 and adds changes it
	st2w	r4,@@(r0,r6)
	adds	r6,r19,r20

	# parallel
	st2w	r4,@@(r0,r6)
	adds	r7,r19,r20

	# parallel
	st2w	r4,@@(r0,r6)
	adds	r7,r0,r20
						
# test memory dependencies

	# always serial because one could overwrite the other
	st2w	r10,@@(r3,r4)
	st2w	r40,@@(r43,r44)

	# always serial
	stw	r1,@@(r2,r3)
	ldw	r41,@@(r42,r43)			

	# reads can happen in parallel but the current architecture 
	# doesn't support it
	ldw	r1,@@(r2,r3)
	ldb	r41,@@(r42,r43)			

# test post increment and decrement dependencies

	# serial
	ldw	r4,@@(r6+,r11)
	adds	r9,r6,2

	# parallel, modification to r6 happens last
	adds	r9,r6,2	
	ldw	r4,@@(r6-,r11)

	# serial
	stw	r4,@@(r6-,r11)
	adds	r9,r6,2
	
	# parallel
	ldw	r4,@@(r6,r11)
	adds	r9,r6,2

	# parallel
	adds	r9,r6,2	
	ldw	r4,@@(r6,r11)
	
# if the first instruction is a jmp, don't parallelize
	jmp	0
	abs	r1,r2	

	jsr	0
	abs	r1,r2	

	.align	3
	
	bra	0
	abs	r1,r2	
	
	bsr	0
	abs	r1,r2	

# Explicitly prohibited from parallel execution.
# The labels are here to prevent instruction pairs
#  from being merged with following pairs.
	
label1:	
	st2w     r2, @@(r2, r3)
	addhlll  r4, r5, r6
label2:
	st4hb    r8, @@(r8, r9)
	subhllh  r10, r11, r12
label3:
	ld2w     r14, @@(r14, r15)
	mulhxhl  r16, r17, r18
label4:
	ldw      r19, @@(r20, r21)
	mulx2h   r22, r23, r24
label5:
	ldh      r25, @@(r26, r27)
	mul2h    r28, r29, r30

# Insertion of NOPs required to prevent pipeline clashes.

label6:
	mul r1,r2,r3
	mulhxll r4,r5,r6
        add r7, r8, r9
label7:
	
        mul  r2,r3,r4
        ldw  r5, @@(r6,r0)
 
        ldw  r10, @@(r11, r0) <- mul r7,r8,r9
	
        mul  r12,r13,r14 -> ldw r15, @@(r16, r0)

        mac1 r2,r3,r4
        ldw  r5, @@(r6,r0)
 
        ldw  r10, @@(r11, r0) <- mac0 r7,r8,r9
        ldw  r10, @@(r11, r0) 
	
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@vendor-branch-i-fy GNU binutils (2.11.2) to facilitate an update
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

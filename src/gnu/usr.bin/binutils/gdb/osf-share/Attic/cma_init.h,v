head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.06.10.19.02.22;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.40.43;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.40.43;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@first foolish attempt to merge the last piece
won't probably work, but I want it backed up,
since there's a lot of work and time in it
@
text
@/* 
 * (c) Copyright 1990-1996 OPEN SOFTWARE FOUNDATION, INC.
 * (c) Copyright 1990-1996 HEWLETT-PACKARD COMPANY
 * (c) Copyright 1990-1996 DIGITAL EQUIPMENT CORPORATION
 * (c) Copyright 1991, 1992 Siemens-Nixdorf Information Systems
 * To anyone who acknowledges that this file is provided "AS IS" without
 * any express or implied warranty: permission to use, copy, modify, and
 * distribute this file for any purpose is hereby granted without fee,
 * provided that the above copyright notices and this notice appears in
 * all source code copies, and that none of the names listed above be used
 * in advertising or publicity pertaining to distribution of the software
 * without specific, written prior permission.  None of these organizations
 * makes any representations about the suitability of this software for
 * any purpose.
 */
/*
 *	Header file for CMA initialization
 */

#ifndef CMA_INIT
#define CMA_INIT

/*
 *  INCLUDE FILES
 */
#include <dce/cma_host.h>
#include <cma_errors.h>

/*
 * CONSTANTS AND MACROS
 */

#define cma__c_env_maxattr	0
#define cma__c_env_minattr	1
#define cma__c_env_maxcond	2
#define	cma__c_env_mincond	3
#define cma__c_env_maxmutex	4
#define cma__c_env_minmutex	5
#define cma__c_env_maxthread	6
#define cma__c_env_minthread	7
#define cma__c_env_maxcluster	8
#define cma__c_env_mincluster	9
#define cma__c_env_maxvp	10
#define cma__c_env_multiplex	11
#define cma__c_env_trace	12
#define cma__c_env_trace_file	13

#define cma__c_env_count	13


/*
 * cma__int_init
 *
 * Initialize the main body of CMA exactly once.
 *
 * We raise an exception if, for some odd reason, there are already threads
 * in the environment (e.g. kernel threads), and one of them is trying to
 * initialize CMA before the  first thread got all the way through the actual
 * initialization. This code maintains the invariants: "after successfully
 * calling CMA_INIT, you can call any CMA function", and  "CMA is actually
 * initialized at most once".
 */
/*#ifndef _HP_LIBC_R */

#if  defined _HP_LIBC_R  ||(defined(SNI_SVR4) && !defined(CMA_INIT_NEEDED))
# define cma__int_init()
#else
# define cma__int_init() { \
    if (!cma__tac_isset(&cma__g_init_started)) { \
	if (!cma__test_and_set (&cma__g_init_started)) { \
	    cma__init_static (); \
	    cma__test_and_set (&cma__g_init_done); \
	    } \
	else if (!cma__tac_isset (&cma__g_init_done)) { \
	    cma__error (cma_s_inialrpro); \
    }}}
#endif

/*
 * TYPEDEFS
 */

typedef enum CMA__T_ENV_TYPE {
    cma__c_env_type_int,
    cma__c_env_type_file
    } cma__t_env_type;

typedef struct CMA__T_ENV {
    char		*name;		/* Name of environment variable */
    cma__t_env_type	type;		/* Type of variable */
    cma_t_integer	value;		/* Numeric value of the variable */
    } cma__t_env;

/*
 *  GLOBAL DATA
 */

extern cma__t_env		cma__g_env[cma__c_env_count];
extern cma__t_atomic_bit	cma__g_init_started;
extern cma__t_atomic_bit	cma__g_init_done;
extern char			*cma__g_version;

/*
 * INTERNAL INTERFACES
 */

extern void
cma__init_static (void);	/* Initialize static data */

#if _CMA_OS_ != _CMA__VMS
extern void cma__init_atfork (void);
#endif

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

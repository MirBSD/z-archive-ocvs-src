head	1.2;
access;
symbols
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@// @;


1.2
date	2004.06.10.19.01.59;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.40.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.40.34;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@first foolish attempt to merge the last piece
won't probably work, but I want it backed up,
since there's a lot of work and time in it
@
text
@// regview.cpp : implementation file
//

#include "stdafx.h"
#include "regview.h"
#include "regdoc.h"
#ifdef _DEBUG
#undef THIS_FILE
static char BASED_CODE THIS_FILE[] = __FILE__;
#endif


/////////////////////////////////////////////////////////////////////////////
// CRegView

IMPLEMENT_DYNCREATE(CRegView, CScrollView)
extern CGuiApp theApp;
void redraw_allregwins()
{ 
redraw_allwins(theApp.m_regTemplate);
}

 CFontInfo reg_fontinfo  ("RegFont", redraw_allregwins);

CRegView::CRegView()
{
  m_base = 16;
  reg_fontinfo.MakeFont();

   
}

CRegView::~CRegView()
{
}


BEGIN_MESSAGE_MAP(CRegView, CScrollView)
	//{{AFX_MSG_MAP(CRegView)
	ON_WM_CHAR()
	ON_COMMAND(ID_REAL_CMD_BUTTON_REG_BINARY, OnRegBinary)
	ON_COMMAND(ID_REAL_CMD_BUTTON_REG_DECIMAL, OnRegDecimal)
	ON_COMMAND(ID_REAL_CMD_BUTTON_REG_EVERYTHING, OnRegEverything)
	ON_COMMAND(ID_REAL_CMD_BUTTON_REG_HEX, OnRegHex)
	ON_COMMAND(ID_REAL_CMD_BUTTON_REG_OCTAL, OnRegOctal)
	ON_WM_SIZE()
	ON_COMMAND(ID_REAL_CMD_BUTTON_SET_FONT, OnSetFont)
	ON_WM_DESTROY()
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()


/////////////////////////////////////////////////////////////////////////////
// CRegView drawing

#define REG_SIZE (BFD_ARCH_SIZE/8)
#define VAL_SIZE (BFD_ARCH_SIZE/8)
#define NUM_COLS 4
static   const int gap = 20;
#define WIDTHINPIX ((m_regsize.cx + gap + m_valuesize.cx * NUM_COLS))
#define DEPTHINPIX ((togdb_maxregs() / NUM_COLS + 2) * reg_fontinfo.dunits.cy)

int CRegView::format(char *buf, CORE_ADDR value, int which)
{
  int i;
  switch (which == 0 ? m_base:which) 
    {
    case 2:
      for (i = 0; i < BFD_ARCH_SIZE; i++) 
	{
	  buf[i] = (value >> ((BFD_ARCH_SIZE-1) - i ))&1 ? '1':'0';
	}
      break;
    case 8:
      i = sprintf(buf,"%11o", value); 
      break;
    case 10:
      i = sprintf(buf,"%10d", value);
      break;
    case 16:
      i =  sprintf(buf,"%08X", value);
      break;

    default:
      i = format(buf, value,2);
      i += format(buf+i, value,8);
      i += format(buf+i, value,10);
      i += format(buf+i, value,16);
      break;
    }

  buf[i++] = ' ';
  buf[i] = 0;
  return  i;
}


void CRegView::BestShape()
{

#if 0
  char buf[100];
  CClientDC d(NULL);
  RECT wnd;
  GetClientRect(&wnd);
  d.SelectObject(&reg_fontinfo.m_font);


  /* Try our prefered shapes */
  
  int i;
  for (i = 0; px[i]; i++) 
    {
      m_ronline = px[i];
      m_numlines = py[i];
      
      mx = m_regsize.cx + (m_valuesize.cx + gap) * m_ronline ;
      my = m_regsize.cy * m_numlines;
      
      if (mx < wnd.right && my < wnd.bottom) 
	{
	  /* Use this and resize the area */
 	  rethink();
#if 1
	  CFrameWnd* pFrame = GetParentFrame();
	  pFrame->SetWindowPos(NULL, 0, 0, mx + 40, my+40 ,SWP_NOMOVE|SWP_NOZORDER|SWP_NOACTIVATE);
#endif
	  return ;
	}
    }
  /* mx and my are now the size needed to show all the regs, so set the
     scroll up */
  GetParentFrame()->SetWindowPos(NULL, 0, 0, mx + 40, my+40 ,SWP_NOMOVE|SWP_NOZORDER|SWP_NOACTIVATE);
  //  GetParentFrame()->MoveWindow(0,0,mx,my);
  rethink();
#endif
  
}


void CRegView::PrintReg(CRegDoc *pDoc, class CDC *pDC, int rn, int base, int cx, int cy)
{
  char buf[50*BFD_ARCH_SIZE];
  if(pDoc->m_regsinit[rn]) {
    format (buf, pDoc->m_regs[rn], base);
      
    if (pDoc->m_regchanged[rn]) 
      {
	pDC->SetTextColor(0x000000ff);
	pDC->TextOut(cx,cy, buf);
	pDC->SetTextColor(0x00000000);
      }
    else {
      pDC->TextOut(cx,cy, buf);
    }
  }
  else
    pDC->TextOut(cx,cy,".");
  
}

extern "C" {
  extern char *reg_names[];
  extern int reg_order[];
} ;

void CRegView::OnDraw(CDC* pDC)
{
  char buf[200];
  CRegDoc * pDoc = (CRegDoc *)GetDocument();      
  int i;
  
  int rn = 0;
  int ron = 0;
  int cx;
  int cy;
  int ri = 0;  
  cx = 0;
  cy = 0;
  pDoc->prepare();
  pDC->SelectObject(&reg_fontinfo.m_font);  
  
  				m_ronline = 4; /* FIXME! what's this?? */
  while (reg_order[ri] >= 0) {		
    rn = reg_order[ri];
    pDC->TextOut(cx, cy, reg_names[rn]);
    cx += m_regsize.cx + gap;
    for(i = 0; i < m_ronline && reg_order[ri] >= 0; i++) 
      {
	PrintReg(pDoc,pDC, reg_order[ri], 0, cx, cy);
	cx += m_valuesize.cx + gap;
	ri++;
      }
    cy += m_valuesize.cy;
    cx = 0;
  }
  /* New line for ccr and pc */
  
  pDC->TextOut(cx, cy,"PC ");
  
  PrintReg(pDoc,pDC, togdb_pcreg(),16, m_regsize.cx + gap, cy);
  
  /* And the current insn */
  if (pDoc->m_regsinit[togdb_pcreg()]) 
    {
      togdb_disassemble (pDoc->m_regs[togdb_pcreg()], buf);
      cx = (m_regsize.cx  + gap)*3;
      pDC->TabbedTextOut(cx, cy, buf, strlen(buf), 0, 0, cx);
    }
  
  cy += m_valuesize.cy;
  
  pDC->TextOut(0, cy,reg_names[togdb_ccrreg()]);
  PrintReg(pDoc, pDC, togdb_ccrreg(),16, m_regsize.cx + gap, cy);
  
}


/////////////////////////////////////////////////////////////////////////////
// CRegView message handlers
static int v;
void CRegView::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags) 
{
  // TODO: Add your message handler code here and/or call default
  
  if (nChar == 'a')
    {
      CRegDoc * pDoc = (CRegDoc *)GetDocument();      
      pDoc->ChangeReg(0,999 *v++);
      pDoc->UpdateAllViews(0);
    }
  
}

void CRegView::OnRegBinary() 
{
  m_base = 2;
  Invalidate();	
}

void CRegView::OnRegDecimal() 
{
  m_base = 10;
  Invalidate();		
}

void CRegView::OnRegEverything() 
{
  m_base = -1;
  Invalidate();	
}

void CRegView::OnRegHex() 
{
  m_base = 16;
  Invalidate();	
}

void CRegView::OnRegOctal() 
{
  m_base = 8;
  Invalidate();	
}



void CRegView::Initialize()
{
  reg_fontinfo.Initialize();
}

void CRegView::Terminate()
{
  reg_fontinfo.Terminate();
}



void CRegView::rethink()
{
  char buf[50*BFD_ARCH_SIZE];
  CORE_ADDR value0 = 0;
  int which0 = 0;
  int len = format(buf, value0, which0);
  m_valuesize.cx = (len+2) * reg_fontinfo.dunits.cx ;
  m_valuesize.cy = reg_fontinfo.dunits.cy ;

  m_regsize.cx = reg_fontinfo.dunits.cx * REG_SIZE;
  m_regsize.cy = reg_fontinfo.dunits.cy;


  CSize sizeTotal;
  CSize sizePage;
  CSize sizeLine;
  sizeTotal.cx = WIDTHINPIX;
  sizeTotal.cy = DEPTHINPIX;
  
  sizePage.cx = sizeTotal.cx/5;
  sizePage.cy = sizeTotal.cy/5;
  
  sizeLine.cx = sizeTotal.cx/10;
  sizeLine.cy = sizeTotal.cy/10;
  
  SetScrollSizes(MM_TEXT, sizeTotal, sizePage, sizeLine);

}

void CRegView::OnSize(UINT nType, int cx, int cy) 
{
  CScrollView::OnSize(nType, cx, cy);
  SetWindowText("Registers");
	rethink();
  
}



void CRegView::OnSetFont()
{
  reg_fontinfo.OnChooseFont();
  Invalidate();
}

BOOL CRegView::PreCreateWindow(CREATESTRUCT& cs) 
{
  // TODO: Add your specialized code here and/or call the base class
  return CScrollView::PreCreateWindow(cs);
}

void CRegView::OnInitialUpdate() 
{
  // TODO: Add your specialized code here and/or call the base class
  CScrollView::OnInitialUpdate();
  rethink();
  GetParentFrame()->SetWindowPos(NULL, 0, 0, 
			WIDTHINPIX, DEPTHINPIX,
				 SWP_NOMOVE|SWP_NOZORDER|SWP_NOACTIVATE);
  
  load_where(GetParentFrame(),"REG");
}

void CRegView::OnDestroy() 
{
  CScrollView::OnDestroy();
  save_where(GetParentFrame(),"REG");
  
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

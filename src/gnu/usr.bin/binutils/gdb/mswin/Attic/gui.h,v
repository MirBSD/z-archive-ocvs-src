head	1.2;
access;
symbols
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.06.10.19.01.55;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.40.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.40.34;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@first foolish attempt to merge the last piece
won't probably work, but I want it backed up,
since there's a lot of work and time in it
@
text
@// gui.h : main header file for the GUI application
//

#ifndef __AFXWIN_H__
	#error include 'stdafx.h' before including this file for PCH
#endif

#include "resource.h"       // main symbols

/////////////////////////////////////////////////////////////////////////////
// CGuiApp:
// See gui.cpp for the implementation of this class
//

class CGuiApp : public CWinApp
{
 private:
  virtual BOOL InitInstance();
  virtual BOOL ExitInstance();
  virtual BOOL PreTranslateMessage(MSG* pMsg);


 public:
  UINT m_uiMyListClipFormat;


  void raisekids(CMultiDocTemplate *);
  void newwin(CMultiDocTemplate*);

 public:
  static void SyncRegs();
  void sync_bpts();
  class CMultiDocTemplate* m_CmdLogTemplate;
  class CMultiDocTemplate* m_srcTemplate;
  class CMultiDocTemplate* m_expTemplate;
  class CMultiDocTemplate* m_infoTemplate;
  class CMultiDocTemplate* m_cmdTemplate;
  class CMultiDocTemplate* m_IOLogTemplate;
  class CMultiDocTemplate* m_regTemplate;
  class CMultiDocTemplate* m_srcsTemplate;
  class CMultiDocTemplate* m_bptTemplate;
  class CMultiDocTemplate* m_asmTemplate;	
  class CMultiDocTemplate* m_localTemplate;	
  class CMultiDocTemplate* m_srcbrowserTemplate;	
  class CMultiDocTemplate* m_watchTemplate;	

//  class CMultiDocTemplate *m_memTemplate;



  int gotkid(CMultiDocTemplate *p);
  CGuiApp();
  void Command(const char *command);

  void SetInterestingLine(int line);
  void SetInterestingAddr(  CORE_ADDR addr);
  void InsertBreakpoint(struct symtab *tab, int line);
  // Overrides
  // ClassWizard generated virtual function overrides
  //{{AFX_VIRTUAL(CGuiApp)
public:
  virtual BOOL OnIdle(LONG lCount);
  //}}AFX_VIRTUAL
  
  // Implementation
  
  //{{AFX_MSG(CGuiApp)

  afx_msg void OnUpdateShowAsm(CCmdUI* pCmdUI);
  afx_msg void OnShowAsm();

  afx_msg void OnUpdateShowSource(CCmdUI* pCmdUI);
  afx_msg void OnShowSource();

  afx_msg void OnUpdateShowBpts(CCmdUI* pCmdUI);
  afx_msg void OnShowBpts();

  afx_msg void OnUpdateShowLine(CCmdUI* pCmdUI);
  afx_msg void OnShowLine();

//  afx_msg void OnNewMemwin();
//  afx_msg void OnUpdateNewMemwin(CCmdUI* pCmdUI);


  afx_msg void OnAppAbout();
  afx_msg void OnRegister();
  afx_msg void OnNewCmdwin();
  afx_msg void OnUpdateNewCmdwin(CCmdUI* pCmdUI);
  afx_msg void OnNewIOLogWin();
  afx_msg void OnUpdateNewIOLogWin(CCmdUI* pCmdUI);
  afx_msg void OnUpdateBptWin(CCmdUI* pCmdUI);
  afx_msg void OnNewExpressionwin();
  afx_msg void OnNewSrcwin();
  afx_msg void OnNewRegwin();
  afx_msg void OnUpdateNewRegwin(CCmdUI* pCmdUI);
  afx_msg void OnNewBptwin();
  afx_msg void OnNewSrcBrowserWin();
  afx_msg void OnNewLocalWin();
  afx_msg void OnUpdateNewLocalWin(CCmdUI* pCmdUI);
  afx_msg void OnUpdateExpressionwin(CCmdUI* pCmdUI);
  afx_msg void OnUpdateNeedExec(CCmdUI* pCmdUI);
  
  afx_msg void OnUpdateNewSrcBrowserWin(CCmdUI* pCmdUI);
  afx_msg void OnUpdateNewSrcwin(CCmdUI* pCmdUI);
  afx_msg void OnHelpIndex();
  afx_msg void OnHelp();
  //}}AFX_MSG
  DECLARE_MESSAGE_MAP()
  };


/////////////////////////////////////////////////////////////////////////////
void theApp_sync_pc();
void theApp_show_at(CORE_ADDR pc);
void theApp_show_file(const char *);
void theApp_show_with_symtab(class CSymtab *);
void theApp_show_function(const char *, CORE_ADDR, CORE_ADDR);

class CGlobalOptions {
public:
  int always_create;
  static void Initialize();
  static void Terminate();
};

extern CGlobalOptions global_options;



class CSrcState 
{
public:
  BOOL	addresses ;
  BOOL 	breakpoint_ok;
  BOOL	disassembly;
  BOOL	instruction_data;
  BOOL	linenumbers ;
  BOOL 	source ;
public:
  CSrcState();
};
void props();

void redraw_allwins(CMultiDocTemplate *p);


void load_where(CFrameWnd *p, const char *);
void save_where(CFrameWnd *p, const char *);

void string_command (const CString &x);

extern "C" {
int mswin_query (const char*, va_list);
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

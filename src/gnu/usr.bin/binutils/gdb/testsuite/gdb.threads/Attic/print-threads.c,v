head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.1 openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.06.10.19.03.23;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.06.09.20.29.41;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.06.09.20.29.41;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@first foolish attempt to merge the last piece
won't probably work, but I want it backed up,
since there's a lot of work and time in it
@
text
@#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <pthread.h>

void *thread_function(void *arg); /* Pointer to function executed by each thread */

int slow = 0;

#define NUM 5

int main() {
    int res;
    pthread_t threads[NUM];
    void *thread_result;
    int args[NUM];
    int i;

    for (i = 0; i < NUM; i++)
      {
	args[i] = i;
	res = pthread_create(&threads[i], NULL, thread_function, (void *)&args[i]);
      }

    for (i = 0; i < NUM; i++)
      res = pthread_join(threads[i], &thread_result);

    printf ("Done\n");

    if (slow)
      sleep (4);

    exit(EXIT_SUCCESS);
}

void *thread_function(void *arg) {
    int my_number = *(int *)arg;
    int rand_num;

    printf ("Print 1, thread %d\n", my_number);
    sleep (1);

    if (slow)
      {
	printf ("Print 2, thread %d\n", my_number);
	sleep (1);
	printf ("Print 3, thread %d\n", my_number);
	sleep (1);
	printf ("Print 4, thread %d\n", my_number);
	sleep (1);
	printf ("Print 5, thread %d\n", my_number);
	sleep (1);
      }

    printf("Bye from %d\n", my_number);
    pthread_exit(NULL);
}

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Sync of src/gnu with OpenBSD (promised a long time ago)
@
text
@@

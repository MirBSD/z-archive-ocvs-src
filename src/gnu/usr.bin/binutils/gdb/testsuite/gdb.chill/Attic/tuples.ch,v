head	1.2;
access;
symbols
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.17.43.07;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.40.48;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.40.48;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove the FSF changelog files and other unused files; use cvsweb or anoncvs to retrieve them
@
text
@x: MODULE

SYNMODE m_arri = ARRAY(1:5) INT;
DCL v_arri m_arri := [ -1, -2, -3, -4, -5 ];

SYNMODE m_arrui = ARRAY(1:5) UINT;
DCL v_arrui m_arrui := [ 1, 2, 3, 4, 5 ];

SYNMODE r1 = RANGE (1:5);
SYNMODE m_arrb = ARRAY(r1) BYTE;
DCL v_arrb m_arrb := [ -3, -4, -5, -6, -7 ];

SYNMODE m_arrub = ARRAY(r1) UBYTE;
DCL v_arrub m_arrub := [ 3, 4, 5, 6, 7 ];

SYNMODE m_arrc = ARRAY (1:5) CHAR;
DCL v_arrc m_arrc := [ '1', '2', '3', '4', '5' ];

SYNMODE m_ps = POWERSET r1;
DCL v_ps m_ps := [ 1, 3, 5 ];

DCL v_cv CHARS(20) VARYING := "foo";

SYNMODE m_arrbool = ARRAY(r1) BOOL;
DCL v_arrbool m_arrbool := [ true, false, true, false, true ];

DCL j r1 := 4;

DCL i INT;

newmode vstruct = struct (a, b long, 
			  case b of 
			   (42): ch8 chars(20),
			   (52): i long
			   else  ch1 char
                         esac);

DCL vstr vstruct := [ .a: 10, .b: 52, .i: 100 ];

i := 0;

END x;

setmode: MODULE /* This is from Cygnus PR chill/5024. */

NEWMODE day = SET( monday, tuesday, wednesday, thursday, friday, saturday, sunday );
NEWMODE dow = POWERSET day;

DCL d day;
DCL w dow;

printdow: PROC( w dow );
  DCL d day;
  DO FOR d in w;
    WRITETEXT( stdout, "%C ", d );
  OD;
END;

d := monday;
w := dow[monday : friday];
printdow( w );

printdow( dow[LOWER(dow) : UPPER(dow)] );

END setmode;

PR8643: MODULE

SYNMODE m_set = SET (a, b, c, d);
SYNMODE m_ps = POWERSET m_set;

SYNMODE m_s1 = STRUCT (str CHARS(40) VARYING, i INT, ps m_ps);
DCL vs1 m_s1;

SYNMODE m_s2 = STRUCT (i LONG, s m_s1);
DCL vs2 m_s2;

SYNMODE m_arr = ARRAY (1:3) BYTE;
SYNMODE m_s3 = STRUCT (i LONG, a m_arr);
DCL vs3 m_s3;

DCL i LONG;

i := 24;

END PR8643;
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

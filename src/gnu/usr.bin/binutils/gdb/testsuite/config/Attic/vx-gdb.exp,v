head	1.2;
access;
symbols
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.17.43.00;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.40.44;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.40.44;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove the FSF changelog files and other unused files; use cvsweb or anoncvs to retrieve them
@
text
@#   Copyright (C) 1988, 1990, 1991, 1992, 1995 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

# Please email any bugs, comments, and/or additions to this file to:
# DejaGnu@@cygnus.com

# This file was written by Rob Savoye. (rob@@cygnus.com)

#
# load support libraries
#
load_lib remote.exp
load_lib gdb.exp
load_lib vxworks.exp

set shell_prompt "->"
set prompt "\\(vxgdb\\)"

#
# gdb_version -- extract and print the version number of gcc
#
proc gdb_version {} {
    default_gdb_version
}

#
# gdb_load -- load a file into the debugger.
# We have to stop and start gdb each time we do this, because when
# vxgdb loads two files in a row, the symbols in the first file loaded
# take precedence. Returns -1 on error, else 0.
#
proc gdb_load { arg } {
    global shell_id

#    gdb_exit
#    spawn_vxgdb
    set result 0

    if { [vxworks_ld $shell_id $arg] != 0 } {
	perror "Couldn't load $arg"
	return -1
    }

    return [gdb_file_cmd $arg]
}

#
# gdb_start -- start gdb running and 
#
proc gdb_start { } {
    global prompt
    global verbose
    global targetname
    global connectmode
    global reboot
    global shell_id

    # get a connection to the board
    set shell_id [ eval $connectmode "$targetname" ]
    if { $shell_id < 0 } then {
	perror "Couldn't connect to $targetname."
	return -1
    }
    verbose "Spawn id for remote shell is $shell_id"

    # reboot vxworks to get a clean start
    if $reboot then {
	verbose "Rebooting VxWorks, Please wait...\n"

	send -i $shell_id "\030"
	set timeout 120
	verbose "Timeout is now $timeout seconds" 2
	expect {
	    -i $shell_id -re "Connection closed.*$" {
		verbose "\nVxWorks has closed the shell"
		}
	    -i $shell_id eof {
		perror "(eof) never disconnected from VxWorks shell."
		return -1
	    }
	    -i $shell_id timeout {
		perror "(timeout) never disconnected from VxWorks shell."
		return -1
	    }
	}
	catch "close -i $shell_id" tmp
	wait -i $shell_id
    }
    set timeout 10
    verbose "Timeout is now $timeout seconds" 2

    catch "spawn_vxgdb"
}

proc spawn_vxgdb { } {
    global prompt
    global verbose
    global targetname

    default_gdb_start

    # set the default arguments to "main", so that "run" with no
    # arguments will work correctly.
    send "set args main\n"
    expect -re ".*$prompt $" {}

    verbose "Setting up target, Please wait..."
    # set targets hostname
    send "target vxworks $targetname\n"
    set timeout 60
    verbose "Timeout is now $timeout seconds" 2
    expect {
	-re "Done\..*$prompt $"	{
	    verbose "Set target to $targetname" 1
	}
	-re "net_connect: RPC: Program not registered.*$" {
	    perror "Couldn't set GDB to target $targetname."
	    exit 1
	}
	timeout { 
	    perror "Couldn't set target for vxworks."
	    set timeout 10
	    verbose "Timeout is now $timeout seconds" 2
	    return -1
	}
    }
    set timeout 10
    verbose "Timeout is now $timeout seconds" 2
}

proc gdb_exit { } {
    global shell_id
    if [info exists shell_id] then {
	exit_remote_shell $shell_id
    }
    catch default_gdb_exit
}

#expect_after {
#    "<return>"		   { send "\n"; perror "Window too small." }
#    -re "\(y or n\) " 	   { send "n\n"; perror "Got interactive prompt." }
#    buffer_full		   { perror "internal buffer is full." }
#    eof			   { perror "eof -- pty is hosed." }
#    timeout			   { perror "timeout." }
#    "virtual memory exhausted" { perror "virtual memory exhausted." }
#    "Undefined command"	   { perror "send string probably wrong." }
#}

gdb_start

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.2
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.17.43.00;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.40.44;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.40.44;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.06.09.20.29.40;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove the FSF changelog files and other unused files; use cvsweb or anoncvs to retrieve them
@
text
@#   Copyright (C) 1988, 1990, 1991, 1992, 1994 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu

# This file was written by J.T. Conklin. (jtc@@cygnus.com)

load_lib gdb.exp
load_lib remote.exp

global shell_id
global passwd

global LD
if ![info exists LD] then {
	set LD [findfile "$base_dir/../../ld/ld.new"]
}

global NLMCONV
if ![info exists NLMCONV] then {
	set NLMCONV [findfile "$base_dir/../../binutils/nlmconv"]
}

#
# gdb_version -- extract and print the version number of gcc
#
proc gdb_version {} {
    default_gdb_version
}

#
# gdb_unload -- unload a file if one is loaded
#

#
# gdb_load -- load a file into the debugger.
#             return a -1 if anything goes wrong.
#
proc gdb_load { arg } {
    global prompt
    global LD
    global NLMCONV
    global errorCode
    global targetname
    global shell_id

    set obj [file tail $arg]
    set nlm "$obj.nlm"
    set lnk "$obj.lnk"

    # build *.lnk file
    set fd [open $lnk w]
    puts $fd "description \"[file tail $nlm]\""
    puts $fd "screenname \"System Console\""
    puts $fd "module clib.nlm"
    puts $fd "module mathlib.nlm"
    puts $fd "stack 32768"
#    puts $fd "stack 64512"
    puts $fd "debug"
    # FIXME: don't hardcode location of prelude.o
    puts $fd "input /s1/cygnus/dejagnu/i386-netware/lib/prelude.o"
    puts $fd "input $arg"
    puts $fd "output $nlm"
    close $fd

    # run nlmconv
    verbose "Executing: $NLMCONV -l$LD -T$lnk" 1
    catch "exec $NLMCONV -l$LD -T$lnk" output
    if ![string match "" $output] then {
	verbose $output 1
    }
    if ![string match "NONE" $errorCode] {
	warning "Can't link $arg"

	return -1
    }
    catch "exec rm -f $lnk"

    # download
    verbose "Downloading $nlm" 1
    catch "exec cp $nlm /.NetWare/$targetname.nws/sys.nwv/tmp/x.nlm" output
    if ![string match "" $output] then {
	verbose $output 1
	return -1
    }

    gdb_file_cmd $nlm
}

proc gdb_start { } {
    default_gdb_start
}
  
proc gdb_exit { } {
    catch default_gdb_exit
}

proc gdb_run_cmd { } {
    global shell_id
    global prompt
    global baud serialport
    global targetname
    global timeout

    send "kill\n"
    expect {
	-re ".*Kill the program being debugged.*y or n. $" {
	    send "y\n"
	    exp_continue
	}
	-re ".*$prompt $" {}
    }

    verbose "Starting GDB stub on $targetname" 1
    send -i $shell_id "load nlmstub BAUD=$baud x.nlm\r\n"

    send "set remotebaud $baud\n"
    expect {
	-re "$prompt" {}
	timeout {
	    perror "Couldn't set remote baud rate"
	    return
	}
    }

    set otimeout $timeout
    set timeout 60
    verbose "Timeout is now $timeout seconds" 2
    send "target remote $serialport\n"
    expect {
	-re "Couldn't establish connection to remote target" {
	    send "target remote $serialport\n"
	    exp_continue
	}
	-re "$prompt" {}
	timeout {
	    set timeout $otimeout
	    verbose "Timeout restored to $timeout seconds" 2
	    perror "Couldn't set remote target"
	    return
	}
    }
    set timeout $otimeout
    verbose "Timeout restored to $timeout seconds" 2

    send "continue\n"
    expect {
	"Continuing.$" {}
    }

    return
}



#
# start the remote shell
#

set shell_prompt "Password:"
set shell_id [ eval $connectmode "$targetname" ]

if $shell_id<0 then {
    warning "Couldn't connect to target"
    return -1
}

if [string match "" $passwd] then {
    stty -echo
    send_user "Password: "
    expect_user -re "(.*)\n"
    send_user "\n"
    set passwd "$expect_out(1,string)"
    stty echo
}

send -i $shell_id "$passwd\n"
expect {
    -i $shell_id ":" {
	verbose "Got termtype prompt" 0
    }

    -i $shell_id timeout {
	warning "Connection timed out"
	return -1
    }
}


set shell_prompt "[string toupper $targetname]:"
send -i $shell_id "1\n"

expect {
    -i $shell_id -re "$shell_prompt" {}
    -i $shell_id timeout {
	warning "Connection timed out"
	return -1
    }
}

gdb_start
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync of src/gnu with OpenBSD (promised a long time ago)
@
text
@d1 1
a1 1
#   Copyright (C) 1988, 1990, 1991, 1992, 1994, 1997 Free Software Foundation, Inc.
d15 1
a15 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  
d26 1
d54 1
a54 1
    global gdb_prompt
d58 1
a60 3
    # FIXME: this is wrong.
    set targetname [target_info name];

d104 8
d114 3
a116 1
    global gdb_prompt
a118 13
    set connhost [target_info name];
    if [board_info $connhost exists serial] {
	set serialport [board_info $connhost serial];
    } else {
	set serialport [board_info $connhost netport];
    }

    if [board_info $connhost exists baud] {
	set baud [board_info $connhost baud];
    } else {
	set baud 9600;
    }
    # FIXME: This is wrong.
d120 1
a120 1
    gdb_expect {
d125 1
a125 1
	-re ".*$gdb_prompt $" {}
d128 1
a128 1
    verbose "Starting GDB stub on [target_info name]" 1
d132 2
a133 2
    gdb_expect {
	-re "$gdb_prompt" {}
d144 1
a144 1
    gdb_expect {
d149 1
a149 1
	-re "$gdb_prompt" {}
d161 1
a161 1
    gdb_expect {
d175 1
a175 1
set shell_id [remote_open target]
d192 1
a192 1
gdb_expect {
d204 1
a204 2
# FIXME: this is wrong.
set shell_prompt "[string toupper [target_info name]]:"
d207 1
a207 1
gdb_expect {
d214 2
@


head	1.2;
access;
symbols
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.06.10.19.03.45;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.41.09;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.41.09;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@first foolish attempt to merge the last piece
won't probably work, but I want it backed up,
since there's a lot of work and time in it
@
text
@/* More debugging hooks for `mmalloc'.
   Copyright 1991, 1992, 1994 Free Software Foundation

   Written April 2, 1991 by John Gilmore of Cygnus Support
   Based on mcheck.c by Mike Haertel.
   Modified Mar 1992 by Fred Fish.  (fnf@@cygnus.com)

This file is part of the GNU C Library.

The GNU C Library is free software; you can redistribute it and/or
modify it under the terms of the GNU Library General Public License as
published by the Free Software Foundation; either version 2 of the
License, or (at your option) any later version.

The GNU C Library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Library General Public License for more details.

You should have received a copy of the GNU Library General Public
License along with the GNU C Library; see the file COPYING.LIB.  If
not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

#include <stdio.h>
#include "mmprivate.h"

static void tr_break PARAMS ((void));
static void tr_freehook PARAMS ((PTR, PTR));
static PTR tr_mallochook PARAMS ((PTR, size_t));
static PTR tr_reallochook PARAMS ((PTR, PTR, size_t));

#ifndef	__GNU_LIBRARY__
extern char *getenv ();
#endif

static FILE *mallstream;

#if 0	/* FIXME:  Disabled for now. */
static char mallenv[] = "MALLOC_TRACE";
static char mallbuf[BUFSIZ];	/* Buffer for the output.  */
#endif

/* Address to breakpoint on accesses to... */
static PTR mallwatch;

/* Old hook values.  */

static void (*old_mfree_hook) PARAMS ((PTR, PTR));
static PTR (*old_mmalloc_hook) PARAMS ((PTR, size_t));
static PTR (*old_mrealloc_hook) PARAMS ((PTR, PTR, size_t));

/* This function is called when the block being alloc'd, realloc'd, or
   freed has an address matching the variable "mallwatch".  In a debugger,
   set "mallwatch" to the address of interest, then put a breakpoint on
   tr_break.  */

static void
tr_break ()
{
}

static void
tr_freehook (md, ptr)
  PTR md;
  PTR ptr;
{
  struct mdesc *mdp;

  mdp = MD_TO_MDP (md);
  /* Be sure to print it first.  */
  fprintf (mallstream, "- %08lx\n", (unsigned long) ptr);
  if (ptr == mallwatch)
    tr_break ();
  mdp -> mfree_hook = old_mfree_hook;
  mfree (md, ptr);
  mdp -> mfree_hook = tr_freehook;
}

static PTR
tr_mallochook (md, size)
  PTR md;
  size_t size;
{
  PTR hdr;
  struct mdesc *mdp;

  mdp = MD_TO_MDP (md);
  mdp -> mmalloc_hook = old_mmalloc_hook;
  hdr = (PTR) mmalloc (md, size);
  mdp -> mmalloc_hook = tr_mallochook;

  /* We could be printing a NULL here; that's OK.  */
  fprintf (mallstream, "+ %08lx %x\n", (unsigned long) hdr, size);

  if (hdr == mallwatch)
    tr_break ();

  return (hdr);
}

static PTR
tr_reallochook (md, ptr, size)
  PTR md;
  PTR ptr;
  size_t size;
{
  PTR hdr;
  struct mdesc *mdp;

  mdp = MD_TO_MDP (md);

  if (ptr == mallwatch)
    tr_break ();

  mdp -> mfree_hook = old_mfree_hook;
  mdp -> mmalloc_hook = old_mmalloc_hook;
  mdp -> mrealloc_hook = old_mrealloc_hook;
  hdr = (PTR) mrealloc (md, ptr, size);
  mdp -> mfree_hook = tr_freehook;
  mdp -> mmalloc_hook = tr_mallochook;
  mdp -> mrealloc_hook = tr_reallochook;
  if (hdr == NULL)
    /* Failed realloc.  */
    fprintf (mallstream, "! %08lx %x\n", (unsigned long) ptr, size);
  else
    fprintf (mallstream, "< %08lx\n> %08lx %x\n", (unsigned long) ptr,
	     (unsigned long) hdr, size);

  if (hdr == mallwatch)
    tr_break ();

  return hdr;
}

/* We enable tracing if either the environment variable MALLOC_TRACE
   is set, or if the variable mallwatch has been patched to an address
   that the debugging user wants us to stop on.  When patching mallwatch,
   don't forget to set a breakpoint on tr_break!  */

int
mmtrace ()
{
#if 0	/* FIXME!  This is disabled for now until we figure out how to
	   maintain a stack of hooks per heap, since we might have other
	   hooks (such as set by mmcheck/mmcheckf) active also. */
  char *mallfile;

  mallfile = getenv (mallenv);
  if (mallfile  != NULL || mallwatch != NULL)
    {
      mallstream = fopen (mallfile != NULL ? mallfile : "/dev/null", "w");
      if (mallstream != NULL)
	{
	  /* Be sure it doesn't mmalloc its buffer!  */
	  setbuf (mallstream, mallbuf);
	  fprintf (mallstream, "= Start\n");
	  old_mfree_hook = mdp -> mfree_hook;
	  mdp -> mfree_hook = tr_freehook;
	  old_mmalloc_hook = mdp -> mmalloc_hook;
	  mdp -> mmalloc_hook = tr_mallochook;
	  old_mrealloc_hook = mdp -> mrealloc_hook;
	  mdp -> mrealloc_hook = tr_reallochook;
	}
    }

#endif	/* 0 */

  return (1);
}

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

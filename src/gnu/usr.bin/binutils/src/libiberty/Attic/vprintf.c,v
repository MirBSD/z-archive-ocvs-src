head	1.2;
access;
symbols
	cvs-200501080000:1.1.2.1
	cvs-200409160000:1.1.2.1
	FSF:1.1.2;
locks; strict;
comment	@ * @;


1.2
date	2004.09.16.22.14.45;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.09.16.21.29.24;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.09.16.21.29.24;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@sync number of files with that what we only need
@
text
@/*

@@deftypefn Supplemental int vprintf (const char *@@var{format}, va_list @@var{ap})
@@deftypefnx Supplemental int vfprintf (FILE *@@var{stream}, const char *@@var{format}, va_list @@var{ap})
@@deftypefnx Supplemental int vsprintf (char *@@var{str}, const char *@@var{format}, va_list @@var{ap})

These functions are the same as @@code{printf}, @@code{fprintf}, and
@@code{sprintf}, respectively, except that they are called with a
@@code{va_list} instead of a variable number of arguments.  Note that
they do not call @@code{va_end}; this is the application's
responsibility.  In @@libib{} they are implemented in terms of the
nonstandard but common function @@code{_doprnt}.

@@end deftypefn

*/

#include <ansidecl.h>
#ifdef ANSI_PROTOTYPES
#include <stdarg.h>
#else
#include <varargs.h>
#endif
#include <stdio.h>
#undef vprintf
int
vprintf (format, ap)
     const char *format;
     va_list ap;
{
  return vfprintf (stdout, format, ap);
}
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@binutils-040916.tar.bz2 from sources.deadrat.com for src/ for later use
@
text
@@

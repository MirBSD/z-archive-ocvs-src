head	1.2;
access;
symbols
	cvs-200501080000:1.1.2.2
	tg-mergetmp-mirosx-1:1.1.3.1
	tg-mergefixes-1-branch:1.1.3.1.0.8
	tg-mergefixes-1-base:1.1.3.1
	MIROS_X:1.1.3.1.0.6
	MIROS_X_BASE:1.1.3.1
	MIRBSD_XP_MIRPPC:1.1.3.1.0.4
	MIRBSD_XP_SPARC_BASE:1.1.3.1
	MIRBSD_XP_SPARC:1.1.3.1.0.2
	cvs-200409160000:1.1.2.1
	FSF:1.1.2
	testing_SYNC_D:1.1.3.1
	testing_SYNC_C:1.1.3.1
	testing_SYNC_B:1.1.3.1
	testing_SYNC_A:1.1.3.1
	tg:1.1.3;
locks; strict;
comment	@# @;


1.2
date	2005.01.13.19.44.20;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.11.20.39.52;	author tg;	state Exp;
branches
	1.1.2.1
	1.1.3.1;
next	;

1.1.2.1
date	2004.09.16.21.30.38;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2005.01.08.22.53.29;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2004.08.11.20.39.52;	author tg;	state Stab;
branches;
next	;


desc
@@


1.2
log
@merge binutils update (quick)
@
text
@# This is for embedded products (no MMU) with ELF.
MACHINE=
SCRIPT_NAME=elf
TEMPLATE_NAME=elf32

# Symbols have underscore prepended.
OUTPUT_FORMAT="elf32-us-cris"
ARCH=cris
MAXPAGESIZE=32
ENTRY=__start
EMBEDDED=yes
ALIGNMENT=32
TEXT_START_ADDR=0

# Put crt0 for flash/eprom etc. in this section.
INITIAL_READONLY_SECTIONS='.startup : { KEEP(*(.startup)) }'

# Setting __Stext to . in TEXT_START_SYMBOLS doesn't get what we want
# most of the time, which is the start of all read-only sections;
# there's at least .startup and .init before it.  We have to resort to
# trickery.  Note that __Stext is always defined, not PROVIDE:d, since
# external tools look for it.
TEXT_START_SYMBOLS='__Stext = ADDR (.startup);'

# The __start dance is to get us through assumptions about entry
# symbols, and to clear _start for normal use with sane programs.
EXECUTABLE_SYMBOLS='
__start = DEFINED(__start) ? __start : 
  DEFINED(_start) ? _start : 
    DEFINED(start) ? start :
      DEFINED(.startup) ? .startup + 2 : 2;
'

# Smuggle an "OTHER_TEXT_END_SYMBOLS" here.
OTHER_READONLY_SECTIONS="${RELOCATING+PROVIDE (__Etext = .);}"
DATA_START_SYMBOLS='PROVIDE (__Sdata = .);'

# Smuggle an "OTHER_DATA_END_SYMBOLS" here.
OTHER_SDATA_SECTIONS="${RELOCATING+PROVIDE (__Edata = .);}"

# If .bss does not immediately follow .data but has its own start
# address, we can't get to it with OTHER_BSS_SYMBOLS, neither can we
# use ADDR(.bss) there.  Instead, we use the symbol support for the
# end symbol.
OTHER_BSS_END_SYMBOLS='
 PROVIDE (__Ebss = .);
 PROVIDE (__end = .);
 __Sbss = ADDR (.bss);
 PROVIDE (_bss_start = __Sbss);
'

INIT_START='
 . = ALIGN(2);
 ___init__start = .;
 PROVIDE (___do_global_ctors = .);
'

INIT_END='
 PROVIDE (__init__end = .);
 PROVIDE (___init__end = .);
'

FINI_START='
 . = ALIGN (2);
 ___fini__start = .;
 PROVIDE (___do_global_dtors = .);
'

FINI_END='
 PROVIDE (__fini__end = .);
 ___fini__end = .;
'

CTOR_START='
 PROVIDE (___ctors = .);
 ___elf_ctors_dtors_begin = .;
'

CTOR_END='
 PROVIDE (___ctors_end = .);
'

DTOR_START='
 PROVIDE (___dtors = .);
'

CTOR_END='
 PROVIDE (___dtors_end = .);
 ___elf_ctors_dtors_end = .;
'

# Also add the other symbols provided for rsim/xsim and elinux.
OTHER_END_SYMBOLS='
  PROVIDE (__Eall = .);
  PROVIDE (__Endmem = 0x10000000); 
  PROVIDE (__Stacksize = 0);
'
NO_SMALL_DATA=yes
@


1.1
log
@Initial revision
@
text
@a55 2
 SHORT (0xe1fc); /* push srp */
 SHORT (0xbe7e);
a58 1
 SHORT (0x0d3e); /* jump [sp+] */
a66 2
 SHORT (0xe1fc); /* push srp */
 SHORT (0xbe7e);
a69 1
 SHORT (0x0d3e); /* jump [sp+] */
@


1.1.2.1
log
@binutils-040916.tar.bz2 from sources.deadrat.com for src/ for later use
@
text
@@


1.1.2.2
log
@binutils-050108.tar.bz2
@
text
@d56 2
d61 1
d70 2
d75 1
@


1.1.3.1
log
@Import testing binutils source into main tree
@
text
@@

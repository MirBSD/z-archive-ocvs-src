head	1.1;
branch	1.1.3;
access;
symbols
	cvs-200501080000:1.1.2.1
	tg-mergetmp-mirosx-1:1.1.3.1
	tg-mergefixes-1-branch:1.1.3.1.0.8
	tg-mergefixes-1-base:1.1.3.1
	MIROS_X:1.1.3.1.0.6
	MIROS_X_BASE:1.1.3.1
	MIRBSD_XP_MIRPPC:1.1.3.1.0.4
	MIRBSD_XP_SPARC_BASE:1.1.3.1
	MIRBSD_XP_SPARC:1.1.3.1.0.2
	cvs-200409160000:1.1.2.1
	FSF:1.1.2
	testing_SYNC_D:1.1.3.1
	testing_SYNC_C:1.1.3.1
	testing_SYNC_B:1.1.3.1
	testing_SYNC_A:1.1.3.1
	tg:1.1.3;
locks; strict;
comment	@ * @;


1.1
date	2004.08.11.20.32.23;	author tg;	state Exp;
branches
	1.1.2.1
	1.1.3.1;
next	;

1.1.2.1
date	2004.09.16.21.25.10;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2004.08.11.20.32.23;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* Core file stuff.  At least some, perhaps all, of the following
   defines work on many more systems than just SCO.  */

#define NBPG NBPC
#define UPAGES USIZE
#define HOST_DATA_START_ADDR u.u_exdata.ux_datorg
#define HOST_STACK_START_ADDR u.u_sub
#define TRAD_UNIX_CORE_FILE_FAILING_SIGNAL(abfd) \
  ((core_upage(abfd)->u_sysabort != 0) \
   ? core_upage(abfd)->u_sysabort \
   : -1)

/* According to the manpage, a version 2 SCO corefile can contain
   various additional sections (it is cleverly arranged so the u area,
   data, and stack are first where we can find them).  So without
   writing lots of code to parse all their headers and stuff, we can't
   know whether a corefile is bigger than it should be.  */

#define TRAD_CORE_ALLOW_ANY_EXTRA_SIZE 1
@


1.1.2.1
log
@binutils-040916.tar.bz2 from sources.deadrat.com for src/ for later use
@
text
@@


1.1.3.1
log
@Import testing binutils source into main tree
@
text
@@

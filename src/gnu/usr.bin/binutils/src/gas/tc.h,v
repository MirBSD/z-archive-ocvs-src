head	1.3;
access;
symbols
	cvs-200501080000:1.1.2.2
	tg-mergetmp-mirosx-1:1.2
	tg-mergefixes-1-branch:1.2.0.8
	tg-mergefixes-1-base:1.2
	MIROS_X:1.2.0.6
	MIROS_X_BASE:1.2
	MIRBSD_XP_MIRPPC:1.2.0.4
	MIRBSD_XP_SPARC_BASE:1.2
	MIRBSD_XP_SPARC:1.2.0.2
	cvs-200409160000:1.1.2.1
	FSF:1.1.2
	testing_SYNC_D:1.1.3.1
	testing_SYNC_C:1.1.3.1
	testing_SYNC_B:1.1.3.1
	testing_SYNC_A:1.1.3.1
	tg:1.1.3;
locks; strict;
comment	@ * @;


1.3
date	2005.01.13.19.44.11;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.16.22.27.53;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.11.20.33.05;	author tg;	state Exp;
branches
	1.1.2.1
	1.1.3.1;
next	;

1.1.2.1
date	2004.09.16.21.25.39;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2005.01.08.22.51.47;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2004.08.11.20.33.05;	author tg;	state Stab;
branches;
next	;


desc
@@


1.3
log
@merge binutils update (quick)
@
text
@/* tc.h - target cpu dependent

   Copyright 1987, 1990, 1991, 1992, 1993, 1994, 1995, 2000, 2001, 2003, 2004
   Free Software Foundation, Inc.

   This file is part of GAS, the GNU Assembler.

   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to
   the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

/* In theory (mine, at least!) the machine dependent part of the assembler
   should only have to include one file.  This one.  -- JF */

extern const pseudo_typeS md_pseudo_table[];

/* JF moved this here from as.h under the theory that nobody except MACHINE.c
   and write.c care about it anyway.  */

struct relax_type
{
  /* Forward reach. Signed number. > 0.  */
  long rlx_forward;
  /* Backward reach. Signed number. < 0.  */
  long rlx_backward;

  /* Bytes length of this address.  */
  unsigned char rlx_length;

  /* Next longer relax-state.  0 means there is no 'next' relax-state.  */
  relax_substateT rlx_more;
};

typedef struct relax_type relax_typeS;

extern const int md_reloc_size;	/* Size of a relocation record.  */

char * md_atof (int, char *, int *);
int    md_parse_option (int, char *);
void   md_show_usage (FILE *);
short  tc_coff_fix2rtype (fixS *);
void   md_assemble (char *);
void   md_begin (void);
void   md_number_to_chars (char *, valueT, int);
void   md_apply_fix3 (fixS *, valueT *, segT);

#ifndef WORKING_DOT_WORD
extern int md_short_jump_size;
extern int md_long_jump_size;
#endif

#ifdef USE_UNIQUE
/* The name of an external symbol which is
   used to make weak PE symbol names unique.  */
extern const char * an_external_name;
#endif

#ifndef md_create_long_jump
void    md_create_long_jump (char *, addressT, addressT, fragS *, symbolS *);
#endif
#ifndef md_create_short_jump
void    md_create_short_jump (char *, addressT, addressT, fragS *, symbolS *);
#endif
#ifndef md_pcrel_from
long    md_pcrel_from (fixS *);
#endif
#ifndef md_operand
void    md_operand (expressionS *);
#endif
#ifndef md_estimate_size_before_relax
int     md_estimate_size_before_relax (fragS * fragP, segT);
#endif
#ifndef md_section_align
valueT  md_section_align (segT, valueT);
#endif
#ifndef  md_undefined_symbol
symbolS *md_undefined_symbol (char *);
#endif

#ifdef BFD_ASSEMBLER

#ifndef md_convert_frag
void    md_convert_frag (bfd *, segT, fragS *);
#endif
#ifndef tc_headers_hook
void    tc_headers_hook (segT *, fixS *);
#endif
#ifndef RELOC_EXPANSION_POSSIBLE
extern arelent *tc_gen_reloc (asection *, fixS *);
#else
extern arelent **tc_gen_reloc (asection *, fixS *);
#endif

#else /* not BFD_ASSEMBLER */

#ifndef md_convert_frag
void    md_convert_frag (object_headers *, segT, fragS *);
#endif
#ifndef tc_crawl_symbol_chain
void    tc_crawl_symbol_chain (object_headers *);
#endif
#ifndef tc_headers_hook
void    tc_headers_hook (object_headers *);
#endif

#endif /* BFD_ASSEMBLER */
@


1.2
log
@update to most recent copy of binutils, based upon the vendor import branch cvs-200409160000 and our binutils port
@
text
@d3 1
a3 1
   Copyright 1987, 1990, 1991, 1992, 1993, 1994, 1995, 2000, 2001, 2003
d57 10
@


1.1
log
@Initial revision
@
text
@d46 1
a46 1
extern const int md_reloc_size;	/* Size of a relocation record */
d48 15
a62 3
char *md_atof (int what_statement_type, char *literalP, int *sizeP);
#ifndef md_estimate_size_before_relax
int md_estimate_size_before_relax (fragS * fragP, segT segment);
a63 2
int md_parse_option (int c, char *arg);
void md_show_usage (FILE *);
d65 4
a68 1
long md_pcrel_from (fixS * fixP);
d70 2
a71 7
short tc_coff_fix2rtype (fixS * fixP);
void md_assemble (char *str);
void md_begin (void);
#ifndef md_create_long_jump
void md_create_long_jump (char *ptr, addressT from_addr,
			  addressT to_addr, fragS * frag,
			  symbolS * to_symbol);
d73 2
a74 4
#ifndef md_create_short_jump
void md_create_short_jump (char *ptr, addressT from_addr,
			   addressT to_addr, fragS * frag,
			   symbolS * to_symbol);
d76 2
a77 4
void md_number_to_chars (char *buf, valueT val, int n);

#ifndef md_operand
void md_operand (expressionS * expressionP);
d80 1
a80 1
void md_apply_fix3 (fixS *, valueT *, segT);
a81 1
#ifdef BFD_ASSEMBLER
d83 1
a83 1
void md_convert_frag (bfd * headers, segT sec, fragS * fragP);
d86 1
a86 1
void tc_headers_hook (segT *, fixS *);
d93 1
d95 1
d97 1
a97 1
void md_convert_frag (object_headers * headers, segT, fragS * fragP);
a98 1

d100 2
a101 3
void tc_crawl_symbol_chain (object_headers * headers);
#endif /* tc_crawl_symbol_chain */

d103 1
a103 6
void tc_headers_hook (object_headers * headers);
#endif /* tc_headers_hook */
#endif /* BFD_ASSEMBLER */

#ifndef md_section_align
valueT md_section_align (segT seg, valueT size);
d106 1
a106 5
#ifndef md_undefined_symbol
symbolS *md_undefined_symbol (char *name);
#endif

/* end of tc.h */
@


1.1.2.1
log
@binutils-040916.tar.bz2 from sources.deadrat.com for src/ for later use
@
text
@d46 1
a46 11
extern const int md_reloc_size;	/* Size of a relocation record.  */

char * md_atof (int, char *, int *);
int    md_parse_option (int, char *);
void   md_show_usage (FILE *);
short  tc_coff_fix2rtype (fixS *);
void   md_assemble (char *);
void   md_begin (void);
void   md_number_to_chars (char *, valueT, int);
void   md_apply_fix3 (fixS *, valueT *, segT);

d48 12
d61 3
a63 1
void    md_create_long_jump (char *, addressT, addressT, fragS *, symbolS *);
d66 3
a68 4
void    md_create_short_jump (char *, addressT, addressT, fragS *, symbolS *);
#endif
#ifndef md_pcrel_from
long    md_pcrel_from (fixS *);
d70 2
d73 1
a73 10
void    md_operand (expressionS *);
#endif
#ifndef md_estimate_size_before_relax
int     md_estimate_size_before_relax (fragS * fragP, segT);
#endif
#ifndef md_section_align
valueT  md_section_align (segT, valueT);
#endif
#ifndef  md_undefined_symbol
symbolS *md_undefined_symbol (char *);
d75 2
a78 1

d80 1
a80 1
void    md_convert_frag (bfd *, segT, fragS *);
d83 1
a83 1
void    tc_headers_hook (segT *, fixS *);
a89 1

a90 1

d92 1
a92 1
void    md_convert_frag (object_headers *, segT, fragS *);
d94 1
d96 10
a105 1
void    tc_crawl_symbol_chain (object_headers *);
d107 3
a109 2
#ifndef tc_headers_hook
void    tc_headers_hook (object_headers *);
d112 1
a112 1
#endif /* BFD_ASSEMBLER */
@


1.1.2.2
log
@binutils-050108.tar.bz2
@
text
@d3 1
a3 1
   Copyright 1987, 1990, 1991, 1992, 1993, 1994, 1995, 2000, 2001, 2003, 2004
a56 10
#ifndef WORKING_DOT_WORD
extern int md_short_jump_size;
extern int md_long_jump_size;
#endif

#ifdef USE_UNIQUE
/* The name of an external symbol which is
   used to make weak PE symbol names unique.  */
extern const char * an_external_name;
#endif
@


1.1.3.1
log
@Import testing binutils source into main tree
@
text
@@

head	1.1;
branch	1.1.3;
access;
symbols
	cvs-200501080000:1.1.2.1
	tg-mergetmp-mirosx-1:1.1.3.2
	tg-mergefixes-1-branch:1.1.3.2.0.8
	tg-mergefixes-1-base:1.1.3.2
	MIROS_X:1.1.3.2.0.6
	MIROS_X_BASE:1.1.3.2
	MIRBSD_XP_MIRPPC:1.1.3.2.0.4
	MIRBSD_XP_SPARC_BASE:1.1.3.2
	MIRBSD_XP_SPARC:1.1.3.2.0.2
	cvs-200409160000:1.1.2.1
	FSF:1.1.2
	testing_SYNC_D:1.1.3.2
	testing_SYNC_C:1.1.3.2
	testing_SYNC_B:1.1.3.1
	testing_SYNC_A:1.1.3.1
	tg:1.1.3;
locks; strict;
comment	@ * @;


1.1
date	2004.08.11.20.33.13;	author tg;	state Exp;
branches
	1.1.2.1
	1.1.3.1;
next	;

1.1.2.1
date	2004.09.16.21.25.51;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2004.08.11.20.33.13;	author tg;	state Exp;
branches;
next	1.1.3.2;

1.1.3.2
date	2004.08.12.20.07.46;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* SOM object file format.
   Copyright 1993, 1994, 1995, 1998, 2000 Free Software Foundation, Inc.

   This file is part of GAS, the GNU Assembler.

   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 1, or (at your option)
   any later version.

   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.

   Written by the Center for Software Science at the University of Utah
   and by Cygnus Support.  */

#ifndef _OBJ_SOM_H
#define _OBJ_SOM_H

#define OBJ_SOM 1

#include "bfd.h"
#include "bfd/som.h"
#include "targ-cpu.h"

#ifndef FALSE
#define FALSE 0
#define TRUE !FALSE
#endif

/* should be conditional on address size!  */
#define som_symbol(asymbol) ((som_symbol_type *) (&(asymbol)->the_bfd))

extern void som_file_symbol PARAMS ((char *));
extern void obj_som_version PARAMS ((int));
extern void obj_som_init_stab_section PARAMS ((segT));
extern void obj_som_copyright PARAMS ((int));
extern void obj_som_compiler PARAMS ((int));

#define obj_symbol_new_hook(s) {;}

/* SOM has several attributes for spaces/subspaces which can not
   be easily expressed in BFD.  We use these macros to trigger calls
   into the SOM BFD backend to set these attributes.  */
#define obj_set_section_attributes  bfd_som_set_section_attributes
#define obj_set_subsection_attributes bfd_som_set_subsection_attributes

/* Likewise for symbol types.  */
#define obj_set_symbol_type bfd_som_set_symbol_type

/* Stabs go in a separate sections.  GDB expects to find them in sections
   with the names $GDB_SYMBOLS$ and $GDB_STRINGS$ rather than .stab and
   .stabstr.  */
#define SEPARATE_STAB_SECTIONS 1
#define STAB_SECTION_NAME "$GDB_SYMBOLS$"
#define STAB_STRING_SECTION_NAME "$GDB_STRINGS$"

/* We use INIT_STAB_SECTION to record the space/subspace relationships
   for the various debugging sections.  */
#define INIT_STAB_SECTION(seg) obj_som_init_stab_section (seg)

/* We'll be updating the magic 1st stab entry once the entire assembly
   fail has been processed.  */
#define obj_frob_file() som_frob_file()

#endif /* _OBJ_SOM_H */
@


1.1.2.1
log
@binutils-040916.tar.bz2 from sources.deadrat.com for src/ for later use
@
text
@a41 1
extern void som_frob_file PARAMS ((void));
@


1.1.3.1
log
@Import testing binutils source into main tree
@
text
@@


1.1.3.2
log
@sync with testing_SYNC_C from testing/binutils, which apparently works
@
text
@a41 1
extern void som_frob_file PARAMS ((void));
@


head	1.1;
branch	1.1.3;
access;
symbols
	cvs-200501080000:1.1.2.1
	tg-mergetmp-mirosx-1:1.1.3.1
	tg-mergefixes-1-branch:1.1.3.1.0.8
	tg-mergefixes-1-base:1.1.3.1
	MIROS_X:1.1.3.1.0.6
	MIROS_X_BASE:1.1.3.1
	MIRBSD_XP_MIRPPC:1.1.3.1.0.4
	MIRBSD_XP_SPARC_BASE:1.1.3.1
	MIRBSD_XP_SPARC:1.1.3.1.0.2
	cvs-200409160000:1.1.2.1
	FSF:1.1.2
	testing_SYNC_D:1.1.3.1
	testing_SYNC_C:1.1.3.1
	testing_SYNC_B:1.1.3.1
	testing_SYNC_A:1.1.3.1
	tg:1.1.3;
locks; strict;
comment	@ * @;


1.1
date	2004.08.11.20.38.47;	author tg;	state Exp;
branches
	1.1.2.1
	1.1.3.1;
next	;

1.1.2.1
date	2004.09.16.21.28.54;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2004.08.11.20.38.47;	author tg;	state Stab;
branches
	1.1.3.1.8.1;
next	;

1.1.3.1.8.1
date	2005.01.09.13.50.27;	author tg;	state Exp;
branches;
next	1.1.3.1.8.2;

1.1.3.1.8.2
date	2005.01.09.14.27.31;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* Symbol concatenation utilities.

   Copyright (C) 1998, 2000 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
 
   You should have received a copy of the GNU General Public License along
   with this program; if not, write to the Free Software Foundation, Inc.,
   59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#ifndef SYM_CAT_H
#define SYM_CAT_H

#if defined (__STDC__) || defined (ALMOST_STDC) || defined (HAVE_STRINGIZE)
#define CONCAT2(a,b)	 a##b
#define CONCAT3(a,b,c)	 a##b##c
#define CONCAT4(a,b,c,d) a##b##c##d
#define STRINGX(s) #s
#else
/* Note one should never pass extra whitespace to the CONCATn macros,
   e.g. CONCAT2(foo, bar) because traditonal C will keep the space between
   the two labels instead of concatenating them.  Instead, make sure to
   write CONCAT2(foo,bar).  */
#define CONCAT2(a,b)	 a/**/b
#define CONCAT3(a,b,c)	 a/**/b/**/c
#define CONCAT4(a,b,c,d) a/**/b/**/c/**/d
#define STRINGX(s) "s"
#endif

#define XCONCAT2(a,b)     CONCAT2(a,b)
#define XCONCAT3(a,b,c)   CONCAT3(a,b,c)
#define XCONCAT4(a,b,c,d) CONCAT4(a,b,c,d)

/* Note the layer of indirection here is typically used to allow
   stringification of the expansion of macros.  I.e. "#define foo
   bar", "XSTRING(foo)", to yield "bar".  Be aware that this only
   works for __STDC__, not for traditional C which will still resolve
   to "foo".  */
#define XSTRING(s) STRINGX(s) 

#endif /* SYM_CAT_H */
@


1.1.2.1
log
@binutils-040916.tar.bz2 from sources.deadrat.com for src/ for later use
@
text
@@


1.1.3.1
log
@Import testing binutils source into main tree
@
text
@@


1.1.3.1.8.1
log
@I need concat5 and concat6 for gcc
@
text
@a0 2
/* $MirBSD$ */

d14 1
a14 1

a25 2
#define CONCAT5(a,b,c,d,e)	a##b##c##d##e
#define CONCAT6(a,b,c,d,e,f)	a##b##c##d##e##f
a34 2
#define CONCAT5(a,b,c,d,e)	a/**/b/**/c/**/d/**/e
#define CONCAT6(a,b,c,d,e,f)	a/**/b/**/c/**/d/**/e/**/f
a40 2
#define XCONCAT5(a,b,c,d,e)	CONCAT5(a,b,c,d,e)
#define XCONCAT6(a,b,c,d,e,f)	CONCAT6(a,b,c,d,e,f)
d47 1
a47 1
#define XSTRING(s) STRINGX(s)
@


1.1.3.1.8.2
log
@fold MIROS_X branch
@
text
@d1 2
d16 1
a16 1
 
d28 2
d39 2
d47 2
d55 1
a55 1
#define XSTRING(s) STRINGX(s) 
@



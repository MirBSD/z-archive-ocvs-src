head	1.3;
access;
symbols
	binutils-2_15:1.1.2.2
	cvs-200406091940:1.1.1.2
	MIRBSD_7quater:1.2
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.2.0.6
	MIRBSD_7:1.2.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.2
	MIRBSD_7_DEV:1.2.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	binutils_2_14:1.1.2.2
	binutils_2_11_2:1.1.2.1
	FSF:1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2004.08.11.21.18.38;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2003.09.23.21.05.20;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.40.56;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2003.03.22.17.40.56;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.06.09.20.30.21;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2003.09.23.15.42.50;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.09.23.16.07.55;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove old binutils
@
text
@/* IBM RS/6000 "XCOFF64" file definitions for BFD.
   Copyright (C) 2000, 2002 Free Software Foundation, Inc.  

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

/********************** FILE HEADER **********************/

struct external_filehdr
{
  char f_magic[2];	/* magic number			*/
  char f_nscns[2];	/* number of sections		*/
  char f_timdat[4];	/* time & date stamp		*/
  char f_symptr[8];	/* file pointer to symtab 	*/
  char f_opthdr[2];	/* sizeof(optional hdr)		*/
  char f_flags[2];	/* flags			*/
  char f_nsyms[4];	/* number of symtab entries	*/
};

/* IBM RS/6000.  */
#define U803XTOCMAGIC 0757	/* Aix 4.3 64-bit XCOFF */
#define	U64_TOCMAGIC  0767	/* AIX 5+ 64-bit XCOFF */
#define BADMAG(x) ((x).f_magic != U803XTOCMAGIC && (x).f_magic != U64_TOCMAGIC)

#define	FILHDR	struct external_filehdr
#define	FILHSZ	24

/********************** AOUT "OPTIONAL HEADER" **********************/

typedef struct 
{
  unsigned char	magic[2];		/* type of file			*/
  unsigned char	vstamp[2];		/* version stamp		*/
  unsigned char	o_debugger[4];		/* reserved 			*/
  unsigned char	text_start[8];		/* base of text used for this file */
  unsigned char	data_start[8];		/* base of data used for this file */
  unsigned char	o_toc[8];		/* address of TOC */
  unsigned char	o_snentry[2];		/* section number of entry point */
  unsigned char	o_sntext[2];		/* section number of .text section */
  unsigned char	o_sndata[2];		/* section number of .data section */
  unsigned char	o_sntoc[2];		/* section number of TOC */
  unsigned char	o_snloader[2];		/* section number of .loader section */
  unsigned char	o_snbss[2];		/* section number of .bss section */
  unsigned char	o_algntext[2];		/* .text alignment */
  unsigned char	o_algndata[2];		/* .data alignment */
  unsigned char	o_modtype[2];		/* module type (??) */
  unsigned char o_cputype[2];		/* cpu type */
  unsigned char	o_resv2[4];		/* reserved 			*/
  unsigned char	tsize[8];		/* text size bytes, padded to FW bdry */
  unsigned char	dsize[8];		/* initialized data "  "	*/
  unsigned char	bsize[8];		/* uninitialized data "   "	*/
  unsigned char	entry[8];		/* entry pt.			*/
  unsigned char	o_maxstack[8];		/* max stack size (??) 		*/
  unsigned char o_maxdata[8];		/* max data size (??) 		*/
  unsigned char	o_resv3[16];		/* reserved 			*/
}
AOUTHDR;

#define AOUTSZ 120
#define SMALL_AOUTSZ (0)
#define AOUTHDRSZ 72

/********************** SECTION HEADER **********************/

struct external_scnhdr
{
  char	s_name[8];	/* section name			*/
  char	s_paddr[8];	/* physical address, aliased s_nlib */
  char	s_vaddr[8];	/* virtual address		*/
  char	s_size[8];	/* section size			*/
  char	s_scnptr[8];	/* file ptr to raw data for section */
  char	s_relptr[8];	/* file ptr to relocation	*/
  char	s_lnnoptr[8];	/* file ptr to line numbers	*/
  char	s_nreloc[4];	/* number of relocation entries	*/
  char	s_nlnno[4];	/* number of line number entries*/
  char	s_flags[4];	/* flags			*/
  char  s_pad[4];	/* padding */  
};

#define	SCNHDR	struct external_scnhdr

#define	SCNHSZ	72

/********************** LINE NUMBERS **********************/

/* 1 line number entry for every "breakpointable" source line in a section.
   Line numbers are grouped on a per function basis; first entry in a function
   grouping will have l_lnno = 0 and in place of physical address will be the
   symbol table index of the function name.  */

struct external_lineno
{
  union
  {
    char l_symndx[4];	/* function name symbol index, iff l_lnno == 0*/
    char l_paddr[8];	/* (physical) address of line number	*/
  } l_addr;

  char l_lnno[4];	/* line number		*/
};

#define	LINENO	struct external_lineno

#define	LINESZ	12

/********************** SYMBOLS **********************/

#define E_SYMNMLEN	8	/* # characters in a symbol name	*/
#define E_FILNMLEN	14	/* # characters in a file name		*/
#define E_DIMNUM	4	/* # array dimensions in auxiliary entry */

struct external_syment 
{
  char e_value[8];
  char e_offset[4];
  char e_scnum[2];
  char e_type[2];
  char e_sclass[1];
  char e_numaux[1];
};

#define N_BTMASK	(017)
#define N_TMASK		(060)
#define N_BTSHFT	(4)
#define N_TSHIFT	(2)

union external_auxent
{
    struct {
    	union {
	    struct {
		char x_lnno[4]; 	/* declaration line number */
		char x_size[2]; 	/* str/union/array size */
	    } x_lnsz;
	    struct {
		char x_lnnoptr[8];/* ptr to fcn line */
		char x_fsize[4];	 /* size of function */
		char x_endndx[4];	 /* entry ndx past block end */
	    } x_fcn;
 	} x_fcnary;
    } x_sym;
         
    union {
	char x_fname[E_FILNMLEN];
	struct {
	    char x_zeroes[4];
	    char x_offset[4];
	    char          x_pad[6];
	    unsigned char x_ftype[1];
	    unsigned char x_resv[2];
	} x_n;
    } x_file;

    struct {
	char x_exptr[8];
	char x_fsize[4];
	char x_endndx[4];
	char x_pad[1];
    } x_except;

    struct {
	    unsigned char x_scnlen_lo[4];
	    unsigned char x_parmhash[4];
	    unsigned char x_snhash[2];
	    unsigned char x_smtyp[1];
	    unsigned char x_smclas[1];
	    unsigned char x_scnlen_hi[4];
	    unsigned char x_pad[1];
    } x_csect;	

    struct {
	char x_pad[17];
	char x_auxtype[1];
    } x_auxtype;
};

#define	SYMENT	struct external_syment
#define	SYMESZ	18	
#define	AUXENT	union external_auxent
#define	AUXESZ	18
#define DBXMASK 0x80		/* for dbx storage mask */
#define SYMNAME_IN_DEBUG(symptr) ((symptr)->n_sclass & DBXMASK)

/* Values for auxtype field in XCOFF64, taken from AIX 4.3 sym.h.  */
#define _AUX_EXCEPT     255
#define _AUX_FCN        254
#define _AUX_SYM        253
#define _AUX_FILE       252
#define _AUX_CSECT      251

/********************** RELOCATION DIRECTIVES **********************/

struct external_reloc
{
  char r_vaddr[8];
  char r_symndx[4];
  char r_size[1];
  char r_type[1];
};

#define RELOC struct external_reloc
#define RELSZ 14

#define DEFAULT_DATA_SECTION_ALIGNMENT 4
#define DEFAULT_BSS_SECTION_ALIGNMENT 4
#define DEFAULT_TEXT_SECTION_ALIGNMENT 4
/* For new sections we havn't heard of before */
#define DEFAULT_SECTION_ALIGNMENT 4

/* The ldhdr structure.  This appears at the start of the .loader
   section.  */

struct external_ldhdr
{
  bfd_byte l_version[4];
  bfd_byte l_nsyms[4];
  bfd_byte l_nreloc[4];
  bfd_byte l_istlen[4];
  bfd_byte l_nimpid[4];
  bfd_byte l_stlen[4];
  bfd_byte l_impoff[8];
  bfd_byte l_stoff[8];
  bfd_byte l_symoff[8];
  bfd_byte l_rldoff[8];
};
#define LDHDRSZ (56)

struct external_ldsym
{
  bfd_byte l_value[8];
  bfd_byte l_offset[4];
  bfd_byte l_scnum[2];
  bfd_byte l_smtype[1];
  bfd_byte l_smclas[1];
  bfd_byte l_ifile[4];
  bfd_byte l_parm[4];
};

#define LDSYMSZ (24)

struct external_ldrel
{
  bfd_byte l_vaddr[8];
  bfd_byte l_rtype[2];
  bfd_byte l_rsecnm[2];
  bfd_byte l_symndx[4];
};

#define LDRELSZ (16)
@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright (C) 2000 Free Software Foundation, Inc.  
d16 1
a16 2
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  
*/
d20 9
a28 8
struct external_filehdr {
	char f_magic[2];	/* magic number			*/
	char f_nscns[2];	/* number of sections		*/
	char f_timdat[4];	/* time & date stamp		*/
	char f_symptr[8];/* file pointer to symtab 	*/
	char f_opthdr[2];	/* sizeof(optional hdr)		*/
	char f_flags[2];	/* flags			*/
	char f_nsyms[4];	/* number of symtab entries	*/
d31 4
a34 4
        /* IBM RS/6000 */
#define U803XTOCMAGIC 0757	/* readonly text segments and TOC, XCOFF64 */

#define BADMAG(x) ((x).f_magic != U803XTOCMAGIC)
a40 1

d46 3
a48 3
  unsigned char	text_start[8];	/* base of text used for this file */
  unsigned char	data_start[8];	/* base of data used for this file */
  unsigned char	o_toc[8];	/* address of TOC */
d64 2
a65 2
  unsigned char	o_maxstack[8];	/* max stack size (??) 		*/
  unsigned char o_maxdata[8];	/* max data size (??) 		*/
a73 5
#define	RS6K_AOUTHDR_OMAGIC	0x0107	/* old: text & data writeable */
#define	RS6K_AOUTHDR_NMAGIC	0x0108	/* new: text r/o, data r/w */
#define	RS6K_AOUTHDR_ZMAGIC	0x010B	/* paged: text r/o, both page-aligned */


d76 14
a89 23

struct external_scnhdr {
	char	s_name[8];		/* section name			*/
	char	s_paddr[8];	/* physical address, aliased s_nlib */
	char	s_vaddr[8];	/* virtual address		*/
	char	s_size[8];	/* section size			*/
	char	s_scnptr[8];	/* file ptr to raw data for section */
	char	s_relptr[8];	/* file ptr to relocation	*/
	char	s_lnnoptr[8];	/* file ptr to line numbers	*/
	char	s_nreloc[4];	/* number of relocation entries	*/
	char	s_nlnno[4];	/* number of line number entries*/
	char	s_flags[4];		/* flags			*/
	char    s_pad[4];		/* padding */  
};

/*
 * names of "special" sections
 */
#define _TEXT	".text"
#define _DATA	".data"
#define _BSS	".bss"
#define _PAD	".pad"
#define _LOADER	".loader"
d95 1
a95 2
/* XCOFF uses a special .loader section with type STYP_LOADER.  */
#define STYP_LOADER 0x1000
d97 4
a100 2
/* XCOFF uses a special .debug section with type STYP_DEBUG.  */
#define STYP_DEBUG 0x2000
d102 7
a108 5
/* XCOFF handles line number or relocation overflow by creating
   another section header with STYP_OVRFLO set.  */
#define STYP_OVRFLO 0x8000

/********************** LINE NUMBERS **********************/
d110 1
a110 11
/* 1 line number entry for every "breakpointable" source line in a section.
 * Line numbers are grouped on a per function basis; first entry in a function
 * grouping will have l_lnno = 0 and in place of physical address will be the
 * symbol table index of the function name.
 */
struct external_lineno {
	union {
		char l_symndx[8];/* function name symbol index, iff l_lnno == 0*/
		char l_paddr[8];	/* (physical) address of line number	*/
	} l_addr;
	char l_lnno[4];		/* line number		*/
a112 1

a116 1

d125 1
a125 3
  union {
    char e_value[8];
  } e;
a132 2


a136 3
  

union external_auxent {
d138 2
d195 1
a195 1
/* Values for auxtype field in XCOFF64, taken from AIX 4.3 sym.h */
a201 2


d204 2
a205 2

struct external_reloc {
a211 1

d220 41
@


1.1.2.1
log
@vendor-branch-i-fy GNU binutils (2.11.2) to facilitate an update
@
text
@@


1.1.2.2
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@d2 1
a2 1
   Copyright (C) 2000, 2002 Free Software Foundation, Inc.  
d16 2
a17 1
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d21 8
a28 9
struct external_filehdr
{
  char f_magic[2];	/* magic number			*/
  char f_nscns[2];	/* number of sections		*/
  char f_timdat[4];	/* time & date stamp		*/
  char f_symptr[8];	/* file pointer to symtab 	*/
  char f_opthdr[2];	/* sizeof(optional hdr)		*/
  char f_flags[2];	/* flags			*/
  char f_nsyms[4];	/* number of symtab entries	*/
d31 4
a34 4
/* IBM RS/6000.  */
#define U803XTOCMAGIC 0757	/* Aix 4.3 64-bit XCOFF */
#define	U64_TOCMAGIC  0767	/* AIX 5+ 64-bit XCOFF */
#define BADMAG(x) ((x).f_magic != U803XTOCMAGIC && (x).f_magic != U64_TOCMAGIC)
d41 1
d47 3
a49 3
  unsigned char	text_start[8];		/* base of text used for this file */
  unsigned char	data_start[8];		/* base of data used for this file */
  unsigned char	o_toc[8];		/* address of TOC */
d65 2
a66 2
  unsigned char	o_maxstack[8];		/* max stack size (??) 		*/
  unsigned char o_maxdata[8];		/* max data size (??) 		*/
d75 5
d82 23
a104 14
struct external_scnhdr
{
  char	s_name[8];	/* section name			*/
  char	s_paddr[8];	/* physical address, aliased s_nlib */
  char	s_vaddr[8];	/* virtual address		*/
  char	s_size[8];	/* section size			*/
  char	s_scnptr[8];	/* file ptr to raw data for section */
  char	s_relptr[8];	/* file ptr to relocation	*/
  char	s_lnnoptr[8];	/* file ptr to line numbers	*/
  char	s_nreloc[4];	/* number of relocation entries	*/
  char	s_nlnno[4];	/* number of line number entries*/
  char	s_flags[4];	/* flags			*/
  char  s_pad[4];	/* padding */  
};
d110 10
d123 11
a133 3
   Line numbers are grouped on a per function basis; first entry in a function
   grouping will have l_lnno = 0 and in place of physical address will be the
   symbol table index of the function name.  */
a134 10
struct external_lineno
{
  union
  {
    char l_symndx[4];	/* function name symbol index, iff l_lnno == 0*/
    char l_paddr[8];	/* (physical) address of line number	*/
  } l_addr;

  char l_lnno[4];	/* line number		*/
};
d140 1
d149 3
a151 1
  char e_value[8];
d159 2
d165 3
a168 2
union external_auxent
{
d224 1
a224 1
/* Values for auxtype field in XCOFF64, taken from AIX 4.3 sym.h.  */
d231 2
d235 2
a236 2
struct external_reloc
{
d243 1
a251 41

/* The ldhdr structure.  This appears at the start of the .loader
   section.  */

struct external_ldhdr
{
  bfd_byte l_version[4];
  bfd_byte l_nsyms[4];
  bfd_byte l_nreloc[4];
  bfd_byte l_istlen[4];
  bfd_byte l_nimpid[4];
  bfd_byte l_stlen[4];
  bfd_byte l_impoff[8];
  bfd_byte l_stoff[8];
  bfd_byte l_symoff[8];
  bfd_byte l_rldoff[8];
};
#define LDHDRSZ (56)

struct external_ldsym
{
  bfd_byte l_value[8];
  bfd_byte l_offset[4];
  bfd_byte l_scnum[2];
  bfd_byte l_smtype[1];
  bfd_byte l_smclas[1];
  bfd_byte l_ifile[4];
  bfd_byte l_parm[4];
};

#define LDSYMSZ (24)

struct external_ldrel
{
  bfd_byte l_vaddr[8];
  bfd_byte l_rtype[2];
  bfd_byte l_rsecnm[2];
  bfd_byte l_symndx[4];
};

#define LDRELSZ (16)
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIXÆ, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync of src/gnu with OpenBSD (promised a long time ago)
@
text
@d2 1
a2 1
   Copyright (C) 2000, 2002 Free Software Foundation, Inc.  
d16 2
a17 1
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d21 8
a28 9
struct external_filehdr
{
  char f_magic[2];	/* magic number			*/
  char f_nscns[2];	/* number of sections		*/
  char f_timdat[4];	/* time & date stamp		*/
  char f_symptr[8];	/* file pointer to symtab 	*/
  char f_opthdr[2];	/* sizeof(optional hdr)		*/
  char f_flags[2];	/* flags			*/
  char f_nsyms[4];	/* number of symtab entries	*/
d31 4
a34 4
/* IBM RS/6000.  */
#define U803XTOCMAGIC 0757	/* Aix 4.3 64-bit XCOFF */
#define	U64_TOCMAGIC  0767	/* AIX 5+ 64-bit XCOFF */
#define BADMAG(x) ((x).f_magic != U803XTOCMAGIC && (x).f_magic != U64_TOCMAGIC)
d41 1
d47 3
a49 3
  unsigned char	text_start[8];		/* base of text used for this file */
  unsigned char	data_start[8];		/* base of data used for this file */
  unsigned char	o_toc[8];		/* address of TOC */
d65 2
a66 2
  unsigned char	o_maxstack[8];		/* max stack size (??) 		*/
  unsigned char o_maxdata[8];		/* max data size (??) 		*/
d75 5
d82 23
a104 14
struct external_scnhdr
{
  char	s_name[8];	/* section name			*/
  char	s_paddr[8];	/* physical address, aliased s_nlib */
  char	s_vaddr[8];	/* virtual address		*/
  char	s_size[8];	/* section size			*/
  char	s_scnptr[8];	/* file ptr to raw data for section */
  char	s_relptr[8];	/* file ptr to relocation	*/
  char	s_lnnoptr[8];	/* file ptr to line numbers	*/
  char	s_nreloc[4];	/* number of relocation entries	*/
  char	s_nlnno[4];	/* number of line number entries*/
  char	s_flags[4];	/* flags			*/
  char  s_pad[4];	/* padding */  
};
d110 10
d123 11
a133 3
   Line numbers are grouped on a per function basis; first entry in a function
   grouping will have l_lnno = 0 and in place of physical address will be the
   symbol table index of the function name.  */
a134 10
struct external_lineno
{
  union
  {
    char l_symndx[4];	/* function name symbol index, iff l_lnno == 0*/
    char l_paddr[8];	/* (physical) address of line number	*/
  } l_addr;

  char l_lnno[4];	/* line number		*/
};
d140 1
d149 3
a151 1
  char e_value[8];
d159 2
d165 3
a168 2
union external_auxent
{
d224 1
a224 1
/* Values for auxtype field in XCOFF64, taken from AIX 4.3 sym.h.  */
d231 2
d235 2
a236 2
struct external_reloc
{
d243 1
a251 41

/* The ldhdr structure.  This appears at the start of the .loader
   section.  */

struct external_ldhdr
{
  bfd_byte l_version[4];
  bfd_byte l_nsyms[4];
  bfd_byte l_nreloc[4];
  bfd_byte l_istlen[4];
  bfd_byte l_nimpid[4];
  bfd_byte l_stlen[4];
  bfd_byte l_impoff[8];
  bfd_byte l_stoff[8];
  bfd_byte l_symoff[8];
  bfd_byte l_rldoff[8];
};
#define LDHDRSZ (56)

struct external_ldsym
{
  bfd_byte l_value[8];
  bfd_byte l_offset[4];
  bfd_byte l_scnum[2];
  bfd_byte l_smtype[1];
  bfd_byte l_smclas[1];
  bfd_byte l_ifile[4];
  bfd_byte l_parm[4];
};

#define LDSYMSZ (24)

struct external_ldrel
{
  bfd_byte l_vaddr[8];
  bfd_byte l_rtype[2];
  bfd_byte l_rsecnm[2];
  bfd_byte l_symndx[4];
};

#define LDRELSZ (16)
@


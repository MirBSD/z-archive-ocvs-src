head	1.3;
access;
symbols
	binutils-2_15:1.1.2.2
	cvs-200406091940:1.1.1.2
	MIRBSD_7quater:1.2
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.2.0.6
	MIRBSD_7:1.2.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.2
	MIRBSD_7_DEV:1.2.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	binutils_2_14:1.1.2.2
	binutils_2_11_2:1.1.2.1
	FSF:1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2004.08.11.21.18.25;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2003.09.23.21.05.18;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.40.55;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2003.03.22.17.40.55;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.06.09.20.30.18;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2003.09.23.15.42.49;	author tg;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.09.23.16.07.54;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove old binutils
@
text
@/* COFF spec for AMD 290*0 

   Copyright 2001 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
   
   Contributed by David Wood @@ New York University. */
 
#ifndef AMD
# define AMD
#endif

#define L_LNNO_SIZE 2
#include "coff/external.h"

/*
** Magic numbers for Am29000 
**	(AT&T will assign the "real" magic number)  
*/

#define SIPFBOMAGIC     0572    /* Am29000 (Byte 0 is MSB) */
#define SIPRBOMAGIC     0573    /* Am29000 (Byte 0 is LSB) */

#define A29K_MAGIC_BIG 		SIPFBOMAGIC	
#define A29K_MAGIC_LITTLE	SIPRBOMAGIC	
#define A29KBADMAG(x) 	( ((x).f_magic != A29K_MAGIC_BIG) && \
			  ((x).f_magic != A29K_MAGIC_LITTLE))

#define OMAGIC A29K_MAGIC_BIG
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/

/*
** File header flags currently known to us.
**
** Am29000 will use the F_AR32WR and F_AR32W flags to indicate
** the byte ordering in the file.
*/

/*--------------------------------------------------------------*/


/* aouthdr magic numbers */
#define NMAGIC		0410	/* separate i/d executable */
#define SHMAGIC	0406		/* NYU/Ultra3 shared data executable 
				   (writable text) */
#undef  _ETEXT
#define _ETEXT   	"_etext"

/*--------------------------------------------------------------*/


/* More names of "special" sections.  */
#define _LIT	".lit"

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/

/*
** Section types - with additional section type for global 
** registers which will be relocatable for the Am29000.
**
** In instances where it is necessary for a linker to produce an
** output file which contains text or data not based at virtual
** address 0, e.g. for a ROM, then the linker should accept
** address base information as command input and use PAD sections
** to skip over unused addresses.
*/

#define	STYP_BSSREG	0x1200	/* Global register area (like STYP_INFO) */
#define STYP_ENVIR	0x2200	/* Environment (like STYP_INFO) */
#define STYP_ABS	0x4000	/* Absolute (allocated, not reloc, loaded) */

/*--------------------------------------------------------------*/

/*
** Relocation information declaration and related definitions
*/

struct external_reloc
{
  char r_vaddr[4];	/* (virtual) address of reference */
  char r_symndx[4];	/* index into symbol table */
  char r_type[2];	/* relocation type */
};

#define	RELOC		struct external_reloc
#define	RELSZ		10		/* sizeof (RELOC) */ 

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/

/*
** Relocation types for the Am29000 
*/

#define	R_ABS		0	/* reference is absolute */
 
#define	R_IREL		030	/* instruction relative (jmp/call) */
#define	R_IABS		031	/* instruction absolute (jmp/call) */
#define	R_ILOHALF	032	/* instruction low half  (const)  */
#define	R_IHIHALF	033	/* instruction high half (consth) part 1 */
#define	R_IHCONST	034	/* instruction high half (consth) part 2 */
				/* constant offset of R_IHIHALF relocation */
#define	R_BYTE		035	/* relocatable byte value */
#define R_HWORD		036	/* relocatable halfword value */
#define R_WORD		037	/* relocatable word value */

#define	R_IGLBLRC	040	/* instruction global register RC */
#define	R_IGLBLRA	041	/* instruction global register RA */
#define	R_IGLBLRB	042	/* instruction global register RB */
 
/*
NOTE:
All the "I" forms refer to 29000 instruction formats.  The linker is 
expected to know how the numeric information is split and/or aligned
within the instruction word(s).  R_BYTE works for instructions, too.

If the parameter to a CONSTH instruction is a relocatable type, two 
relocation records are written.  The first has an r_type of R_IHIHALF 
(33 octal) and a normal r_vaddr and r_symndx.  The second relocation 
record has an r_type of R_IHCONST (34 octal), a normal r_vaddr (which 
is redundant), and an r_symndx containing the 32-bit constant offset 
to the relocation instead of the actual symbol table index.  This 
second record is always written, even if the constant offset is zero.
The constant fields of the instruction are set to zero.
*/

/*--------------------------------------------------------------*/

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/

/*
** Storage class definitions - new classes for global registers.
*/

#define C_GLBLREG	19		/* global register */
#define C_EXTREG	20		/* external global register */
#define	C_DEFREG	21		/* ext. def. of global register */
@


1.2
log
@looks as if some sour wine (Federweiﬂer <german>, for an English
description see http://forum.leo.org/archiv/2002_11/04/20021104125717e_en.html)
could help me to bear the pain upgrading binutils to 2.14

todo:
 - test if this works at all
 - test if this works
 - test if nothing breaks
 - nuke all occurences of "false" and "true" in binutils (including gdb),
   see bfd.h "Poison" for reference
 - talk to the OpenBSD people, ask them if they could improve this
@
text
@@


1.1
log
@Initial revision
@
text
@d25 2
a26 21
/****************************************************************/

/*
** File Header and related definitions
*/

struct external_filehdr
{
	char f_magic[2];	/* magic number		 */
	char f_nscns[2];	/* number of sections	   */
	char f_timdat[4];       /* time & date stamp	    */
	char f_symptr[4];       /* file pointer to symtab       */
	char f_nsyms[4];	/* number of symtab entries     */
	char f_opthdr[2];       /* sizeof(optional hdr)	 */
	char f_flags[2];	/* flags			*/
};

#define FILHDR  struct external_filehdr
#define FILHSZ	20

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
a35 1

d38 2
a39 2
#define A29KBADMAG(x) 	(((x).f_magic!=A29K_MAGIC_BIG) && \
			  ((x).f_magic!=A29K_MAGIC_LITTLE))
a52 18
/*
** Optional (a.out) header 
*/

typedef	struct external_aouthdr 
{
  char  magic[2];	       /* type of file			 */
  char  vstamp[2];	      /* version stamp			*/
  char  tsize[4];	       /* text size in bytes, padded to FW bdry*/
  char  dsize[4];	       /* initialized data "  "		*/
  char  bsize[4];	       /* uninitialized data "   "	     */
  char  entry[4];	       /* entry pt.			    */
  char  text_start[4];	  /* base of text used for this file */
  char  data_start[4];	  /* base of data used for this file */
} AOUTHDR;

#define AOUTSZ 28
#define AOUTHDRSZ 28
d58 1
a58 1

a62 20
/*
** Section header and related definitions
*/

struct external_scnhdr 
{
	char	    s_name[8];      /* section name		 */
	char	    s_paddr[4];     /* physical address, aliased s_nlib */
	char	    s_vaddr[4];     /* virtual address	      */
	char	    s_size[4];      /* section size		 */
	char	    s_scnptr[4];    /* file ptr to raw data for section */
	char	    s_relptr[4];    /* file ptr to relocation       */
	char	    s_lnnoptr[4];   /* file ptr to line numbers     */
	char	    s_nreloc[2];    /* number of relocation entries */
	char	    s_nlnno[2];     /* number of line number entries*/
	char	    s_flags[4];     /* flags			*/
};

#define	SCNHDR	struct	external_scnhdr
#define	SCNHSZ	40
d64 1
a64 6
/*
 * names of "special" sections
 */
#define _TEXT   ".text"
#define _DATA   ".data"
#define _BSS    ".bss"
d90 2
a91 1
struct external_reloc {
a139 43
/*
** Line number entry declaration and related definitions
*/

struct external_lineno 
{
   union {
	 char l_symndx[4]; /* function name symbol index, iff l_lnno == 0*/
	 char l_paddr[4];  /* (physical) address of line number    */
   } l_addr;
   char l_lnno[2]; 	/* line number	  */
};

#define	LINENO		struct external_lineno
#define	LINESZ		6		/* sizeof (LINENO) */

/*--------------------------------------------------------------*/

/*
** Symbol entry declaration and related definitions
*/

#define	E_SYMNMLEN	8	/* Number of characters in a symbol name */

struct external_syment
{
  union {
    char e_name[E_SYMNMLEN];
    struct {
      char e_zeroes[4];
      char e_offset[4];
    } e;
  } e;
  char e_value[4];
  char e_scnum[2];
  char e_type[2];
  char e_sclass[1];
  char e_numaux[1];
};

#define	SYMENT	struct external_syment
#define	SYMESZ 	18

a148 68


/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/

/*
** Derived symbol mask/shifts.
*/

#define N_BTMASK	(0xf)
#define N_BTSHFT	(4)
#define N_TMASK		(0x30)
#define N_TSHIFT	(2)

/*--------------------------------------------------------------*/

/*
** Auxiliary symbol table entry declaration and related 
** definitions.
*/

#define E_FILNMLEN	14      /* # characters in a file name	  */
#define E_DIMNUM  	4       /* # array dimensions in auxiliary entry */

union external_auxent {
	struct {
		char x_tagndx[4];       /* str, un, or enum tag indx */
		union {
			struct {
			    char  x_lnno[2]; /* declaration line number */
			    char  x_size[2]; /* str/union/array size */
			} x_lnsz;
			char x_fsize[4];	/* size of function */
		} x_misc;
		union {
			struct {		/* if ISFCN, tag, or .bb */
			    char x_lnnoptr[4];  /* ptr to fcn line # */
			    char x_endndx[4];   /* entry ndx past block end */
			} x_fcn;
			struct {		/* if ISARY, up to 4 dimen. */
			    char x_dimen[E_DIMNUM][2];
			} x_ary;
		} x_fcnary;
		char x_tvndx[2];		/* tv index */
	} x_sym;

	union {
		char x_fname[E_FILNMLEN];
		struct {
			char x_zeroes[4];
			char x_offset[4];
		} x_n;
	} x_file;

	struct {
		char x_scnlen[4];		       /* section length */
		char x_nreloc[2];       /* # relocation entries */
		char x_nlinno[2];       /* # line numbers */
	} x_scn;

	struct {
		char x_tvfill[4];       /* tv fill value */
		char x_tvlen[2];	/* length of .tv */
		char x_tvran[2][2];     /* tv range */
	} x_tv;	 /* info about .tv section (in auxent of symbol .tv)) */
};

#define	AUXENT		union external_auxent
#define	AUXESZ		18	
@


1.1.2.1
log
@vendor-branch-i-fy GNU binutils (2.11.2) to facilitate an update
@
text
@@


1.1.2.2
log
@Import GNU binutils 2.14 from the Free Software Foundation
(in case the update goes FUBAR, it can be easily backed off)
@
text
@d25 21
a45 2
#define L_LNNO_SIZE 2
#include "coff/external.h"
d55 1
d58 2
a59 2
#define A29KBADMAG(x) 	( ((x).f_magic != A29K_MAGIC_BIG) && \
			  ((x).f_magic != A29K_MAGIC_LITTLE))
d73 18
d96 1
a96 1
#undef  _ETEXT
d101 20
d122 6
a127 1
/* More names of "special" sections.  */
d153 1
a153 2
struct external_reloc
{
d202 43
d254 68
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIXÆ, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync of src/gnu with OpenBSD (promised a long time ago)
@
text
@d25 21
a45 2
#define L_LNNO_SIZE 2
#include "coff/external.h"
d55 1
d58 2
a59 2
#define A29KBADMAG(x) 	( ((x).f_magic != A29K_MAGIC_BIG) && \
			  ((x).f_magic != A29K_MAGIC_LITTLE))
d73 18
d96 1
a96 1
#undef  _ETEXT
d101 20
d122 6
a127 1
/* More names of "special" sections.  */
d153 1
a153 2
struct external_reloc
{
d202 43
d254 68
@


head	1.2;
access;
symbols
	texinfo-4_8:1.1.2.1
	FSF:1.1.2
	testing_SYNC_A:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.08.08.17.36.25;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.08.08.17.29.08;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.01.06.23.33.46;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@after tagging both with testing_SYNC_A, tailor the in-tree version
down to what is actually needed

also, don't mkdir /usr/bin -ten times
@
text
@# intmax.m4 serial 1 (gettext-0.12)
dnl Copyright (C) 2002-2003 Free Software Foundation, Inc.
dnl This file is free software, distributed under the terms of the GNU
dnl General Public License.  As a special exception to the GNU General
dnl Public License, this file may be distributed as part of a program
dnl that contains a configuration script generated by Autoconf, under
dnl the same distribution terms as the rest of that program.

dnl From Bruno Haible.
dnl Test whether the system has the 'intmax_t' type, but don't attempt to
dnl find a replacement if it is lacking.

AC_DEFUN([gt_TYPE_INTMAX_T],
[
  AC_REQUIRE([jm_AC_HEADER_INTTYPES_H])
  AC_REQUIRE([jm_AC_HEADER_STDINT_H])
  AC_CACHE_CHECK(for intmax_t, gt_cv_c_intmax_t,
    [AC_TRY_COMPILE([
#include <stddef.h> 
#include <stdlib.h>
#if HAVE_STDINT_H_WITH_UINTMAX
#include <stdint.h>
#endif
#if HAVE_INTTYPES_H_WITH_UINTMAX
#include <inttypes.h>
#endif
], [intmax_t x = -1;], gt_cv_c_intmax_t=yes, gt_cv_c_intmax_t=no)])
  if test $gt_cv_c_intmax_t = yes; then
    AC_DEFINE(HAVE_INTMAX_T, 1,
      [Define if you have the 'intmax_t' type in <stdint.h> or <inttypes.h>.])
  fi
])
@


1.1
log
@switch to texinfo 4.7 based system
@
text
@@


1.1.2.1
log
@GNU Texinfo 4.8 here, too
@
text
@d1 2
a2 2
# intmax.m4 serial 2
dnl Copyright (C) 2002-2004 Free Software Foundation, Inc.
d15 2
a16 2
  AC_REQUIRE([gl_AC_HEADER_INTTYPES_H])
  AC_REQUIRE([gl_AC_HEADER_STDINT_H])
d19 1
a19 1
#include <stddef.h>
@



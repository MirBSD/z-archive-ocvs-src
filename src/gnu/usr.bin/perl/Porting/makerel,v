head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.2
	tg-mergefixes-1-branch:1.1.1.2.0.8
	tg-mergefixes-1-base:1.1.1.2
	MIROS_X:1.1.1.2.0.6
	MIROS_X_BASE:1.1.1.2
	tg-mergetmp-3:1.1.1.2
	MIRBSD_XP_MIRPPC:1.1.1.2.0.4
	cvs-200410231830:1.1.1.2
	MIRBSD_XP_SPARC_BASE:1.1.1.2
	MIRBSD_XP_SPARC:1.1.1.2.0.2
	cvs-200406091940:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.2
	cvs-200312031730:1.1.1.2
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.17.43.40;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.43.40;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.03.17.53.48;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!/bin/env perl -w

# A first attempt at some automated support for making a perl release.
# Very basic but functional - if you're on a unix system.
#
# No matter how automated this gets, you'll always need to read
# and re-read pumpkin.pod checking for things to be done at various
# stages of the process.
#
# Tim Bunce, June 1997

use ExtUtils::Manifest qw(fullcheck);

$|=1;
$relroot = "..";	# XXX make an option

die "Must be in root of the perl source tree.\n"
	unless -f "./MANIFEST" and -f "patchlevel.h";

open PATCHLEVEL,"<patchlevel.h" or die;
my @@patchlevel_h = <PATCHLEVEL>;
close PATCHLEVEL;
my $patchlevel_h = join "", grep { /^#\s*define/ } @@patchlevel_h;
print $patchlevel_h;
$revision = $1 if $patchlevel_h =~ /PERL_REVISION\s+(\d+)/;
$patchlevel = $1 if $patchlevel_h =~ /PERL_VERSION\s+(\d+)/;
$subversion = $1 if $patchlevel_h =~ /PERL_SUBVERSION\s+(\d+)/;
die "Unable to parse patchlevel.h" unless $subversion >= 0;
$vers = sprintf("%d.%d.%d", $revision, $patchlevel, $subversion);
$vms_vers = sprintf("%d_%d_%d", $revision, $patchlevel, $subversion);

# fetch list of local patches
my (@@local_patches, @@lpatch_tags, $lpatch_tags);
@@local_patches = grep { /^static.*local_patches/../^};/ } @@patchlevel_h;
@@local_patches = grep { !/^\s*,?NULL/  } @@local_patches;
@@lpatch_tags   = map  {  /^\s*,"(\w+)/ } @@local_patches;
$lpatch_tags   = join "-", @@lpatch_tags;

$perl = "perl-$vers";
$reldir = "$perl";
$reldir .= "-$lpatch_tags" if $lpatch_tags;

print "\nMaking a release for $perl in $relroot/$reldir\n\n";

print "Cross-checking the MANIFEST...\n";
($missfile, $missentry) = fullcheck();
warn "Can't make a release with MANIFEST files missing.\n" if @@$missfile;
warn "Can't make a release with files not listed in MANIFEST.\n" if @@$missentry;
if ("@@$missentry" =~ m/\.orig\b/) {
    # Handy listing of find command and .orig files from patching work.
    # I tend to run 'xargs rm' and copy and paste the file list.
    my $cmd = "find . -name '*.orig' -print";
    print "$cmd\n";
    system($cmd);
}
die "Aborted.\n" if @@$missentry or @@$missfile;
print "\n";

# VMS no longer has hardcoded version numbers descrip.mms
#print "Updating VMS version specific files with $vms_vers...\n";
#system("perl -pi -e 's/^\QPERL_VERSION = \E\d\_\d+(\s*\#)/PERL_VERSION = $vms_vers$1/' vms/descrip.mms");



print "Creating $relroot/$reldir release directory...\n";
die "$relroot/$reldir release directory already exists\n"   if -e "$relroot/$reldir";
die "$relroot/$reldir.tar.gz release file already exists\n" if -e "$relroot/$reldir.tar.gz";
mkdir("$relroot/$reldir", 0755) or die "mkdir $relroot/$reldir: $!\n";
print "\n";


print "Copying files to release directory...\n";
# ExtUtils::Manifest maniread does not preserve the order
$cmd = "awk '{print \$1}' MANIFEST | cpio -pdm $relroot/$reldir";
system($cmd) == 0 or die "$cmd failed";
print "\n";

chdir "$relroot/$reldir" or die $!;

print "Setting file permissions...\n";
system("find . -type f -print     | xargs chmod 0444");
system("find . -type d -print     | xargs chmod 0755");
system("find t ext lib -name '*.t'     -print | xargs chmod +x");
system("find t ext lib -name 'test.pl' -print | xargs chmod +x");
my @@exe = qw(
    Configure
    configpm
    configure.gnu
    embed.pl
    installperl
    installman
    keywords.pl
    opcode.pl
    perly.fixer
    t/TEST
    *.SH
    vms/ext/Stdio/test.pl
    vms/ext/filespec.t
    x2p/*.SH
    Porting/findrfuncs
    Porting/genlog
    Porting/makerel
    Porting/p4genpatch
    Porting/patchls
    Porting/*.pl
    mpeix/nm
    mpeix/relink
);
system("chmod +x @@exe");

my @@writables = qw(
    NetWare/config_H.wc
    NetWare/Makefile
    keywords.h
    opcode.h
    opnames.h
    pp_proto.h
    pp.sym
    proto.h
    embed.h
    embedvar.h
    global.sym
    pod/perlintern.pod
    pod/perlapi.pod
    perlapi.h
    perlapi.c
    ext/ByteLoader/byterun.h
    ext/ByteLoader/byterun.c
    ext/B/B/Asmdata.pm
    ext/Devel/PPPort/PPPort.xs
    ext/Devel/PPPort/module2.c
    ext/Devel/PPPort/module3.c
    regnodes.h
    warnings.h
    lib/warnings.pm
    vms/perly_c.vms
    vms/perly_h.vms
    win32/Makefile
    win32/makefile.mk
    win32/config_H.bc
    win32/config_H.gc
    win32/config_H.vc
    wince/config_H.ce
    wince/Makefile.ce
);
system("chmod +w @@writables");

print "Adding CRs to DOSish files...\n";
my @@crlf = qw(
    djgpp/configure.bat
    README.ce
    README.dos
    README.win32
    win32/Makefile
    win32/makefile.mk
    wince/Makefile.ce
    wince/README.compile
    wince/README.perlce
    wince/registry.bat
);
system("perl -pi -e 's/\015*\012/\015\012/' @@crlf");
print "\n";

chdir ".." or die $!;

print "Creating and compressing the tar file...\n";
my $src = (-e $perl) ? $perl : 'perl'; # 'perl' in maint branch
$cmd = "tar cf - $reldir | gzip --best > $reldir.tar.gz";
system($cmd) == 0 or die "$cmd failed";
print "\n";

system("ls -ld $perl*");
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import selected parts of the OpenBSD base system:
 * vnd change - you'll have to re-run MAKEDEV after booting a new kernel
 * misc. changes in /etc, mostly user related
 * Perl 5.8.2 (diff to MirPorts will be committed RSN)
 * some changes to binutils
 * Updates in bc and dc
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
d75 1
a75 2
system($cmd) == 0
    or die "$cmd failed";
a107 2
    Cross/generate_config_sh
    Cross/warp
d109 1
a109 2
system("chmod +x @@exe") == 0
    or die "system: $!";
d146 1
a146 2
system("chmod +w @@writables") == 0
    or die "system: $!";
d157 1
a157 1
    wince/compile-all.bat
d161 1
a161 2
system("perl -pi -e 's/\\015*\\012/\\015\\012/' @@crlf") == 0
    or die "system: $!";
d169 1
a169 2
system($cmd) == 0
    or die "$cmd failed";
@


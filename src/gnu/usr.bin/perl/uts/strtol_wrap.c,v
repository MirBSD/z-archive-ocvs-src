head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.1
	tg-mergefixes-1-branch:1.1.1.1.0.14
	tg-mergefixes-1-base:1.1.1.1
	MIROS_X:1.1.1.1.0.12
	MIROS_X_BASE:1.1.1.1
	tg-mergetmp-3:1.1.1.1
	MIRBSD_XP_MIRPPC:1.1.1.1.0.10
	cvs-200410231830:1.1.1.1
	MIRBSD_XP_SPARC_BASE:1.1.1.1
	MIRBSD_XP_SPARC:1.1.1.1.0.8
	cvs-200406091940:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.44.01;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.44.01;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* A wrapper around strtol() and strtoul() to correct some
 * "out of bounds" cases that don't work well on at least UTS.
 * If a value is Larger than the max, strto[u]l should return
 * the max value, and set errno to ERANGE
 *  The same if a value is smaller than the min value (only
 * relevant for strtol(); not strtoul()), except the minimum
 * value is returned (and errno == ERANGE).
 */

#include	<ctype.h>
#include	<string.h>
#include	<sys/errno.h>
#include	<stdlib.h>

extern int	errno;

#undef	I32
#undef	U32

#define	I32	int
#define	U32	unsigned int

struct	base_info {
	char	*ValidChars;

	char	*Ulong_max_str;
	char	*Long_max_str;
	char	*Long_min_str;	/* Absolute value */

	int	Ulong_max_str_len;
	int	Long_max_str_len;
	int	Long_min_str_len;	/* Absolute value */

	U32	Ulong_max;
	I32	Long_max;
	I32	Long_min;	/* NOT Absolute value */
};
static struct	base_info Base_info[37];

static struct base_info Base_info_16 = {
	"0123456789abcdefABCDEF",
	"4294967295", "2147483648" /* <== ABS VAL */ , "2147483647",
	10, 10, 10,
	4294967295, 2147483647, - 2147483648,
};

static struct base_info Base_info_10 = {
	"0123456789",
	"4294967295", "2147483648" /* <== ABS VAL */ , "2147483647",
	10, 10, 10,
	4294967295, 2147483647, - 2147483648,
};

 /* Used eventually (if this is fully developed) to hold info
  * for processing bases 2-36.  So that we can just plug the
  * base in as a selector for its info, we sacrifice
  * Base_info[0] and Base_info[1] (unless they are used
  * at some point for special information).
  */

/* This may be replaced later by something more universal */
static void
init_Base_info()
{
	if(Base_info[10].ValidChars) return;
	Base_info[10] = Base_info_10;
	Base_info[16] = Base_info_16;
}

unsigned int
strtoul_wrap32(char *s, char **pEnd, int base)
{
	int	Len;
	int	isNegated = 0;
	char	*sOrig = s;

	init_Base_info();

	while(*s && isspace(*s)) ++s;

	if(*s == '-') {
		++isNegated;
		++s;
		while(*s && isspace(*s)) ++s;
	}
	if(base == 0) {
		if(*s == '0') {
			if(s[1] == 'x' || s[1] == 'X') {
				s += 2;
				base = 16;
			} else {
				++s;
				base = 8;
			}
		} else if(isdigit(*s)) {
			base = 10;
		}
	}
	if(base != 10) {
		return strtoul(sOrig, pEnd, base);
	}
	
	Len = strspn(s, Base_info[base].ValidChars);

	if(Len > Base_info[base].Ulong_max_str_len
		||
	   (Len == Base_info[base].Ulong_max_str_len
	   		&&
	    strncmp(Base_info[base].Ulong_max_str, s, Len) < 0)
	  ) {
		/* In case isNegated is set - what to do?? */
		/* Mightn't we say a negative number is ERANGE for strtoul? */
		errno = ERANGE;
		return Base_info[base].Ulong_max;
	}

	return strtoul(sOrig, pEnd, base);
}

int
strtol_wrap32(char *s, char **pEnd, int base)
{
	int	Len;
	int	isNegated = 0;
	char	*sOrig = s;

	init_Base_info();

	while(*s && isspace(*s)) ++s;

	if(*s == '-') {
		++isNegated;
		++s;
		while(*s && isspace(*s)) ++s;
	}
	if(base == 0) {
		if(*s == '0') {
			if(s[1] == 'x' || s[1] == 'X') {
				s += 2;
				base = 16;
			} else {
				++s;
				base = 8;
			}
		} else if(isdigit(*s)) {
			base = 10;
		}
	}
	if(base != 10) {
		return strtol(sOrig, pEnd, base);
	}
	
	Len = strspn(s, Base_info[base].ValidChars);

	if(Len > Base_info[base].Long_max_str_len
				||
	   (!isNegated && Len == Base_info[base].Long_max_str_len
	   	&&
	    strncmp(Base_info[base].Long_max_str, s, Len) < 0)
	    			||
	   (isNegated && Len == Base_info[base].Long_min_str_len
	   	&&
	    strncmp(Base_info[base].Long_min_str, s, Len) < 0)
	  ) {
		/* In case isNegated is set - what to do?? */
		/* Mightn't we say a negative number is ERANGE for strtol? */
		errno = ERANGE;
		return(isNegated ? Base_info[base].Long_min
					:
				   Base_info[base].Long_min);
	}

	return strtol(sOrig, pEnd, base);
}
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

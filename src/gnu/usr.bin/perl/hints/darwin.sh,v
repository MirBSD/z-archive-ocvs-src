head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.3
	tg-mergefixes-1-branch:1.1.1.3.0.4
	tg-mergefixes-1-base:1.1.1.3
	MIROS_X:1.1.1.3.0.2
	MIROS_X_BASE:1.1.1.3
	tg-mergetmp-3:1.1.1.3
	MIRBSD_XP_MIRPPC:1.1.1.2.0.4
	cvs-200410231830:1.1.1.3
	MIRBSD_XP_SPARC_BASE:1.1.1.2
	MIRBSD_XP_SPARC:1.1.1.2.0.2
	cvs-200406091940:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.2
	cvs-200312031730:1.1.1.2
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.17.43.40;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.43.40;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.03.17.55.17;	author tg;	state Stab;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.10.23.18.40.03;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@##
# Darwin (Mac OS) hints
# Wilfredo Sanchez <wsanchez@@mit.edu>
##

##
# Paths
##

# BSD paths
case "$prefix" in
'')
	# Default install; use non-system directories
	prefix='/usr/local'; # Built-in perl uses /usr
	siteprefix='/usr/local';
	vendorprefix='/usr/local'; usevendorprefix='define';

	# Where to put modules.
	privlib='/Library/Perl'; # Built-in perl uses /System/Library/Perl
	sitelib='/Library/Perl';
	vendorlib='/Network/Library/Perl';
	;;
'/usr')
	# We are building/replacing the built-in perl
	siteprefix='/usr/local';
	vendorprefix='/usr/local'; usevendorprefix='define';

	# Where to put modules.
	privlib='/System/Library/Perl';
	sitelib='/Library/Perl';
	vendorlib='/Network/Library/Perl';
	;;
esac

# 4BSD uses ${prefix}/share/man, not ${prefix}/man.
man1dir="${prefix}/share/man/man1";
man3dir="${prefix}/share/man/man3";

##
# Tool chain settings
##

# Since we can build fat, the archname doesn't need the processor type
archname='darwin';

# nm works.
usenm='true';

# Optimize.
if [ "x$optimize" = 'x' ]; then
    optimize='-O3'
fi

# -pipe: makes compilation go faster.
# -fno-common: we don't like commons.  Common symbols are not allowed
# in MH_DYLIB binaries, which is what libperl.dylib is.  You will fail
# to link without that option, unless you otherwise eliminate all commons
# by, for example, initializing all globals.
# --Fred Sánchez
ccflags="${ccflags} -pipe -fno-common"

# At least on Darwin 1.3.x:
#
# # define INT32_MIN -2147483648
# int main () {
#  double a = INT32_MIN;
#  printf ("INT32_MIN=%g\n", a);
#  return 0;
# }
# will output:
# INT32_MIN=2.14748e+09
# Note that the INT32_MIN has become positive.
# INT32_MIN is set in /usr/include/stdint.h by:
# #define INT32_MIN        -2147483648
# which seems to break the gcc.  Defining INT32_MIN as (-2147483647-1)
# seems to work.  INT64_MIN seems to be similarly broken.
# -- Nicholas Clark, Ken Williams, and Edward Moy
#
# This seems to have been fixed since at least Mac OS X 10.1.3,
# stdint.h defining INT32_MIN as (-INT32_MAX-1)
# -- Edward Moy
#
case "`grep '^#define INT32_MIN' /usr/include/stdint.h`" in
*-2147483648) ccflags="${ccflags} -DINT32_MIN_BROKEN -DINT64_MIN_BROKEN" ;;
esac

# cppflags='-traditional-cpp';
# avoid Apple's cpp precompiler, better for extensions
cppflags="${cppflags} -no-cpp-precomp"
# and ccflags needs them as well since we don't use cpp directly
ccflags="${ccflags} -no-cpp-precomp"

# Known optimizer problems.
case "`cc -v 2>&1`" in
*"3.1 20020105"*) toke_cflags='optimize=""' ;;
esac

# Shared library extension is .dylib.
# Bundle extension is .bundle.
ld='cc';
so='dylib';
dlext='bundle';
dlsrc='dl_dyld.xs'; usedl='define';
cccdlflags=' '; # space, not empty, because otherwise we get -fpic
# ldflag: -flat_namespace is only available since OS X 10.1 (Darwin 1.4.1)
#    - but not in 10.0.x (Darwin 1.3.x)
# -- Kay Roepke
case "$osvers" in
1.[0-3].*)	;;
*)		ldflags="${ldflags} -flat_namespace" ;;
esac
lddlflags="${ldflags} -bundle -undefined suppress";
ldlibpthname='DYLD_LIBRARY_PATH';
useshrplib='true';

##
# System libraries
##

# vfork works
usevfork='true';

# malloc works
usemymalloc='n';

##
# Build process
##

# Locales aren't feeling well.
LC_ALL=C; export LC_ALL;
LANG=C; export LANG;

# Case-insensitive filesystems don't get along with Makefile and
# makefile in the same place.  Since Darwin uses GNU make, this dodges
# the problem.
firstmakefile=GNUmakefile;

#
# The libraries are not threadsafe as of OS X 10.1.
#
# Fix when Apple fixes libc.
#
case "$usethreads$useithreads$use5005threads" in
*define*)
cat <<EOM >&4

*** Warning, there might be problems with your libraries with
*** regards to threading.  The test ext/threads/t/libc.t is likely
*** to fail.

EOM
	;;
esac
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import selected parts of the OpenBSD base system:
 * vnd change - you'll have to re-run MAKEDEV after booting a new kernel
 * misc. changes in /etc, mostly user related
 * Perl 5.8.2 (diff to MirPorts will be committed RSN)
 * some changes to binutils
 * Updates in bc and dc
@
text
@d3 1
a3 1
# Wilfredo Sanchez <wsanchez@@wsanchez.net>
a9 17
# Configure hasn't figured out the version number yet.  Bummer.
perl_revision=`awk '/define[ 	]+PERL_REVISION/ {print $3}' $src/patchlevel.h`
perl_version=`awk '/define[ 	]+PERL_VERSION/ {print $3}' $src/patchlevel.h`
perl_subversion=`awk '/define[ 	]+PERL_SUBVERSION/ {print $3}' $src/patchlevel.h`
version="${perl_revision}.${perl_version}.${perl_subversion}"

# Pretend that Darwin doesn't know about those system calls [perl #24122]
d_setregid='undef'
d_setreuid='undef'
d_setrgid='undef'
d_setruid='undef'

# This was previously used in all but causes three cases
# (no -Ddprefix=, -Dprefix=/usr, -Dprefix=/some/thing/else)
# but that caused too much grief.
# vendorlib="/System/Library/Perl/${version}"; # Apple-supplied modules

d12 3
a14 2
'')	# Default install; use non-system directories
	prefix='/usr/local';
d16 6
d23 2
a24 4
'/usr')	# We are building/replacing the built-in perl
	prefix='/';
	installprefix='/';
	bin='/usr/bin';
d26 6
a31 23
	# We don't want /usr/bin/HEAD issues.
	sitebin='/usr/local/bin';
	sitescript='/usr/local/bin';
	installusrbinperl='define'; # You knew what you were doing.
	privlib="/System/Library/Perl/${version}";
	sitelib="/Library/Perl/${version}";
	vendorprefix='/';
	usevendorprefix='define';
	vendorbin='/usr/bin';
	vendorscript='/usr/bin';
	vendorlib="/Network/Library/Perl/${version}";
	# 4BSD uses ${prefix}/share/man, not ${prefix}/man.
	man1dir='/usr/share/man/man1';
	man3dir='/usr/share/man/man3';
	# But users' installs shouldn't touch the system man pages.
	# Transient obsoleted style.
	siteman1='/usr/local/share/man/man1';
	siteman3='/usr/local/share/man/man3';
	# New style.
	siteman1dir='/usr/local/share/man/man1';
	siteman3dir='/usr/local/share/man/man3';
	;;
  *)	# Anything else; use non-system directories, use Configure defaults
d35 4
d49 3
a51 14
case "$optimize" in
'')
#    Optimizing for size also mean less resident memory usage on the part
# of Perl.  Apple asserts that this is a more important optimization than
# saving on CPU cycles.  Given that memory speed has not increased at
# pace with CPU speed over time (on any platform), this is probably a
# reasonable assertion.
if [ -z "${optimize}" ]; then
  case "`${cc:-gcc} -v 2>&1`" in
    *"gcc version 3."*) optimize='-Os' ;;
    *) optimize='-O3' ;;
  esac
else
  optimize='-O3'
a52 2
;;
esac
d55 6
a60 5
# -fno-common because common symbols are not allowed in MH_DYLIB
# -DPERL_DARWIN: apparently the __APPLE__ is not sanctioned by Apple
# as the way to differentiate Mac OS X.  (The official line is that
# *no* cpp symbol does differentiate Mac OS X.)
ccflags="${ccflags} -pipe -fno-common -DPERL_DARWIN"
d83 2
a84 2
case "$(grep '^#define INT32_MIN' /usr/include/stdint.h)" in
  *-2147483648) ccflags="${ccflags} -DINT32_MIN_BROKEN -DINT64_MIN_BROKEN" ;;
d87 2
a88 1
# Avoid Apple's cpp precompiler, better for extensions
d90 2
a91 4

# This is necessary because perl's build system doesn't
# apply cppflags to cc compile lines as it should.
ccflags="${ccflags} ${cppflags}"
d95 1
a95 1
  *"3.1 20020105"*) toke_cflags='optimize=""' ;;
d105 3
a107 2
# Perl bundles do not expect two-level namespace, added in Darwin 1.4.
# But starting from perl 5.8.1/Darwin 7 the default is the two-level.
d109 2
a110 17
1.[0-3].*)
   lddlflags="${ldflags} -bundle -undefined suppress"
   ;;
1.*)
   ldflags="${ldflags} -flat_namespace"
   lddlflags="${ldflags} -bundle -undefined suppress"
   ;;
[2-6].*)
   ldflags="${ldflags} -flat_namespace"
   lddlflags="${ldflags} -bundle -undefined suppress"
   ;;
*) lddlflags="${ldflags} -bundle -undefined dynamic_lookup"
   case "$ld" in
   *MACOSX_DEVELOPMENT_TARGET*) ;;
   *) ld="env MACOSX_DEPLOYMENT_TARGET=10.3 ${ld}" ;;
   esac
   ;;
d112 1
d114 1
a114 13

# useshrplib=true results in much slower startup times.
# 'false' is the default value.  Use Configure -Duseshrplib to override.

cat > UU/archname.cbu <<'EOCBU'
# This script UU/archname.cbu will get 'called-back' by Configure 
# after it has otherwise determined the architecture name.
case "$ldflags" in
*"-flat_namespace"*) ;; # Backward compat, be flat.
# If we are using two-level namespace, we will munge the archname to show it.
*) archname="${archname}-2level" ;;
esac
EOCBU
d123 6
a128 4
# our malloc works (but allow users to override)
case "$usemymalloc" in
'') usemymalloc='n' ;;
esac
d134 5
d145 2
a146 5
  *define*)
  case "$osvers" in
    [12345].*)     cat <<EOM >&4


d153 1
a153 4
    ;;
    *) usereentrant='define';;
  esac

a154 14

# Fink can install a GDBM library that claims to have the ODBM interfaces
# but Perl dynaloader cannot for some reason use that library.  We don't
# really need ODBM_FIle, though, so let's just hint ODBM away.
i_dbm=undef;

##
# Build process
##

# Case-insensitive filesystems don't get along with Makefile and
# makefile in the same place.  Since Darwin uses GNU make, this dodges
# the problem.
firstmakefile=GNUmakefile;
@


1.1.1.3
log
@5.8.5
@
text
@d92 1
d97 1
a97 1
ccflags="${ccflags} -fno-common -DPERL_DARWIN"
a184 5

# malloc wrap works
case "$usemallocwrap" in
'') usemallocwrap='define' ;;
esac
@



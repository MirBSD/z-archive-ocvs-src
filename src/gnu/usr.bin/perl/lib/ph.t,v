head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.1
	tg-mergefixes-1-branch:1.1.1.1.0.14
	tg-mergefixes-1-base:1.1.1.1
	MIROS_X:1.1.1.1.0.12
	MIROS_X_BASE:1.1.1.1
	tg-mergetmp-3:1.1.1.1
	MIRBSD_XP_MIRPPC:1.1.1.1.0.10
	cvs-200410231830:1.1.1.1
	MIRBSD_XP_SPARC_BASE:1.1.1.1
	MIRBSD_XP_SPARC:1.1.1.1.0.8
	cvs-200406091940:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.17.43.10;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.43.10;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!./perl

# Check for presence and correctness of .ph files; for now,
# just socket.ph and pals.
#   -- Kurt Starsinic <kstar@@isinet.com>

BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
}

# All the constants which Socket.pm tries to make available:
my @@possibly_defined = qw(
    INADDR_ANY INADDR_LOOPBACK INADDR_NONE AF_802 AF_APPLETALK AF_CCITT
    AF_CHAOS AF_DATAKIT AF_DECnet AF_DLI AF_ECMA AF_GOSIP AF_HYLINK AF_IMPLINK
    AF_INET AF_LAT AF_MAX AF_NBS AF_NIT AF_NS AF_OSI AF_OSINET AF_PUP
    AF_SNA AF_UNIX AF_UNSPEC AF_X25 MSG_DONTROUTE MSG_MAXIOVLEN MSG_OOB
    MSG_PEEK PF_802 PF_APPLETALK PF_CCITT PF_CHAOS PF_DATAKIT PF_DECnet PF_DLI
    PF_ECMA PF_GOSIP PF_HYLINK PF_IMPLINK PF_INET PF_LAT PF_MAX PF_NBS PF_NIT
    PF_NS PF_OSI PF_OSINET PF_PUP PF_SNA PF_UNIX PF_UNSPEC PF_X25 SOCK_DGRAM
    SOCK_RAW SOCK_RDM SOCK_SEQPACKET SOCK_STREAM SOL_SOCKET SOMAXCONN
    SO_ACCEPTCONN SO_BROADCAST SO_DEBUG SO_DONTLINGER SO_DONTROUTE SO_ERROR
    SO_KEEPALIVE SO_LINGER SO_OOBINLINE SO_RCVBUF SO_RCVLOWAT SO_RCVTIMEO
    SO_REUSEADDR SO_SNDBUF SO_SNDLOWAT SO_SNDTIMEO SO_TYPE SO_USELOOPBACK
);


# The libraries which I'm going to require:
my @@libs = qw(Socket "sys/types.ph" "sys/socket.ph" "netinet/in.ph");


# These are defined by Socket.pm even if the C header files don't define them:
my %ok_to_miss = (
    INADDR_NONE         => 1,
    INADDR_LOOPBACK     => 1,
);


my $total_tests = scalar @@libs + scalar @@possibly_defined;
my $i           = 0;

print "1..$total_tests\n";


foreach (@@libs) {
    $i++;

    if (eval "require $_" ) {
        print "ok $i\n";
    } else {
        print "# Skipping tests; $_ may be missing\n";
        foreach ($i .. $total_tests) { print "ok $_\n" }
        exit;
    }
}


foreach (@@possibly_defined) {
    $i++;

    $pm_val = eval "Socket::$_()";
    $ph_val = eval "main::$_()";

    if (defined $pm_val and !defined $ph_val) {
        if ($ok_to_miss{$_}) { print "ok $i\n" }
        else                 { print "not ok $i\n" }
        next;
    } elsif (defined $ph_val and !defined $pm_val) {
        print "not ok $i\n";
        next;
    }

    # Socket.pm converts these to network byte order, so we convert the
    # socket.ph version to match; note that these cases skip the following
    # `elsif', which is only applied to _numeric_ values, not literal
    # bitmasks.
    if ($_ eq 'INADDR_ANY'
    or  $_ eq 'INADDR_LOOPBACK'
    or  $_ eq 'INADDR_NONE') {
        $ph_val = pack("N*", $ph_val);  # htonl(3) equivalent
    }

    # Since Socket.pm and socket.ph wave their hands over macros differently,
    # they could return functionally equivalent bitmaps with different numeric
    # interpretations (due to sign extension).  The only apparent case of this
    # is SO_DONTLINGER (only on Solaris, and deprecated, at that):
    elsif ($pm_val != $ph_val) {
        $pm_val = oct(sprintf "0x%lx", $pm_val);
        $ph_val = oct(sprintf "0x%lx", $ph_val);
    }

    if ($pm_val == $ph_val) { print "ok $i\n" }
    else                    { print "not ok $i\n" }
}


@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.1
	tg-mergefixes-1-branch:1.1.1.1.0.14
	tg-mergefixes-1-base:1.1.1.1
	MIROS_X:1.1.1.1.0.12
	MIROS_X_BASE:1.1.1.1
	tg-mergetmp-3:1.1.1.1
	MIRBSD_XP_MIRPPC:1.1.1.1.0.10
	cvs-200410231830:1.1.1.1
	MIRBSD_XP_SPARC_BASE:1.1.1.1
	MIRBSD_XP_SPARC:1.1.1.1.0.8
	cvs-200406091940:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.43.35;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.43.35;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@
/*
 * Copyright © 2001 Novell, Inc. All Rights Reserved.
 *
 * You may distribute under the terms of either the GNU General Public
 * License or the Artistic License, as specified in the README file.
 *
 */

/*
 * FILENAME		:	nw5iop.h
 * DESCRIPTION	:	Redefined functions for NetWare.
 * Author		:	SGP, HYAK
 * Date			:	January 2001.
 *
 */



#ifndef NW5IOP_H
#define NW5IOP_H


#ifndef START_EXTERN_C
#ifdef __cplusplus
#  define START_EXTERN_C extern "C" {
#  define END_EXTERN_C }
#  define EXTERN_C extern "C"
#else
#  define START_EXTERN_C 
#  define END_EXTERN_C 
#  define EXTERN_C
#endif
#endif

#if defined(_MSC_VER) || defined(__MINGW32__)
#  include <sys/utime.h>
#else
#  include <utime.h>
#endif

/*
 * defines for flock emulation
 */
#define LOCK_SH 1
#define LOCK_EX 2
#define LOCK_NB 4
#define LOCK_UN 8


/*
 * Make this as close to original stdio as possible.
 */

/*
 * function prototypes for our own win32io layer
 */
/********CHKSGP ****/
//making DLLExport as nothing
#define DllExport	
/*******************/

START_EXTERN_C

int * 	nw_errno(void);
char *** 	nw_environ(void);

FILE*	nw_stdin(void);
FILE*	nw_stdout(void);
FILE*	nw_stderr(void);
int		nw_ferror(FILE *fp);
int		nw_feof(FILE *fp);

char*	nw_strerror(int e);

int		nw_fprintf(FILE *pf, const char *format, ...);
int		nw_printf(const char *format, ...);
int		nw_vfprintf(FILE *pf, const char *format, va_list arg);
int		nw_vprintf(const char *format, va_list arg);

size_t	nw_fread(void *buf, size_t size, size_t count, FILE *pf);
size_t	nw_fwrite(const void *buf, size_t size, size_t count, FILE *pf);
FILE*	nw_fopen(const char *path, const char *mode);
FILE*	nw_fdopen(int fh, const char *mode);
FILE*	nw_freopen(const char *path, const char *mode, FILE *pf);
int		nw_fclose(FILE *pf);

int		nw_fputs(const char *s,FILE *pf);
int		nw_fputc(int c,FILE *pf);
int		nw_ungetc(int c,FILE *pf);
int		nw_getc(FILE *pf);
int		nw_fileno(FILE *pf);
void	nw_clearerr(FILE *pf);
int		nw_fflush(FILE *pf);
long	nw_ftell(FILE *pf);
int		nw_fseek(FILE *pf,long offset,int origin);
int		nw_fgetpos(FILE *pf,fpos_t *p);
int		nw_fsetpos(FILE *pf,const fpos_t *p);
void	nw_rewind(FILE *pf);
FILE*	nw_tmpfile(void);

void	nw_abort(void);

int  	nw_stat(const char *name,struct stat *sbufptr);

FILE* nw_Popen(char* command, char* mode, int* e);
int nw_Pclose(FILE* file, int* e);
int nw_Pipe(int* a, int* e);

int		nw_rename( const char *oname, const char *newname);
//int		nw_setmode( int fd, int mode);
int		nw_setmode( FILE *fp, int mode);
long	nw_lseek( int fd, long offset, int origin);
int		nw_dup( int fd);
int		nw_dup2(int h1, int h2);
int		nw_open(const char *path, int oflag,...);
int		nw_close(int fd);
int		nw_read(int fd, void *buf, unsigned int cnt);
int		nw_write(int fd, const void *buf, unsigned int cnt);

int nw_spawnvp(int mode, char *cmdname, char **argv);

int		nw_rmdir(const char *dir);
int		nw_chdir(const char *dir);
int		nw_flock(int fd, int oper);

int nw_execv(char *cmdname, char **argv);
int nw_execvp(char *cmdname, char **argv);

void	nw_setbuf(FILE *pf, char *buf);
int		nw_setvbuf(FILE *pf, char *buf, int type, size_t size);
char*	nw_fgets(char *s, int n, FILE *pf);

int		nw_fgetc(FILE *pf);

int		nw_putc(int c, FILE *pf);

int		nw_open_osfhandle(long handle, int flags);
long	nw_get_osfhandle(int fd);

DIR*	nw_opendir(char *filename);
struct direct*	nw_readdir(DIR *dirp);
long nw_telldir(DIR *dirp);
void nw_seekdir(DIR *dirp, long loc);
void nw_rewinddir(DIR *dirp);
int		nw_closedir(DIR *dirp);

unsigned int 	nw_sleep(unsigned int);
int		nw_times(struct tms *timebuf);

int		nw_stat(const char *path, struct stat *buf);
int nw_link(const char *oldname, const char *newname);
int		nw_unlink(const char *f);
int		nw_utime(const char *f, struct utimbuf *t);
DllExport  int		nw_uname(struct utsname *n);

int		nw_wait(int *status);

int nw_waitpid(int pid, int *status, int flags);
int nw_kill(int pid, int sig);

unsigned long	nw_os_id(void);
void*	nw_dynaload(const char*filename);

int		nw_access(const char *path, int mode);
int		nw_chmod(const char *path, int mode);
int		nw_getpid(void);

char *	nw_crypt(const char *txt, const char *salt);

int nw_isatty(int fd);
char* nw_mktemp(char *Template);
int nw_chsize(int handle, long size);
END_EXTERN_C


/*
 * the following six(6) is #define in stdio.h
 */
#ifndef WIN32IO_IS_STDIO
#undef environ
#undef feof
#undef pipe
#undef pause
#undef sleep
#undef times
#undef alarm
#undef ioctl
#undef unlink
#undef utime
#undef uname
#undef wait

#ifdef __BORLANDC__
#undef ungetc
#undef getc
#undef putc
#undef getchar
#undef putchar
#undef fileno
#endif

#define environ				(*nw_environ())


#if !defined(MYMALLOC) || !defined(PERL_CORE)

#endif


#endif /* WIN32IO_IS_STDIO */
#endif /* NW5IOP_H */

@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

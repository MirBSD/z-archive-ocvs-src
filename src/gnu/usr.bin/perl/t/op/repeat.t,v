head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.2
	tg-mergefixes-1-branch:1.1.1.2.0.4
	tg-mergefixes-1-base:1.1.1.2
	MIROS_X:1.1.1.2.0.2
	MIROS_X_BASE:1.1.1.2
	tg-mergetmp-3:1.1.1.2
	MIRBSD_XP_MIRPPC:1.1.1.1.0.10
	cvs-200410231830:1.1.1.2
	MIRBSD_XP_SPARC_BASE:1.1.1.1
	MIRBSD_XP_SPARC:1.1.1.1.0.8
	cvs-200406091940:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	cvs-200312031730:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.17.43.57;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.43.57;	author tg;	state Stab;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.10.23.18.43.28;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!./perl

BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
}

require './test.pl';
plan(tests => 25);

# compile time

is('-' x 5, '-----',    'compile time x');
is('-' x 1, '-',        '  x 1');
is('-' x 0, '',         '  x 0');

is('ab' x 3, 'ababab',  '  more than one char');

# run time

$a = '-';
is($a x 5, '-----',     'run time x');
is($a x 1, '-',         '  x 1');
is($a x 0, '',          '  x 0');

$a = 'ab';
is($a x 3, 'ababab',    '  more than one char');

$a = 'xyz';
$a x= 2;
is($a, 'xyzxyz',        'x=2');
$a x= 1;
is($a, 'xyzxyz',        'x=1');
$a x= 0;
is($a, '',              'x=0');

@@x = (1,2,3);

is(join('', @@x x 4),        '3333',                 '@@x x Y');
is(join('', (@@x) x 4),      '123123123123',         '(@@x) x Y');
is(join('', (@@x,()) x 4),   '123123123123',         '(@@x,()) x Y');
is(join('', (@@x,1) x 4),    '1231123112311231',     '(@@x,1) x Y');
is(join(':', () x 4),       '',                     '() x Y');
is(join(':', (9) x 4),      '9:9:9:9',              '(X) x Y');
is(join(':', (9,9) x 4),    '9:9:9:9:9:9:9:9',      '(X,X) x Y');
is(join('', (split(//,"123")) x 2), '123123',       'split and x');


# This test is actually testing for Digital C compiler optimizer bug,
# present in Dec C versions 5.* and 6.0 (used in Digital UNIX and VMS),
# found in December 1998.  The bug was reported to Digital^WCompaq as
#     DECC 2745 (21-Dec-1998)
# GEM_BUGS 7619 (23-Dec-1998)
# As of April 1999 the bug has been fixed in Tru64 UNIX 5.0 and is planned
# to be fixed also in 4.0G.
#
# The bug was as follows: broken code was produced for util.c:repeatcpy()
# (a utility function for the 'x' operator) in the case *all* these
# four conditions held:
#
# (1) len == 1
# (2) "from" had the 8th bit on in its single character
# (3) count > 7 (the 'x' count > 16)
# (4) the highest optimization level was used in compilation
#     (which is the default when compiling Perl)
#
# The bug looked like this (. being the eight-bit character and ? being \xff):
#
# 16 ................
# 17 .........???????.
# 18 .........???????..
# 19 .........???????...
# 20 .........???????....
# 21 .........???????.....
# 22 .........???????......
# 23 .........???????.......
# 24 .........???????.???????
# 25 .........???????.???????.
#
# The bug was triggered in the "if (len == 1)" branch.  The fix
# was to introduce a new temporary variable.  In diff -u format:
#
#     register char *frombase = from;
# 
#     if (len == 1) {
#-       todo = *from;
#+       register char c = *from;
#        while (count-- > 0)
#-           *to++ = todo;
#+           *to++ = c;
#        return;
#     }
#
# The bug could also be (obscurely) avoided by changing "from" to
# be an unsigned char pointer.
#
# This obscure bug was not found by the then test suite but instead
# by Mark.Martinec@@nsc.ijs.si while trying to install Digest-MD5-2.00.
#
# jhi@@iki.fi
#
is("\xdd" x 24, "\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd", 'Dec C bug');


# When we use a list repeat in a scalar context, it behaves like
# a scalar repeat. Make sure that works properly, and doesn't leave
# extraneous values on the stack.
#  -- robin@@kitsite.com

my ($x, $y) = scalar ((1,2)x2);
is($x, "22",    'list repeat in scalar context');
is($y, undef,   '  no extra values on stack');

# Make sure the stack doesn't get truncated too much - the left
# operand of the eq binop needs to remain!
is(77, scalar ((1,7)x2),    'stack truncation');


# perlbug 20011113.110 works in 5.6.1, broken in 5.7.2
{
    my $x= [("foo") x 2];
    is( join('', @@$x), 'foofoo', 'list repeat in anon array ref broken [ID 20011113.110]' );
}

# [ID 20010809.028] x operator not copying elements in 'for' list?
{
    local $TODO = "x operator not copying elements in 'for' list? [ID 20010809.028]";
    my $x = 'abcd';
    my $y = '';
    for (($x =~ /./g) x 2) {
	$y .= chop;
    }
    is($y, 'abcdabcd');
}

@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@5.8.5
@
text
@d9 1
a9 1
plan(tests => 41);
a13 2
is('-' x 3.1, '---',    'compile time 3.1');
is('-' x 3.9, '---',    'compile time 3.9');
a15 4
is('-' x -1, '',        '  x -1');
is('-' x undef, '',     '  x undef');
is('-' x "foo", '',     '  x "foo"');
is('-' x "3rd", '---',  '  x "3rd"');
a22 2
is($a x 3.1, '---',     '  x 3.1');
is($a x 3.9, '---',     '  x 3.9');
a24 4
is($a x -3, '',         '  x -3');
is($a x undef, '',      '  x undef');
is($a x "foo", '',      '  x "foo"');
is($a x "3rd", '---',   '  x "3rd"');
a27 4
$a = 'ab';
is($a x 0, '',          '  more than one char');
$a = 'ab';
is($a x -12, '',        '  more than one char');
a47 3
is(join('', @@x x -12),      '',                     '@@x x -12');
is(join('', (@@x) x -14),    '',                     '(@@x) x -14');

d135 1
@


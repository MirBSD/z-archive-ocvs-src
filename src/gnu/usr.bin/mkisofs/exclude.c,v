head	1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1
	tg-mergefixes-1-branch:1.1.0.8
	tg-mergefixes-1-base:1.1
	MIROS_X:1.1.0.6
	MIROS_X_BASE:1.1
	MIRBSD_XP_MIRPPC:1.1.0.4
	MIRBSD_XP_SPARC_BASE:1.1
	MIRBSD_XP_SPARC:1.1.0.2;
locks; strict;
comment	@ * @;


1.1
date	2003.10.30.17.26.44;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@the most crude hack I ever made...

mkisofs from cdrtools-2.01a19.tar.bz2

TODO:
* nuke use of character 0x60 from CVS (!)
* nuke NLS
* have this... *thing* use libc actually for things
  such as printf(), and not make its own *shudder*
* shrink
* verify it works
* send out an extermination mission to the author
@
text
@/* @@(#)exclude.c	1.8 00/12/05 joerg */
#ifndef lint
static	char sccsid[] =
	"@@(#)exclude.c	1.8 00/12/05 joerg";
#endif
/*
 * 9-Dec-93 R.-D. Marzusch, marzusch@@odiehh.hanse.de:
 * added 'exclude' option (-x) to specify pathnames NOT to be included in
 * CD image.
 */

#include <mconfig.h>
#include <stdio.h>
#include <stdxlib.h>
#include <strdefs.h>
#include <standard.h>
#include <schily.h>


/* this allows for 1000 entries to be excluded ... */
#define MAXEXCL		1000

static char		*excl[MAXEXCL];

void	exclude		__PR((char *fn));
int	is_excluded	__PR((char *fn));


void
exclude(fn)
	char		*fn;
{
	register int	i;

	for (i = 0; excl[i] && i < MAXEXCL; i++)
		;

	if (i == MAXEXCL) {
		fprintf(stderr,
			"Can't exclude '%s' - too many entries in table\n",
								fn);
		return;
	}
	excl[i] = (char *) malloc(strlen(fn) + 1);
	if (excl[i] == NULL) {
#ifdef	USE_LIBSCHILY
		errmsg("Can't allocate memory for excluded filename\n");
#else
		fprintf(stderr,
			"Can't allocate memory for excluded filename\n");
#endif
		return;
	}
	strcpy(excl[i], fn);
}

int
is_excluded(fn)
	char		*fn;
{
	register int	i;

	/*
	 * very dumb search method ...
	 */
	for (i = 0; excl[i] && i < MAXEXCL; i++) {
		if (strcmp(excl[i], fn) == 0) {
			return 1;	/* found -> excluded filenmae */
		}
	}
	return 0;	/* not found -> not excluded */
}
@

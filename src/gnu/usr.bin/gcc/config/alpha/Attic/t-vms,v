head	1.2;
access;
symbols
	gcc-3_4_2:1.1.2.1 FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2004.11.13.00.49.37;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.10.29.21.16.49;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.10.29.21.16.49;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@give up on gcc 3.4
GNU make is just too... /* */
@
text
@LIB2FUNCS_EXTRA = $(srcdir)/config/alpha/vms_tramp.asm

# VMS_EXTRA_PARTS is defined in x-vms and represent object files that
# are only needed for VMS targets, but can only be compiled on a VMS host
# (because they need DEC C).
EXTRA_PARTS = vms-dwarf2.o vms-dwarf2eh.o $(VMS_EXTRA_PARTS)

# This object must be linked with in order to make the executable debuggable.
# vms-ld handles it automatically when passed -g.
vms-dwarf2.o : $(srcdir)/config/alpha/vms-dwarf2.asm
	gcc -c -x assembler $< -o $@@

vms-dwarf2eh.o : $(srcdir)/config/alpha/vms-dwarf2eh.asm
	gcc -c -x assembler $< -o $@@

# Assemble startup files.
vcrt0.o: $(CRT0_S) $(GCC_PASSES)
	decc -c /names=as_is $(srcdir)/config/alpha/vms-crt0.c -o vcrt0.o

pcrt0.o: $(CRT0_S) $(GCC_PASSES)
	decc -c /names=as_is $(srcdir)/config/alpha/vms-psxcrt0.c -o pcrt0.o

MULTILIB_OPTIONS = mcpu=ev6
MULTILIB_DIRNAMES = ev6
LIBGCC = stmp-multilib
INSTALL_LIBGCC = install-multilib
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@GNU Compiler Collection 3.4.2 from the FSF
- gcc/gcc/<x> for any <x> of type FILE only
- gcc/gcc/config/<x> for any <x> of type FILE or DIR
- gcc/gcc/fixinc/<x> for any <x> not match "tests@@(|/*)"
- gcc/gcc/ginclude/<x>

This will be lndir'd into the 'gcc' module for
fullgcc builds; the build scripts will reside
in the 'gcc' module, with some helpers in 'src'.

These files are considered part of MirOS.
@
text
@@

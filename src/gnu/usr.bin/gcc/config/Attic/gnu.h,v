head	1.2;
access;
symbols
	gcc-3_4_2:1.1.2.1 FSF:1.1.2;
locks; strict;
comment	@ * @;


1.2
date	2004.11.13.00.49.28;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.10.29.21.16.46;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.10.29.21.16.46;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@give up on gcc 3.4
GNU make is just too... /* */
@
text
@/* Configuration common to all targets running the GNU system.  */

/* Provide GCC options for standard feature-test macros.  */
#undef CPP_SPEC
#define CPP_SPEC "%{posix:-D_POSIX_SOURCE} %{bsd:-D_BSD_SOURCE}"

/* Default C library spec.  Use -lbsd-compat for gcc -bsd.  */
#undef LIB_SPEC
#define LIB_SPEC "%{bsd:-lbsd-compat} %{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}"

/* Standard include directory.  In GNU, "/usr" is a four-letter word.  */
#undef STANDARD_INCLUDE_DIR
#define STANDARD_INCLUDE_DIR "/include"

/* Implicit library calls should use memcpy, not bcopy, etc.  */
#undef TARGET_MEM_FUNCTIONS
#define TARGET_MEM_FUNCTIONS

/* The system headers under GNU are C++-aware.  */
#define NO_IMPLICIT_EXTERN_C

#define HURD_TARGET_OS_CPP_BUILTINS()		\
    do {					\
	builtin_define ("__gnu_hurd__");	\
	builtin_define ("__GNU__");		\
	builtin_define_std ("unix");		\
	builtin_define_std ("MACH");		\
	builtin_assert ("system=gnu");		\
	builtin_assert ("system=mach");		\
	builtin_assert ("system=unix");		\
	builtin_assert ("system=posix");	\
    } while (0)
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@GNU Compiler Collection 3.4.2 from the FSF
- gcc/gcc/<x> for any <x> of type FILE only
- gcc/gcc/config/<x> for any <x> of type FILE or DIR
- gcc/gcc/fixinc/<x> for any <x> not match "tests@@(|/*)"
- gcc/gcc/ginclude/<x>

This will be lndir'd into the 'gcc' module for
fullgcc builds; the build scripts will reside
in the 'gcc' module, with some helpers in 'src'.

These files are considered part of MirOS.
@
text
@@

head	1.2;
access;
symbols
	gcc-3_4_2:1.1.2.1 FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2004.11.13.00.50.26;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.10.29.21.16.59;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.10.29.21.16.59;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@give up on gcc 3.4
GNU make is just too... /* */
@
text
@# We need multilib support for HPUX's ILP32 & LP64 modes.

LIBGCC = stmp-multilib
INSTALL_LIBGCC = install-multilib

MULTILIB_OPTIONS = milp32/mlp64
MULTILIB_DIRNAMES = hpux32 hpux64
MULTILIB_MATCHES =

# Support routines for HP-UX 128 bit floats.

LIB2FUNCS_EXTRA=quadlib.c

quadlib.c: $(srcdir)/config/ia64/quadlib.c
	cat $(srcdir)/config/ia64/quadlib.c > quadlib.c

# We get an undefined main when building a cross compiler because our
# linkspec has "-u main" and we want that for linking but it makes
# LIBGCC1_TEST fail because it uses -nostdlib -nostartup.

LIBGCC1_TEST =

# We do not want to include the EH stuff that linux uses, we want to use
# the HP-UX libunwind library.

LIB2ADDEH =

SHLIB_EXT = .so
# Must include -lunwind in the link, so that libgcc_s.so has the necessary
# DT_NEEDED entry for libunwind.
SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \
	-Wl,+h,@@shlib_base_name@@.so.0 \
	-o @@shlib_base_name@@.so @@multilib_flags@@ @@shlib_objs@@ -lunwind -lc && \
	rm -f @@shlib_base_name@@.so.0 && \
	$(LN_S) @@shlib_base_name@@.so @@shlib_base_name@@.so.0
# $(slibdir) double quoted to protect it from expansion while building
# libgcc.mk.  We want this delayed until actual install time.
SHLIB_INSTALL = $(INSTALL_DATA) @@shlib_base_name@@.so $$(DESTDIR)$$(slibdir)/@@shlib_base_name@@.so.0; \
	rm -f $$(DESTDIR)$$(slibdir)/@@shlib_base_name@@.so; \
	$(LN_S) @@shlib_base_name@@.so.0 $$(DESTDIR)$$(slibdir)/@@shlib_base_name@@.so; \
	chmod +x $$(DESTDIR)$$(slibdir)/@@shlib_base_name@@.so

SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@GNU Compiler Collection 3.4.2 from the FSF
- gcc/gcc/<x> for any <x> of type FILE only
- gcc/gcc/config/<x> for any <x> of type FILE or DIR
- gcc/gcc/fixinc/<x> for any <x> not match "tests@@(|/*)"
- gcc/gcc/ginclude/<x>

This will be lndir'd into the 'gcc' module for
fullgcc builds; the build scripts will reside
in the 'gcc' module, with some helpers in 'src'.

These files are considered part of MirOS.
@
text
@@

head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.04.06.16.02.33;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.41.45;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.41.45;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove old binutils as well; i386 is our single target,
and it's ELF; x86-64 will be ELF as well (I hope).
@
text
@#!/bin/sh
# $OpenBSD: doobjcmp,v 1.2 1998/02/15 18:50:12 niklas Exp $
# compare two object files, in depth.

x=$1
y=$2
BOTH="$1 $2"


# if they cmp, we're fine.
if (cmp $BOTH > /dev/null)
then
	exit 0
fi

# otherwise, we must look closer.
if (doboth $BOTH size)
then
	echo Sizes ok.
else
	echo Sizes differ:
	size $BOTH
#	exit 1
fi

if (doboth $BOTH objdump +header)
then
	echo Headers ok.
else
	echo Header differences.
#	exit 1
fi

if (doboth $BOTH objdump +text > /dev/null)
then
	echo Text ok.
else
	echo Text differences.
#	doboth $BOTH objdump +text
#	exit 1
fi

if (doboth $BOTH objdump +data > /dev/null)
then
	echo Data ok.
else
	echo Data differences.
#	doboth $BOTH objdump +data
#	exit 1
fi

if (doboth $BOTH objdump +symbols > /dev/null)
then
	echo Symbols ok.
else
	echo -n Symbol differences...

	if (doboth $BOTH dounsortsymbols)
	then
		echo but symbols are simply ordered differently.
#		echo Now what to do about relocs'?'
#		exit 1
	else
		echo and symbols differ in content.
		exit 1
	fi
fi

# of course, if there were symbol diffs, then the reloc symbol indexes
# will be off.

if (doboth $BOTH objdump -r > /dev/null)
then
	echo Reloc ok.
else
	echo -n Reloc differences...

	if (doboth $BOTH dounsortreloc)
	then
		echo but relocs are simply ordered differently.
	else
		echo and relocs differ in content.
		exit 1
	fi
fi

exit

# eof
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

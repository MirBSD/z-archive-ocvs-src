head	1.2;
access;
symbols
	cvs-1_12_11:1.1.2.1
	cvs-1_12_10:1.1.2.1
	FSF:1.1.2
	cvs-200406091940:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200404170130:1.1.1.1
	cvs-1_11_12:1.1.3.1
	cvs-1_11_1p1:1.1.3.1
	tg:1.1.3
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.17.43.37;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.41.27;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	2003.03.22.17.41.27;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2004.12.02.11.58.44;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2004.02.12.19.17.36;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove the FSF changelog files and other unused files; use cvsweb or anoncvs to retrieve them
@
text
@# Makefile for OS/2 (Watcom-C) for use with the watcom make.
# Written 11/96 by Ullrich von Bassewitz (uz@@musoftware.com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# The directory, where the IBM TCP/IP developers toolkit is installed. As far
# as I remember, c:\mptn is the default location. If it is not, it is still
# a good choice :-)
tcpip_dir       = c:\mptn
tcpip_libdir    = $(tcpip_dir)\lib
tcpip_incdir    = $(tcpip_dir)\inc

# Directory for source files and objects
srcdir          = .
top_srcdir      = ..
lib_dir         = $(top_srcdir)\lib
cvs_srcdir      = $(top_srcdir)\src
zlib_dir        = $(top_srcdir)\zlib

# Define the stuff used for building the executable
CC = WCC386
LD = WLINK
CFLAGS = -bm -bt=OS2 -I$(srcdir) -I$(lib_dir) -I$(cvs_srcdir) -I$(zlib_dir) &
        -DIBM_CPP -DHAVE_CONFIG_H -DTCPIP_IBM -d1 -onatx -zp4 -5s -fpi87 -zq &
        -w2 -ze -I$(tcpip_incdir)

# Tell the make where the C files are located
.c:     $(srcdir);$(lib_dir);$(cvs_srcdir);$(zlib_dir)

# Somewhat modified generic rule for .obj files. Don't put the .obj file into
# the current directory, use the source directory instead.
.c.obj: .AUTODEPEND
  $(CC) $(CFLAGS) -fo=$*.obj $^*

# object files from OS/2 sources
OS2_OBJECTS = &
        $(srcdir)\mkdir.obj &
        $(srcdir)\pwd.obj &
        $(srcdir)\filesubr.obj &
        $(srcdir)\run.obj &
        $(srcdir)\stripslash.obj &
        $(srcdir)\rcmd.obj &
        $(srcdir)\waitpid.obj &
        $(srcdir)\popen.obj &
        $(srcdir)\porttcp.obj &
        $(srcdir)\getpass.obj

# object files from ..\src
COMMON_OBJECTS = &
        $(cvs_srcdir)\add.obj &
        $(cvs_srcdir)\admin.obj &
        $(cvs_srcdir)\buffer.obj &
        $(cvs_srcdir)\checkin.obj &
        $(cvs_srcdir)\checkout.obj &
        $(cvs_srcdir)\classify.obj &
        $(cvs_srcdir)\client.obj &
        $(cvs_srcdir)\commit.obj &
        $(cvs_srcdir)\create_adm.obj &
        $(cvs_srcdir)\cvsrc.obj &
        $(cvs_srcdir)\diff.obj &
        $(cvs_srcdir)\edit.obj &
        $(cvs_srcdir)\entries.obj &
        $(cvs_srcdir)\error.obj &
        $(cvs_srcdir)\expand_path.obj &
        $(cvs_srcdir)\fileattr.obj &
        $(cvs_srcdir)\find_names.obj &
        $(cvs_srcdir)\hash.obj &
        $(cvs_srcdir)\history.obj &
        $(cvs_srcdir)\ignore.obj &
        $(cvs_srcdir)\import.obj &
        $(cvs_srcdir)\lock.obj &
        $(cvs_srcdir)\log.obj &
        $(cvs_srcdir)\login.obj &
        $(cvs_srcdir)\logmsg.obj &
        $(cvs_srcdir)\main.obj &
        $(cvs_srcdir)\mkmodules.obj &
        $(cvs_srcdir)\modules.obj &
        $(cvs_srcdir)\myndbm.obj &
        $(cvs_srcdir)\no_diff.obj &
        $(cvs_srcdir)\parseinfo.obj &
        $(cvs_srcdir)\patch.obj &
        $(cvs_srcdir)\rcs.obj &
        $(cvs_srcdir)\rcscmds.obj &
        $(cvs_srcdir)\recurse.obj &
        $(cvs_srcdir)\release.obj &
        $(cvs_srcdir)\remove.obj &
        $(cvs_srcdir)\repos.obj &
        $(cvs_srcdir)\root.obj &
        $(cvs_srcdir)\rtag.obj &
        $(cvs_srcdir)\scramble.obj &
        $(cvs_srcdir)\server.obj &
        $(cvs_srcdir)\status.obj &
        $(cvs_srcdir)\subr.obj &
        $(cvs_srcdir)\tag.obj &
        $(cvs_srcdir)\update.obj &
        $(cvs_srcdir)\watch.obj &
        $(cvs_srcdir)\wrapper.obj &
        $(cvs_srcdir)\vers_ts.obj &
        $(cvs_srcdir)\version.obj &
        $(cvs_srcdir)\zlib.obj
# end of $COMMON_OBJECTS

# objects from ..\lib
LIB_OBJECTS = &
        $(lib_dir)\getopt.obj &
        $(lib_dir)\getopt1.obj &
        $(lib_dir)\getline.obj &
        $(lib_dir)\getwd.obj &
        $(lib_dir)\savecwd.obj &
        $(lib_dir)\sighandle.obj &
        $(lib_dir)\yesno.obj &
        $(lib_dir)\vasprintf.obj &
        $(lib_dir)\xgetwd.obj &
        $(lib_dir)\md5.obj &
        $(lib_dir)\fnmatch.obj &
        $(lib_dir)\regex.obj &
        $(lib_dir)\getdate.obj &
        $(lib_dir)\valloc.obj

ZLIB_OBJECTS = &
        $(zlib_dir)\adler32.obj &
        $(zlib_dir)\compress.obj &
        $(zlib_dir)\crc32.obj &
        $(zlib_dir)\uncompr.obj &
        $(zlib_dir)\deflate.obj &
        $(zlib_dir)\trees.obj &
        $(zlib_dir)\zutil.obj &
        $(zlib_dir)\inflate.obj &
        $(zlib_dir)\infblock.obj &
        $(zlib_dir)\inftrees.obj &
        $(zlib_dir)\infcodes.obj &
        $(zlib_dir)\infutil.obj &
        $(zlib_dir)\inffast.obj

OBJECTS = $(COMMON_OBJECTS) $(LIB_OBJECTS) $(OS2_OBJECTS) $(ZLIB_OBJECTS)

cvs.exe:        $(OBJECTS)
        $(LD) SYSTEM os2v2 DEBUG all NAME cvs.exe OPTION dosseg &
        OPTION stack=32K FILE $(cvs_srcdir)\*.obj,$(lib_dir)\*.obj, &
        $(srcdir)\*.obj,$(zlib_dir)\*.obj &
        LIBRARY $(tcpip_libdir)\tcp32dll.lib, &
        $(tcpip_libdir)\so32dll.lib

strip:  cvs.exe         .SYMBOLIC
        -wstrip cvs.exe
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@vendor-branch-ify new cvs 1.12
@
text
@@


1.1.3.1
log
@our CVS is currently at 1.11.1p1, thus import that version into vendor branch
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

head	1.4;
access;
symbols
	lynx-2_8_6dev10:1.1.2.1
	FSF:1.1.2
	tg-mergetmp-mirosx-1:1.4
	tg-mergefixes-1-branch:1.4.0.8
	tg-mergefixes-1-base:1.4
	MIROS_X:1.4.0.6
	MIROS_X_BASE:1.4
	MIRBSD_XP_MIRPPC:1.4.0.4
	lynx-2_8_6dev_7b:1.1.3.2
	lynx-2_8_6dev_6:1.1.3.2
	MIRBSD_XP_SPARC_BASE:1.4
	MIRBSD_XP_SPARC:1.4.0.2
	lynx-2_8_6dev_5-iz2:1.1.3.2
	lynx-2_8_6dev_5:1.1.3.2
	cvs-200406091940:1.1.1.1
	MIRBSD_7quater:1.3
	cvs-200405160640:1.1.1.1
	lynx-2_8_6dev2:1.1.3.1
	lynx-2_8_5:1.1.3.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	lynx_2-8-5_dev17d:1.1.3.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.3.0.6
	MIRBSD_7:1.3.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.3
	MIRBSD_7_DEV:1.3.0.2
	cvs-200310020700:1.1.1.1
	lynx_2-8-5_dev16c:1.1.3.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	lynx_2-8-5_dev16:1.1.3.1
	tg:1.1.3
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	VENDOR_LYNX_285dev16:1.3
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2004.07.15.18.17.06;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2003.07.07.18.58.40;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.07.18.49.38;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.42.23;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	2003.03.22.17.42.23;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2005.01.03.00.31.54;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2003.09.17.14.20.25;	author tg;	state Exp;
branches;
next	1.1.3.2;

1.1.3.2
date	2004.07.15.15.54.42;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@automatic merge of lynx-current
@
text
@/*
 * mktime.c -- converts a struct tm into a time_t
 *
 * Copyright (C) 1997 Free Software Foundation, Inc.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59
 * Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

/* Written by Philippe De Muyter <phdm@@macqel.be>.  */

#include	<time.h>

static time_t mkgmtime(register struct tm *t)
{
    register short month, year;
    register time_t result;
    static int m_to_d[12] =
    {0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334};

    month = t->tm_mon;
    year = t->tm_year + month / 12 + 1900;
    month %= 12;
    if (month < 0) {
	year -= 1;
	month += 12;
    }
    result = (year - 1970) * 365 + (year - 1969) / 4 + m_to_d[month];
    result = (year - 1970) * 365 + m_to_d[month];
    if (month <= 1)
	year -= 1;
    result += (year - 1968) / 4;
    result -= (year - 1900) / 100;
    result += (year - 1600) / 400;
    result += t->tm_mday;
    result -= 1;
    result *= 24;
    result += t->tm_hour;
    result *= 60;
    result += t->tm_min;
    result *= 60;
    result += t->tm_sec;
    return (result);
}

/*
 *  mktime -- convert tm struct to time_t
 *		if tm_isdst >= 0 use it, else compute it
 */

time_t
mktime(struct tm * t)
{
    time_t result;

    tzset();
    result = mkgmtime(t) + timezone;
    if (t->tm_isdst > 0
	|| (t->tm_isdst < 0 && localtime(&result)->tm_isdst))
	result -= 3600;
    return (result);
}
@


1.3
log
@un-tar the file
>>> lynx2.8.5dev.16.tar.gz
from http://lynx.isc.org/current/

the following files need -kb:
- LYStyle.c
- Xsystem.c
- WWW HTMIME.c
@
text
@d25 1
a25 3
static time_t
mkgmtime(t)
register struct tm	*t;
d27 4
a30 4
	register short	month, year;
	register time_t	result;
	static int	m_to_d[12] =
		{0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334};
d32 23
a54 24
	month = t->tm_mon;
	year = t->tm_year + month / 12 + 1900;
	month %= 12;
	if (month < 0)
	{
		year -= 1;
		month += 12;
	}
	result = (year - 1970) * 365 + (year - 1969) / 4 + m_to_d[month];
	result = (year - 1970) * 365 + m_to_d[month];
	if (month <= 1)
		year -= 1;
	result += (year - 1968) / 4;
	result -= (year - 1900) / 100;
	result += (year - 1600) / 400;
	result += t->tm_mday;
	result -= 1;
	result *= 24;
	result += t->tm_hour;
	result *= 60;
	result += t->tm_min;
	result *= 60;
	result += t->tm_sec;
	return(result);
d58 3
a60 3
**  mktime -- convert tm struct to time_t
**		if tm_isdst >= 0 use it, else compute it
*/
d63 1
a63 2
mktime(t)
struct tm	*t;
d65 1
a65 1
	time_t	result;
d67 3
a69 3
	tzset();
	result = mkgmtime(t) + timezone;
	if (t->tm_isdst > 0
d71 2
a72 2
		result -= 3600;
	return(result);
@


1.2
log
@remove lynx 2.8.4 patchlevel 1d
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Lynx 2.8.6dev.10 as imported into ncvs
@
text
@d25 3
a27 1
static time_t mkgmtime(register struct tm *t)
d29 4
a32 4
    register short month, year;
    register time_t result;
    static int m_to_d[12] =
    {0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334};
d34 24
a57 23
    month = t->tm_mon;
    year = t->tm_year + month / 12 + 1900;
    month %= 12;
    if (month < 0) {
	year -= 1;
	month += 12;
    }
    result = (year - 1970) * 365 + (year - 1969) / 4 + m_to_d[month];
    result = (year - 1970) * 365 + m_to_d[month];
    if (month <= 1)
	year -= 1;
    result += (year - 1968) / 4;
    result -= (year - 1900) / 100;
    result += (year - 1600) / 400;
    result += t->tm_mday;
    result -= 1;
    result *= 24;
    result += t->tm_hour;
    result *= 60;
    result += t->tm_min;
    result *= 60;
    result += t->tm_sec;
    return (result);
d61 3
a63 3
 *  mktime -- convert tm struct to time_t
 *		if tm_isdst >= 0 use it, else compute it
 */
d66 2
a67 1
mktime(struct tm * t)
d69 1
a69 1
    time_t result;
d71 3
a73 3
    tzset();
    result = mkgmtime(t) + timezone;
    if (t->tm_isdst > 0
d75 2
a76 2
	result -= 3600;
    return (result);
@


1.1.3.1
log
@Import Lynx 2.8.5.dev16 again, this time via a vendor branch (tg),
to ease tracking of the upcoming dev17 (2.8.6-prerelease) update.
@
text
@@


1.1.3.2
log
@Lynx 2.8.6dev.5 fresh from the ISC
@
text
@d25 3
a27 1
static time_t mkgmtime(register struct tm *t)
d29 4
a32 4
    register short month, year;
    register time_t result;
    static int m_to_d[12] =
    {0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334};
d34 24
a57 23
    month = t->tm_mon;
    year = t->tm_year + month / 12 + 1900;
    month %= 12;
    if (month < 0) {
	year -= 1;
	month += 12;
    }
    result = (year - 1970) * 365 + (year - 1969) / 4 + m_to_d[month];
    result = (year - 1970) * 365 + m_to_d[month];
    if (month <= 1)
	year -= 1;
    result += (year - 1968) / 4;
    result -= (year - 1900) / 100;
    result += (year - 1600) / 400;
    result += t->tm_mday;
    result -= 1;
    result *= 24;
    result += t->tm_hour;
    result *= 60;
    result += t->tm_min;
    result *= 60;
    result += t->tm_sec;
    return (result);
d61 3
a63 3
 *  mktime -- convert tm struct to time_t
 *		if tm_isdst >= 0 use it, else compute it
 */
d66 2
a67 1
mktime(struct tm * t)
d69 1
a69 1
    time_t result;
d71 3
a73 3
    tzset();
    result = mkgmtime(t) + timezone;
    if (t->tm_isdst > 0
d75 2
a76 2
	result -= 3600;
    return (result);
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

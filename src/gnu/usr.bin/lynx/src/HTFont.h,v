head	1.5;
access;
symbols
	lynx-2_8_6dev10:1.1.2.1
	FSF:1.1.2
	tg-mergetmp-mirosx-1:1.5
	tg-mergefixes-1-branch:1.5.0.4
	tg-mergefixes-1-base:1.5
	MIROS_X:1.5.0.2
	MIROS_X_BASE:1.5
	MIRBSD_XP_MIRPPC:1.4.0.4
	lynx-2_8_6dev_7b:1.1.3.3
	lynx-2_8_6dev_6:1.1.3.3
	MIRBSD_XP_SPARC_BASE:1.4
	MIRBSD_XP_SPARC:1.4.0.2
	lynx-2_8_6dev_5-iz2:1.1.3.2
	lynx-2_8_6dev_5:1.1.3.2
	cvs-200406091940:1.1.1.2
	MIRBSD_7quater:1.3
	cvs-200405160640:1.1.1.2
	lynx-2_8_6dev2:1.1.3.1
	lynx-2_8_5:1.1.3.1
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	lynx_2-8-5_dev17d:1.1.3.1
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.3.0.6
	MIRBSD_7:1.3.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.3
	MIRBSD_7_DEV:1.3.0.2
	cvs-200310020700:1.1.1.2
	lynx_2-8-5_dev16c:1.1.3.1
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	lynx_2-8-5_dev16:1.1.3.1
	tg:1.1.3
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	VENDOR_LYNX_285dev16:1.3
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	cvs-200305071630:1.1.1.2
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.10.11.20.30.39;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.15.18.16.48;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2003.07.07.18.58.27;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.07.18.49.25;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.42.19;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	2003.03.22.17.42.19;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.07.17.30.16;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2005.01.03.00.30.17;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2003.09.17.14.20.14;	author tg;	state Exp;
branches;
next	1.1.3.2;

1.1.3.2
date	2004.07.15.15.51.26;	author tg;	state Exp;
branches;
next	1.1.3.3;

1.1.3.3
date	2004.10.11.20.16.24;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@automatic merge; regen configure
@
text
@/*		The portable font concept (!?*)
*/

/*	Line mode browser version:
*/
#ifndef HTFONT_H
#define HTFONT_H

typedef long int HTMLFont;	/* For now */

#define HT_FONT		0
#define HT_CAPITALS	1
#define HT_BOLD		2
#define HT_UNDERLINE	4
#define HT_INVERSE	8
#define HT_DOUBLE	0x10

#define HT_BLACK	0
#define HT_WHITE	1

/*
 *  Lynx internal character representations.
 */
#define HT_NON_BREAK_SPACE      ((char)1)
#define HT_EN_SPACE             ((char)2)
#define LY_UNDERLINE_START_CHAR	'\003'
#define LY_UNDERLINE_END_CHAR	'\004'

/* Turn about is fair play ASCII platforms use EBCDIC tab;
   EBCDIC platforms use ASCII tab for LY_BOLD_START_CHAR.
*/
#ifdef EBCDIC
#define LY_BOLD_START_CHAR	'\011'
#else
#define LY_BOLD_START_CHAR	'\005'
#endif

#define LY_BOLD_END_CHAR	'\006'
#define LY_SOFT_HYPHEN		((char)7)
#define LY_SOFT_NEWLINE		((char)8)

#ifdef EBCDIC
#define IsSpecialAttrChar(a)	(((a) > '\002') && ((a) <= '\011') && ((a)!='\t'))
#else
#define IsSpecialAttrChar(a)	(((a) > '\002') && ((a) <= '\010'))
#endif

#define IsNormalChar(a)		((a) != '\0' && !IsSpecialAttrChar(a))

#endif /* HTFONT_H */
@


1.4
log
@automatic merge of lynx-current
@
text
@d43 1
a43 1
#define IsSpecialAttrChar(a)  (((a) > '\002') && ((a) <= '\011') && ((a)!='\t'))
d45 1
a45 1
#define IsSpecialAttrChar(a)  (((a) > '\002') && ((a) <= '\010'))
d47 2
@


1.3
log
@un-tar the file
>>> lynx2.8.5dev.16.tar.gz
from http://lynx.isc.org/current/

the following files need -kb:
- LYStyle.c
- Xsystem.c
- WWW HTMIME.c
@
text
@d22 2
a23 2
**  Lynx internal character representations.
*/
a46 1

@


1.2
log
@remove lynx 2.8.4 patchlevel 1d
@
text
@a10 8
#ifndef HT_NON_BREAK_SPACE
#define HT_NON_BREAK_SPACE ((char)1)	/* For now */
#endif /* !HT_NON_BREAK_SPACE */
#ifndef HT_EN_SPACE
#define HT_EN_SPACE ((char)2)		/* For now */
#endif /* !HT_EN_SPACE */


d20 28
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Lynx 2.8.6dev.10 as imported into ncvs
@
text
@d11 8
a27 29

/*
 *  Lynx internal character representations.
 */
#define HT_NON_BREAK_SPACE      ((char)1)
#define HT_EN_SPACE             ((char)2)
#define LY_UNDERLINE_START_CHAR	'\003'
#define LY_UNDERLINE_END_CHAR	'\004'

/* Turn about is fair play ASCII platforms use EBCDIC tab;
   EBCDIC platforms use ASCII tab for LY_BOLD_START_CHAR.
*/
#ifdef EBCDIC
#define LY_BOLD_START_CHAR	'\011'
#else
#define LY_BOLD_START_CHAR	'\005'
#endif

#define LY_BOLD_END_CHAR	'\006'
#define LY_SOFT_HYPHEN		((char)7)
#define LY_SOFT_NEWLINE		((char)8)

#ifdef EBCDIC
#define IsSpecialAttrChar(a)	(((a) > '\002') && ((a) <= '\011') && ((a)!='\t'))
#else
#define IsSpecialAttrChar(a)	(((a) > '\002') && ((a) <= '\010'))
#endif

#define IsNormalChar(a)		((a) != '\0' && !IsSpecialAttrChar(a))
@


1.1.3.1
log
@Import Lynx 2.8.5.dev16 again, this time via a vendor branch (tg),
to ease tracking of the upcoming dev17 (2.8.6-prerelease) update.
@
text
@d11 8
a27 28

/*
**  Lynx internal character representations.
*/
#define HT_NON_BREAK_SPACE      ((char)1)
#define HT_EN_SPACE             ((char)2)
#define LY_UNDERLINE_START_CHAR	'\003'
#define LY_UNDERLINE_END_CHAR	'\004'

/* Turn about is fair play ASCII platforms use EBCDIC tab;
   EBCDIC platforms use ASCII tab for LY_BOLD_START_CHAR.
*/
#ifdef EBCDIC
#define LY_BOLD_START_CHAR	'\011'
#else
#define LY_BOLD_START_CHAR	'\005'
#endif

#define LY_BOLD_END_CHAR	'\006'
#define LY_SOFT_HYPHEN		((char)7)
#define LY_SOFT_NEWLINE		((char)8)

#ifdef EBCDIC
#define IsSpecialAttrChar(a)  (((a) > '\002') && ((a) <= '\011') && ((a)!='\t'))
#else
#define IsSpecialAttrChar(a)  (((a) > '\002') && ((a) <= '\010'))
#endif

@


1.1.3.2
log
@Lynx 2.8.6dev.5 fresh from the ISC
@
text
@d22 2
a23 2
 *  Lynx internal character representations.
 */
d47 1
@


1.1.3.3
log
@Tom Dickey provides us with another high-quality development
snapshot of The Webbrowser; thanks for your good work!
@
text
@d43 1
a43 1
#define IsSpecialAttrChar(a)	(((a) > '\002') && ((a) <= '\011') && ((a)!='\t'))
d45 1
a45 1
#define IsSpecialAttrChar(a)	(((a) > '\002') && ((a) <= '\010'))
a46 2

#define IsNormalChar(a)		((a) != '\0' && !IsSpecialAttrChar(a))
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD source tree of short before 17:00 UTC today
@
text
@d11 8
a27 28

/*
**  Lynx internal character representations.
*/
#define HT_NON_BREAK_SPACE      ((char)1)
#define HT_EN_SPACE             ((char)2)
#define LY_UNDERLINE_START_CHAR	'\003'
#define LY_UNDERLINE_END_CHAR	'\004'

/* Turn about is fair play ASCII platforms use EBCDIC tab;
   EBCDIC platforms use ASCII tab for LY_BOLD_START_CHAR.
*/
#ifdef EBCDIC
#define LY_BOLD_START_CHAR	'\011'
#else
#define LY_BOLD_START_CHAR	'\005'
#endif

#define LY_BOLD_END_CHAR	'\006'
#define LY_SOFT_HYPHEN		((char)7)
#define LY_SOFT_NEWLINE		((char)8)

#ifdef EBCDIC
#define IsSpecialAttrChar(a)  (((a) > '\002') && ((a) <= '\011') && ((a)!='\t'))
#else
#define IsSpecialAttrChar(a)  (((a) > '\002') && ((a) <= '\010'))
#endif

@


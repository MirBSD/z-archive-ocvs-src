head	1.6;
access;
symbols
	lynx-2_8_6dev10:1.1.2.1
	FSF:1.1.2
	tg-mergetmp-mirosx-1:1.5
	tg-mergefixes-1-branch:1.5.0.8
	tg-mergefixes-1-base:1.5
	MIROS_X:1.5.0.6
	MIROS_X_BASE:1.5
	MIRBSD_XP_MIRPPC:1.5.0.4
	lynx-2_8_6dev_7b:1.1.3.3
	lynx-2_8_6dev_6:1.1.3.3
	MIRBSD_XP_SPARC_BASE:1.5
	MIRBSD_XP_SPARC:1.5.0.2
	lynx-2_8_6dev_5-iz2:1.1.3.3
	lynx-2_8_6dev_5:1.1.3.3
	cvs-200406091940:1.1.1.2
	MIRBSD_7quater:1.3
	cvs-200405160640:1.1.1.2
	lynx-2_8_6dev2:1.1.3.2
	lynx-2_8_5:1.1.3.1
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	lynx_2-8-5_dev17d:1.1.3.1
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.3.0.6
	MIRBSD_7:1.3.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.3
	MIRBSD_7_DEV:1.3.0.2
	cvs-200310020700:1.1.1.2
	lynx_2-8-5_dev16c:1.1.3.1
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	lynx_2-8-5_dev16:1.1.3.1
	tg:1.1.3
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	VENDOR_LYNX_285dev16:1.3
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	cvs-200305071630:1.1.1.2
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2005.01.03.00.45.51;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2004.07.15.18.16.43;	author tg;	state Stab;
branches;
next	1.4;

1.4
date	2004.04.30.16.32.29;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.07.18.58.04;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.07.18.49.11;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.42.14;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	2003.03.22.17.42.14;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.07.17.30.02;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2005.01.03.00.26.59;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2003.09.17.14.19.47;	author tg;	state Exp;
branches;
next	1.1.3.2;

1.1.3.2
date	2004.04.30.16.15.09;	author tg;	state Exp;
branches;
next	1.1.3.3;

1.1.3.3
date	2004.07.15.15.46.11;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@soft merge
@
text
@#ifndef __LYEXIT_H
/*
 *	Avoid include redundancy
 */
#define __LYEXIT_H

/*
 *	Copyright (c) 1994, University of Kansas, All Rights Reserved
 *
 *	Include File:	LYexit.h
 *	Purpose:	Provide an atexit function for libraries without such.
 *	Remarks/Portability/Dependencies/Restrictions:
 *		Include this header in every file that you have an exit or
 *			atexit statment.
 *	Revision History:
 *		06-15-94	created Lynx 2-3-1 Garrett Arch Blythe
 */

/*
 *	Required includes
 */
#ifdef _WINDOWS
#include <process.h>		/* declares exit() */
#endif

#ifndef HTUTILS_H
#include <HTUtils.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif
/*
 *	Constant defines
 */
#ifdef exit
#undef exit
#endif
#define exit(code) LYexit(code)
#define atexit LYatexit
#define ATEXITSIZE 50
/*
 *	Data structures
 *//*
   * Global variable declarations
 *//*
   * Macros
 *//*
   * Function declarations
 */ extern void outofmem(const char *fname, const char *func);
    extern void reset_signals(void);
    extern void exit_immediately(int status) GCC_NORETURN;
    extern void LYexit(int status) GCC_NORETURN;
    extern int LYatexit(void (*function) (void));

#ifdef __cplusplus
}
#endif
#endif				/* __LYEXIT_H */
@


1.5
log
@automatic merge of lynx-current
@
text
@d30 3
a38 1

a39 1

a41 1

d44 11
a54 1
 */
d56 4
a59 16
/*
 *	Global variable declarations
 */

/*
 *	Macros
 */

/*
 *	Function declarations
 */
extern void exit_immediately(int status) GCC_NORETURN;
extern void LYexit(int status) GCC_NORETURN;
extern int LYatexit(void (*function) (void));

#endif /* __LYEXIT_H */
@


1.4
log
@pretty much automatic merge of Lynx update
now, we live in an ANSI C world...
@
text
@d22 3
d35 1
a35 1
#endif /* _WINDOWS */
d57 3
a59 3
extern void exit_immediately (int status) GCC_NORETURN;
extern void LYexit (int status) GCC_NORETURN;
extern int LYatexit (void (*function)(void));
@


1.3
log
@un-tar the file
>>> lynx2.8.5dev.16.tar.gz
from http://lynx.isc.org/current/

the following files need -kb:
- LYStyle.c
- Xsystem.c
- WWW HTMIME.c
@
text
@d54 3
a56 3
extern void exit_immediately PARAMS((int status)) GCC_NORETURN;
extern void LYexit PARAMS((int status)) GCC_NORETURN;
extern int LYatexit PARAMS((void (*function)(void)));
@


1.2
log
@remove lynx 2.8.4 patchlevel 1d
@
text
@d30 1
a30 1
#ifdef _WINDOWS
d34 1
a34 1
#define exit LYexit
d37 1
a37 1
#define ATEXITSIZE 40
d54 3
a56 7
extern void exit_immediately PARAMS((int status));  /* in LYMain.c */
extern void LYexit PARAMS((int status));
#ifdef __STDC__
extern int LYatexit(void (*function)(void));
#else
extern int LYatexit();
#endif /* __STDC__ */
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Lynx 2.8.6dev.10 as imported into ncvs
@
text
@a21 3
#ifdef _WINDOWS
#include <process.h>		/* declares exit() */
#endif
a26 3
#ifdef __cplusplus
extern "C" {
#endif
d30 1
a30 1
#ifdef exit
d32 4
a35 2
#endif
#define exit(code) LYexit(code)
d37 2
a38 1
#define ATEXITSIZE 50
d41 1
a41 11
 *//*
   * Global variable declarations
 *//*
   * Macros
 *//*
   * Function declarations
 */ extern void outofmem(const char *fname, const char *func);
    extern void reset_signals(void);
    extern void exit_immediately(int status) GCC_NORETURN;
    extern void LYexit(int status) GCC_NORETURN;
    extern int LYatexit(void (*function) (void));
d43 20
a62 4
#ifdef __cplusplus
}
#endif
#endif				/* __LYEXIT_H */
@


1.1.3.1
log
@Import Lynx 2.8.5.dev16 again, this time via a vendor branch (tg),
to ease tracking of the upcoming dev17 (2.8.6-prerelease) update.
@
text
@d30 1
a30 1
#ifdef exit
d34 1
a34 1
#define exit(code) LYexit(code)
d37 1
a37 1
#define ATEXITSIZE 50
d54 7
a60 3
extern void exit_immediately PARAMS((int status)) GCC_NORETURN;
extern void LYexit PARAMS((int status)) GCC_NORETURN;
extern int LYatexit PARAMS((void (*function)(void)));
@


1.1.3.2
log
@A three-days old development version of Lynx, the best web browser ever,
which follows the OpenBSD paradigma to only provide high-quality, func-
tional snapshots.
@
text
@d54 3
a56 3
extern void exit_immediately (int status) GCC_NORETURN;
extern void LYexit (int status) GCC_NORETURN;
extern int LYatexit (void (*function)(void));
@


1.1.3.3
log
@Lynx 2.8.6dev.5 fresh from the ISC
@
text
@a21 3
#ifdef _WINDOWS
#include <process.h>		/* declares exit() */
#endif
d32 1
a32 1
#endif
d54 3
a56 3
extern void exit_immediately(int status) GCC_NORETURN;
extern void LYexit(int status) GCC_NORETURN;
extern int LYatexit(void (*function) (void));
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD source tree of short before 17:00 UTC today
@
text
@d54 7
a60 3
extern void exit_immediately PARAMS((int status)) GCC_NORETURN;
extern void LYexit PARAMS((int status)) GCC_NORETURN;
extern int LYatexit PARAMS((void (*function)(void)));
@


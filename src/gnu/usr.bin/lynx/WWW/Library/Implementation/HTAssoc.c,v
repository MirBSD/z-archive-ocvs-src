head	1.5;
access;
symbols
	lynx-2_8_6dev10:1.1.2.1
	FSF:1.1.2
	tg-mergetmp-mirosx-1:1.5
	tg-mergefixes-1-branch:1.5.0.8
	tg-mergefixes-1-base:1.5
	MIROS_X:1.5.0.6
	MIROS_X_BASE:1.5
	MIRBSD_XP_MIRPPC:1.5.0.4
	lynx-2_8_6dev_7b:1.1.3.3
	lynx-2_8_6dev_6:1.1.3.3
	MIRBSD_XP_SPARC_BASE:1.5
	MIRBSD_XP_SPARC:1.5.0.2
	lynx-2_8_6dev_5-iz2:1.1.3.3
	lynx-2_8_6dev_5:1.1.3.3
	cvs-200406091940:1.1.1.2
	MIRBSD_7quater:1.3
	cvs-200405160640:1.1.1.2
	lynx-2_8_6dev2:1.1.3.2
	lynx-2_8_5:1.1.3.1
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	lynx_2-8-5_dev17d:1.1.3.1
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.3.0.6
	MIRBSD_7:1.3.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.3
	MIRBSD_7_DEV:1.3.0.2
	cvs-200310020700:1.1.1.2
	lynx_2-8-5_dev16c:1.1.3.1
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	lynx_2-8-5_dev16:1.1.3.1
	tg:1.1.3
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	VENDOR_LYNX_285dev16:1.3
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	cvs-200305071630:1.1.1.2
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.07.15.18.16.31;	author tg;	state Stab;
branches;
next	1.4;

1.4
date	2004.04.30.16.32.24;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.07.18.57.59;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.07.18.49.05;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.42.10;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	2003.03.22.17.42.10;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.07.17.29.53;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2005.01.03.00.26.09;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2003.09.17.14.19.49;	author tg;	state Exp;
branches;
next	1.1.3.2;

1.1.3.2
date	2004.04.30.16.15.11;	author tg;	state Exp;
branches;
next	1.1.3.3;

1.1.3.3
date	2004.07.15.15.46.51;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@automatic merge of lynx-current
@
text
@
/* MODULE							HTAssoc.c
 *	    ASSOCIATION LIST FOR STORING NAME-VALUE PAIRS.
 *	    NAMES NOT CASE SENSITIVE, AND ONLY COMMON LENGTH
 *	    IS CHECKED (allows abbreviations; well, length is
 *	    taken from lookup-up name, so if table contains
 *	    a shorter abbrev it is not found).
 * AUTHORS:
 *	AL	Ari Luotonen	luotonen@@dxcern.cern.ch
 *
 * HISTORY:
 *
 *
 * BUGS:
 *
 *
 */

#include <HTUtils.h>

#include <HTAssoc.h>

#include <LYLeaks.h>

HTAssocList *HTAssocList_new(void)
{
    return HTList_new();
}

void HTAssocList_delete(HTAssocList *alist)
{
    if (alist) {
	HTAssocList *cur = alist;
	HTAssoc *assoc;

	while (NULL != (assoc = (HTAssoc *) HTList_nextObject(cur))) {
	    FREE(assoc->name);
	    FREE(assoc->value);
	    FREE(assoc);
	}
	HTList_delete(alist);
	alist = NULL;
    }
}

void HTAssocList_add(HTAssocList *alist,
		     const char *name,
		     const char *value)
{
    HTAssoc *assoc;

    if (alist) {
	if (!(assoc = (HTAssoc *) malloc(sizeof(HTAssoc))))
	      outofmem(__FILE__, "HTAssoc_add");

	assoc->name = NULL;
	assoc->value = NULL;

	if (name)
	    StrAllocCopy(assoc->name, name);
	if (value)
	    StrAllocCopy(assoc->value, value);
	HTList_addObject(alist, (void *) assoc);
    } else {
	CTRACE((tfp, "HTAssoc_add: ERROR: assoc list NULL!!\n"));
    }
}

char *HTAssocList_lookup(HTAssocList *alist,
			 const char *name)
{
    HTAssocList *cur = alist;
    HTAssoc *assoc;

    while (NULL != (assoc = (HTAssoc *) HTList_nextObject(cur))) {
	if (!strncasecomp(assoc->name, name, strlen(name)))
	    return assoc->value;
    }
    return NULL;
}
@


1.4
log
@pretty much automatic merge of Lynx update
now, we live in an ANSI C world...
@
text
@d3 15
a17 15
**	    ASSOCIATION LIST FOR STORING NAME-VALUE PAIRS.
**	    NAMES NOT CASE SENSITIVE, AND ONLY COMMON LENGTH
**	    IS CHECKED (allows abbreviations; well, length is
**	    taken from lookup-up name, so if table contains
**	    a shorter abbrev it is not found).
** AUTHORS:
**	AL	Ari Luotonen	luotonen@@dxcern.cern.ch
**
** HISTORY:
**
**
** BUGS:
**
**
*/
d25 1
a25 1
HTAssocList *HTAssocList_new (void)
d30 1
a30 2

void HTAssocList_delete (HTAssocList * alist)
d35 2
a36 1
	while (NULL != (assoc = (HTAssoc*)HTList_nextObject(cur))) {
d46 3
a48 4

void HTAssocList_add (HTAssocList *	alist,
				  const char *		name,
				  const char *		value)
d53 3
a55 2
	if (!(assoc = (HTAssoc*)malloc(sizeof(HTAssoc))))
	    outofmem(__FILE__, "HTAssoc_add");
d63 1
a63 1
	HTList_addObject(alist, (void*)assoc);
d65 1
a65 1
        CTRACE((tfp, "HTAssoc_add: ERROR: assoc list NULL!!\n"));
d69 2
a70 3

char *HTAssocList_lookup (HTAssocList *	alist,
				      const char *	name)
d75 1
a75 1
    while (NULL != (assoc = (HTAssoc*)HTList_nextObject(cur))) {
a80 1

@


1.3
log
@un-tar the file
>>> lynx2.8.5dev.16.tar.gz
from http://lynx.isc.org/current/

the following files need -kb:
- LYStyle.c
- Xsystem.c
- WWW HTMIME.c
@
text
@d25 1
a25 1
PUBLIC HTAssocList *HTAssocList_new NOARGS
d31 1
a31 1
PUBLIC void HTAssocList_delete ARGS1(HTAssocList *, alist)
d47 3
a49 3
PUBLIC void HTAssocList_add ARGS3(HTAssocList *,	alist,
				  CONST char *,		name,
				  CONST char *,		value)
d70 2
a71 2
PUBLIC char *HTAssocList_lookup ARGS2(HTAssocList *,	alist,
				      CONST char *,	name)
@


1.2
log
@remove lynx 2.8.4 patchlevel 1d
@
text
@d65 1
a65 1
        CTRACE(tfp, "HTAssoc_add: ERROR: assoc list NULL!!\n");
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Lynx 2.8.6dev.10 as imported into ncvs
@
text
@d3 15
a17 15
 *	    ASSOCIATION LIST FOR STORING NAME-VALUE PAIRS.
 *	    NAMES NOT CASE SENSITIVE, AND ONLY COMMON LENGTH
 *	    IS CHECKED (allows abbreviations; well, length is
 *	    taken from lookup-up name, so if table contains
 *	    a shorter abbrev it is not found).
 * AUTHORS:
 *	AL	Ari Luotonen	luotonen@@dxcern.cern.ch
 *
 * HISTORY:
 *
 *
 * BUGS:
 *
 *
 */
d25 1
a25 1
HTAssocList *HTAssocList_new(void)
d30 2
a31 1
void HTAssocList_delete(HTAssocList *alist)
d36 1
a36 2

	while (NULL != (assoc = (HTAssoc *) HTList_nextObject(cur))) {
d46 4
a49 3
void HTAssocList_add(HTAssocList *alist,
		     const char *name,
		     const char *value)
d54 2
a55 3
	if (!(assoc = (HTAssoc *) malloc(sizeof(HTAssoc))))
	      outofmem(__FILE__, "HTAssoc_add");

d63 1
a63 1
	HTList_addObject(alist, (void *) assoc);
d65 1
a65 1
	CTRACE((tfp, "HTAssoc_add: ERROR: assoc list NULL!!\n"));
d69 3
a71 2
char *HTAssocList_lookup(HTAssocList *alist,
			 const char *name)
d76 1
a76 1
    while (NULL != (assoc = (HTAssoc *) HTList_nextObject(cur))) {
d82 1
@


1.1.3.1
log
@Import Lynx 2.8.5.dev16 again, this time via a vendor branch (tg),
to ease tracking of the upcoming dev17 (2.8.6-prerelease) update.
@
text
@d65 1
a65 1
        CTRACE((tfp, "HTAssoc_add: ERROR: assoc list NULL!!\n"));
@


1.1.3.2
log
@A three-days old development version of Lynx, the best web browser ever,
which follows the OpenBSD paradigma to only provide high-quality, func-
tional snapshots.
@
text
@d25 1
a25 1
HTAssocList *HTAssocList_new (void)
d31 1
a31 1
void HTAssocList_delete (HTAssocList * alist)
d47 3
a49 3
void HTAssocList_add (HTAssocList *	alist,
				  const char *		name,
				  const char *		value)
d70 2
a71 2
char *HTAssocList_lookup (HTAssocList *	alist,
				      const char *	name)
@


1.1.3.3
log
@Lynx 2.8.6dev.5 fresh from the ISC
@
text
@d3 15
a17 15
 *	    ASSOCIATION LIST FOR STORING NAME-VALUE PAIRS.
 *	    NAMES NOT CASE SENSITIVE, AND ONLY COMMON LENGTH
 *	    IS CHECKED (allows abbreviations; well, length is
 *	    taken from lookup-up name, so if table contains
 *	    a shorter abbrev it is not found).
 * AUTHORS:
 *	AL	Ari Luotonen	luotonen@@dxcern.cern.ch
 *
 * HISTORY:
 *
 *
 * BUGS:
 *
 *
 */
d25 1
a25 1
HTAssocList *HTAssocList_new(void)
d30 2
a31 1
void HTAssocList_delete(HTAssocList *alist)
d36 1
a36 2

	while (NULL != (assoc = (HTAssoc *) HTList_nextObject(cur))) {
d46 4
a49 3
void HTAssocList_add(HTAssocList *alist,
		     const char *name,
		     const char *value)
d54 2
a55 3
	if (!(assoc = (HTAssoc *) malloc(sizeof(HTAssoc))))
	      outofmem(__FILE__, "HTAssoc_add");

d63 1
a63 1
	HTList_addObject(alist, (void *) assoc);
d65 1
a65 1
	CTRACE((tfp, "HTAssoc_add: ERROR: assoc list NULL!!\n"));
d69 3
a71 2
char *HTAssocList_lookup(HTAssocList *alist,
			 const char *name)
d76 1
a76 1
    while (NULL != (assoc = (HTAssoc *) HTList_nextObject(cur))) {
d82 1
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD source tree of short before 17:00 UTC today
@
text
@d65 1
a65 1
        CTRACE((tfp, "HTAssoc_add: ERROR: assoc list NULL!!\n"));
@


head	1.6;
access;
symbols
	lynx-2_8_6dev10:1.1.2.1
	FSF:1.1.2
	tg-mergetmp-mirosx-1:1.5
	tg-mergefixes-1-branch:1.5.0.8
	tg-mergefixes-1-base:1.5
	MIROS_X:1.5.0.6
	MIROS_X_BASE:1.5
	MIRBSD_XP_MIRPPC:1.5.0.4
	lynx-2_8_6dev_7b:1.1.3.3
	lynx-2_8_6dev_6:1.1.3.3
	MIRBSD_XP_SPARC_BASE:1.5
	MIRBSD_XP_SPARC:1.5.0.2
	lynx-2_8_6dev_5-iz2:1.1.3.3
	lynx-2_8_6dev_5:1.1.3.3
	cvs-200406091940:1.1.1.1
	MIRBSD_7quater:1.3
	cvs-200405160640:1.1.1.1
	lynx-2_8_6dev2:1.1.3.2
	lynx-2_8_5:1.1.3.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	lynx_2-8-5_dev17d:1.1.3.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.3.0.6
	MIRBSD_7:1.3.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.3
	MIRBSD_7_DEV:1.3.0.2
	cvs-200310020700:1.1.1.1
	lynx_2-8-5_dev16c:1.1.3.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	lynx_2-8-5_dev16:1.1.3.1
	tg:1.1.3
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	VENDOR_LYNX_285dev16:1.3
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2005.01.03.00.45.47;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2004.07.15.18.16.34;	author tg;	state Stab;
branches;
next	1.4;

1.4
date	2004.04.30.16.32.26;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.07.18.58.00;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.07.18.49.06;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.42.10;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.2.1
	1.1.3.1;
next	;

1.1.1.1
date	2003.03.22.17.42.10;	author tg;	state Exp;
branches;
next	;

1.1.2.1
date	2005.01.03.00.26.26;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2003.09.17.14.19.48;	author tg;	state Exp;
branches;
next	1.1.3.2;

1.1.3.2
date	2004.04.30.16.15.10;	author tg;	state Exp;
branches;
next	1.1.3.3;

1.1.3.3
date	2004.07.15.15.46.22;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@soft merge
@
text
@/*                         LEXICAL ANALYSOR (MAINLY FOR CONFIG FILES)

 */

#ifndef HTLEX_H
#define HTLEX_H

#ifndef HTUTILS_H
#include <HTUtils.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif
    typedef enum {
	LEX_NONE,		/* Internally used      */
	LEX_EOF,		/* End of file          */
	LEX_REC_SEP,		/* Record separator     */
	LEX_FIELD_SEP,		/* Field separator      */
	LEX_ITEM_SEP,		/* List item separator  */
	LEX_OPEN_PAREN,		/* Group start tag      */
	LEX_CLOSE_PAREN,	/* Group end tag        */
	LEX_AT_SIGN,		/* Address qualifier    */
	LEX_ALPH_STR,		/* Alphanumeric string  */
	LEX_TMPL_STR		/* Template string      */
    } LexItem;

    extern char HTlex_buffer[];	/* Read lexical string          */
    extern int HTlex_line;	/* Line number in source file   */

/*

Get Next Lexical Item

   If returns LEX_ALPH_STR or LEX_TMPL_STR the string is in global buffer lex_buffer.

 */

    extern LexItem lex(FILE *fp);

/*

Push Back Latest Item

 */

    extern void unlex(LexItem lex_item);

/*

Get the Name for Lexical Item

 */

    extern const char *lex_verbose(LexItem lex_item);

/*

 */

#ifdef __cplusplus
}
#endif
#endif				/* not HTLEX_H */
@


1.5
log
@automatic merge of lynx-current
@
text
@d12 15
a26 12
typedef enum {
    LEX_NONE,			/* Internally used      */
    LEX_EOF,			/* End of file          */
    LEX_REC_SEP,		/* Record separator     */
    LEX_FIELD_SEP,		/* Field separator      */
    LEX_ITEM_SEP,		/* List item separator  */
    LEX_OPEN_PAREN,		/* Group start tag      */
    LEX_CLOSE_PAREN,		/* Group end tag        */
    LEX_AT_SIGN,		/* Address qualifier    */
    LEX_ALPH_STR,		/* Alphanumeric string  */
    LEX_TMPL_STR		/* Template string      */
} LexItem;
d28 2
a29 2
extern char HTlex_buffer[];	/* Read lexical string          */
extern int HTlex_line;		/* Line number in source file   */
d39 1
a39 1
extern LexItem lex(FILE *fp);
d47 1
a47 1
extern void unlex(LexItem lex_item);
d55 1
a55 1
extern char *lex_verbose(LexItem lex_item);
d61 4
a64 1
#endif /* not HTLEX_H */
@


1.4
log
@pretty much automatic merge of Lynx update
now, we live in an ANSI C world...
@
text
@d11 1
a11 1
 
d13 10
a22 10
    LEX_NONE,		/* Internally used      */
    LEX_EOF,		/* End of file          */
    LEX_REC_SEP,	/* Record separator     */
    LEX_FIELD_SEP,	/* Field separator      */
    LEX_ITEM_SEP,	/* List item separator  */
    LEX_OPEN_PAREN,	/* Group start tag      */
    LEX_CLOSE_PAREN,	/* Group end tag        */
    LEX_AT_SIGN,	/* Address qualifier    */
    LEX_ALPH_STR,	/* Alphanumeric string  */
    LEX_TMPL_STR	/* Template string      */
d36 2
a37 1
extern LexItem lex (FILE * fp);
d44 2
a45 1
extern void unlex (LexItem lex_item);
d52 2
a53 1
extern char *lex_verbose (LexItem lex_item);
@


1.3
log
@un-tar the file
>>> lynx2.8.5dev.16.tar.gz
from http://lynx.isc.org/current/

the following files need -kb:
- LYStyle.c
- Xsystem.c
- WWW HTMIME.c
@
text
@d36 1
a36 1
PUBLIC LexItem lex PARAMS((FILE * fp));
d43 1
a43 1
PUBLIC void unlex PARAMS((LexItem lex_item));
d50 1
a50 1
PUBLIC char *lex_verbose PARAMS((LexItem lex_item));
@


1.2
log
@remove lynx 2.8.4 patchlevel 1d
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Lynx 2.8.6dev.10 as imported into ncvs
@
text
@d11 13
d25 2
a26 18
#ifdef __cplusplus
extern "C" {
#endif
    typedef enum {
	LEX_NONE,		/* Internally used      */
	LEX_EOF,		/* End of file          */
	LEX_REC_SEP,		/* Record separator     */
	LEX_FIELD_SEP,		/* Field separator      */
	LEX_ITEM_SEP,		/* List item separator  */
	LEX_OPEN_PAREN,		/* Group start tag      */
	LEX_CLOSE_PAREN,	/* Group end tag        */
	LEX_AT_SIGN,		/* Address qualifier    */
	LEX_ALPH_STR,		/* Alphanumeric string  */
	LEX_TMPL_STR		/* Template string      */
    } LexItem;

    extern char HTlex_buffer[];	/* Read lexical string          */
    extern int HTlex_line;	/* Line number in source file   */
d36 1
a36 2
    extern LexItem lex(FILE *fp);

d43 1
a43 2
    extern void unlex(LexItem lex_item);

d50 1
a50 2
    extern const char *lex_verbose(LexItem lex_item);

d55 1
a55 4
#ifdef __cplusplus
}
#endif
#endif				/* not HTLEX_H */
@


1.1.3.1
log
@Import Lynx 2.8.5.dev16 again, this time via a vendor branch (tg),
to ease tracking of the upcoming dev17 (2.8.6-prerelease) update.
@
text
@@


1.1.3.2
log
@A three-days old development version of Lynx, the best web browser ever,
which follows the OpenBSD paradigma to only provide high-quality, func-
tional snapshots.
@
text
@d36 1
a36 1
extern LexItem lex (FILE * fp);
d43 1
a43 1
extern void unlex (LexItem lex_item);
d50 1
a50 1
extern char *lex_verbose (LexItem lex_item);
@


1.1.3.3
log
@Lynx 2.8.6dev.5 fresh from the ISC
@
text
@d11 1
a11 1

d13 10
a22 10
    LEX_NONE,			/* Internally used      */
    LEX_EOF,			/* End of file          */
    LEX_REC_SEP,		/* Record separator     */
    LEX_FIELD_SEP,		/* Field separator      */
    LEX_ITEM_SEP,		/* List item separator  */
    LEX_OPEN_PAREN,		/* Group start tag      */
    LEX_CLOSE_PAREN,		/* Group end tag        */
    LEX_AT_SIGN,		/* Address qualifier    */
    LEX_ALPH_STR,		/* Alphanumeric string  */
    LEX_TMPL_STR		/* Template string      */
d36 1
a36 2
extern LexItem lex(FILE *fp);

d43 1
a43 2
extern void unlex(LexItem lex_item);

d50 1
a50 2
extern char *lex_verbose(LexItem lex_item);

@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

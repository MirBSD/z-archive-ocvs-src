head	1.8;
access;
symbols;
locks; strict;
comment	@# @;


1.8
date	2004.08.09.20.14.26;	author tg;	state dead;
branches;
next	1.7;

1.7
date	2004.06.23.16.58.38;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2004.06.19.20.13.14;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2004.06.15.19.59.02;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.02.09.50.12;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.28.18.02.39;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.20.23.16.38;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.30.09.59.44;	author tg;	state Exp;
branches;
next	;


desc
@@


1.8
log
@remove Objective-C and C++ runtimes from base install (basic
removal only, needs further fixes, and can be tweaked)
@
text
@# $MirBSD: src/gnu/gcc/libstdc++-v3/Makefile.bsd-wrapper1,v 1.7 2004/06/23 16:58:38 tg Exp $

.include <bsd.own.mk>

LIB_OBJDIR!=	echo ${.CURDIR} | sed 's|$(BSDSRCDIR)|$(BSDOBJDIR)|'
LIB_MYDIR!=	basename ${.CURDIR}

.if exists(${.CURDIR}/shlib_version)
.  include "${.CURDIR}/shlib_version"
LIB${LIB}_VERSION=${major}.${minor}
.endif

.if !defined(LIB)
all:
	@@echo "Must define LIB for this!"
	@@exit 1
.endif

SOURCE?=${LIB_OBJDIR}/../fpic/${LIB_MYDIR}/${SUBDNAME}/.libs/lib${LIB}.a
TARGET=	lib${LIB}.so.${LIB${LIB}_VERSION}

LDADD?=	-lm
DPADD?=	${DESTDIR}/usr/lib/libm.a

SUBDNAME?=lib${LIB}
EXO=	exobs.${LIB}
EXOD=	${LIB_OBJDIR}/${EXO}.dir

all: ${TARGET}

${TARGET}: ${EXO} ${DPADD}
	@@echo building shared ${LIB} library \(version ${LIB${LIB}_VERSION}\)
	@@rm -f ${TARGET}
	${CC} -shared ${PICFLAG} -o ${TARGET} \
	    $$(${LORDER} $$(<${EXO})|tsort -q) ${LDADD}

install:
	${INSTALL} ${INSTALL_COPY} -o ${LIBOWN} -g ${LIBGRP} -m ${LIBMODE} \
	    ${TARGET} ${DESTDIR}${LIBDIR}
	-rm -f ${DESTDIR}${LIBDIR}/lib${LIB}.la

install-fpic:
	${INSTALL} ${INSTALL_COPY} -o ${LIBOWN} -g ${LIBGRP} -m ${LIBMODE} \
	    ${SOURCE} ${DESTDIR}${LIBDIR}/lib${LIB}_pic.a
	-rm -f ${DESTDIR}${LIBDIR}/lib${LIB}.la

${EXO}: ${SOURCE}
	rm -rf ${EXOD}
	mkdir -p ${EXOD}
	cd ${EXOD} && for lib in ${.ALLSRC}; do ar x $$lib; done
	find ${EXOD} -type f >${EXO}

clean:
	rm -rf ${EXO} ${EXOD} ${TARGET}
@


1.7
log
@* lalala, ABI change...
  change the calling convention for the mjd2tm and tm2mjd functions,
  to be
  - similar between themselfes
  - equal between kernel and userland
  - not using malloc
* add TAI stuff to the kernel, including leap seconds(!) :)
  -> we can soon(TM) set the RTC to UTC, even when
     having the kernel on dru^H^H^HLS^H^HTAI
* some Makefile adjustments for
  - new library stuff
  - bsd.cfwrap.mk
  - simplifications
* start fixing the build (still static, tho I didn't intend that...)
* add missing shlib version for libsupc++
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/libstdc++-v3/Makefile.bsd-wrapper1,v 1.6 2004/06/19 20:13:14 tg Exp $
@


1.6
log
@* don't install libFOO_pic.a if we already install libFOO.so.X.Y
* minor misc. fixes
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/libstdc++-v3/Makefile.bsd-wrapper1,v 1.5 2004/06/15 19:59:02 tg Exp $
d5 1
a5 1
LIBC__OBJDIR!=	echo ${.CURDIR} | sed 's|$(BSDSRCDIR)|$(BSDOBJDIR)|'
d8 3
a10 6
.if !defined(NOPIC)
.  if exists(${.CURDIR}/shlib_version)
.    include "${.CURDIR}/shlib_version"
SHLIB_MAJOR=${major}
SHLIB_MINOR=${minor}
.  endif
d13 1
a13 3
.if defined(SHLIB_MAJOR)

.  if !defined(LIB)
d17 1
a17 1
.  endif
d19 2
a20 2
SOURCE?=${LIBC__OBJDIR}/../fpic/${LIB_MYDIR}/${SUBDNAME}/.libs/lib${LIB}.a
TARGET=	lib${LIB}.so.${SHLIB_MAJOR}.${SHLIB_MINOR}
d27 1
a27 1
EXOD=	${LIBC__OBJDIR}/${EXO}.dir
d32 1
a32 1
	@@echo building shared ${LIB} library \(version ${SHLIB_MAJOR}.${SHLIB_MINOR}\)
d34 1
a34 2
	${CC} -shared ${PICFLAG} \
	    -o ${TARGET} \
a54 2

.endif
@


1.5
log
@ok, no <bsd.gnuwrap.mk> - they are far too different
but the Makefile look and feel police cleans here

maybe we should still unify more of these
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/libstdc++-v3/Makefile.bsd-wrapper1,v 1.4 2004/03/02 09:50:12 tg Exp $
d46 1
d51 1
a51 1
	rm -f ${DESTDIR}${LIBDIR}/lib${LIB}.la
@


1.4
log
@fix path to libobjc, and also add libstdc++ to the prereq/includes system
fix weird GNU dependencies, while here
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper1,v 1.3 2004/01/28 18:02:39 tg Exp $
d9 2
a10 2
.if exists(${.CURDIR}/shlib_version)
.include "${.CURDIR}/shlib_version"
d13 1
a13 1
.endif
d18 1
a18 1
.if !defined(LIB)
d22 1
a22 1
.endif
@


1.3
log
@* no more /usr/lib/fpic
* no more /usr/lib/*.la (GNU libtool crap)
* update propolice EXCEPT protector.c to 3.3-7
  (latest protector.c still breaks bootstrap, this works)
* plant way for 32/64-bit mirbsd on x86
* fix major/minor revisions
* optimize printing of drive parametres
* minor fixes, opt., whitespace cleanup
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper1,v 1.2 2004/01/20 23:16:38 tg Exp $
d5 2
a6 1
LIBC__OBJDIR!=echo ${.CURDIR} | sed 's|$(BSDSRCDIR)|$(BSDOBJDIR)|'
d24 2
a25 2
SOURCE?=${LIBC__OBJDIR}/../fpic/libstdc++-v3/${SUBDNAME}/.libs/lib${LIB}.a
TARGET=lib${LIB}.so.${SHLIB_MAJOR}.${SHLIB_MINOR}
@


1.2
log
@In order to prevent run-time warnings from ld.so,
which complains if a weak symbol isn't resolved,
 * don't use _Jv_RegisterClasses and __cxa_finalize in crtstuff.c
 * refer EH routines from a dummy file within libc,
   so it gets built in (saves us from a major bump,
   and from the need to install libgcc.so)

XXX wouldn't it be better to either add weak definitions,
XXX fix ld or fix ld.so? (but it works!)
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper1,v 1.1 2003/11/30 09:59:44 tg Exp $
d45 5
@


1.1
log
@* forgot one file
* nuke some annoying mtree warnings
* improve cdfs message and enable NOPRUNE use
* fix up INSTALL doc a little more
@
text
@d1 1
a1 1
# $MirBSD$
d23 1
a23 1
SOURCE=${LIBC__OBJDIR}/../fpic/libstdc++-v3/${SUBDNAME}/.libs/lib${LIB}.a
d26 2
a27 2
LDADD=	-lm
DPADD=	${DESTDIR}/usr/lib/libm.a
@


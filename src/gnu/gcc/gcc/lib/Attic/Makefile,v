head	1.8;
access;
symbols;
locks; strict;
comment	@# @;


1.8
date	2004.11.16.16.57.35;	author tg;	state dead;
branches;
next	1.7;

1.7
date	2004.11.14.00.13.11;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2004.11.13.20.17.18;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.27.17.10.53;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.13.19.56.21;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2004.08.13.16.37.30;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.13.14.47.47;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.13.04.36.24;	author tg;	state Exp;
branches;
next	;


desc
@@


1.8
log
@* optimise <bsd.cfwrap.mk>
* while there, start conversion of .ifndef NOMAN and similar stuff
  to .if !defined(NOMAN) || ${NOMAN:L} != "no" (to start migration
  from boolean on/off to yes/no valued variables)
* remove libgcc.so, with all consequences
@
text
@# $MirBSD: src/gnu/gcc/gcc/lib/Makefile,v 1.7 2004/11/14 00:13:11 tg Exp $

.include <bsd.own.mk>

SHLIB_VERSION?=	2.0
LIB=		gcc
LDADD=		-nodefaultlibs
SHLIB=		lib${LIB}.so.${SHLIB_VERSION}
GCCOBJDIR!=	readlink ${.OBJDIR} || ( cd ${.OBJDIR} && pwd )

all: ${SHLIB}

${SHLIB}: objs
	@@echo building shared ${LIB} library \(version ${SHLIB_VERSION}\)
	@@rm -f ${SHLIB}
	cd ${GCCOBJDIR}/../libgcc/fpic && \
	    ${CC} -shared ${PICFLAG} -o ${GCCOBJDIR}/${SHLIB} \
	    $$(${LORDER} $$(<${GCCOBJDIR}/objs) | tsort -q) ${LDADD}

objs: ${GCCOBJDIR}/../fpic/libgcc.a
	ar t ${GCCOBJDIR}/../fpic/libgcc.a >$@@

clean:
	-rm -f objs ${SHLIB}

cleandir: clean

depend:

install:
	${INSTALL} ${INSTALL_COPY} -o ${LIBOWN} -g ${LIBGRP} -m ${LIBMODE} \
	    ${SHLIB} ${DESTDIR}${LIBDIR}

.include <bsd.obj.mk>
@


1.7
log
@shlib flag day: bump _all_ majors, and MirOS to 0816
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/lib/Makefile,v 1.6 2004/11/13 20:17:18 tg Exp $
@


1.6
log
@${SHLIB_VERSION}, and stubs for the new sets
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/lib/Makefile,v 1.5 2004/09/27 17:10:53 tg Exp $
d5 1
a5 1
SHLIB_VERSION?=	1.0
@


1.5
log
@it's a bad idea to put the shlib versions into <bsd.own.mk>
not because it's bad per se, but because I think ppl would
forget to cd /usr/src/share/mk; sudo make install before
upgrading... :)
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/lib/Makefile,v 1.4 2004/08/13 19:56:21 tg Stab $
d5 1
a5 1
LIBgcc_VERSION?=	1.0
d8 1
a8 1
SHLIB=		lib${LIB}.so.${LIB${LIB}_VERSION}
d14 1
a14 1
	@@echo building shared ${LIB} library \(version ${LIB${LIB}_VERSION}\)
@


1.4
log
@no need to clean the libgcc objects if they aren't copied here any more
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/lib/Makefile,v 1.3 2004/08/13 16:37:30 tg Exp $
d5 1
@


1.3
log
@this solves the mystery... libgcc was linked against itself dynamically.
no wonder it didn't work out well.
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/lib/Makefile,v 1.2 2004/08/13 14:47:47 tg Exp $
a22 1
	-rm -f $$(<objs)
@


1.2
log
@looks like building a shared libgcc works again?
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/lib/Makefile,v 1.1 2004/08/13 04:36:24 tg Exp $
d6 1
d17 1
a17 1
	    $$(${LORDER} $$(<${GCCOBJDIR}/objs) | tsort -q)
@


1.1
log
@This is as far as I come now.
* rebuild base
* partial sync lists
* concatenate X11 lists, too
* add provision for building libgcc.so (commented out - it breaks)
@
text
@d1 1
a1 1
# $MirBSD$
d16 1
a16 1
	    $$(${LORDER} $$(tsort -q ${GCCOBJDIR}/objs))
@


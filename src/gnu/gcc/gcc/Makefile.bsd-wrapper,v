head	1.52;
access;
symbols
	tg-mergetmp-mirosx-1:1.52.2.1
	tg-mergefixes-1-branch:1.52.0.4
	tg-mergefixes-1-base:1.52
	MIROS_X:1.52.0.2
	MIROS_X_BASE:1.52;
locks; strict;
comment	@# @;


1.52
date	2004.11.30.16.47.00;	author tg;	state Exp;
branches
	1.52.2.1
	1.52.4.1;
next	1.51;

1.51
date	2004.11.16.16.57.35;	author tg;	state Exp;
branches;
next	1.50;

1.50
date	2004.11.13.02.28.35;	author tg;	state Exp;
branches;
next	1.49;

1.49
date	2004.08.15.20.41.56;	author tg;	state Stab;
branches;
next	1.48;

1.48
date	2004.08.13.15.57.25;	author tg;	state Exp;
branches;
next	1.47;

1.47
date	2004.08.13.14.47.46;	author tg;	state Exp;
branches;
next	1.46;

1.46
date	2004.08.13.04.52.49;	author tg;	state Exp;
branches;
next	1.45;

1.45
date	2004.08.13.04.36.23;	author tg;	state Exp;
branches;
next	1.44;

1.44
date	2004.08.10.00.03.27;	author tg;	state Exp;
branches;
next	1.43;

1.43
date	2004.08.10.00.00.20;	author tg;	state Exp;
branches;
next	1.42;

1.42
date	2004.08.09.20.14.20;	author tg;	state Exp;
branches;
next	1.41;

1.41
date	2004.08.01.11.04.13;	author tg;	state Exp;
branches;
next	1.40;

1.40
date	2004.07.15.19.48.07;	author tg;	state Exp;
branches;
next	1.39;

1.39
date	2004.07.13.19.42.21;	author tg;	state Exp;
branches;
next	1.38;

1.38
date	2004.07.03.20.41.51;	author tg;	state Exp;
branches;
next	1.37;

1.37
date	2004.07.01.21.54.35;	author tg;	state Exp;
branches;
next	1.36;

1.36
date	2004.06.23.16.58.36;	author tg;	state Exp;
branches;
next	1.35;

1.35
date	2004.06.19.20.13.12;	author tg;	state Exp;
branches;
next	1.34;

1.34
date	2004.06.15.19.59.00;	author tg;	state Exp;
branches;
next	1.33;

1.33
date	2004.06.14.00.25.43;	author tg;	state Exp;
branches;
next	1.32;

1.32
date	2004.05.02.16.37.16;	author tg;	state Exp;
branches;
next	1.31;

1.31
date	2004.04.29.20.10.52;	author tg;	state Exp;
branches;
next	1.30;

1.30
date	2004.04.19.23.18.58;	author tg;	state Exp;
branches;
next	1.29;

1.29
date	2004.03.21.14.53.41;	author tg;	state Exp;
branches;
next	1.28;

1.28
date	2004.03.09.21.10.42;	author tg;	state Exp;
branches;
next	1.27;

1.27
date	2004.03.08.10.14.51;	author tg;	state Exp;
branches;
next	1.26;

1.26
date	2004.03.02.09.18.46;	author tg;	state Exp;
branches;
next	1.25;

1.25
date	2004.03.02.08.19.47;	author tg;	state Exp;
branches;
next	1.24;

1.24
date	2004.02.29.01.19.47;	author tg;	state Exp;
branches;
next	1.23;

1.23
date	2004.02.28.22.49.24;	author tg;	state Exp;
branches;
next	1.22;

1.22
date	2004.01.29.21.32.28;	author tg;	state Exp;
branches;
next	1.21;

1.21
date	2004.01.28.20.42.42;	author tg;	state Exp;
branches;
next	1.20;

1.20
date	2004.01.28.18.02.36;	author tg;	state Exp;
branches;
next	1.19;

1.19
date	2004.01.24.02.59.31;	author tg;	state Exp;
branches;
next	1.18;

1.18
date	2004.01.20.23.36.44;	author tg;	state Exp;
branches;
next	1.17;

1.17
date	2004.01.20.23.16.36;	author tg;	state Exp;
branches;
next	1.16;

1.16
date	2004.01.20.21.25.11;	author tg;	state Exp;
branches;
next	1.15;

1.15
date	2004.01.20.20.29.34;	author tg;	state Exp;
branches;
next	1.14;

1.14
date	2004.01.19.16.23.35;	author tg;	state Exp;
branches;
next	1.13;

1.13
date	2004.01.18.15.21.52;	author tg;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.11.18.35.16;	author tg;	state Exp;
branches;
next	1.11;

1.11
date	2003.12.26.22.12.03;	author tg;	state Exp;
branches;
next	1.10;

1.10
date	2003.12.05.13.52.01;	author tg;	state Exp;
branches;
next	1.9;

1.9
date	2003.11.30.18.49.04;	author tg;	state Exp;
branches;
next	1.8;

1.8
date	2003.11.30.07.44.27;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.30.02.38.06;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2003.11.30.00.30.49;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2003.11.30.00.26.18;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2003.11.29.21.01.59;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.29.01.37.22;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.29.00.13.56;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.27.22.30.04;	author tg;	state Exp;
branches;
next	;

1.52.2.1
date	2004.12.28.17.09.28;	author tg;	state Exp;
branches;
next	1.52.2.2;

1.52.2.2
date	2004.12.29.00.11.23;	author tg;	state Exp;
branches;
next	;

1.52.4.1
date	2004.12.28.18.42.15;	author tg;	state Exp;
branches;
next	1.52.4.2;

1.52.4.2
date	2005.01.09.14.27.26;	author tg;	state Exp;
branches;
next	;


desc
@@


1.52
log
@remove NOPROFILE traces (we can't build profiled libs anyway)
switch NOMAN, NOLINT, NOPROG to yes/no logic (defaulting to yes if defined)
@
text
@# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.51 2004/11/16 16:57:35 tg Exp $

.include <bsd.own.mk>
.include "${GNUSYSTEM_AUX_DIR}/locations.mk"

GCCVERSION=	3.2.3
CPPFLAGS+=	-I${GNU_LIBIBERTY_INC} -DMIRBSD_NATIVE

# For now, Ada is still built.
all: gnatlib_and_tools

ALL_TARGET?=
CFWRAP_NO_CCOM=	defined
NOMAN=		yes

XARGS+=	CFLAGS_STAGE1="${COPTS} ${CPPFLAGS}" CC="${CC}" \
	CFLAGS_HOST="${COPTS} ${CPPFLAGS}" CPP="${CPP}" \
	CFLAGS_STAGE2="${COPTS} ${CPPFLAGS}" BISON=yacc \
	CPPFLAGS="${CPPFLAGS}" DESTDIR="${DESTDIR}" \
	GNUSYSTEM_AUX_DIR="${GNUSYSTEM_AUX_DIR}" build_infodir=. \
	INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
	LIBIBERTY_HDRS="${GNU_LIBIBERTY_INC}" LDFLAGS="${LDSTATIC}" \
	BUILD_LIBIBERTY="-liberty" LIBIBERTY="-liberty"

.if ${GCC3_EXT_TOOLCHAIN:L} == "yes"
XARGS+=	EXTRA_MULTILIB_PARTS="crtbegin.o crtend.o crtbeginS.o crtendS.o"
.endif

CFARGS+=--enable-languages=c,ada,proto,gcov --with-gnu-as --with-gnu-ld \
	--prefix=/usr --mandir='$${prefix}/share/man' --disable-cpp \
	--with-local-prefix=/usr --with-gxx-include-dir=/usr/include/gxx \
	--disable-libtool-lock --enable-sjlj-exceptions --disable-nls \
	--with-system-zlib --with-stabs ${CF_PIC}

CLEANFILES+=	.gdbinit config.cache config.log configargs.h \
		${.CURDIR}/c-parse.h ${.CURDIR}/tradcif.c target_path \
		${.CURDIR}/cscope.files ${.CURDIR}/cscope.out \
		${.CURDIR}/cscope.in.out ${.CURDIR}/cscope.po.out \
		print-rtl1.c ${.CURDIR}/y.tab.c ${.CURDIR}/y.tab.h \
		c++filt tradcif.c c-parse.c c-parse.y cp/parse.c cp/parse.h \
		ada/einfo.h ada/nmake.adb ada/nmake.ads ada/sinfo.h \
		ada/treeprs.ads gpc-run objc/objc-parse.y objc/objc-parse.c \
		p/doc/info/gpc.info p/doc/info/gpcs.info

all: gnatlib_and_tools

tconfig.h:	prereq
	cd ${FSFOBJDIR} && ${FSFMAKE} $@@

tree-check.h:	prereq
	cd ${FSFOBJDIR} && ${FSFMAKE} $@@

bootstrap:	prereq
	cd ${FSFOBJDIR} && ${FSFMAKE} $@@

gnatlib_and_tools:	do-build
	cd ${FSFOBJDIR} && ${FSFMAKE} $@@

all-quick:
	cd ${FSFOBJDIR} && ${FSFMAKE} ${ALL_TARGET}

INST_TARGET=	prefix=/usr tooldir=/tmp assertdir=/tmp bindir=/usr/bin \
		infodir=/usr/share/info NO_TARGET_GCC=true \
		INSTALL_TARGET='install-common $$(INSTALL_HEADERS) \
		$$(INSTALL_LIBGCC) lang.install-normal' install

pre-install:
	mkdir -p ${DESTDIR}/usr/lib/gcc-lib/${GCCTARGET}/${GCCVERSION}

post-install:
	chown -R ${BINOWN}:${BINGRP} \
	    ${DESTDIR}/usr/lib/gcc-lib/${GCCTARGET}/${GCCVERSION}
	chmod -R a+rX ${DESTDIR}/usr/lib/gcc-lib/${GCCTARGET}/${GCCVERSION}
	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m 755 cpp \
	   ${DESTDIR}/usr/libexec/cpp
	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m 755 xgcc \
	   ${DESTDIR}/usr/bin/gcc
.if ${GCC3_EXT_TOOLCHAIN:L} == "yes"
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m ${NONBINMODE} \
	    crtbegin.o crtend.o fpic/crtbeginS.o fpic/crtendS.o \
	    ${DESTDIR}/usr/lib
.endif

pre-clean:
	-rm -rf ada/bldtools

.PHONY: all-quick bootstrap gnatlib_and_tools

.include <bsd.cfwrap.mk>
FSFMAKE:=	ulimit -dS 245760 ; ${FSFMAKE}
@


1.52.4.1
log
@merge the first bunch of MirOS X (branch MIROS_X tag tg-mergetmp-mirosx-1) into mergefixes branch
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.52.2.1 2004/12/28 17:09:28 tg Exp $
d23 1
a23 2
	BUILD_LIBIBERTY="-liberty" LIBIBERTY="-liberty" \
	HOST_CC="${HOSTCC}"
d44 2
@


1.52.4.2
log
@fold MIROS_X branch
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.52.2.2 2004/12/29 00:11:23 tg Exp $
a26 1
.  if ${MACHINE} == "i386"
a27 3
.  elif ${MACHINE} == "macppc"
# config/rs6000/t-mirppc handles this
.  endif
a77 1
.  if ${MACHINE} == "i386"
d80 1
a80 7
	    ${DESTDIR}/usr/lib/
.  elif ${MACHINE} == "macppc"
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m ${NONBINMODE} \
	    crtbegin.o crtbeginS.o crtend.o crtendS.o \
	    crtsavres.o ncrti.o ncrtn.o \
	    ${DESTDIR}/usr/lib/
.  endif
@


1.52.2.1
log
@tg@@odem:/usr/cross/powerpc-ecce-mirbsd8 $ sudo find * | sort | sudo cpio -oC512 -Hustar | gzip -n9 >~/mirppc-bi
tg@@odem:/usr/cross/powerpc-ecce-mirbsd8 $ file usr/bin/gcc
usr/bin/gcc: ELF 32-bit MSB executable, PowerPC, version 1, for MirOS BSD, statically linked, stripped
-rw-r--r--  1 tg  tg  73963520 Jan -3 17:08 mirppc-bin.tgz

time to take over, bsiegert@@
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.52 2004/11/30 16:47:00 tg Exp $
d23 1
a23 2
	BUILD_LIBIBERTY="-liberty" LIBIBERTY="-liberty" \
	HOST_CC="${HOSTCC}"
d44 2
@


1.52.2.2
log
@I suppose bsiegert@@ wants the mirppc-specific crt*.o files installed,
not the i386-specific ones which don't even get build
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.52.2.1 2004/12/28 17:09:28 tg Exp $
a26 1
.  if ${MACHINE} == "i386"
a27 3
.  elif ${MACHINE} == "macppc"
# config/rs6000/t-mirppc handles this
.  endif
a77 1
.  if ${MACHINE} == "i386"
d80 1
a80 7
	    ${DESTDIR}/usr/lib/
.  elif ${MACHINE} == "macppc"
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m ${NONBINMODE} \
	    crtbegin.o crtbeginS.o crtend.o crtendS.o \
	    crtsavres.o ncrti.o ncrtn.o \
	    ${DESTDIR}/usr/lib/
.  endif
@


1.51
log
@* optimise <bsd.cfwrap.mk>
* while there, start conversion of .ifndef NOMAN and similar stuff
  to .if !defined(NOMAN) || ${NOMAN:L} != "no" (to start migration
  from boolean on/off to yes/no valued variables)
* remove libgcc.so, with all consequences
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.50 2004/11/13 02:28:35 tg Exp $
d14 1
a14 1
NOMAN=		defined
@


1.50
log
@handle gcc3.4 fallout
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.49 2004/08/15 20:41:56 tg Stab $
a11 7
.ifdef	NOPIC
CFARGS+=	--disable-shared
.else
CFARGS+=	--enable-shared
SUBDIR+=	lib
.endif

d33 1
a33 1
	--with-system-zlib --with-stabs
@


1.49
log
@another showstopper.

genattrtab can't malloc as much as it needs, because the default
datasize limit is 64 MiB. I'm usually working with ulimit -dS 81920,
that's why I didn't notice it, but when building in a newly installed
environment, it's a problem. I'm bumping to 240 MiB which works with
the default login classes, to have reserves for the future.
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.48 2004/08/13 15:57:25 tg Exp $
d40 1
a40 1
	--with-system-zlib --with-stabs --target=${GCCTARGET}
@


1.48
log
@don't touch directories we don't install, by chance
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.47 2004/08/13 14:47:46 tg Exp $
d97 1
@


1.47
log
@looks like building a shared libgcc works again?
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.46 2004/08/13 04:52:49 tg Exp $
d78 3
a80 2
	chown -R ${BINOWN}:${BINGRP} ${DESTDIR}/usr/lib/gcc-lib
	chmod -R a+rX ${DESTDIR}/usr/lib/gcc-lib
@


1.46
log
@no C++, Java(TM), Pascal, Objective C or Fortran 77 for a while
as discussed on the mailing list
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.44 2004/08/10 00:03:27 tg Exp $
d16 1
a16 1
#SUBDIR+=	lib
@


1.45
log
@This is as far as I come now.
* rebuild base
* partial sync lists
* concatenate X11 lists, too
* add provision for building libgcc.so (commented out - it breaks)
@
text
@d9 3
a18 33
.if ${NO_PASCAL:L} != "yes"
DIVE_PASCAL=1
.endif

USELANGS=c

.if defined(NO_NO_GLANGS) && ${NO_NO_GLANGS:L} == "yes"
NO_CXX=No
NO_GADA=No
NO_GOBJC=No
NO_PASCAL=No
NO_GJC=No
.endif

.if ${NO_CXX:L} != "yes" || ${NO_GJC:L} != "yes"
USELANGS:=${USELANGS},c++
.endif
.if ${NO_GADA:L} != "yes"
USELANGS:=${USELANGS},ada
.endif
.if ${NO_GOBJC:L} != "yes"
USELANGS:=${USELANGS},objc
.endif
.if ${NO_PASCAL:L} != "yes"
USELANGS:=${USELANGS},pascal
.endif
.if ${NO_GJC:L} != "yes"
USELANGS:=${USELANGS},java
.endif

CFST1=		${COPTS} ${CPPFLAGS}

LANGUAGES=	--enable-languages=${USELANGS},proto,gcov
d21 1
d23 5
a27 4
XARGS+=	CFLAGS_STAGE1="${CFST1}" CFLAGS_HOST="${CFST1}" \
	CFLAGS_STAGE2="${COPTS} ${CPPFLAGS}" \
	CPP="${CPP}" CPPFLAGS="${CPPFLAGS}" DESTDIR="${DESTDIR}" \
	GNUSYSTEM_AUX_DIR="${GNUSYSTEM_AUX_DIR}" BISON=yacc \
d29 2
a30 3
	LIBIBERTY_HDRS="${GNU_LIBIBERTY_INC}" CXX="${CXX}" \
	BUILD_LIBIBERTY="-liberty" LIBIBERTY="-liberty" CC="${CC}" \
	LDFLAGS="${LDSTATIC}" build_infodir=.
d36 5
a40 5
CFARGS+=${LANGUAGES} --with-gnu-as --with-gnu-ld --prefix=/usr \
	--mandir='$${prefix}/share/man' --disable-cpp --enable-static \
	--with-local-prefix=/usr --with-system-zlib --disable-nls \
	--with-stabs --with-gxx-include-dir=/usr/include/gxx \
	--disable-libtool-lock --enable-sjlj-exceptions --target=${GCCTARGET}
d52 1
a52 8
.ifdef	DIVE_PASCAL
MAN+=		gpc.1 gpc-run.1
.PATH:		${.CURDIR}/p/doc/en ${.CURDIR}/p/doc/generated
PMARGS=		-f Makefile.bsd-wrapper GCCVERSION=${GCCVERSION} \
		GCCTARGET=${GCCTARGET}
.else
NOMAN=		defined
.endif
d54 2
a55 1
all: do-build langlib ${MAN}
d57 2
a58 8
langlib:
.if ${NO_GADA:L} != "yes"
	cd ${FSFOBJDIR} && ${FSFMAKE} gnatlib_and_tools
.endif
.ifdef	DIVE_PASCAL
	cd ${.CURDIR}/gpcrts && ${MAKE} ${PMARGS} obj
	cd ${.CURDIR}/gpcrts && ${MAKE} ${PMARGS} all
.endif
d60 1
a60 1
tconfig.h:	prereq
d63 1
a63 1
tree-check.h:	prereq
a68 8
bootstrap:	prereq do-bootstrap langlib

do-bootstrap:
	cd ${FSFOBJDIR} && ${FSFMAKE} bootstrap

print-languages:
	@@echo LANGUAGES=${USELANGS}

a74 3
.ifdef	DIVE_PASCAL
	mkdir -p ${DESTDIR}/usr/lib/gcc-lib/${GCCTARGET}/${GCCVERSION}/units
.else
a75 1
.endif
a88 6
.ifdef	DIVE_PASCAL
.  ifndef NOMAN
	${MINSTALL} p/doc/info/gpc{,s}.info ${DESTDIR}/usr/share/info
.  endif
	cd ${.CURDIR}/gpcrts && ${MAKE} ${PMARGS} install
.endif
a91 6
.ifdef	DIVE_PASCAL
	cd ${.CURDIR}/gpcrts && ${MAKE} ${PMARGS} clean
.endif

cleandir: clean
	-rmdir p/doc/info p/doc *
d93 1
a93 1
.PHONY: langlib all-quick do-bootstrap bootstrap print-languages
@


1.44
log
@adjust CLEANFILES
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.43 2004/08/10 00:00:20 tg Exp $
d13 1
@


1.43
log
@tg@@odem:/tmp $ gcc --version
gcc (GCC) 3.2.3 (propolice; MirOS 07B9)
Copyright (C) 2002 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

>>> it seems to work with the new infrastructure, libiberty and whatnot

tg@@odem:/tmp $ as -V
GNU assembler version 2.14 (i386-ecce-mirbsd7) using BFD version 2.14 20030612
^C
tg@@odem:/tmp $ ld -V
GNU ld version 2.14 20030612
  Supported emulations:
   elf_i386_obsd

>>> but still with old binutils, oh my...
@
text
@d1 1
a1 1
# $MirBSD$
d150 3
@


1.42
log
@remove Objective-C and C++ runtimes from base install (basic
removal only, needs further fixes, and can be tweaked)
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.41 2004/08/01 11:04:13 tg Exp $
d4 1
d6 2
a7 8
CPPFLAGS+=	-I${BSDSRCDIR}/gnu/lib/include -DMIRBSD_NATIVE

GCC3_CONFOPTS+=	--with-gnu-as --with-gnu-ld --prefix=/usr \
		--mandir='$${prefix}/share/man' --disable-cpp \
		--with-local-prefix=/usr --with-system-zlib \
		--disable-shared --disable-nls --with-stabs \
		--with-gxx-include-dir=/usr/include/gxx \
		--disable-libtool-lock --enable-sjlj-exceptions
d10 1
a10 1
SHARED_OPT=	--disable-shared
d12 1
a12 1
SHARED_OPT=	--enable-shared
a14 11
GNUCFLAGS+=	CPP="${CPP}" CPPFLAGS="${CPPFLAGS}" DESTDIR="${DESTDIR}" \
		GNUSYSTEM_AUX_DIR="${GNUSYSTEM_AUX_DIR}" BISON=yacc \
		INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
		LIBIBERTY_DIR="${BSDSRCDIR}/gnu/lib/libiberty" CXX="${CXX}" \
		BUILD_LIBIBERTY="-liberty" LIBIBERTY="-liberty" CC="${CC}"

GCCARCH?=	${OStriplet}
GCCVERSION=	3.2.3

GCCOBJDIR!=	cd ${.OBJDIR} && pwd

d26 1
a26 1
#NO_GJC=No
d48 2
a49 1
MAKE_ALLTGT?=
d51 8
a58 4
GNUCFLAGS+=	CFLAGS_STAGE1="${CFST1}" CFLAGS_HOST="${CFST1}" \
		CFLAGS_STAGE2="${COPTS} ${CPPFLAGS}" SHELL="${SHELL}" \
		LDFLAGS="${LDSTATIC}" build_infodir=. CONFIG_SHELL="${SHELL}"
GCC3_CONFOPTS+=	${LANGUAGES} --enable-shared
d61 1
a61 1
GNUCFLAGS+=	EXTRA_MULTILIB_PARTS="crtbegin.o crtend.o crtbeginS.o crtendS.o"
d64 6
d83 2
d89 3
a91 6
all:	alltgt
.ifndef	NOPIC
	wd=$$(pwd); cd ${.CURDIR} && ${MAKE} \
	    -f ${.CURDIR}/Makefile.bsd-wrapper1 \
	    LIB=gcc SOURCE=$$wd/fpic/libgcc.a LDADD=-nostdlib
.endif
d93 1
a93 2
	( ulimit -d 131072; cd ${GCCOBJDIR} && \
	    ${MAKE} ${GNUCFLAGS} gnatlib_and_tools )
d96 2
a97 2
	cd ${.CURDIR}/gpcrts && ${MAKE} -f Makefile.bsd-wrapper obj
	cd ${.CURDIR}/gpcrts && ${MAKE} -f Makefile.bsd-wrapper all
a99 6
alltgt:	config.status
	( ulimit -d 131072; cd ${GCCOBJDIR} && \
	    ${MAKE} ${GNUCFLAGS} ${MAKE_ALLTGT} )

prereq:	config.status

d101 1
a101 1
	cd ${GCCOBJDIR} && ${MAKE} ${GNUCFLAGS} tconfig.h
d104 1
a104 1
	cd ${GCCOBJDIR} && ${MAKE} ${GNUCFLAGS} tree-check.h
d107 1
a107 1
	cd ${GCCOBJDIR} && ${MAKE} ${GNUCFLAGS} ${MAKE_ALLTGT}
d109 1
a109 1
.FORCE:	.IGNORE
d111 2
a112 4
config.status: Makefile.in configure c-parse.in
	cd ${GCCOBJDIR} && PATH="/bin:/usr/bin:/sbin:/usr/sbin" ${GNUCFLAGS} \
	    ${SHELL} ${.CURDIR}/configure ${GCC3_CONFOPTS} ${GCCARCH} \
	    && touch config.status
d117 13
a129 19
# XXX INSTALL_TARGET should be install-normal, more or less
# the only reason is not so is because our man handling is special
# (pre-formatted) and also because of cpp, that we install by hand
# elsewhere, until we get rid of that old `compatibility' script.

MAKE_INSTGT?=	INSTALL_TARGET='install-common $$(INSTALL_HEADERS) \
		$$(INSTALL_LIBGCC) lang.install-normal'

target_path: Makefile
	__target=`sed -n '/^target=/s/target=//p' Makefile`; \
	__version=`sed -n '/^gcc_version=/s/gcc_version=//p' Makefile`; \
	echo /usr/lib/gcc-lib/$$__target/$$__version >target_path

install: target_path maninstall
	mkdir -p ${DESTDIR}$$(<target_path)
	cd $(GCCOBJDIR) && \
	${MAKE} ${GNUCFLAGS} prefix=/usr tooldir=/tmp assertdir=/tmp \
	    infodir=/usr/share/info bindir=/usr/bin NO_TARGET_GCC=true \
	    $(MAKE_INSTGT) install
a140 5
.ifndef	NOPIC
	wd=$$(pwd); cd ${.CURDIR} && ${MAKE} \
	    -f ${.CURDIR}/Makefile.bsd-wrapper1 \
	    LIB=gcc SOURCE=$$wd/fpic/libgcc.a install
.endif
d145 1
a145 1
	cd ${.CURDIR}/gpcrts && ${MAKE} -f Makefile.bsd-wrapper install
d148 1
a148 8
clean:
	-@@if [ -e Makefile ]; then ${MAKE} distclean; fi
.ifndef	NOPIC
	wd=$$(pwd); cd ${.CURDIR} && ${MAKE} \
	    -f ${.CURDIR}/Makefile.bsd-wrapper1 \
	    LIB=gcc SOURCE=$$wd/fpic/libgcc.a clean
.endif
	-rm -f ${CLEANFILES}
d154 1
a154 2
depend:
	# Nothing here so far...
d156 1
a156 18
lint:
	# Nothing here so far...

tags:
	# Nothing here so far...

bootstrap:
	cd ${.CURDIR} && ${MAKE} -f Makefile.bsd-wrapper \
	    ${MFLAGS} MAKE_ALLTGT=bootstrap

.include <bsd.obj.mk>
.include <bsd.subdir.mk>

.ifdef	NOMAN
maninstall:
.else
.  include <bsd.man.mk>
.endif
@


1.41
log
@use setjmp/longjmp exception handling instead of voodoo unwinding
-> this maybe fixes the abort(3) problem of centericq, who knows ;)
bump level, and up version.c (including in tinyirc)
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.40 2004/07/15 19:48:07 tg Exp $
d4 24
a27 1
.include "../Makefile.inc"
d95 1
a95 1
	    -f ${.CURDIR}/../libstdc++-v3/Makefile.bsd-wrapper1 \
d164 1
a164 1
	    -f ${.CURDIR}/../libstdc++-v3/Makefile.bsd-wrapper1 \
d178 1
a178 1
	    -f ${.CURDIR}/../libstdc++-v3/Makefile.bsd-wrapper1 \
@


1.40
log
@F77 bites the dust (it's broken anyway)  <-- look, without s! :)
and gcc 3.6+ will have F95 or so...

<benz> jo, dann...
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.39 2004/07/13 19:42:21 tg Exp $
a37 6
.if ${USE_PGCC:L} == "yes"
C3XTO=		${C3OPTS} -Os -fno-align-functions -fno-strict-aliasing
USELANGS:=c
.else
C3XTO=		${COPTS}
.endif
d44 1
a44 1
		CFLAGS_STAGE2="${C3XTO} ${CPPFLAGS}" SHELL="${SHELL}" \
a129 1
.if ${HAS_GCC2:L} == "no"
a131 1
.endif
@


1.39
log
@better way to fix. sync lists.
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.38 2004/07/03 20:41:51 tg Exp $
a16 1
#NO_GF77=No
a26 3
.endif
.if ${NO_GF77:L} != "yes"
USELANGS:=${USELANGS},f77
@


1.38
log
@gcc should know that strftime can do "%+" in BSD...
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.37 2004/07/01 21:54:35 tg Exp $
d5 2
@


1.37
log
@fix kprintf format %b support; now it checks both arguments
correctly, and all after that. *sigh*
also fix \$SHELL support.
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.36 2004/06/23 16:58:36 tg Exp $
d155 1
d157 1
@


1.36
log
@* lalala, ABI change...
  change the calling convention for the mjd2tm and tm2mjd functions,
  to be
  - similar between themselfes
  - equal between kernel and userland
  - not using malloc
* add TAI stuff to the kernel, including leap seconds(!) :)
  -> we can soon(TM) set the RTC to UTC, even when
     having the kernel on dru^H^H^HLS^H^HTAI
* some Makefile adjustments for
  - new library stuff
  - bsd.cfwrap.mk
  - simplifications
* start fixing the build (still static, tho I didn't intend that...)
* add missing shlib version for libsupc++
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.35 2004/06/19 20:13:12 tg Exp $
d52 2
a53 2
		CFLAGS_STAGE2="${C3XTO} ${CPPFLAGS}" \
		LDFLAGS="${LDSTATIC}" build_infodir=.
@


1.35
log
@* don't install libFOO_pic.a if we already install libFOO.so.X.Y
* minor misc. fixes
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.34 2004/06/15 19:59:00 tg Exp $
d6 4
d12 9
d70 1
a70 1
.if ${NO_PASCAL:L} != "yes"
d87 1
a87 1
.if ${NO_PASCAL:L} != "yes"
d154 1
a154 1
.if ${NO_PASCAL:L} != "yes"
@


1.34
log
@ok, no <bsd.gnuwrap.mk> - they are far too different
but the Makefile look and feel police cleans here

maybe we should still unify more of these
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.33 2004/06/14 00:25:43 tg Exp $
d65 1
d69 1
d136 1
d140 1
d148 1
d152 1
@


1.33
log
@First (probably not working[1]) attempt at modernizing the framework:
* MANZ, MANPS, NOPROFILE die (always set to false, false, true)
* Fortran generating code for <bsd.prog.mk> dies (pascal to follow)
* GLOBAL_AUTOCONF_CACHE dies (birth of <bsd.gnuwrap.mk> to follow...)
* sanitize my head and rewrite certain pieces of certain Makefiles
* move most mk.conf functionality out of there, so a system
  without mk.conf works really well(TM)
* attempt at synching docs with reality

[1] First update *.mk, then remove old mk.conf and mk.conf.local,
    then install new mk.conf and adapt it to suit your needs.

Why don't the OpenBSD people modernize parts of this? The indenting
is really really bad in places, and MANSUBDIR was... well. I have
done it with 1/3 of the code now, and it works. Even better.

There will definitively follow more ;-)
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.32 2004/05/02 16:37:16 tg Exp $
d96 1
a96 1
	    /bin/sh ${.CURDIR}/configure ${GCC3_CONFOPTS} ${GCCARCH} \
d172 1
a172 1
. include <bsd.man.mk>
@


1.32
log
@* make use of capabilities (HAS_GCC2, HAS_GCC3) in
  - descending into gnu/gcc or gnu/egcs/gcc directory
  - distribution set lists
* fix gcc2 -femit-memmove
* document changes in manpages
* install cccp and gcc-local manpages from gnu/doc/
* install gcc3 /usr/libexec/cpp if HAS_GCC2=no
* fold gpcrts into gcc3 again, since utils are now external,
  and don't warn on installation any more
* fix calls to scripts
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.31 2004/04/29 20:10:52 tg Exp $
d27 1
a27 1
.if ${MKC_PGCC:L} == "yes"
a42 1
GCC3_EXT_TOOLCHAIN?=no
@


1.31
log
@warn on installing the pascal compiler, unit cause
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/Makefile.bsd-wrapper,v 1.30 2004/04/19 23:18:58 tg Exp $
d73 4
d124 1
a124 3
# pgcc or gcc? (it'll eventually die with gcc 3.4?)
# install it for now - egcs->cpp overwrites gcc3->cpp because
# it comes later in the build process (src/gnu/Makefile)
d127 1
d140 1
a140 2
	@@echo 'Remember to go to src/gnu/gcc/gpcrts, build it and do'
	@@echo 'a make unitinstall, because the tools won't build.'
@


1.30
log
@add latest openbsd diffs (minus rtl.h)
make actually build and work fine
add gcov, proto
own diffs
use OSname and OSrev
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.29 2004/03/21 14:53:41 tg Exp $
d137 2
@


1.29
log
@444 -> ${NONBINMODE}
555 -> ${BINMODE}

enlightenment by Miod Vallat, thanks
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.28 2004/03/09 21:10:42 tg Exp $
d35 1
a35 1
LANGUAGES=	--enable-languages=${USELANGS}
@


1.28
log
@* nuke obsolete files and parts of files
* enable pascal frontend
* enable CPIO naming convention:
  sv4cpio = .cpio
  sv4crc  = .cpio
  sv4cpio gzipped = .ngz (newc/gz)
  svrcrc  gzipped = .cgz (crc/gz)
* all packages are .cgz, all sets are .ngz
* add hooks for gjc frontend
* add stubbed out gpc and gjc rts hooks in src/gnu/gcc/Makefile
* enable java frontend (with almost no changes; this is what I
  call a _really_ nice langspec-subdir... amazing)
* bump patchlevel for these changes
* better document some changes
* matthieu@@openbsd.org assured me we need no X piclibs any more
* improve comments
* export whole libz to XFree86 .a modules
* correct usage of languages when bootstrapping gcc
* fix MKC_PGCC when USE_GCC3=no (since USE_GCC3 is a post-#7
  thing, and ports/lang/egcs is not available for -current)
* install man- and texinfopages for gpc

most of this stuff is tested. however, I *strongly* recommend
to not update, but rather wait for the next snapshot.

Now missing:
* pascal RTS
* a port for libgjc (I won't like it in base, due to the
  _heavy_ overhead (jar, ffi, boehm-gc*cough*, ...), but
  since the compiler is there, it should be easy)
* test pascal (c, cp, f, objc, and ada are fine already)
* test gcov? (proto is fine, all right)
* documentation improvements
* quality tests and improvements
* more ~/.etc
* get the damn cvs conflict script right ;)

Next projects:
* update binutils
* sync with openbsd
* rewrite large parts of build system
* write boot loader
* rewrite install system
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.27 2004/03/08 10:14:51 tg Exp $
d128 1
a128 1
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 \
@


1.27
log
@install gcov
fix, build and install protoize
amend mirbsd.h to save local labels, tho not with the desired effect
(nm /usr/lib/libdes.so.* | fgrep .L) on a #7 or obsd, and a -current
system, and compare. XXX someone help to fix?
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.26 2004/03/02 09:18:46 tg Exp $
d6 1
a6 1
USELANGS=c,proto
d8 1
a8 1
.if ${NO_CXX:L} != "yes"
d23 3
a25 3

LANGUAGES=	--enable-languages=${USELANGS}
MAKE_ALLTGT?=
d29 1
d35 3
d55 9
a63 1
		ada/treeprs.ads
d112 1
a112 1
install: target_path
d135 3
d139 1
a139 1
clean cleandir:
d147 3
d165 6
@


1.26
log
@welcome to the wonderful world of peace in MirOS,
Objective C and associated libraries/includes

thank you for being so nice to use standardized
make prereq / make includes mechanism

[x] test programme (hello world) runs
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.25 2004/03/02 08:19:47 tg Exp $
d6 1
a6 1
USELANGS=c
d109 4
a112 2
#	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m 755 cpp \
#	   ${DESTDIR}/usr/libexec/cpp
@


1.25
log
@languages default to on (<bsd.own.mk>), switch is done in /etc/mk.conf
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.24 2004/02/29 01:19:47 tg Exp $
d68 6
a75 3

tree-check.h: config.status
	cd ${GCCOBJDIR} && ${MAKE} ${GNUCFLAGS} tree-check.h
@


1.24
log
@so, OpenBSD is for baby mulching machines. boring.
MirOS BSD is now for nuclear warheads driven in Ada, too.

well, it bootstraps itself, and the propolice problem is
documented. for upgrading you will need a binary snapshot.
in any case, update /usr/share/mk/ first.
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.23 2004/02/28 22:49:24 tg Exp $
d11 1
a11 1
.if ${NO_GADA:L} == "no"
d14 1
a14 1
.if ${NO_GF77:L} == "no"
d17 1
a17 1
.if ${NO_GOBJC:L} == "no"
d20 1
a20 1
.if ${NO_PASCAL:L} == "no"
d57 1
a57 1
.if ${NO_GADA:L} == "no"
@


1.23
log
@                           To Raffzahn
             A better bath companion than CowboyNeal
                      At http://symlink.lu/

Enable building (bootstrapping, rather) the GNAT (Ada backend to GCC)
compiler. This is not meant to be invoked by a mere user; an update
will be issued shortly.
Btw: GNU make sucks die-hard!
@
text
@d1 1
a1 5
# $MirBSD: Makefile.bsd-wrapper,v 1.22 2004/01/29 21:32:28 tg Exp $

NO_CXX=yes
NO_GADA=no
GCEXTRA=-fno-stack-protector
a6 5
NO_CXX?=no
NO_GADA?=yes
NO_GF77?=yes
NO_GOBJC?=yes
NO_PASCAL?=yes
a36 2
GNUCFLAGS+=	GNATBIND="/root/gcc3/bin/i386-ecce-mirbsd7-gnatbind -C" \
		ADAC=/root/gcc3/bin/i386-ecce-mirbsd7-gcc
d49 3
a51 1
		c++filt tradcif.c c-parse.c c-parse.y cp/parse.c cp/parse.h
d53 1
a53 7
all:	config.status
# Ada bootstrap
	cp ${.CURDIR}/ada/{treeprs.ads,einfo.h,sinfo.h,nmake.adb,nmake.ads} \
	    ${GCCOBJDIR}/ada/
	touch ${GCCOBJDIR}/ada/{treeprs.ads,einfo.h,sinfo.h,nmake.adb,nmake.ads}
# End Ada bootstrap
	cd ${GCCOBJDIR} && ${MAKE} ${GNUCFLAGS} ${MAKE_ALLTGT}
d58 2
a59 1
	cd ${GCCOBJDIR} && ${MAKE} ${GNUCFLAGS} gnatlib_and_tools
d62 4
d125 1
@


1.22
log
@the first part of making a release (non-X)
* sync sets (for now)
* mention set sizes in INSTALL.i386
* install all files, but not more than wanted
* fix build time warnings
  (the mktemp in lpd is said to be safe)
* update docs a bit
* the eqn -> neqn move
* improved man page generation
* anoncvsbin removes tmp before making new symlink
* sendmail generated files are now in sendmail, and
  SKIPDIRS is checked before (asked for by Waldemar Brodkorb)
* more SKIPDIR checks, mostly for GNU stuff
@
text
@d1 5
a5 1
# $MirBSD: Makefile.bsd-wrapper,v 1.21 2004/01/28 20:42:42 tg Exp $
d46 2
d63 5
d72 3
@


1.21
log
@* use dkcsum data to increase randomness :)
* it seems to just have been a problem with libgcc.so,
  so un-do last commit wrt the comma in toplev.c
* use -nostdlib when linking libgcc.so
* compile fixes in kernel land
* nuke wt, it doesn't compile (poll changes, at least)
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.20 2004/01/28 18:02:36 tg Exp $
d42 1
a42 1
GCC3_CONFOPTS+=	${LANGUAGES}
@


1.20
log
@* no more /usr/lib/fpic
* no more /usr/lib/*.la (GNU libtool crap)
* update propolice EXCEPT protector.c to 3.3-7
  (latest protector.c still breaks bootstrap, this works)
* plant way for 32/64-bit mirbsd on x86
* fix major/minor revisions
* optimize printing of drive parametres
* minor fixes, opt., whitespace cleanup
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.19 2004/01/24 02:59:31 tg Exp $
d60 1
a60 1
	    LIB=gcc SOURCE=$$wd/fpic/libgcc.a
@


1.19
log
@enable libgcc.so - it's not a bad idea, since WineX works (sort of) now
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.18 2004/01/20 23:36:44 tg Exp $
d117 3
@


1.18
log
@since we now generate more files, we'll need to clean out more, too
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.17 2004/01/20 23:16:36 tg Exp $
d58 3
a60 5

## Builds libgcc.so - we don't want this
#	wd=$$(pwd); cd ${.CURDIR} && ${MAKE} \
#	    -f ${.CURDIR}/../libstdc++-v3/Makefile.bsd-wrapper1 \
#	    LIB=gcc SOURCE=$$wd/fpic/libgcc.a
d111 3
a113 5

## Installs libgcc.so - we don't want this
#	wd=$$(pwd); cd ${.CURDIR} && ${MAKE} \
#	    -f ${.CURDIR}/../libstdc++-v3/Makefile.bsd-wrapper1 \
#	    LIB=gcc SOURCE=$$wd/fpic/libgcc.a install
@


1.17
log
@In order to prevent run-time warnings from ld.so,
which complains if a weak symbol isn't resolved,
 * don't use _Jv_RegisterClasses and __cxa_finalize in crtstuff.c
 * refer EH routines from a dummy file within libc,
   so it gets built in (saves us from a major bump,
   and from the need to install libgcc.so)

XXX wouldn't it be better to either add weak definitions,
XXX fix ld or fix ld.so? (but it works!)
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.16 2004/01/20 21:25:11 tg Exp $
d54 1
a54 1
		c++filt tradcif.c
@


1.16
log
@apparently, it wasn't _that_ easy
but in the end, it's my victory
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.15 2004/01/20 20:29:34 tg Exp $
d59 5
d113 5
@


1.15
log
@apparently final cleanup
 * forgotten commit in etc/Makefile adjusting for path changes
 * cleanup in Pascal
 * move common parts for all gcc-suite into common file
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.14 2004/01/19 16:23:35 tg Exp $
d39 2
a40 2
GCC3FLAGS=	CFLAGS_STAGE1="${CFST1}" CFLAGS_HOST="${CFST1}" \
		CFLAGS_STAGE2="${C3XTO} ${CPPFLAGS}" ${GCC3_SHOPT} \
d46 1
a46 1
GCC3FLAGS+=	"EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o"
d57 1
a57 1
	cd ${GCCOBJDIR} && ${MAKE} ${GCC3FLAGS} ${MAKE_ALLTGT}
d62 1
a62 1
	cd ${GCCOBJDIR} && ${MAKE} ${GCC3FLAGS} ${MAKE_ALLTGT}
d65 1
a65 1
	cd ${GCCOBJDIR} && ${MAKE} ${GCC3FLAGS} tree-check.h
d70 1
a70 2
	cd ${GCCOBJDIR} && PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
	    CFLAGS="${CFLAGS} ${COPTS}" ${GCC3_SHOPT} \
d93 1
a93 1
	${MAKE} ${GCC3FLAGS} prefix=/usr tooldir=/tmp assertdir=/tmp \
@


1.14
log
@NO_CXX defaults to "no", not "yes" for hysterical raisins
(and compatibility with #7 mk.conf)
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.13 2004/01/18 15:21:52 tg Exp $
d4 1
a31 2
GCCOBJDIR!=echo ${.CURDIR} | sed 's|$(BSDSRCDIR)|$(BSDOBJDIR)|'

d39 4
a42 5
GNUCFLAGS=	CFLAGS_STAGE1="${CFST1}" CFLAGS_HOST="${CFST1}" \
		CFLAGS_STAGE2="${C3XTO} ${CPPFLAGS}" CC="${CC}" \
		GNUSYSTEM_AUX_DIR="${GNUSYSTEM_AUX_DIR}" CPP="${CPP}" \
		LIBIBERTY_DIR=${BSDSRCDIR}/gnu/lib/libiberty \
		BUILD_LIBIBERTY="-liberty" LIBIBERTY="-liberty"
d46 1
a46 1
GNUCFLAGS+=	"EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o"
a48 2
CPPFLAGS+=	-I${BSDSRCDIR}/gnu/lib/include -DMIRBSD_NATIVE

a55 2
GCCARCH=	${MACHINE_ARCH}-ecce-$$(uname|tr '[A-Z]' '[a-z]')$$(uname -r)

d57 1
a57 3
	cd $(GCCOBJDIR) && \
	${MAKE} ${GNUCFLAGS} LDFLAGS="${LDSTATIC}" build_infodir=. \
	    $(MAKE_ALLTGT)
d62 1
a62 3
	cd $(GCCOBJDIR) && \
	${MAKE} ${GNUCFLAGS} LDFLAGS="${LDSTATIC}" build_infodir=. \
	    $(MAKE_ALLTGT)
d65 1
a65 4
	cd $(GCCOBJDIR) && \
	${MAKE} ${GNUCFLAGS} LDFLAGS="${LDSTATIC}" build_infodir=. \
	    tree-check.h

d70 4
a73 12
	cd $(GCCOBJDIR) && \
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
	CC="${CC}" CPP="${CPP}" CFLAGS="${CFLAGS} ${COPTS}" \
	CPPFLAGS="${CPPFLAGS}" GNUSYSTEM_AUX_DIR="${GNUSYSTEM_AUX_DIR}" \
	LIBIBERTY_DIR=${BSDSRCDIR}/gnu/lib/libiberty BISON=yacc \
	INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
	/bin/sh ${.CURDIR}/configure --with-gnu-as --with-gnu-ld \
	    --prefix=/usr --mandir='$$(prefix)/share/man' --disable-cpp \
	    --with-local-prefix=/usr --with-system-zlib --disable-shared \
	    --with-gxx-include-dir=/usr/include/gxx ${LANGUAGES} \
	    --without-dwarf2 --with-stabs --disable-nls \
	    ${GCCARCH} && touch config.status
d94 3
a96 4
	${MAKE} ${GNUCFLAGS} prefix=/usr build_infodir=. \
	    INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
	    infodir=/usr/share/info tooldir=/tmp assertdir=/tmp \
	    $(MAKE_INSTGT) NO_TARGET_GCC=true bindir=/usr/bin install
@


1.13
log
@* in gcc3,
  - fix possible recursive circular make dependencies
  - fix bootstrapping with differing CFLAGS
* enable use of the gcc3 crt{begin,end}{,S}.o for i386
* bump patchlevel
* split out some of the perl and gcc3 stuff

survives make and make bootstrap MKC_PGCC=yes in gnu/gcc/gcc
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.12 2004/01/11 18:35:16 tg Exp $
d6 1
a6 1
NO_CXX?=yes
d12 1
a12 1
.if ${NO_CXX:L} == "no"
@


1.12
log
@since the gpc people (and others) state gcc 3.3 isn't production quality yet,
let's just play with gpc and the other funky stuff right now, even if that
means still no sparc-gcc3 in current.

also, NO_CXX and friends change from defined/undef'd to yes/no
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.11 2003/12/26 22:12:03 tg Exp $
d33 9
a41 2
GNUCFLAGS=	CFLAGS_STAGE1="$(CFLAGS) ${CPPFLAGS}" BISON=yacc \
		CFLAGS_STAGE2="$(C3OPTS) ${CPPFLAGS}" CC="${CC}" \
d46 5
d60 1
a60 1
GCCARCH=	${MACHINE_ARCH}-ecce-$$(uname|tr [A-Z] [a-z])$$(uname -r)
d64 4
a67 2
	${MAKE} ${GNUCFLAGS} LDFLAGS="${LDSTATIC}" \
		build_infodir=. $(MAKE_ALLTGT)
d71 2
a72 2
	${MAKE} ${GNUCFLAGS} LDFLAGS="${LDSTATIC}" \
		build_infodir=. $(MAKE_ALLTGT)
d76 2
a77 2
	${MAKE} ${GNUCFLAGS} LDFLAGS="${LDSTATIC}" \
		build_infodir=. tree-check.h
d126 5
@


1.11
log
@merge OpenBSD and MirOSify a bit (XXX revisit *lex.c)
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.10 2003/12/05 13:52:01 tg Exp $
d6 7
a12 1
.ifndef NO_CXX
d15 1
a15 1
.ifndef NO_GADA
d18 1
a18 1
.ifndef NO_GF77
d21 1
a21 1
.ifndef NO_GOBJC
d23 3
@


1.10
log
@To all MirOS users: I am your god.

(Translators note: this means, gcc 3 with propolice work^H^H^H^Hbuilds
 a C bootstrap without segfaulting, nothing more)

Done by using a propolice dated April 2003.
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.9 2003/11/30 18:49:04 tg Exp $
d39 1
a39 1
GCCARCH=	${MACHINE_ARCH}-ecce-mirbsd$$(uname -r)
@


1.9
log
@hm well
* build base/X with gcc 3.2.3
  -> surprise, the library majors shrink
  -> dont sync _that_
* nuke DRI (switch it off)
* hm. well. I think, except propolice I'm finished.
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.8 2003/11/30 07:44:27 tg Exp $
d36 2
a37 1
		print-rtl1.c ${.CURDIR}/y.tab.c ${.CURDIR}/y.tab.h
@


1.8
log
@* switch C++ on
* switch -O2 implying -fstrict-aliasing off
* nuke i386-pc-linux-gnu-c++ being installed
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.7 2003/11/30 02:38:06 tg Exp $
d66 3
a68 3
	    --prefix=/usr --mandir='$$(prefix)/share/man' \
	    --with-local-prefix=/usr --with-system-zlib \
	    ${LANGUAGES} --disable-cpp --disable-shared \
@


1.7
log
@* add "make bootstrap", recursively calling itself
* fix up -ffreestanding the right way (tested this time)
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.6 2003/11/30 00:30:49 tg Exp $
d3 17
a19 1
LANGUAGES=	--enable-languages=c
a21 2
.include <bsd.own.mk>

d45 5
a57 2
.include <bsd.own.mk>

d71 3
@


1.6
log
@* whitespace
* CLEANFILES
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.5 2003/11/30 00:26:18 tg Exp $
d4 1
a4 1
MAKE_ALLTGT?=	# leave empty. alternatively: bootstrap.
d95 4
@


1.5
log
@use gcc 3.2.3 (without propolice)

pgcc is still the system compiler
there is still nothing else than C language
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.4 2003/11/29 21:01:59 tg Exp $
d3 1
a3 1
LANGUAGES=--enable-languages=c
d19 1
a19 1
		${.CURDIR}/c-parse.h ${.CURDIR}/tradcif.c \
@


1.4
log
@it compiles trough - but that's nothing to be proud of
- the install process is broken^2
  it compiles the whole thing again
- propolice causes make bootstrap to fail
- it's C-only (yet)
- I haven't compiled everything besides itself (via
  make bootstrap) yet
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.3 2003/11/29 01:37:22 tg Exp $
d4 1
d29 1
a29 1
		build_infodir=.
d60 3
d74 1
a74 3
	    INSTALL_TARGET='install-common $$(INSTALL_HEADERS) \
		$$(INSTALL_LIBGCC) lang.install-normal' \
	    NO_TARGET_GCC=true bindir=/usr/bin install
@


1.3
log
@Hm. It builds. Sort of, that is.

make CC="stage1/xgcc -Bstage1/ -B/usr/i386-ecce-mirbsd3.4/bin/"  STAGE_PREFIX=stage1/  CFLAGS="-O2"  LDFLAGS=""  WARN_CFLAGS="\$(GCC_WARN_CFLAGS)"  STRICT_WARN="-Wtraditional -pedantic -Wno-long-long"  libdir=/usr/lib  LANGUAGES="c gcov "  MAKEOVERRIDES=  OUTPUT_OPTION="-o \$@@"
stage1/xgcc -Bstage1/ -B/usr/i386-ecce-mirbsd3.4/bin/ -c -DIN_GCC    -O2 -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wtraditional -pedantic -Wno-long-long -O2  -I/usr/src/gnu/gcc/gcc -I/usr/src/gnu/lib/include -DMIRBSD_NATIVE -DHAVE_CONFIG_H -DGENERATOR_FILE  -I/usr/obj/gnu/gcc/gcc   -I. -I. -I/usr/src/gnu/gcc/gcc -I/usr/src/gnu/gcc/gcc/.  -I/usr/src/gnu/gcc/gcc/config -I/usr/src/gnu/lib/libiberty/../include /usr/src/gnu/gcc/gcc/gengenrtl.c -o gengenrtl.o
/usr/src/gnu/gcc/gcc/gengenrtl.c: In function ain':
/usr/src/gnu/gcc/gcc/gengenrtl.c:415: internal error: Segmentation fault
Please submit a full bug report,
with preprocessed source if appropriate.

TODO: fix that :-)
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.2 2003/11/29 00:13:56 tg Exp $
d9 3
a11 9
.if ${MKC_PGCC:L} == "yes"
USE_TCFLAGS=-O2
.else
USE_TCFLAGS=$(C3OPTS)
.endif

GNUCFLAGS=	TCFLAGS="$(USE_TCFLAGS) ${CPPFLAGS}" BISON=yacc \
		XCFLAGS="-O2 ${CPPFLAGS}" CC="${CC}" CPP="${CPP}" \
		GNUSYSTEM_AUX_DIR="${GNUSYSTEM_AUX_DIR}" \
d28 1
a28 1
		build_infodir=. bootstrap
d50 1
a50 1
	    ${LANGUAGES} --enable-cpp --disable-shared \
d65 1
d67 6
a72 9
	${MAKE} ${GNUCFLAGS} prefix=${DESTDIR}/usr \
		INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
		infodir=${DESTDIR}/usr/share/info \
		build_infodir=. \
		tooldir=/tmp assertdir=/tmp \
		INSTALL_TARGET='install-common $$(INSTALL_HEADERS) \
		     $$(INSTALL_LIBGCC) lang.install-normal' \
		NO_TARGET_GCC=true bindir=${DESTDIR}/usr/bin \
		install
d76 2
a77 2
	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m 755 cpp \
	   ${DESTDIR}/usr/libexec/cpp
@


1.2
log
@+ egcc diffs
+ mirbsd files
+ fixinc stuff from obsd
+ propolice
- cluons
@
text
@d1 1
a1 1
# $MirBSD: Makefile.bsd-wrapper,v 1.1 2003/10/27 22:30:04 tg Exp $
d15 4
a18 2
GNUCFLAGS=	TCFLAGS="$(USE_TCFLAGS)" \
		XCFLAGS="-O2" CC="${CC}" CPP="${CPP}" \
d21 2
d34 1
a34 1
		build_infodir=. bootstrap doc
d50 2
a59 5
.ifdef NOMAN
maninstall:
	@@echo NOMAN is set
.endif

d70 1
a70 1
install:	maninstall target_path
d84 2
a85 2
#	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m 755 cpp \
#	   ${DESTDIR}/usr/libexec/cpp
a103 3
.ifndef NOMAN
.include <bsd.man.mk>
.endif
@


1.1
log
@add back the wrapper Makefiles in place
@
text
@d1 1
a1 1
# $MirBSD: TODO,v 1.10 2003/10/01 15:05:57 tg Exp $
d82 3
a84 2
	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m 755 cpp \
	   ${DESTDIR}/usr/libexec/cpp
d88 1
a88 1
clean cleandir: 
@


head	1.2;
access;
symbols
	gcc-3_2_3:1.1.2.1 FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2003.10.27.21.17.23;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.10.27.19.24.16;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.10.27.19.24.16;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@The MirOS project cannot contain non-free documentation,
just like it is with non-free software.

It has been decided on the debian-legal list that the GNU
Free Documentation License does not meet the DFSG (and OSD)
unless neither cover texts nor invariant sections are defined.
The MirOS project goals do not allow inclusion of such material
either, because the user is not allowed to modify or remove
parts of the documentation.

You can thank the Free Software Foundation USA that you got
a system C compiler without any documentation.
@
text
@@@c Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.
@@c This is part of the GCC manual.
@@c For copying conditions, see the file gcc.texi.

@@node Header Dirs
@@chapter Standard Header File Directories

@@code{GCC_INCLUDE_DIR} means the same thing for native and cross.  It is
where GNU CC stores its private include files, and also where GNU CC
stores the fixed include files.  A cross compiled GNU CC runs
@@code{fixincludes} on the header files in @@file{$(tooldir)/include}.
(If the cross compilation header files need to be fixed, they must be
installed before GNU CC is built.  If the cross compilation header files
are already suitable for ISO C and GNU CC, nothing special need be
done).

@@code{GPLUSPLUS_INCLUDE_DIR} means the same thing for native and cross.  It
is where @@code{g++} looks first for header files.  The C++ library
installs only target independent header files in that directory.

@@code{LOCAL_INCLUDE_DIR} is used only by native compilers.  GNU CC
doesn't install anything there.  It is normally
@@file{/usr/local/include}.  This is where local additions to a packaged
system should place header files.

@@code{CROSS_INCLUDE_DIR} is used only by cross compilers.  GNU CC
doesn't install anything there.

@@code{TOOL_INCLUDE_DIR} is used for both native and cross compilers.  It
is the place for other packages to install header files that GNU CC will
use.  For a cross-compiler, this is the equivalent of
@@file{/usr/include}.  When you build a cross-compiler,
@@code{fixincludes} processes any header files in this directory.
@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@tg@@odem:/home/tg $ bzip2 -dc /data/gcc-3.2.3.tar.bz2 | tar xf -
tg@@odem:/home/tg $ cd gcc-3.2.3/
tg@@odem:/home/tg/gcc-3.2.3 $ find . -name .cvsignore | xargs rm
tg@@odem:/home/tg/gcc-3.2.3 $ rm -rf libjava gcc/java
tg@@odem:/home/tg/gcc-3.2.3 $ rm -rf boehm-gc fastjar libffi libiberty zlib
tg@@odem:/home/tg/gcc-3.2.3 $ cvs -qz6 -d tg@@herc:/cvs import -I ! -I CVS -b 1.1.2 src/gnu/gcc FSF gcc-3_2_3

We'll try it again. Not gcc 3.3 this time.
@
text
@@

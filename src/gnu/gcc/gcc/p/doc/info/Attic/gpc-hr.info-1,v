head	1.2;
access;
symbols
	gpc-20030830:1.1.2.1 FSF:1.1.2;
locks; strict;
comment	@# @;


1.2
date	2004.01.11.18.16.16;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.01.11.18.01.06;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.01.11.18.01.06;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke some unused, redundant or generated files
@
text
@This is ../p/doc/info/gpc-hr.info, produced by makeinfo version 4.1
from gpc.texi.

INFO-DIR-SECTION GNU programski alati
START-INFO-DIR-ENTRY
* GPC: (gpc-hr).                GNU Pascal prevodilac (compiler).
END-INFO-DIR-ENTRY
INFO-DIR-SECTION Pojedini alati
START-INFO-DIR-ENTRY
* GPC: (gpc-hr)Pozivanje GPC-a. GNU Pascal prevodilac (compiler).
END-INFO-DIR-ENTRY

   Ova datoteka dokumentira GPC prevodilac (engl. compiler).

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

   Copyright (C) 1988-2003 Free Software Foundation, Inc.

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided also
that the sections entitled "GNU General Public License", "The GNU
Project", "The GNU Manifesto" and "Funding for free Software" are
included exactly as in the original, and provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that the sections entitled "GNU General Public
License", "The GNU Project", "The GNU Manifesto" and "Funding for Free
Software" and this permission notice, may be included in translations
approved by the Free Software Foundation instead of in the original
English.


File: gpc-hr.info,  Node: Top,  Next: Dobrodo¹li,  Up: (dir)

GNU Pascal
**********

   Ovaj priruènik dokumentira kako se pokreæe, instalira i odr¾ava GNU
Pascal Compiler (GPC), kao i njegove nove znaèajke i eventualne
nekompatibilnosti, te kako prijavljivati bugove.  Odgovara GPC-u
20030830 (GCC 2.8.1, 2.95.x or 3.2.1).

* Menu:

Uvod:

* Dobrodo¹li::        Dobrodo¹li na GNU Pascal ...
* Naglasci::          Neke od GPC-ovih interesantnih znaèajki.
* News::              Novosti - Nova svojstva GNU Pascala (engleski).
* FAQ::               Lista èesto postavljanih pitanja o GNU Pascalu.

Instalacija:

* Installation::      Instalacija - kako obaviti download, prevesti i
                      instalirati GNU Pascal (engleski).

Kori¹tenje GNU Pascala:

* Invoking GPC::      Pozivanje GPC-a (opcije komandne linije podr¾ane od GNU
                      Pascala).
* Programming::       Programerov vodiè u GPC (engleski).
* Borland Pascal::    Brzi vodiè za prelaz sa Borland Pascala na GNU Pascal.
* Reference::         Abecedni GPC jezièni referentni priruènik (engleski).
* Keywords::          Pascalove kljuène rijeèi i operatori podr¾ani u GPC-u.
* Support::           Gdje dobiti podr¹ku za GNU Pascal; kako prijaviti bug.

Razvoj:

* To Do::             GNU Pascalova "za napraviti" lista (engleski).
* Internals::         Interne strukture - kako dobiti vi¹e informacija o samom
                      GPC-ovom kodu (engleski).

Licence:

* Copying::           Kopiranje -- GNU General Public License -- licenca,
                      va¹a prava i obaveze kad koristite GPC (engl.).
* Library Copying::   Kopiranje biblioteka -- GNU Lesser General Public
                      License -- licenca, va¹a prava i obaveze kod
                      kori¹tenja pojedinih biblioteka (engl.).
* Demo Copying::      GPL uz iznimku -- va¹a prava i obaveze kod kori¹tenja
                      ili modifikacije demo programa.

Dodatak:

* Acknowledgments::   Suradnici na GNU Pascal projektu.
* Resursi::           resursi za kori¹tenje s GPC-om.
* GNU::               GNU projekt.
* Indeks::            Indeks koncepta i imena simbola (nedovr¹eno).

(Napomena: naslovi nekih poglavlja nisu prevedeni zbog unakrsnih referenci iz
           neprevedenih poglavlja priruènika i prema njima. Ponegdje u
           izborniku bi se mogao pojaviti problem oko `è' i sl. zbog buga
           u starijim verzijama - <= 4.0f - GNU `info' programa.)


File: gpc-hr.info,  Node: Dobrodo¹li,  Next: Naglasci,  Prev: Top,  Up: Top

Dobrodo¹li na GNU Pascal ...
****************************

   ...  slobodni 32/64-bitni Pascal prevodilac (engl. compiler) iz
kolekcije GNU prevodilaca (GNU CC ili GCC), koji kombinira Pascal
"front-end" s dokazanim GCC "back-end"-om za generiranje koda i
optimizaciju. Osim njega kolekcija trenutno ukljuèuje prevodioce za
Adu, C, C++, Objective C, Chill, FORTRAN, i Javu.  Za razliku od
konvertera koda kao ¹to je p2c, ovo je istinski prevodilac, ne samo
konverter (u drugi jezik, najèe¹æe C).

   Ova verzija GPC-a odgovara GCC verziji 2.8.1, 2.95.x or 3.2.1.

   Svrha GNU Pascal projekta je da proizvede jedan Pascal prevodilac
(zvan GNU Pascal ili GPC) koji

   * kombinira jasnoæu Pascala s moænim alatima pogodnim za
     programiranje iz realnog ¾ivota,

   * podr¾ava jednako Pascal standard i Extended Pascal standard
     standard kao definiran od ISO, ANSI i IEEE (ISO 7185:1990, ISO/IEC
     10206:1991, ANSI/IEEE 770X3.160-1989),

   * podr¾ava druge Pascal standarde (UCSD Pascal, Borland Pascal,
     dijelove Borland Delphija i Pascal-SC) toliko dok to slu¾i jasnoæi
     i korisnosti,

   * mo¾e biti distribuiran pod GNU licencnim uvjetima, i

   * mo¾e generirati kod i izvr¹avati se na svakom raèunalu za koje GNU
     C prevodilac mo¾e generirati kod i vrtiti se na njemu.

   Pascal je originalno dizajniran za uèenje. GNU Pascal donosi pogodan
naèin da se prijeðe na izazovne programerske zadatke bez uèenja potpuno
novog jezika.

   Trenutno izdanje implementira Standard Pascal (ISO 7185, razine 0 i
1), veæinu Extended Pascala (ISO 10206, te¾eæi potpunom ispunjavanju
standarda), visoko je kompatibilan sa Borland Pascalom (verzija 7.0),
te ima neka pogodnosti za kompatibilnost sa drugim prevodiocima (kao
¹to je VAX Pascal, Sun Pascal, Mac Pascal, Borland Delphi i Pascal-SC).

   Trenutno izdanje takoðer pru¾a mnogo korisnih GNU ekstenzija koje se
ne nalaze u ostalim Pascal prevodiocima, npr. da se olak¹a povezivanje
sa suèeljima u C i drugim jezicima na prenosiv naèin, zatim da se radi
sa datotekama, direktorijima, datumima i jo¹ toga, uglavnom bez
ovisnosti o operacijskom sustavu u podlozi.

   Ukljuèene jedinice pru¾aju podr¹ku za regularne izraze, cjelobrojnu
aritmetiku, racionalne i realne brojeve neogranièene velièine, za
internacionalizaciju, za meðuprocesnu komunikaciju, sa tzv.
message-digest i jo¹ mnoge dodatne znaèajke prevodioca.

   Ovaj priruènik sadr¾i

   * pregled nekih od GPC-ovih najinteresantnijih svojstava, vidi *Note
     Naglasci::,

   * listu novih svojstava od zadnjeg izdanja, vidi *Note News::,

   * GNU Pascal èesto postavljana pitanja, vidi *Note FAQ::,

   * instrukcije za instaliranje, vidi *Note Installation::,

   * QuickStart Guide - brzi vodiè za programere viène Turbo
     Pascal/Borland Pascal prevodiocima, vidi *Note Borland Pascal::,

   * listu opcija komandne linije za pozivanje prevodioca, vidi
     "Pozivanje GPC-a" (*Note Invoking GPC::),

   * Programerski vodiè u GPC, koji opisuje Pascal programski jezik
     opæenito i GPC specifiène aspekte. Vidi *Note Programming::,

   * abecednu referencu GPC jezika, vidi *Note Reference::,

   * listu kljuènih rijeèi i operatora podr¾anih od GNU Pascala, vidi
     Kljuène rijeèi *Note Keywords::,

   * informacije o tome kako prijavljivati bugove u GNU Pascalu i kako
     dobiti podr¹ku, vidi *Note Support::,

   * listu poznatih bugova i stvari za napraviti, takoðer listu
     ispravljenih bugova i nedavno implementiranih svojstava, see *Note
     To Do::,

   * neke informacije za one koji su zainteresirani kako GNU Pascal
     radi iznutra, see *Note Internals::,

   * listu ljudi koji su doprinijeli koja ka¾e tko je razvijao i tko
     odr¾ava GNU Pascal, vidi *Note Acknowledgments::,

   * GNU General Public License - GNU Opæu javnu licencu, koja vas
     informira o va¹im pravima i odgovornostima za kori¹tenja,
     modificiranja i distribucije GNU Pascala, vidi *Note Copying::,

   * ostale tekstove o Free Softwareu i GNU Projektu kojima se
     namjeravalo odgovoriti na pitanja kao "¹to je GNU?" koja bi sada
     mogli imati u umu, vidi *Note GNU::.

   Ako ste upoznati s programiranjem u Standard Pascalu (ISO 7185),
vjerojatno æete moæi jednostavno poèeti i prevesti svoje programe.
Takoðer, veæina ISO Extended Pascal standarda (ISO 10206) je ugraðena u
GNU Pascal. Extended Pascal svojstva koja jo¹ uvijek nedostaju iz GPC-a
su `qualified' module import, `protected' module export, skupovni
tipovi s promjenljivim granicama, inicijalizatori strukturiranih
vrijednosti (engl. structured value initializers) i izrazi kao donje
granice raspona (engl. subrange lower bounds).

   Ako ste Borland Pascal programer, vjerojatno biste trebali poèeti
èitati QuickStart vodiè od BP do GNU Pascala, vidi *Note Borland
Pascal::. Ako ste radoznali o novim moguænostima koje GPC nudi, mo¾ete
dobiti ideju iz pregleda GPC naglasaka (*note Naglasci::), i èitati
vi¹e detalja o njima u Programmer's Guide to GPC (*note Programming::)
i u abecednom GPC referentnom priruèniku (*note Reference::).

   I, molimo vas, razmislite takoðer kako biste doprinijeli GNU Pascal
projektu. Molimo podr¾ite na¹ rad doprinoseæi GNU Pascalu programskim
primjerima, prijavama bugova, dokumentiranjem, ali èak i vlastitim
pobolj¹anjima prevodioca.

   Sva registrirana imena kori¹tena u ovom priruèniku pripadaju njihovim
respektivnim vlasnicima.


File: gpc-hr.info,  Node: Naglasci,  Next: News,  Prev: Dobrodo¹li,  Up: Top

Neke od najinteresantnijih znaèajki GPC-a
*****************************************

   GNU Pascal prevodilac (GPC) je, kao ¹to ime govori, Pascal
prevodilac (engl.  compiler) iz GNU obitelji
(`http://www.gnu.org/software/gcc/'). Ovo znaèi:

   * GPC je 32/64-bitni prevodilac,

   * nema ogranièenja kao ¹to je 64 kB ili 640 kB limit poznat iz nekih
     operacijskih sustava - èak i na tim sustavima -,

   * radi na svim operacijskim sustavima podr¾anim od GNU C prevodioca,
     ukljuèujuæi

        - Linux (http://www.linux.org) na Intelu, Alphi, S390, i na svim
          ostalim podr¾anim tipovima hardvera,

        - BSD obitelj: FreeBSD (http://www.freebsd.org), NetBSD
          (http://www.netbsd.org), OpenBSD (http://www.openbsd.org),

        - DOS sa 32 bita, koristeæi DJGPP
          (http://www.delorie.com/djgpp/) ili EMX
          (http://www.leo.org/pub/comp/os/os2/leo/gnu/emx+gcc/index.html),

        - MS-Windows 9x/NT, koristeæi Cygwin (http://cygwin.com) ili
          mingw (http://www.mingw.org),

        - OS/2 sa EMX
          (http://www.leo.org/pub/comp/os/os2/leo/gnu/emx+gcc/index.html),

        - Mac OS X,

        - MIPS-SGI-IRIX,

        - Alpha-DEC-OSF,

        - Sparc-Sun-Solaris,

        - HP/UX,

     i druge (zabilje¹ka: runtime sistem podr¾ava samo ASCII bazirane
     sisteme; to ukljuèuje gotovo sve dana¹nje sustave, meðutim
     nekoliko IBM strojeva jo¹ uvijek koristi EBCDIC; na tima,
     prevodilac bi se mogao izvr¹avati, ali bi runtime podr¹ka trebala
     velike izmjene),

   * mo¾e slu¾iti kao nativni prevodilac ili prevodilac izmeðu sistema
     (engl. cross-compiler) - izmeðu svih podr¾anih sistema,

   * proizvodi visoko optimirani kod za sve te sisteme,

   * slobodan je softver Free Software
     (http://www.gnu.org/philosophy/free-sw.html) (Open-Source Software
     (http://www.opensource.org)) u skladu sa *GNU General Public
     License* (http://www.gnu.org/copyleft/gpl.html) licencom),

   * kompatibilan je sa ostalim GNU jezicima i alatima kao ¹to su GNU C
     i GNU debugger (ili, ako vi¹e volite, program za simbolièko
     ispravljanje pogre¹aka u ispravljanom programu).


   Prevodilac podr¾ava slijedeæe jeziène standarde i kvazi-standarde:

   * ISO 7185 Pascal (*note Resursi::),

   * veæinu dijelova ISO 10206 Extended Pascala,

   * Borland Pascal 7.0,

   * dijelove Borland Delphi, Mac Pascala i Pascal-SC (PXSC).

   Neki naglasci:

   * Iz Standard Pascala: Mnogi popularni Pascal prevodioci tvrde da
     pro¹iruju Standard Pascal, ali im nedostaju ove va¾ne znaèajke.

        - Polja kao konformni parametri - standardni i komforan naèin
          prosljeðivanja polja (ARRAY) varijabilne velièine procedurama
          i funkcijama.  [Example (conformantdemo.pas)]

        - Prosljeðivanje lokalnih procedura kao proceduralnih
          parametara - s punim pristupom svim varijablama "nadreðene"
          procedure.  [Example (iteratordemo.pas)]

        - Automatski datoteèni meðuspremnici (engl. file buffers) i
          standardne `Get' i `Put' procedure. Predviðajuæe èitanje
          (engl. read-ahead) bez privremenih varijabli. [Example
          (filebuf1demo.pas)] Ovo dozvoljava, na primjer, da se
          provjeri ulaz iz tekst datoteka prije èitanja bez konverzije
          kroz znakovne nizove (engl. strings). [Example
          (filebuf2demo.pas)]

        - Istinski pakirani zapisi (RECORD) i polja. Pakira 8 Booleovih
          varijabli u jedan bajt.  [Example (packdemo.pas)]

        - Interne datoteke. Ne morate se brinuti o kreiranju
          privremenih imena datoteka i njihovom brisanju kasnije.
          [Example (intfiledemo.pas)]

        - Globalni `goto'. (Da, `goto' ima svoju ulogu kada nije
          ogranièen na trenutni potprogram.) [Example (parserdemo.pas)]

        - Automatski postavlja diskriminantu varijabilnog zapisa
          (RECORD) u `New'.  [Example (variantdemo.pas)]

        - Skupovi (SET) proizvoljne velièine. [Example
          (bigsetsdemo.pas)]

   * Iz Extended Pascala:

        - Znakovni nizovi (strings) proizvoljne duljine.  [Example
          (stringschemademo.pas)]

        - `ReadStr' i `WriteStr'. Èitajte iz i pi¹ite u znakovne nizove
          sa punim komforom `ReadLn'/`WriteLn'.  [Example
          (rwstringdemo.pas)]

        - Rutine za predstavljanje datuma i vremena neovisne od sistema
          (prenosive).  [Example (datetimedemo.pas)]

        - Iteracija pomoæu èlanova skupa:
          `for Ch in ['A' .. 'Z', 'a' .. 'z'] do ...' [Example
          (bigsetsdemo.pas)]

        - Pro¹irene operacije nad skupovima (simetrièna diferencija,
          `Card')

        - Generalizirane `Succ' i `Pred' funkcije
          (`foo := Succ (bar, 5);').

        - Kompleksni brojevi. [Example (mandelbrot.pas)] [Example
          (parserdemo.pas)]

        - Operatori za potenciranje (`pow' i `**') za realne i
          kompleksne brojeve.

        - Inicijalizirane varijable. [Example (initvardemo.pas)]

        - Funkcije mogu vraæati vrijednost tipa zapis ili polje
          (Record, Array).

        - Varijable za imenovanu povratnu vrijednost u funkcijama.
          [Example (resultvardemo.pas)]

        - Moduli.

        - Ne-dekadski brojevi u bazama od 2 do 36: `baza#broj'.

        - `MinReal', `MaxReal', `EpsReal', `MaxChar' konstante.

        - Schemata - Pascalov naèin da se dobiju dinamièka polja bez
          nesta¹nih trikova [Example (schemademo.pas)]

        - Lokalne varijable mogu imati dinamièku velièinu.  [Example
          (dynamicarraydemo.pas)]

        - Pristup odsjeècima polja - pristupa se dijelovima polja kao
          manjem polju, èak i na lijevoj strani operacije dodjele
          vrijednosti (engl. assignment) [Example (arrayslicedemo.pas)]

   * Kompatibilan sa Borland Pascalom 7.0 s objektima (BP):

        - Podr¾ava jedinice (UNIT), objekte, ..., i èini èak i stvari
          kao `absolute' varijable prenosivima. [Example (absdemo.pas)]

        - Dolazi s prenosivim verzijama standardnih BP jedinica sa punim
          izvornim kodom.

        - Istinski mre¾no-transparentna CRT jedinica: mo¾ete izvr¹avati
          svoje CRT aplikacije lokalno ili dok ste prijavljeni udaljeno
          (remote login), bez potrebe za brigom o razlièitim tipovima
          terminala. Kompatibilna s BP jedinicom, ali s mnogim
          pro¹irenjima, kao npr. preklapajuæi prozori.  [Example
          (crtdemo.pas)]

        - Potpuno funkcionalna GUI (X11) verzija CRT (takoðer potpuno
          mre¾no transparentna).

        - `Random' funkcija koja mo¾e proizvesti iste sekvence
          pseudo-sluèajnih brojeva kao i ona u BP - ako vam je to
          potrebno umjesto mnogo jaèe elaboriranog inicijalnog
          algoritma.

        - Podr¾ava proceduralne varijable u stilu BP-a, jednako kao i
          procedure kao parametre iz Standard Pascala. [Example
          (procvardemo.pas)]

        - `Ports' jedinica dozvoljava pristup I/O portovima na
          sistemima gdje to ima smisla. [Example (portdemo.pas)]

        - Specijalne kompatibilnostne znaèajke za pomoæ u migraciji s
          BP-a na GPC, kao `GPC for BP' jedinica koja pru¾a neke od
          GPC-ovih znaèajki za BP, te neke rutine za pristup skupovima
          velikih memorijskih blokova na uniforman naèin pod GPC-om i
          BP-om (èak i u tzv. realnom modu).  [Example (bigmemdemo.pas)]

        - Dolazi sa BP-kompatibilnom `binobj' uslugom.  [Example
          (binobjdemo.pas)]

   * Iz Borland Delphija:

        - `abstract' tipovi objekata i metoda

        - `is' i `as' operatori za testiranje pripadnosti objekta tipu

        - komentari s `//'

        - `Setlength' procedura za znakovne nizove (string) èini
          nepotrebnim kori¹tenje trikova kao ¹to je pridodjeljivanje
          "nultom karakteru".

        - `Initialize' i `Finalize' za rukovanje varijablama na niskoj
          razini.

   * Iz Pascal-SC (PXSC):

        - Korisnièki redefinirani (preoptereæeni) operatori. Zbrajajte
          svoje vektore sa `+'.

   * Pa¾ljivo definirana GNU pro¹irenja poma¾u vam da uèinite svoje
     programe iz realnog ¾ivota prenosivima:

        - 64-bitni cjelobrojni tipovi sa i bez predznaka.

        - Specijalni tipovi garantiraju kompatibilnost sa drugim GNU
          jezicima kao ¹to je GNU C. Direktive kao `{$L foo.c}' èine
          jednostavnim odr¾avanje projekata pisanih u vi¹e jezika, npr.
          ukljuèivanje koda pisanog u drugim jezicima u Pascal programe
          [Primjer (Pascal dio) (c_gpc.pas)] [Primjer (C dio)
          (c_gpc_c.c)],

        - ili ukljuèivanje Pascal koda u programe pisane u drugim
          jezicima.  [Primjer (Pascal dio) (gpc_c_pas.pas)] [Primjer
          (Pascal jedinica) (gpc_c_unit.pas)] [Primjer (C dio)
          (gpc_c_c.c)]

        - Pro¹irenja kao `BitSizeOf' i `ConvertFromBigEndian' poma¾u
          rje¹avanju problema s razlièitim tipovima i unutra¹njim
          poretkom (engl. endianess - big endian, little endian).
          [Example (endiandemo.pas)]

        - Male sitnice kao ¹to su `DirSeparator', `PathSeparator',
          `GetTempDirectory' poma¾u vam da pi¹ete programe koji
          izgledaju i osjeæaju se "kod kuæe" na svim operativnim
          sistemima.

        - `PExecute' rutina dozvoljava izvoðenje 'child' procesa na
          prenosiv naèin koji u potpunosti iskori¹tava vi¹ezadaæne
          (engl. multitasking) okoline.  [Example (pexecutedemo.pas)]

        - GNU GetOpt rutine daju komforan pristup kratkim i dugim
          opcijama u komandnoj liniji u Unix-stilu sa i bez argumenata.
          [Example (getoptdemo.pas)]

        - Rutine kao `FSplit' ili `FSearch' ili `FExpand' znaju o
          specifiènostima raznih operativnih sistema.  [Example
          (fexpanddemo.pas)]

        - `FormatTime' funkcija pu¹ta vas da formatirate vrijednosti
          datuma i vremena, prema raznim pravilima formatiranja.
          [Example (formattimedemo.pas)]

   * Korisne i prenosive GNU standardne jedinice:

        - `Pipe' jedinica daje meðuprocesnu komunikaciju èak i pod
          obiènim DOS-om. [Example (pipedemo.pas)] [Demo proces za
          primjer (demoproc.pas)]

        - GNU multipreciznostna `GMP' jedinica omoguæava aritmetiku
          cijelih, realnih i racionalnih brojeva proizvoljne
          preciznosti.  [Primjer: faktorijele (factorial.pas)]
          [Primjer: Fibonaccijev niz (fibonacci.pas)] [Primjer:
          potenciranje (power.pas)] [Primjer: potenciranje realnih
          brojeva (realpower.pas)] [Primjer: pi (pi.pas)]

        - POSIX funkcije poput `ReadDir', `StatFS' ili `FileLock'
          pru¾aju efikasno, lako za kori¹tenje i prenosivo suèelje
          (engl. interface) prema operacijskom sustavu. [Example
          (readdirdemo.pas)] [Example (statfsdemo.pas)], [Example
          (filelockdemo.pas)]

        - `DosUnix' jedinica kompenzira neke nekompatibilnosti izmeðu
          dviju obitelji operacijskih sustava.  [Example
          (dosunixdemo.pas)]

        - `MD5' jedinica izraèunava MD5 sume poruka (engl. message
          digest), u skladu s RFC 1321. [Example (md5demo.pas)]

        - `FileUtils' jedinica pru¾a neke rutine za rukovanje
          datotekama i direktorijima na vi¹oj razini.  [Example
          (findfilesdemo.pas)]

        - `StringUtils' jedinica pru¾a neke rutine za rad sa znakovnim
          nizovima na vi¹oj razini. [Example (stringhashdemo.pas)]

        - `Intl' jedinica za internacionalizaciju.  [Example
          (gettextdemo.pas)] [Example (localedemo.pas)]

        - `Trap' jedinica za hvatanje gre¹aka u vremenu izvoðenja
          (runtime-errors) i njihovo obraðivanje unutar programa.
          [Example (trapdemo.pas)]

        -  A `TFDD' jedinica koja omoguæuje neke trikove s tekst
          datotekama, npr. "tee" datoteku koja prouzroèuje da se sve
          pisano u nju ispisuje u dvije druge datoteke. [Example
          (tfdddemo.pas)]

        - `HeapMon' jedinica koja poma¾e detektirati "curenje" memorije
          (engl. memory leaks) u va¹im programima.

   Demo programi spomenuti gore su raspolo¾ivi na WWW-u jednako kao i u
GPC distribucijama, binarnim i source.

   Nedostaci:

   * GNU simbolièki debugger (GDB) jo¹ ne razumije Pascal sintaksu i
     tipove; potrebno je koristiti C sintaksu kod ispravljanja programa
     GDB-om.

   * Sa GPC-om prevoðenje traje dulje nego s npr. Borland Pascalom.

   *Suradnici dobrodo¹li!*

   Sposobni, predani programeri su uvijek dobrodo¹li u GNU Pascal tim.
Ako ¾elite biti nezavisni od kompanija kojima morate plaæati za
prevodilac sa mnogo restriktivnijim uvjetima licenciranja koji se
izvr¹ava na _jednom_ operacijskom sustavu, budite pozvani da se
pridru¾ite razvojnom timu, *Note Acknowledgments::.


File: gpc-hr.info,  Node: News,  Next: FAQ,  Prev: Naglasci,  Up: Top

New Features of GNU Pascal.
***************************

   GPC's new or changed features since the last (non alpha/beta) GPC
release are listed here. Items without further description refer to new
routines, variables or options.

   Features implemented for compatibility to other compilers are marked
with, e.g., `(B)' for BP compatibility.

   A few old and obsolete features have been dropped or replaced by
cleaner, more flexible or otherwise more useful ones. This might lead
to minor problems with old code, but we suppose they're rare and easy
to overcome. They are marked with `(@@)'.

   * `CompilerAssert' (fjf904*.pas)

   * options `--[no]-assert' renamed to `--[no]-assertions' (necessary
     to avoid a conflict with GCC) (@@)

   * new options `--[no-]range-checking', also as short compiler
     directives `{$R+}'/`{$R-}' (default is on) (C, E, B, @@)

   * new options `--[no-]methods-always-virtual' (fjf903*.pas) (M)

   * new options `--[no-]pointer-arithmetic',
     `--[no-]cstrings-as-strings', `-W[no-]absolute'

   * `Integer2StringBase', `Integer2StringBaseExt'

   * new constants `NumericBaseDigits', `NumericBaseDigitsUpper'

   * allow assigning, passing by value and returning objects, with
     assignments of an object of derived type to one of a base type
     (chief35[ab].pas, fjf451*.pas, fjf696[ef].pas, fjf884*.pas), BP
     compatible except for a bug in the BP feature itself (see the
     comment in `p/test/fjf451h.pas') (B)

   * new options `-W[no-]object-assignment'

   * warn (except in `--borland-pascal') if a virtual method overrides
     a non-virtual one (chief52*.pas)

   * warn when an non-abstract object type has virtual methods, but no
     constructor (chief51*.pas)

   * `--maximum-field-alignment' does not apply to `packed' records

   * `ArcSin', `ArcCos'

   * trimming string relations as functions (`EQPad' etc.) (fjf873.pas)

   * new options `-W[no-]interface-file-name'

   * `SeekEOF' and `SeekEOLn' use `Input' implicitly when no file is
     given (fjf871.pas) (B)

   * tagging feature for `with' statements (tom6.pas)
     <200012022215.eB2MFD614424@@wsinpa16.win.tue.nl> (Sun Pascal)

   * new option `--sun-pascal'

   * field names and array indices in initalizers are recognized
     (waldek5*.pas) (options `-W[no-]field-name-problem' removed, @@)

   * object directives `published', `public' (both equivalent),
     `protected' (scope limited to object type and derived object
     types), `private' (scope limited to current unit/module)
     (fjf864*.pas) (options `-W[no-]object-directives' removed, @@)

   * the operator precedence and associativity of `+' and `-' is now as
     defined in EP by default (and as in BP with `--borland-pascal')
     <Pine.LNX.4.44.0210251249500.6181-100000@@duch.mimuw.edu.pl>
     (fjf863*.pas) (@@)

   * `Integer (16)' etc. changed to `Integer attribute (Size = 16)'
     (works for integer and Boolean types) (fjf861.pas) (@@)

   * types can have attributes (note: no preceding `;') (fjf860*.pas)

   * dynamic object methods (fjf859.pas) (B)

   * in `--borland-pascal' mode, `Assign' unconditionally
     (re-)initializes its file parameter (fjf858.pas) (B)

   * GPC doesn't use `gpm' files anymore (instead, each module has an
     implicit `MODULENAME-all.gpi' interface which is a regular `gpi'
     file)

   * make the program/module/unit finalizers non-public (`static' in C
     sense), omit them if easily possible

   * new options `-W[no-]parentheses' (fjf848*.pas)

   * non-`interface' modules with empty implementation part (pmod1.pas,
     fjf843.pas)

   * `maximum-field-alignment' and `[no-]field-widths' work as local
     compiler directives now (fjf842.pas)

   * dropped `{$debug-statement}' (should not be necessary anymore, now
     that debug info mostly works)

   * new options `--[no-]longjmp-all-nonlocal-labels'

   * object methods can have attributes (fjf826*.pas)

   * new attributes `iocritical' (fjf824*.pas), `ignorable'
     (fjf839*.pas) for routines

   * dropped computed `goto' (never worked for nonlocal `goto' into the
     main program, implementing it would be quite difficult, probably
     not worth it) (@@)

   * new type `AnyFile' for parameters and pointer targets (fjf821*.pas)

   * `TimeStamp' is now a packed record (E)

   * Mac Pascal specific features are supported according to the
     dialect options (M)

   * `--interface-only' does not require `-S' or `-c' anymore (and does
     not create an object file)

   * `initialization', `finalization' (D)

   * `TimeZone' in `TimeStamp' counts seconds _east_ of UTC now (not
     west, as before) (datetimedemo.pas) (@@)

   * `export FOO = all (...)' (fjf811*.pas)

   * new options `-W[no-]local-external' (implied by `-Wall')

   * type-casts are BP compatible now, in particular, value type-casts
     between ordinal and real or complex types don't work anymore (B)
     (@@)

   * all non-ISO-7185 keywords can be used as identifiers (with two
     small exceptions) (fjf440.pas)

   * `pack-struct' does not imply bit-level packing anymore (only
     explicit `packed' records and arrays do) (@@)

   * new options `--[no-]ignore-packed' (`--ignore-packed' is the
     default in BP mode) (fjf796*.pas) (B) (@@)

   * new option `--maximum-field-alignment=N'

   * new options `{$[no-]pack-struct}' as a compiler directive

   * `attribute' for routines doesn't imply `forward' anymore (so you
     don't have to declare routines twice in a program or
     implementation part when setting the linker name or some other
     attribute) (@@)

   * `static', `volatile' and `register' for variables and `inline' for
     routines are no prefix-directives anymore, but `attribute's (@@)

   * combining several dialect options (such as `--extended-pascal
     --borland-pascal') doesn't work anymore (what should this mean,
     anyway? Combine the features, but also the warnings from
     both!?!?!?) (@@)

   * `external' without `name' defaults to all-lowercase now (@@)

   * `c', `c_language' and `asmname' are deprecated (@@)

   * `external name 'foo'' (fjf780.pas), `external 'libname' name
     'foo'' (where `libname' is ignored) (B)

   * Mac Pascal directives `definec', `macro', `undefc', `ifc',
     `ifoptc', `elsec', `elifc', `endc', `errorc' (treated as
     equivalent to the corresponding existing ones) (M)

   * units without `implementation' part (M)

   * new options `--vax-pascal', `--mac-pascal'

   * attributes `const' for variables and `name' for variables,
     routines and modules; assembler names and module/unit file names
     can now be expressions (which must yield string constants)
     (fjf781*.pas, fjf809*.pas)

   * the utilities `gpidump' and `binobj' are installed with GPC (B)

   * new options `-W[no-]identifier-case',
     `-W[no-]identifier-case-local' (fjf751*.pas)

   * new compiler directive `$R foo', equivalent to `$L foo.resource'
     (B)

   * dropped `--[no-]borland-char-constants' (now simply coupled to
     dialect options) (@@)

   * test suite: support progress messages (`TEST_RUN_FLAGS=-p' from
     the Makefile; `-p' in testgpc); see
     `http://fjf.gnu.de/misc/progress-messages.tar.gz'

   * `=' and `<>' comparisons of structures (arrays, records, ...)
     except strings and sets are forbidden now (@@) (E)

   * irrelevant operands and arguments (e.g.: `foo in []'; `bar * []';
     `Im (baz)' if `baz' is of real type) are not necessarily evaluated
     anymore (which is allowed by the standard); instead, a warning is
     given if they have side-effects (@@)

   * accept only one program, unit, module interface or implementation
     or a module interface and the implementation of the same module in
     one file; new options `--[no-]ignore-garbage-after-dot'
     (fjf735*.pas) (@@)

   * new options `-W[no-]implicit-io' (fjf734*.pas)

   * new options `--enable-keyword', `--disable-keyword' (fjf733*.pas)

   * `CBoolean' (fjf727.pas)

   * dropped the usage of `GetMem' as a function with one parameter
     (only the BP compatible usage as a procedure with two parameters
     remains) (@@)

   * accessing the variable `FileMode' now requires using the `GPC'
     (or, for BP compatibility, the `System') unit (@@)

   * `DupHandle'

   * dropped the predefined dialect symbols `__CLASSIC_PASCAL__',
     `__STANDARD_PASCAL__', `__EXTENDED_PASCAL__', `__OBJECT_PASCAL__',
     `__UCSD_PASCAL__', `__BORLAND_PASCAL__', `__DELPHI__',
     `__PASCAL_SC__' and `__GNU_PASCAL__' (one can use `{$ifopt
     borland-pascal}' etc. instead) (@@)

   * `Succ', `Pred', `Inc', `Dec' for real numbers (fjf714*.pas)

   * use environment variables `GPC_UNIT_PATH', `GPC_OBJECT_PATH'

   * new options `-W[no-]float-equal'

   * new option `--ucsd-pascal'

   * dropped the syntax `type foo = procedure (Integer, Real)' (i.e.,
     without parameter names) (@@)

   * CRT: new argument `On' to `CRTSavePreviousScreen'

   * `SetUserID', `SetGroupID'

   * `HeapChecking'

   * new built-in procedure `Assert'; new options `--[no]-assert' (also
     `{$C+}', `{$C-}' for Delphi compatibility) (fjf665*.pas) (D)

   * `ProcessGroup'

   * StringUtils: `QuoteEnum'

   * `CurrentRoutineName' (fjf752.pas)

   * TFDD: new unit

   * gpc-run: new options `-e FILE' and `-E FILE' (redirect/append
     standard error)

   Have fun,

   The GNU Pascal Development Team


File: gpc-hr.info,  Node: FAQ,  Next: Installation,  Prev: News,  Up: Top

Èesto postavljana pitanja (FAQ) o GNU Pascalu.
**********************************************

Izdanje 0.9, kolovoz 2000
-------------------------

   Ovo je lista èesto postavljanih pitanje (FAQ) za GNU pascal. Ako vam
niti FAQ niti dokumentacija ne poma¾u, detektirali ste *bug* u
dokumentaciji koji biste trebali prijaviti, *Note Mailing List::.
Molimo vas da zaista to i uèinite, kako bismo mogli pobolj¹ati
dokumentaciju.

* Menu:

* GNU Pascal::               GNU Pascal
* Instaliranje GPC-a::       Instaliranje GPC-a
* GPC na DJGPP-u::           GNU Pascal na DJGPP (MS-DOS) platformi
* Znakovni nizovi u GPC-u::  Znakovni nizovi (strings)
* Tra¾enje pomoæi::          Tra¾enje pomoæi
* FAQ "Razno"::              Razno


File: gpc-hr.info,  Node: GNU Pascal,  Next: Instaliranje GPC-a,  Up: FAQ

GNU Pascal
==========

* Menu:

* ©to i za¹to::                        ©to i za¹to?
* Trenutna verzija::                   Koja je trenutna verzija?
* Kompatibilnost sa Turbo Pascalom::   Da li je kompatibilan s
                                         Turbo Pascal-om (R)?
* Podr¾ane platforme::                 Na kojim platformama GNU Pascal radi?


File: gpc-hr.info,  Node: ©to i za¹to,  Next: Trenutna verzija,  Up: GNU Pascal

©to i za¹to?
------------

   Svrha GNU Pascal projekta je da proizvede jedan Pascal prevodilac
(zvan GNU Pascal ili GPC) koji

   * kombinira jasnoæu Pascala s moænim alatima pogodnim za
     programiranje iz realnog ¾ivota,

   * podr¾ava jednako Pascal standard i Extended Pascal standard
     standard kao definiran od ISO, ANSI i IEEE (ISO 7185:1990, ISO/IEC
     10206:1991, ANSI/IEEE 770X3.160-1989),

   * podr¾ava druge Pascal standarde (UCSD Pascal, Borland Pascal,
     dijelove Borland Delphija i Pascal-SC) toliko dok to slu¾i jasnoæi
     i korisnosti,

   * mo¾e biti distribuiran pod GNU licencnim uvjetima, i

   * mo¾e generirati kod i izvr¹avati se na svakom raèunalu za koje GNU
     C prevodilac mo¾e generirati kod i vrtiti se na njemu.

   Pascal je originalno dizajniran za uèenje. GNU Pascal donosi pogodan
naèin da se prijeðe na izazovne programerske zadatke bez uèenja potpuno
novog jezika.

   Trenutno izdanje implementira Standard Pascal (ISO 7185, razine 0 i
1), veæinu Extended Pascala (ISO 10206, te¾eæi potpunom ispunjavanju
standarda), visoko je kompatibilan sa Borland Pascalom (verzija 7.0),
te ima neka pogodnosti za kompatibilnost sa drugim prevodiocima (kao
¹to je VAX Pascal, Sun Pascal, Mac Pascal, Borland Delphi i Pascal-SC).

   Trenutno izdanje takoðer pru¾a mnogo korisnih GNU ekstenzija koje se
ne nalaze u ostalim Pascal prevodiocima, npr. da se olak¹a povezivanje
sa suèeljima u C i drugim jezicima na prenosiv naèin, zatim da se radi
sa datotekama, direktorijima, datumima i jo¹ toga, uglavnom bez
ovisnosti o operacijskom sustavu u podlozi.

   Ukljuèene jedinice pru¾aju podr¹ku za regularne izraze, cjelobrojnu
aritmetiku, racionalne i realne brojeve neogranièene velièine, za
internacionalizaciju, za meðuprocesnu komunikaciju, sa tzv.
message-digest i jo¹ mnoge dodatne znaèajke prevodioca.


File: gpc-hr.info,  Node: Trenutna verzija,  Next: Kompatibilnost sa Turbo Pascalom,  Prev: ©to i za¹to,  Up: GNU Pascal

Koja je trenutna verzija?
-------------------------

   Prije srpnja 2000 release verzije su obièno slijedile nekoliko
mjeseci jedna drugu. Od tada se nova verzija pojavila gotovo svakih
nekoliko dana, dostupna kao source arhiva s GPC web sitea,
`http://www.gnu-pascal.de'.

   Za detalje od novim moguænostima, pogledajte sekciju `News' na web
siteu. O bug-ovima koji su nedavno popravljeni, molimo pogledajte
`Done' sekciju na To-Do ("preostalo za napraviti") listi.

   GPC koristi GCC kao "back-end", ¹to znaèi da koristi dokazano GCC-ovo
suèelje za generiranje strojnog izvr¹nog koda, nakon ¹to je "front-end"
"pro¾vakao" ulaznu sintaksu Pascal jezika. U distribuciji su prilo¾ene
zakrpe za GCC 2.8.1 i GCC 2.95.x, ali se preporuèuje da koristite GCC
2.95.x.


File: gpc-hr.info,  Node: Kompatibilnost sa Turbo Pascalom,  Next: Podr¾ane platforme,  Prev: Trenutna verzija,  Up: GNU Pascal

Da li je kompatibilan s Turbo Pascalom (R)?
-------------------------------------------

   GPC nije usputni nadomjestak za Borlandov Turbo Pascal (R).  Gotovo
sve jeziène moguænosti BP-a su podr¾ane. Primjetne iznimke su formati
znakovnih nizova (kao ¹to je diskutirano ni¾e u dokumentu), ili `Mem' i
`Port' pseudo-polja, iako zamjena za potonje na IA32 platformi postoji
u `Ports' jedinici.

   Gotovo sve moguænosti BP-ove runtime biblioteke su podr¾ane u GPC-u,
bilo ugraðenim moguænostima prevodioca ili jedinicama sa istim imenima
kao i korespondentne BP jedinice.

   Za detalje o kompatibilnosti, o nekoliko preostalih nekompatibilnosti
i nekim korisnim alternativama za moguænosti BP-a, pogledajte `Borland
Pascal' poglavlje u GPC priruèniku.  (*note Borland Pascal::)


File: gpc-hr.info,  Node: Podr¾ane platforme,  Prev: Kompatibilnost sa Turbo Pascalom,  Up: GNU Pascal

Na kojim platformama GNU Pascal radi?
-------------------------------------

   GPC koristi GCC "backend", tako da bi trebao raditi na svim sustavima
podr¾anim od GNU CC-a. Ovo ukljuèuje ¹irok raspon Unix sustava, MS-DOS,
OS/2 i Win32. Puna lista platformi podr¾anih od GCC-a mo¾e se naæi u
datoteci `INSTALL' GCC distribucije. Sve te platforme nisu zapravo
testirane, ali je poznato da radi na slijedeæim platformama:

ix86-linux                    (Linux 2.x, ELF)
i486-linuxaout                
i486-linuxoldld               
i386-freebsd1.2.0             
AIX 4.2.1                     
AIX 4.3                       
DJGPP V2                      (Dos)
EMX 0.9B                      (OS/2, Dos)
Cygwin32 beta20 i vi¹e        (MS-Windows95/98, MS-Windows NT)
mingw32                       (MS-Windows95/98, MS-Windows NT)
mips-sgi-irix5.3              
mips-sgi-irix6.5              
sun-sparc-sunos4.1.4          
sparc-sun-solaris2.x          
sun-sparc-solaris 2.5.1       
sun-sparc-solaris 2.6         
sun-sparc-solaris 7           
sun-sparc-solaris 8           
alpha-unknown-linux           
alpha-dec-osf4.0b             
s390-ibm-linux-gnu            

   *OK narode - ¹aljite nam svoje pripovjesti o uspjehu, s kanonièkim
imenima ma¹ina!*


File: gpc-hr.info,  Node: Instaliranje GPC-a,  Next: GPC na DJGPP-u,  Prev: GNU Pascal,  Up: FAQ

Instaliranje GPC-a
==================

   Najsvje¾ije instrukcije za instalaciju mo¾ete naæi u GPC priruèniku
ili u datoteci `INSTALL' u source distribucijama, ili na GPC web
poslu¾itelju.  (*note Installation::)

   Slijedeæa poglavlja opisuju ¹to biste mogli trebati ili ¾eljeti osim
samog GPC-a.

* Menu:

* Dokumentacijske datoteke::  ©to slijedeæe èitati?
* Komponente::                Koje komponente trebam za prevoðenje Pascal koda?
* Debugger::                  Kako da ispravljam moje Pascal programe?
* Libraries::                 Biblioteke - koje bih dodatne biblioteke trebao
                                imati?
* Darovane jedinice::         Darovane jedinice
* IDE::                       Mo¾ete li preporuèiti integriranu razvojnu
                                okolinu (IDE)?


File: gpc-hr.info,  Node: Dokumentacijske datoteke,  Next: Komponente,  Up: Instaliranje GPC-a

©to slijedeæe èitati?
---------------------

   Nakon instaliranja GPC-a, molimo provjerite datoteke u direktoriju
`/usr/local/doc/gpc':

`README'           Opæe informacije o GPC-u
`FAQ'              Ovaj FAQ :-)
`NEWS'             Promjene od zadnjeg "release" izdanja
`BUGS'             Kako prijavljivati bug-ove, o test zbirci programa
`AUTHORS'          Lista GPC autora
`COPYING'          The GNU General Public License - GNU opæa javna
                   licenca
`COPYING.LIB'      The GNU Lesser General Public License - GNU manje
                   opæa javna licenca


File: gpc-hr.info,  Node: Komponente,  Next: Debugger,  Prev: Dokumentacijske datoteke,  Up: Instaliranje GPC-a

Koje komponente trebam za prevoðenje Pascal koda?
-------------------------------------------------

   Kompletiran sustav Pascal prevodioca bi trebao imati barem:

  1. Sam prevodilac, GPC.

  2. editor, asembler, linker (povezivaè), program za rad s
     bibliotekama i prijatelje.

  3. C biblioteku. Ako imate C prevodilac (compiler) koji funkcionira,
     onda ovo veæ imate.

  4. debugger (ispravljaè pogre¹aka), ako ¾elite debuggirati svoje
     programe.

   Za veæinu ljudi, GNU "binutils" i GNU debugger (`gdb') su dobar
izbor, iako biste mogli preferirati i koristiti alatke specifiène za
proizvoðaèa.


File: gpc-hr.info,  Node: Debugger,  Next: Libraries,  Prev: Komponente,  Up: Instaliranje GPC-a

Kako da ispravljam moje Pascal programe?
----------------------------------------

   Da biste debuggirali svoje programe, (a) GNU Pascal mora biti u
moguænosti generirati debug informacije za va¹u platformu, i (b) morati
imati debugger koji ju znade razumjeti.

   * Ako `gpc -g -o hello hello.p' daje:
          gpc: -g not supported for this platform
     onda to znaèi da GPC ne mo¾e generirati debugging informacije.
     Obièno, instaliranje `gas' (dio GNU binutils) umjesto va¹eg
     "sistemskog" asemblera mo¾e rije¹iti problem. Kad konfigurirate
     GCC koji GPC koristi, specificirajte `--with-gnu-as', i - po
     moguænosti - `--with-gnu-ld' i/ili `--with-stabs'. Vi¹e
     informacija mo¾e se naæi u `INSTALL' datoteci u GNU CC source
     direktoriju.

   * Debugger va¹eg sustava ne mora razumjeti debug informacije
     generirane GNU alatkama. U tom sluèaju mo¾e pomoæi instaliranje
     `gdb'-a.

   U najgorem sluèaju, ako mo¾ete debuggirati programe prevoðene GCC-om,
onda biste to trebali moæi da to napravite i s GPC-om.

   GNU debugger (`gdb') trenutno nema "Pascal" mod, tako da nije u
moguænosti prikazati neke Pascal strukture i sl. Dok debuggirate,
molimo primijetite da je Inicijalno Slovo U Svakom Identifikatoru
Veliko Slovo A Ostatak Su Mala Slova. Ako ¾elite prikazati varijablu
`foo' u debuggeru, otipkajte `show Foo' ili `display Foo' namjesto toga.

   Iako je `gdb' izvrstan debugger, njegov user-interface nije ba¹
svaèiji prvi izbor. Ako biste ¾eljeli debuggirati pod X11, molimo
pogledajte u comp.windows.x FAQ: "Where can I get an X-based debugger?"
na:
`http://www.cis.ohio-state.edu/hypertext/faq/usenet/x-faq/part6/faq-doc-2.html'

   Neki korisni front-endovi ukljuèuju: XXGDB, tGDB i XWPE. Pogledati:
`http://www.ee.ryerson.ca:8080/~elf/xapps/Q-IV.html'

   Vrlo lijep, ali zahtjevan po resurse je (baziran na Motif-u) DDD:
`http://sol.ibr.cs.tu-bs.de/softech/ddd/'

   Nadalje, RHIDE (*note IDE::) sadr¾i ugraðenu debugging podr¹ku,
sliènu onoj u IDE od BP-a.


File: gpc-hr.info,  Node: Libraries,  Next: Darovane jedinice,  Prev: Debugger,  Up: Instaliranje GPC-a

Biblioteke - koje bi dodatne biblioteke trebao imati?
-----------------------------------------------------

   Bit æe vam potrebne dodatne biblioteke (engl. library) dok prevodite
neke od jedinica (engl. unit). Ove se mogu naæi u direktoriju
`http://www.gnu-pascal.de/libs/'.

   Trenutno, tamo su slijedeæe biblioteke:

gmp
     Aritmetika za cijele brojeve, racionalne i realne brojeve s
     proizvoljnom velièinom i precizno¹æu. Koristi ju GMP jedinica.

rx
     Regularni izrazi - podudaranje i supstitucija. Koristi ju RegEx
     jedinica.

ncurses
PDCurses
     Rukovanje terminalom. Koristi ju CRT jedinica. Zavisno od va¹eg
     sistema, mo¾ete imati slijedeæi izbor:

     Unix: Mo¾ete prevesti terminalske aplikacije s ncurses i
     aplikacije koje rade u X11 prozoru s PDCurses (iako i terminalska
     aplikacija mo¾e, naravno, raditi i pod X11 u xterm-u). Ako ¾elite
     koristiti PDCurses (tj. XCurses), dajte opciju `-DX11' kod
     prevoðenja CRT-a.

     Dos sa DJGPP i MS-Windows sa mingw: Samo PDCurses je na
     raspolaganju i bit æe podrazumno kori¹ten.

     MS-Windows i Cygwin: PDCurses i ncurses su oboje na raspolaganju.
     PDCurses se koristi podrazumno. Ako ¾elite koristiti ncurses,
     postavite opciju `-DUSE_NCURSES' kod prevoðenja CRT-a.

     Drugi sistemi: Molim pogledajte `README' datoteke i instalacijske
     instrukcije PDCurses i ncurses kako bi ste ustanovili koje
     (odnosno koje) se mogu izgraditi na va¹em sistemu. Pogledajte
     uvjetne direktive na kraju crt.inc i crtc.h (i promijenite ih ako
     je neophodno) koje odluèuju koja æe biblioteka biti podrazumno
     kori¹tena (odnosno engl. default).

intl
     Internationalizacija. Koristi ju Intl jedinica. Na nekim sistemima
     to je dio sistemske biblioteke (libc).

ElectricFence
     Ova se biblioteka ne koristi ni od jedne GPC jedinice. Ona je
     debugging alat namijenjen da vam pomogne u pronala¾enju bugova s
     alokacijom memorije. Da bi ju koristili samo je pove¾ite
     ("polinkajte") u svoj program, bilo s komandne linije
     (`-lefence'), bilo u samom kodu (`{$L efence}') ¹to biste mogli
     po¾eljeti staviti unutar jednog `{$ifdef DEBUG}' ili neèeg sliènog
     jer se kori¹tenje libefence preporuèa samo za debugging (odnosno
     ispravljanje pogre¹aka).

   Izvorni kod biblioteka je na raspolaganju u glavnom `libs'
direktoriju. Veæina biblioteka dolazi s jednom ili nekoliko patcheva
(zakrpa, nadopuna) koje treba aplicirati prije njihovog prevoðenja.

   Binarne distribucije za neke platforme su na raspolaganju u
`binary/PLATFORM' poddirektorijima. Ako prevodite biblioteke za druge
platforme, osjeæajte se dobrodo¹li da stavite binarne datoteke nama na
raspolaganje za distribuciju na WWW poslu¾itelju.

   Tamo su takoðer slijedeæe datoteke:

`terminfo-linux.tar.gz'
     Ovo je patch (zakrpa) koja omoguæava ncurses programima da
     iskoriste sposobnost Linux 2.2 i novijih kernela (jezgri
     operacijskog sustava) da proizvedu blok kursor kad je potrebno.
     Dani patch mo¾e biti instaliran bez potrebe da se i¹ta ponovno
     prevodi, samo kopiranjem nekih datoteka na njihovo mjesto. Vi¹e
     detalja mo¾e se naæi u `README' datoteci ukljuèenoj u ovu arhivu.
     Patch neæe na¹koditi starijim kernelima. Molimo primijetite da
     *nije* samo na Linux strojevima korisno instalirati patch.
     Instaliranje na ostale strojeve æe omoguæiti korisnicima koji
     koriste telnet sa Linux konzole da profitiraju od blok kurzor
     sposobnosti. Osim toga, neki Unix sistemi imaju instalirane
     starije Linux terminfo zapise ili èak nikakve, tako da je dobra
     stvar, u svakom sluèaju, dati im trenutnu verziju.  Patch je
     ukljuèen u terminfo bazu podataka ncurses verzije 5.0, tako da ako
     instalirate ncurses 5.0 (iz source ili binarne distribucije), ne
     trebate posebno dobavljati patch. Ali ga mo¾ete instalirati na
     sistem sa starijom ncurses verzijom ako se ne osjeæate raspolo¾eni
     za nadogradnju kompletnih ncurses.

`tsort-2.9i.zip'
     Mali utility programèiæ (ekstrahiran iz util-linux-2.9i, ali ne
     Linux-specifièan, potreban za konfiguraciju rx biblioteke. Potreban
     vam je samo ako prevodite rx sami (i nije veæ prisutan na va¹em
     sistemu), ne ako koristite rx binarnu distribuciju.


File: gpc-hr.info,  Node: Darovane jedinice,  Next: IDE,  Prev: Libraries,  Up: Instaliranje GPC-a

Darovane jedinice
-----------------

   Nekoliko programera je darovalo jedinice za GPC. One su obièno
ogla¹ene na email listi, *Note Mailing List::. Veæina njih mo¾e se naæi
na `http://www.gnu-pascal.de/contrib/'.


File: gpc-hr.info,  Node: IDE,  Prev: Darovane jedinice,  Up: Instaliranje GPC-a

Mo¾ete li preporuèiti integriranu razvojnu okolinu (IDE)?
---------------------------------------------------------

   Korisnici Borland Pascala se mogu zapitati da li postoji neki
nadomjestak za IDE (Integrated Development Environment). Evo nekoliko
sugestija:

   * (X)Emacs. Neki ljudi misle da je Emacs odgovor na pitanje ®ivota,
     Univerzuma i Svega Ostalog, drugi su odluèili da je GNUsan.
     Dostupan na va¹em prijateljski raspolo¾enom GNU mirror-u i u
     veæini distribucija.

   * PENG. Nije free software, ali je pisan s GPC-om. Vrlo je slièan
     Borland-ovom IDE-u, ali s mnogim pro¹irenjima. Binarne distribucije
     za DJGPP, Linux i Solaris mogu se naæi na
     `http://fjf.gnu.de/peng/'.

   * RHIDE. DJGPP korisnici mogli bi isprobati RHIDE. Posljednja (beta)
     verzija je kompatibilna s GNU Pascalom i omoguæava step, trace i
     watch funkcije poput onih u Borland IDE-u. Mo¾e se naæi na
     `http://www.rhide.com'.

   * DevPascal. DevPascal je free software IDE za mingw32 platformu.
     Mo¾e se naæi na `http://www.gnu-pascal.de/contrib/chief/' ili
     `http://www.bloodshed.net/devpascal.html'

   * XWPE je jo¹ jedna imitacija Borland IDE-a, tako da je korisnici
     Borland Pascala mogu ocijeniti kao dobru alternativu.


File: gpc-hr.info,  Node: GPC na DJGPP-u,  Next: Znakovni nizovi u GPC-u,  Prev: Instaliranje GPC-a,  Up: FAQ

GNU Pascal na DJGPP (MS-DOS) platformi
======================================

   Ovo poglavlje raspravlja neke potencijalne probleme s GNU Pascalom
na MS-DOSu, koristeæi DJGPP.

* Menu:

* ©to je DJGPP::                 ©to je DJGPP?
* DJGPP FAQ::                    Ako trebate vi¹e informacija
* DJGPP download::               ©to download-ati?
* Instaliranje GPC-a na DJGPP::  Kako instalirati prevodilac?
* DJGPP Info reader::            Ne mogu èitati info dokumentaciju!
* DJGPP DPMI server::            GPC ka¾e: no DPMI
* Asemblerska sintaksa::         Imam problema s asemblerskim kodom ...
* DJGPP-specifièan kod::         Reci mi kako da koristim DPMI, BIOS i
                                 ostale stvari povezane s DOS-om
* Velièina stoga (stack)::       Dobio sam ``exception'' kod pristupanja
                                 `array [1 .. 4000000] of Byte'.


File: gpc-hr.info,  Node: ©to je DJGPP,  Next: DJGPP FAQ,  Up: GPC na DJGPP-u

©to je DJGPP?
-------------

   Slijedeæi paragraf je preuzet sa site-a
`http://www.delorie.com/djgpp/':

   DJGPP je kompletan 32-bit C/C++ razvojni sistem na Intel 80386 (i
vi¹im) PC-jima koji vrte DOS. Ukljuèuje prijenos mnogih GNU razvojnih
alatki. Razvojne alatke zahtijevaju 80386 ili novije raèunalo, kao i
programi koje one proizvode. U najveæem broju sluèajeva, programi koje
proizvodi se mogu komercijalno prodavati bez licence ili taksi.


File: gpc-hr.info,  Node: DJGPP FAQ,  Next: DJGPP download,  Prev: ©to je DJGPP,  Up: GPC na DJGPP-u

Ako trebate vi¹e informacija
----------------------------

   GPC/DJGPP je DJGPP V2 aplikacija, i veæina DJGPP dokumentacije se
odnosi na na GPC. Izvrstan izvor informacija je DJGPP FAQ:
`http://www.delorie.com/djgpp/v2faq/230b.zip'

   Drugo mjesto za tra¾enje DJGPP dokumentacije je DJGPP Knowledge Base,
na slijedeæem URL-u: `http://www.delorie.com/djgpp/doc/kb/'


File: gpc-hr.info,  Node: DJGPP download,  Next: Instaliranje GPC-a na DJGPP,  Prev: DJGPP FAQ,  Up: GPC na DJGPP-u

©to download-ati?
-----------------

   Kao ¹to je reèeno u *Note Komponente::, osim samog GPC-a, trebate
jo¹ i asembler, linker i prijatelje, C biblioteku i po moguænosti
debugger. `http://www.delorie.com/djgpp/' preporuèa slijedeæe datoteke
i oni æe vam pomoæi naæi mirror:

`v2/djdev203.zip'       (C biblioteka)
`v2gnu/bnu2951b.zip'    (asembler, ...)
`v2gnu/gcc2952b.zip'    (gcc)
`v2gnu/gdb418b.zip'     (debugger)
`v2gnu/mak379b.zip'     (make)
`v2gnu/txi40b.zip'      (texi)

   Ova lista èini oko 10 MB ne brojeæi GPC. Mo¾ete koristiti binarnu
verziju GPC-a s web poslu¾itelja.

@


1.1
log
@Initial revision
@
text
@@


1.1.2.1
log
@Import an alpha version of GNU Pascal Compiler into the tree
(not to be connected to the build before the upgrade to gcc 3.3).

We couldn't use gpc 2.1 because it's too old and doesn't support
gcc 3.x at all.
@
text
@@

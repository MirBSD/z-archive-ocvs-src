head	1.3;
access;
symbols
	gpc-20030830:1.1.2.1 FSF:1.1.2;
locks; strict;
comment	@# @;


1.3
date	2004.08.13.04.53.55;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2004.06.11.19.53.15;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.11.19.52.35;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.06.11.19.52.35;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@no C++, Java(TM), Pascal, Objective C or Fortran 77 for a while
as discussed on the mailing list
@
text
@#!/bin/ksh
# $MirBSD: src/gnu/gcc/gcc/p/utils/mk-t-inc,v 1.2 2004/06/11 19:53:15 tg Exp $

# Create tree.inc, needed by GPIDump, for your GCC version.
# (Called mk-t-inc rather than make-tree-inc for "8+3" reasons.)
#
# Copyright (C) 2002-2003 Free Software Foundation, Inc.
# Author: Frank Heckenbach <frank@@pascal.gnu.de>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, version 2.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING. If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA. }

if [ $# -ne 2 ]; then
  echo "Usage: `basename $0` gcc-dir dest-filename" >&2
  exit 1
fi

GCCDIR="$1"

version="`grep version_string "$GCCDIR/version.c" | sed -e 's/[^"]*"//;s/".*//'`"
if [ x"$version" = x ]; then
  exit 1
fi

{

cat << EOF
{ Generated automatically by $0 for GCC version $version. }
{ DO NOT CHANGE THIS FILE MANUALLY! }

{\$ifndef GCC_VERSION_SET}
{\$define GCC_VERSION_SET}

{\$define GCC_VERSION '$version'}
EOF

# Mostly copied from GPC's config-lang.in
if echo $version | grep '2\.9' > /dev/null || echo $version | grep '3\.[1-9]' > /dev/null || echo $version | grep egcs > /dev/null; then
  echo '{$define EGCS}'
  if echo $version | grep '2\.95\.[3-9]' > /dev/null || echo $version | grep '3\.[1-9]' > /dev/null; then
    echo '{$define GCC_2_95_3}'
  fi
  if echo $version | grep '2\.9[6-9]' > /dev/null || echo $version | grep '3\.[1-9]' > /dev/null; then
    echo '{$define EGCS97}'
    if echo $version | grep '3\.[3-9]' > /dev/null; then
      echo '{$define GCC_3_3}'
    fi
  fi
fi
sed -ne '/Start GPI info/,/End GPI info/{s,/\*.*\*/,,g;s/0x/$/g;s/#/{$/g;s/[^\]$/&}/;s/\\$//;p;}' "$GCCDIR/p/module.c"
echo '{$endif}'
echo ""

{
  cat "$GCCDIR/tree.def"
  echo 'DEFTREECODE (LAST_AND_UNUSED_C_TREE_CODE, "unused", "x", 0)'
  sed -e '/#else/,/#endif/d' "$GCCDIR/p/p-tree.def"
} | sed -ne '/^DEFTREECODE/{s,/\*.*\*/,,;s/["'"'"']x["'"'"'].*/"x", 0)/;p;}'

} > "$2" || { rm -f "$2"; false; }
@


1.2
log
@bring in line
@
text
@d2 1
a2 1
# $MirBSD$
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#!/bin/sh
a22 17

# This script requires bash. Since bash cannot be assumed to be in
# /bin, /usr/bin or any other certain place, we cannot use it in the
# first line. So we use /bin/sh, which can be assumed to exist. Then
# we check if it's actually bash, and if not, try to re-run the
# script with bash.
if [ x"$BASH" = x ]; then
  if [ x"$RERUN_BASH_TRIED" != x ]; then
    echo "`basename "$0"`: cannot run, \`bash' is either not bash or a very old version" >&2
    exit 1
  else
    RERUN_BASH_TRIED=1; export RERUN_BASH_TRIED
    exec bash "$0" "$@@"
    echo "`basename "$0"`: cannot run bash" >&2
    exit 1
  fi
fi
@


1.1.2.1
log
@Import an alpha version of GNU Pascal Compiler into the tree
(not to be connected to the build before the upgrade to gcc 3.3).

We couldn't use gpc 2.1 because it's too old and doesn't support
gcc 3.x at all.
@
text
@@

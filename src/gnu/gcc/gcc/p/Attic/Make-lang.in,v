head	1.9;
access;
symbols
	gpc-20030830:1.1.2.1 FSF:1.1.2;
locks; strict;
comment	@# @;


1.9
date	2004.08.13.04.53.18;	author tg;	state dead;
branches;
next	1.8;

1.8
date	2004.08.10.00.00.25;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2004.03.10.17.37.38;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2004.03.09.21.10.47;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2004.03.02.10.32.08;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.02.29.20.29.46;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.29.18.57.50;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.20.20.29.34;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.11.18.00.27;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.01.11.18.00.27;	author tg;	state Exp;
branches;
next	;


desc
@@


1.9
log
@no C++, Java(TM), Pascal, Objective C or Fortran 77 for a while
as discussed on the mailing list
@
text
@# $MirBSD: src/gnu/gcc/gcc/p/Make-lang.in,v 1.8 2004/08/10 00:00:25 tg Exp $
#
# Top level Makefile fragment for GNU Pascal.
#
# Copyright (C) 1987-2003 Free Software Foundation, Inc.
#
# Authors: Jukka Virtanen <jtv@@hut.fi>
#          J.J. van der Heijden <j.j.vanderheijden@@student.utwente.nl>
#          Peter Gerwinski <peter@@gerwinski.de>
#          Matthias Klose <doko@@cs.tu-berlin.de>
#          Frank Heckenbach <frank@@pascal.gnu.de>
#          Waldek Hebisch <hebisch@@math.uni.wroc.pl>
#
# This file is part of GNU Pascal.
#
# GNU Pascal is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# GNU Pascal is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Pascal; see the file COPYING. If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

# This file provides the language dependent support in the main Makefile.
# Each language makefile fragment must provide the following targets:
#
# foo.all.build, foo.all.cross, foo.start.encap, foo.rest.encap,
# foo.info, foo.dvi,
# foo.install-normal, foo.install-common, foo.install-info, foo.install-man,
# foo.uninstall, foo.distdir,
# foo.mostlyclean, foo.clean, foo.distclean, foo.extraclean,
# foo.maintainer-clean, foo.stage1, foo.stage2, foo.stage3, foo.stage4
#
# where `foo' is the name of the language.
#
# It should also provide rules for:
#
# - making any compiler driver (e.g.: gpc)
# - the compiler proper (e.g.: gpc1)
# - define the names for selecting the language in LANGUAGES.

# GCC version dependent stuff
# gcc-2.8.1 doesn't set $(gcc_version). Only gcc-3 sets $(BACKEND).
# So GCC_VERSION_FOR_GPC yields:
# `28' for gcc-2.8.1
# `2'  for gcc-2.95.x
# `'   for gcc-3.x
GPC_GCC_2_=2
GPC_GCC_28_=8
GCC_VERSION_FOR_GPC=$(GPC_GCC_2_$(BACKEND))$(GPC_GCC_28_$(gcc_version))
GPC_GCC_VERSION_28=$(version)
GPC_GCC_VERSION_2=$(gcc_version)
GPC_GCC_VERSION_=$(gcc_version)
GPC_GCC_VERSION=$(GPC_GCC_VERSION_$(GCC_VERSION_FOR_GPC))
GPC_GCC_VERSION_OBJS_28=pexecute.o
GPC_GCC_VERSION_OBJS_=intl.o
GPC_GCC_VERSION_OBJS=$(GPC_GCC_VERSION_OBJS_$(GCC_VERSION_FOR_GPC))
GPC_GCC_VERSION_LINK_=p/diagnostic.o attribs.o main.o libbackend.a -liberty
GPC_GCC_VERSION_LINK_2=`cat p/stamp-gbe`
GPC_GCC_VERSION_LINK_28=`cat p/stamp-gbe` choose-temp.o pexecute.o
GPC_GCC_VERSION_LINK=$(GPC_GCC_VERSION_LINK_$(GCC_VERSION_FOR_GPC))
GPC_GCC_VERSION_DEPS_=$(GPC_GCC_VERSION_LINK)
GPC_GCC_VERSION_DEPS_2=p/stamp-gbe
GPC_GCC_VERSION_DEPS_28=p/stamp-gbe choose-temp.o pexecute.o
GPC_GCC_VERSION_DEPS=$(GPC_GCC_VERSION_DEPS_$(GCC_VERSION_FOR_GPC))
GPC_GCC_VERSION_H_=target.h dbxout.h ${LIBIBERTY_HDRS}/libiberty.h
GPC_GCC_VERSION_H_2=gansidecl.h dbxout.h ${LIBIBERTY_HDRS}/libiberty.h
GPC_GCC_VERSION_H_28=gansidecl.h
GPC_GCC_VERSION_H=$(GPC_GCC_VERSION_H_$(GCC_VERSION_FOR_GPC))
GPC_ALL_WARNINGS_=$(WARN_CFLAGS) $(STRICT_WARN)
GPC_ALL_WARNINGS_2=`case "$(CC)" in *gcc*) echo -Wall -Wmissing-prototypes -Wpointer-arith;; esac`
GPC_ALL_WARNINGS_28=`case "$(CC)" in *gcc*) echo -Wall -Wmissing-prototypes -Wpointer-arith;; esac`
GPC_ALL_WARNINGS=$(GPC_ALL_WARNINGS_$(GCC_VERSION_FOR_GPC))
man1dir_28=$(mandir)# gcc-2.8.1 includes `man1' in $(mandir)
man1dir_2=$(mandir)/man1
man1dir_=$(mandir)/man1
man1dir=$(man1dir_$(GCC_VERSION_FOR_GPC))
LEX_28=$(LEX)
LEX_2=$(LEX)
LEX_=$(FLEX)
GPC_LEX=$(LEX_$(GCC_VERSION_FOR_GPC))
LEXFLAGS_28=$(LEXFLAGS)
LEXFLAGS_2=$(LEXFLAGS)
LEXFLAGS_=$(FLEXFLAGS)
GPC_LEXFLAGS=$(LEXFLAGS_$(GCC_VERSION_FOR_GPC))
GPC_HOST_28=$(host)
GPC_HOST_2=$(host_canonical)
GPC_HOST_=$(host_canonical)
GPC_HOST=$(GPC_HOST_$(GCC_VERSION_FOR_GPC))
GPC_BUILD_28=$(build)
GPC_BUILD_2=$(build_canonical)
GPC_BUILD_=$(build_canonical)
GPC_BUILD=$(GPC_BUILD_$(GCC_VERSION_FOR_GPC))

# gcc<3 doesn't set $(STAMP) and $(man1ext).
# gcc-3 does, but it should not matter to set them here again.
STAMP=echo timestamp >
man1ext=.1

RTSSRCDIR=$(srcdir)/p/rts

# Version numbers
VERSION_FILENAME=$(srcdir)/p/version.h
RTS_VERSION_FILENAME=$(RTSSRCDIR)/rts-version
gpc_major=2
gpc_minor=1
gpc_version=`sed -ne 's/"[^"]*$$//;s/^\#define GPC_VERSION_STRING *"//p' $(VERSION_FILENAME)`
rts_version=`cat $(RTS_VERSION_FILENAME)`

GPCSOLIBSHORTNAME=libgpc.so
GPCSOLIBNAME=$(GPCSOLIBSHORTNAME).$(gpc_major).$(gpc_minor).$(rts_version)
GPCSOLIBDIR=lib
WITH_SHARED=@@with_shared@@

# Can be overwritten for Dos hosts
SYMLINK=ln -s

# Can be overwritten to install additional libraries
GPC_EXTRA_INSTALL_LIBS=

# While installing, real_prefix is the real, not temp, prefix, in order
# to get symlinks right
real_prefix=$(prefix)

# While installing, install_prefix is the prefix below the temp
# directory. Usually equal to prefix, but on DJGPP, prefix is
# '$DJDIR', but install_prefix is empty.
install_prefix=$(prefix)

# Actual names to use when installing a native compiler.
GPC_INSTALL_NAME=`t='$(program_transform_name)'; echo gpc | sed $$t`

# Actual names to use when installing a cross-compiler.
GPC_CROSS_NAME=`t='$(program_transform_cross_name)'; echo gpc | sed $$t`

# The GPC to use for compiling libgpc.a
# Usually the one we just built.
GPC_FOR_TARGET=./xgpc -B./

ADD_RTS_PARENT_DIR=sed -e 's,\(-[BI]\)\([^/][^:]\),\1../../\2,g;s,^\([^/][^:]*/\),../../\1,'
GCC2GPC=sed 's, *$$,,;s,^\([^ ]*[/\][^/\]*\)gcc,\1gpc,;s/^gcc$$/gpc/;s/$$/ /' # $(CC) might be .../gcc-foo/.../xgcc

# The ' ' is there so, e.g., `-B.' will be replaced by ADD_RTS_PARENT_DIR
RTS_COMPILERS=CC="`echo $(GCC_FOR_TARGET)' ' | $(ADD_RTS_PARENT_DIR)`" \
              PC="`echo $(GPC_FOR_TARGET)' ' | $(ADD_RTS_PARENT_DIR)`"
#(Doesn't work)              PC="`echo $(GCC_FOR_TARGET)' ' | $(ADD_RTS_PARENT_DIR) | sed -e 's,gcc,gpc,g;s,gpc/,gcc/,g'`"

# Flags to pass when installing GPC.
GPC_INSTALL_FLAGS_TO_PASS=\
	"exeext=$(exeext)" \
	"version=$(version)" \
	"target_alias=$(target_alias)" \
	"program_transform_name=$(program_transform_name)" \
	"program_transform_cross_name=$(program_transform_cross_name)" \
	"SYMLINK=$(SYMLINK)" \
	"GCC_FOR_TARGET=$(GCC_FOR_TARGET)" \
	"GPC_FOR_TARGET=$(GPC_FOR_TARGET)" \
	"GPCSOLIBSHORTNAME=$(GPCSOLIBSHORTNAME)" \
	"GPCSOLIBDIR=$(GPCSOLIBDIR)" \
	"GPC_EXTRA_INSTALL_LIBS=$(GPC_EXTRA_INSTALL_LIBS)" \
	"WITH_SHARED=$(WITH_SHARED)" \
	"FLOAT_H=$(FLOAT_H)" \
	"EXTRA_PARTS=$(EXTRA_PARTS)"

# Flags to pass when building the utilities. (PC is the GPC for the host!)
UTILS_FLAGS_TO_PASS=\
	SHELL="$(SHELL)" \
	PC="`if [ x"$(GPC_HOST)" = x"$(target)" ]; then echo $(GPC_FOR_TARGET)' '; else echo $(CC) | $(GCC2GPC); fi | $(ADD_RTS_PARENT_DIR)` -I../rts" \
	CFLAGS="$(CFLAGS)" \
	PFLAGS="$(PFLAGS)" \
	exeext="$(exeext)" \
	INSTALL_PROGRAM="$(INSTALL_PROGRAM)" \
	INSTALL_DATA="$(INSTALL_DATA)" \
	BUILD="$(GPC_BUILD)" \
	HOST="$(GPC_HOST)"

# Flags to pass when building the RTS.
RTS_FLAGS_TO_PASS=\
	GCC_VERSION="$(GPC_GCC_VERSION)" \
	SHELL="$(SHELL)" \
	CFLAGS="$(CFLAGS)" \
	PFLAGS="$(PFLAGS)" \
	AR="$(AR_FOR_TARGET)" \
	AR_FLAGS="$(AR_FLAGS)" \
	RANLIB="$(RANLIB_FOR_TARGET)" \
	RANLIB_TEST="$(RANLIB_TEST_FOR_TARGET)" \
	RTSFLAGS="$(RTSFLAGS)" \
	DESTDIR="../.."

# Define the names for selecting Pascal in LANGUAGES.
Pascal pascal: xgpc$(exeext) gpc1$(exeext) gpcpp$(exeext) \
		gpc-run specs pascal.info

# Tell GNU make to ignore these if they exist.
.PHONY: Pascal pascal

pascal.update-release:
	if [ -r "$(VERSION_FILENAME)" ] && [ $(gpc_version) -ge "`date '+%Y%m%d'`" ]; then \
	  echo "GPC release version is already "$(gpc_version); \
	  exit 1; \
	fi
	( \
	 echo '/* Generated automatically by the Makefile.' && \
	 echo '   DO NOT CHANGE THIS FILE MANUALLY! */' && \
	 echo '' && \
	 echo '#define GPC_MAJOR "$(gpc_major)"' && \
	 echo '#define GPC_MINOR "$(gpc_minor)"' && \
	 echo '#define GPC_VERSION_STRING "'`date '+%Y%m%d'`'"' && \
	 echo '#define GPC_RELEASE_STRING GPC_VERSION_STRING' \
	) > $(VERSION_FILENAME) || \
	{ rm -f $(VERSION_FILENAME); false; }
	@@echo "New GPC release version is "$(gpc_version)
	touch $(srcdir)/p/lang-specs.h # because GCC's Makefile doesn't know about p/version.h
	cd $(RTSSRCDIR) && $(MAKE) -f Makefile.in srcdir=. rts.update-release

p/units/crtc.h: $(srcdir)/p/units/crt.inc
	$(srcdir)/p/script/crtinc2h $(srcdir)/p/units/crt.inc p/units/crtc.h

p/gpc.o: $(srcdir)/p/gpc.c $(CONFIG_H) multilib.h Makefile \
 $(lang_specs_files) $(srcdir)/p/version.h specs.h
	$(CC) -DGPC $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(GPC_ALL_WARNINGS) $(INCLUDES) \
	$(DRIVER_DEFINES) -c `echo $(srcdir)/p/gpc.c | sed 's,^\./,,'` -o $@@

# We call this executable `xgpc' rather than `gpc'
# to avoid confusion if the current directory is in the path
# and PC is `gpc'. It is renamed to `gpc' when it is installed.
xgpc$(exeext): p/gpc.o $(GPC_GCC_VERSION_OBJS) prefix.o version.o \
 $(LIBDEPS) $(EXTRA_GCC_OBJS)
	$(CC) $(ALL_CFLAGS) $(GPC_ALL_WARNINGS) $(LDFLAGS) -o $@@ p/gpc.o prefix.o version.o \
	$(GPC_GCC_VERSION_OBJS) $(EXTRA_GCC_OBJS) $(LIBS) $(EXTRA_LIBS)

# Also create gpc-cross, so that pascal.install-common will install properly.
gpc-cross$(exeext): xgpc$(exeext)
	cp xgpc$(exeext) gpc-cross$(exeext)

gpc-run: $(srcdir)/p/script/gpc-run $(VERSION_FILENAME)
	sed -e s/@@version@@/$(gpc_version)/ "${.ALLSRC:M*gpc-run}" > "$@@" || { rm -f "$@@"; false; }
	chmod a+x "$@@"

# Headers and flags for GPC specific files.
GPC_GBE_H=$(CONFIG_H) system.h tree.h input.h rtl.h flags.h output.h expr.h \
          except.h function.h convert.h toplev.h $(GPC_GCC_VERSION_H)
P_H=$(GPC_GBE_H) p/gpc.h p/p-tree.def p/predef.h $(srcdir)/p/parse.h p/gbe.h
ALL_GPC_FLAGS=$(ALL_CFLAGS) $(ALL_CPPFLAGS) $(GPC_ALL_WARNINGS) $(INCLUDES) -DGPC -I$(srcdir)/p

# Headers and flags for patched backend files.
GPC_BE_H=$(GPC_GBE_H) defaults.h machmode.h machmode.def real.h recog.h \
         regs.h reload.h typeclass.h xcoffout.h \
         insn-attr.h insn-codes.h insn-config.h insn-flags.h
ALL_GPC_GBE_FLAGS=$(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -DGPC

gpcpp$(exeext): $(P) p/gpcpp.o version.o $(LIBDEPS)
	rm -f $@@
	$(CC) $(ALL_GPC_FLAGS) $(LDFLAGS) -o $@@ p/gpcpp.o version.o $(LIBS) $(EXTRA_LIBS)

p/gpcpp.o: p/gpcpp.c p/version.h p/gpc-options.h p/lang-options.h $(CONFIG_H) system.h
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) ${.ALLSRC:M*.c}

# Language-specific object files for GPC and patched GNU Back End (GBE)
# files (mostly language independent, but some parts require GPC specific
# patches and are rebuilt with -DGPC).
GPC_OBJS=p/parse.o p/declarations.o p/expressions.o p/gpc-lex.o p/lang.o \
	p/module.o p/objects.o p/options.o p/predef.o p/statements.o p/typecheck.o \
	p/types.o p/convert.o p/dbxout.o p/dwarf2out.o p/expr.o p/fold-const.o \
	p/function.o p/integrate.o p/optabs.o p/stor-layout.o p/toplev.o p/tree.o

# Exclude patched files from language-independent object file list.
# Not necessary for gcc-3 since for a library (libbackend.a), the linker does this automatically.
p/stamp-gbe: stamp-objlist Makefile
	sed -e 's: ../: :g;\
	 s: convert.o::g;\
	 s: dbxout.o::g;\
	 s: dwarf2out.o::g;\
	 s: expr.o::g;\
	 s: fold-const.o::g;\
	 s: function.o::g;\
	 s: integrate.o::g;\
	 s: optabs.o::g;\
	 s: stor-layout.o::g;\
	 s: toplev.o::g;\
	 s: tree.o::g' "$<" > "$@@" || { rm -f "$@@"; false; }

gpc1$(exeext): $(P) $(GPC_GCC_VERSION_DEPS) $(GPC_OBJS) $(LIBDEPS)
	@@grep "@@@@ PATCHED FOR GPC 20030218 @@@@" $(srcdir)/stor-layout.c > /dev/null || \
	 { echo "*** There have been changes in the patch for GCC. Please start with a fresh"; \
	   echo "*** copy of the GCC sources and do a new build, including configure."; \
	   exit 1; } >&2
	rm -f $@@
	$(CC) $(ALL_GPC_FLAGS) $(LDFLAGS) -o $@@ $(GPC_OBJS) $(GPC_GCC_VERSION_LINK) $(LIBS) $(EXTRA_LIBS)

p/declarations.o: p/declarations.c $(P_H)
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) ${.ALLSRC:M*.c}

p/expressions.o: p/expressions.c $(P_H)
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) ${.ALLSRC:M*.c}

p/gpc-lex.o: p/gpc-lex.c $(P_H)
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) ${.ALLSRC:M*.c}

p/lang.o: p/lang.c $(P_H)
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) ${.ALLSRC:M*.c}

p/module.o: p/module.c $(P_H) p/version.h
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) -DTARGET_NAME=\"$(target_alias)\" ${.ALLSRC:M*.c}

p/objects.o: p/objects.c $(P_H)
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) ${.ALLSRC:M*.c}

p/options.o: p/options.c $(P_H) p/lang-options.h p/gpc-options.h p/version.h
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) ${.ALLSRC:M*.c}

p/parse.o: p/parse.c $(P_H)
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) $(BIG_SWITCHFLAG) ${.ALLSRC:M*.c}

p/predef.o: p/predef.c $(P_H) $(RTSSRCDIR)/constants.h
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) ${.ALLSRC:M*.c}

p/statements.o: p/statements.c $(P_H) $(RTSSRCDIR)/constants.h $(RTS_VERSION_FILENAME)
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) -DRTS_VERSION_CHECK="\"__GPC_RTS_VERSION_`cat $(RTSSRCDIR)/rts-version`__\"" ${.ALLSRC:M*.c}

p/typecheck.o: p/typecheck.c $(P_H)
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) ${.ALLSRC:M*.c}

p/types.o: p/types.c $(P_H) $(RTSSRCDIR)/constants.h
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) ${.ALLSRC:M*.c}

p/convert.o: convert.c $(GPC_BE_H)
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) ${.ALLSRC:M*.c}

p/dbxout.o: dbxout.c $(GPC_BE_H)
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) ${.ALLSRC:M*.c}

p/dwarf2out.o: dwarf2out.c $(GPC_BE_H)
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) ${.ALLSRC:M*.c}

p/diagnostic.o: diagnostic.c $(GPC_BE_H)
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) ${.ALLSRC:M*.c}

p/expr.o: expr.c $(GPC_BE_H)
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) ${.ALLSRC:M*.c}

p/fold-const.o: fold-const.c $(GPC_BE_H)
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) ${.ALLSRC:M*.c}

p/function.o: function.c $(GPC_BE_H)
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) ${.ALLSRC:M*.c}

p/integrate.o: integrate.c $(GPC_BE_H)
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) ${.ALLSRC:M*.c}

p/optabs.o: optabs.c $(GPC_BE_H)
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) ${.ALLSRC:M*.c}

p/stor-layout.o: stor-layout.c $(GPC_BE_H)
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) ${.ALLSRC:M*.c}

p/toplev.o: toplev.c $(GPC_BE_H) p/lang-options.h
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) $(MAYBE_TARGET_DEFAULT) \
	  $(MAYBE_USE_COLLECT2) -DTARGET_NAME=\"$(target_alias)\" ${.ALLSRC:M*.c}

p/tree.o: tree.c tree.def $(GPC_BE_H)
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) ${.ALLSRC:M*.c}

# Build hooks:

pascal.all.build: xgpc$(exeext)
pascal.all.cross: gpc-cross$(exeext)
pascal.start.encap:
pascal.rest.encap:

pascal.info: p/doc/info/gpc.info \
             p/doc/info/gpcs.info

p/doc/info/gpc.info:
	[ -d "p/doc/info" ] || $(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs "p/doc/info"
	$(MAKEINFO) -I$(srcdir)/p/doc -I$(srcdir)/p/doc/en -I$(srcdir)/p/doc/generated \
	    -o p/doc/info/gpc.info $(srcdir)/p/doc/en/gpc.texi

p/doc/info/gpcs.info:
	[ -d "p/doc/info" ] || $(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs "p/doc/info"
	$(MAKEINFO) -I$(srcdir)/p/doc -I$(srcdir)/p/doc/en -I$(srcdir)/p/doc/generated \
	    -o p/doc/info/gpcs.info $(srcdir)/p/doc/en/gpcs.texi

gpc.txt:
	$(MAKEINFO) --no-headers --force -o "$@@" $(srcdir)/p/doc/en/gpc.texi

# Install hooks:
# gpc1 is installed elsewhere as part of $(COMPILERS).

unitsubdir=$(libsubdir)/units

pascal.install-dir:

install-gpcpp: pascal.install-dir gpcpp$(exeext)
	rm -f $(DESTDIR)$(libsubdir)/gpcpp$(exeext)
	$(INSTALL_PROGRAM) gpcpp$(exeext) $(DESTDIR)$(libsubdir)/gpcpp$(exeext)

# Install the driver program as $(target)-gpc
# and also as either gpc (if native) or $(tooldir)/bin/gpc.
pascal.install-common: pascal.install-dir xgpc$(exeext) gpc-run
	if [ -f gpc-cross$(exeext) ]; then \
	  rm -f $(DESTDIR)$(bindir)/$(GPC_CROSS_NAME)$(exeext); \
	  $(INSTALL_PROGRAM) gpc-cross$(exeext) $(DESTDIR)$(bindir)/$(GPC_CROSS_NAME)$(exeext) && \
	  chmod a+x $(DESTDIR)$(bindir)/$(GPC_CROSS_NAME)$(exeext); \
	else \
	  rm -f $(DESTDIR)$(bindir)/$(GPC_INSTALL_NAME)$(exeext); \
	  $(INSTALL_PROGRAM) xgpc$(exeext) $(DESTDIR)$(bindir)/$(GPC_INSTALL_NAME)$(exeext) && \
	  chmod a+x $(DESTDIR)$(bindir)/$(GPC_INSTALL_NAME)$(exeext); \
	fi
	rm -f $(DESTDIR)$(bindir)/gpc-run
	$(INSTALL_PROGRAM) gpc-run $(DESTDIR)$(bindir)/gpc-run
	chmod a+x $(DESTDIR)$(bindir)/gpc-run

pascal.install-units: pascal.install-dir $(srcdir)/p/units/crtc.h
	for f in `cd $(srcdir)/p/units && echo *`; do \
	  if [ "$$f" = gpc-in-c.h ]; then \
	    rm -f $(DESTDIR)$(libsubdir)/include/"$$f"; \
	    $(INSTALL_DATA) $(srcdir)/p/units/"$$f" $(DESTDIR)$(libsubdir)/include/"$$f" || exit 1; \
	    chmod a-x $(DESTDIR)$(libsubdir)/include/"$$f"; \
	  elif [ "$$f" != CVS ]; then \
	    rm -f $(DESTDIR)$(unitsubdir)/"$$f"; \
	    $(INSTALL_DATA) $(srcdir)/p/units/"$$f" $(DESTDIR)$(unitsubdir)/"$$f" || exit 1; \
	    chmod a-x $(DESTDIR)$(unitsubdir)/"$$f"; \
	  fi; \
	done

pascal.install-normal: pascal.install-common install-gpcpp pascal.install-units

pascal.install: pascal.install-normal; @@true

# Clean hooks:
# A lot of the ancillary files are deleted by the main makefile.
# We just have to delete files specific to us.

pascal.mostlyclean:
	-rm -f p/*.o p/stamp-docdemos p/stamp-pascal-html gpc-html-$(gpc_version).tar.gz
	-rm -rf p/docdemos $(HTML_DIR)
	-if [ -d p/rts ]; then rtssrcdir=`cd $(RTSSRCDIR) && pwd` && cd ./p/rts && $(MAKE) -f $$rtssrcdir/Makefile.in $(RTS_FLAGS_TO_PASS) srcdir=$$rtssrcdir mostlyclean; fi
	-if [ -d p/test ]; then cd ./p/test && $(MAKE) mostlyclean; fi

pascal.clean: pascal.mostlyclean
	-rm -f xgpc
	-rm -f p/parse.output p/parse.tab.c
	-if [ -d p/utils ]; then srcdir=`cd $(srcdir) && pwd` && cd ./p/utils && $(MAKE) -f $$srcdir/p/utils/Makefile $(UTILS_FLAGS_TO_PASS) GCC_DIR="$$srcdir" clean; fi
	-if [ -d p/rts ]; then rtssrcdir=`cd $(RTSSRCDIR) && pwd` && cd ./p/rts && $(MAKE) -f $$rtssrcdir/Makefile.in $(RTS_FLAGS_TO_PASS) srcdir=$$rtssrcdir clean; fi
	-if [ -d p/test ]; then cd ./p/test && $(MAKE) clean; fi

pascal.distclean: pascal.clean
	-rm -f p/gpc-config.h p/config.cache p/config.log p/config.status
	-rm -f gcc-version.h p/Makefile.in
	-rm -f gpc.aux gpc.cp gpc.cps gpc.fn gpc.ky gpc.log gpc.pg gpc.toc gpc.tp gpc.vr
	-rm -f gpc.tmp gpc.po gpc.to gpc.dvi gpc.ps gpc.pdf p/gpc.*aux GnuPascal.eps
	-if [ -d p/rts ]; then rtssrcdir=`cd $(RTSSRCDIR) && pwd` && cd ./p/rts && $(MAKE) -f $$rtssrcdir/Makefile.in $(RTS_FLAGS_TO_PASS) srcdir=$$rtssrcdir distclean; fi
	-if [ -d p/test ]; then cd ./p/test && $(MAKE) distclean; fi

# like gcc's extraclean, which cleans p/ for us, but not p/rts.
pascal.extraclean: pascal.distclean
	-rm -f p/*/=* p/*/"#"* p/*/*~* p/*/patch* p/*/*.orig p/*/*.rej
	-rm -f p/*/*.dvi p/*/*.oaux p/*/*.d p/*/*.[zZ] p/*/*.gz
	-rm -f p/*/*.tar p/*/*.xtar p/*/*.tar.* p/*/*.xtar.*
	-rm -f p/*/*lose p/*/*.s p/*/*.s[0-9] p/*/*.i
	-rm -f p/gpc-[0-9]*[0-9].tar.gz
	-rm -rf p/tmp p/gpc-[0-9]*[0-9]
	-if [ -d p/rts ]; then rtssrcdir=`cd $(RTSSRCDIR) && pwd` && cd ./p/rts && $(MAKE) -f $$rtssrcdir/Makefile.in $(RTS_FLAGS_TO_PASS) srcdir=$$rtssrcdir extraclean; fi
	-if [ -d p/test ]; then cd ./p/test && $(MAKE) extraclean; fi

pascal.maintainer-clean: pascal.extraclean
	-rm -f p/TAGS $(GPC_GENERATED_FILES) p/doc/info/gpc*.info*
	-for d in $(srcdir)/p/doc/*; do if [ -d $$d/info ]; then rmdir $$d/info; fi; done
	-if [ -d p/rts ]; then rtssrcdir=`cd $(RTSSRCDIR) && pwd` && cd ./p/rts && $(MAKE) -f $$rtssrcdir/Makefile.in $(RTS_FLAGS_TO_PASS) srcdir=$$rtssrcdir maintainer-clean; fi
	-cd $(RTSSRCDIR) && $(MAKE) -f Makefile.in srcdir=. maintainer-clean
	-if [ -d p/test ]; then cd ./p/test && $(MAKE) maintainer-clean; fi
	-rm -f $(srcdir)/p/diffs/gcc-2.95.1.diff $(srcdir)/p/diffs/gcc-2.95.2.diff $(srcdir)/p/diffs/gcc-2.95.3.diff $(srcdir)/p/diffs/gcc-2.95.3-5.diff
	-rm -f $(srcdir)/p/diffs/gcc-2.95.3-6.diff $(srcdir)/p/diffs/gcc-2.95.3-8.diff $(srcdir)/p/diffs/gcc-2.95.4.diff
	-rm -f $(srcdir)/p/diffs/gcc-3.2.2.diff $(srcdir)/p/diffs/gcc-3.2.3.diff $(srcdir)/p/diffs/gcc-3.3.1.diff

# Stage hooks:
# The main makefile has already created stage?/p.

GPCSTAGESTUFF=p/*.o p/stamp-gbe

pascal.stage1:
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs stage1/p/rts
	-mv $(GPCSTAGESTUFF) stage1/p
pascal.stage2:
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs stage2/p/rts
	-mv $(GPCSTAGESTUFF) stage2/p
pascal.stage3:
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs stage3/p/rts
	-mv $(GPCSTAGESTUFF) stage3/p
pascal.stage4:
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs stage4/p/rts
	-mv $(GPCSTAGESTUFF) stage4/p
@


1.8
log
@tg@@odem:/tmp $ gcc --version
gcc (GCC) 3.2.3 (propolice; MirOS 07B9)
Copyright (C) 2002 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

>>> it seems to work with the new infrastructure, libiberty and whatnot

tg@@odem:/tmp $ as -V
GNU assembler version 2.14 (i386-ecce-mirbsd7) using BFD version 2.14 20030612
^C
tg@@odem:/tmp $ ld -V
GNU ld version 2.14 20030612
  Supported emulations:
   elf_i386_obsd

>>> but still with old binutils, oh my...
@
text
@d1 1
a1 1
# $MirBSD: src/gnu/gcc/gcc/p/Make-lang.in,v 1.7 2004/03/10 17:37:38 tg Exp $
@


1.7
log
@* fix the build system
* fix and enable the GNU Pascal RTS and Utils
  -> gpc is now fully supported; Hello World works.
* merge OpenBSD-OpenSSH 3.8, bump patchlevel
* add fchroot(2) diff, From: Pedro Martelletto <pbastos@@rdc.puc-rio.br>
* add fchroot(2) man page from NetBSD and myself
* fix orders of manpage sections
* fix displaying of .Nx mdoc macro
* convert scripts requiring bash to ksh
* nuke a shutload of GNU make idiotisms
* add pregenerated manpages - help2man is just bloat
* increase shlib versions after fchroot addition
* adjust and unbreak mk.conf after recent changes
* fix boot system version number after CD boot changes
* understand why Makefile.bsd-wrapper is needed as filename. Finally.
* regenerate files after syscalls.master change
* fix RCS Id detection and generation while here
* remove unused archs while there
* use __RCSID() macro in ssh ifdef __MirBSD__
* build ssh with -Werror, too

Note: this is a pre-snapshot, pre-build commit. Nothing
of this has actually been tested.

Like I said, please wait for the snapshot. Though, the
snapshot doesn't have any more circumstances preventing
me from working towards a release and upload now.
@
text
@d1 1
a1 1
# $MirBSD: Make-lang.in,v 1.6 2004/03/09 21:10:47 tg Exp $
d73 2
a74 2
GPC_GCC_VERSION_H_=target.h dbxout.h $(LIBIBERTY_DIR)/../include/libiberty.h
GPC_GCC_VERSION_H_2=gansidecl.h dbxout.h $(LIBIBERTY_DIR)/../include/libiberty.h
@


1.6
log
@* nuke obsolete files and parts of files
* enable pascal frontend
* enable CPIO naming convention:
  sv4cpio = .cpio
  sv4crc  = .cpio
  sv4cpio gzipped = .ngz (newc/gz)
  svrcrc  gzipped = .cgz (crc/gz)
* all packages are .cgz, all sets are .ngz
* add hooks for gjc frontend
* add stubbed out gpc and gjc rts hooks in src/gnu/gcc/Makefile
* enable java frontend (with almost no changes; this is what I
  call a _really_ nice langspec-subdir... amazing)
* bump patchlevel for these changes
* better document some changes
* matthieu@@openbsd.org assured me we need no X piclibs any more
* improve comments
* export whole libz to XFree86 .a modules
* correct usage of languages when bootstrapping gcc
* fix MKC_PGCC when USE_GCC3=no (since USE_GCC3 is a post-#7
  thing, and ports/lang/egcs is not available for -current)
* install man- and texinfopages for gpc

most of this stuff is tested. however, I *strongly* recommend
to not update, but rather wait for the next snapshot.

Now missing:
* pascal RTS
* a port for libgjc (I won't like it in base, due to the
  _heavy_ overhead (jar, ffi, boehm-gc*cough*, ...), but
  since the compiler is there, it should be easy)
* test pascal (c, cp, f, objc, and ada are fine already)
* test gcov? (proto is fine, all right)
* documentation improvements
* quality tests and improvements
* more ~/.etc
* get the damn cvs conflict script right ;)

Next projects:
* update binutils
* sync with openbsd
* rewrite large parts of build system
* write boot loader
* rewrite install system
@
text
@d1 1
a1 1
# $MirBSD: Make-lang.in,v 1.5 2004/03/02 10:32:08 tg Exp $
a121 5
BISON=bison
BISONFLAGS=
FLEX=flex
FLEXFLAGS=

a127 16
# Can be overwritten (empty) to avoid installing the documentation
PASCAL_INSTALL_DOC= #pascal.real-install-doc

# Where to install the documentation and demos (relative to the prefix)
P_DOC_DIR=doc/gpc
p_inst_docdir=$(prefix)/$(P_DOC_DIR)
p_inst_demodir=$(p_inst_docdir)/demos
p_inst_docdemodir=$(p_inst_docdir)/docdemos

# How to create the GPC binary distribution archive. tar can be given extra
# flags (e.g. `--owner=root --group=root' with newer versions of GNU tar),
# and for Dos hosts, MAKEGPCBINDIST needs to be overwritten completely ...
GPC_TARFLAGS=czf
MAKEGPCBINDIST=tar $(GPC_TARFLAGS) ../gpc-$$version.$(target).tar.gz
MAKEGPCWITHGCCBINDIST=tar $(GPC_TARFLAGS) ../gpc-$$version-with-gcc.$(target).tar.gz

a196 149
# Flags to pass when running the test suite.
TEST_FLAGS_TO_PASS=\
	MASK="$(MASK)" \
	EXTRA_TEST_PFLAGS="$(PFLAGS) $(EXTRA_TEST_PFLAGS)" \
	TEST_RUN_FLAGS="$(TEST_RUN_FLAGS)"

GPC_GENERAL_TEXI=\
 $(srcdir)/p/doc/macros.texi \
 $(srcdir)/p/doc/generated/version.texi

GPC_GENERATED_TEXI=\
 $(srcdir)/p/doc/generated/version.texi \
 $(srcdir)/p/doc/generated/lang-options.texi \
 $(srcdir)/p/doc/generated/keyword.texi \
 $(srcdir)/p/doc/generated/gpcpas.texi \
 $(srcdir)/p/doc/generated/crt.texi \
 $(srcdir)/p/doc/generated/dos.texi \
 $(srcdir)/p/doc/generated/dosunix.texi \
 $(srcdir)/p/doc/generated/fileutils.texi \
 $(srcdir)/p/doc/generated/gmp.texi \
 $(srcdir)/p/doc/generated/gpcutil.texi \
 $(srcdir)/p/doc/generated/heapmon.texi \
 $(srcdir)/p/doc/generated/intl.texi \
 $(srcdir)/p/doc/generated/md5.texi \
 $(srcdir)/p/doc/generated/overlay.texi \
 $(srcdir)/p/doc/generated/pipe.texi \
 $(srcdir)/p/doc/generated/ports.texi \
 $(srcdir)/p/doc/generated/printer.texi \
 $(srcdir)/p/doc/generated/regex.texi \
 $(srcdir)/p/doc/generated/strings.texi \
 $(srcdir)/p/doc/generated/stringutils.texi \
 $(srcdir)/p/doc/generated/system.texi \
 $(srcdir)/p/doc/generated/tfdd.texi \
 $(srcdir)/p/doc/generated/trap.texi \
 $(srcdir)/p/doc/generated/turbo3.texi \
 $(srcdir)/p/doc/generated/windos.texi

GPC_COMMON_TEXI=\
 $(srcdir)/p/doc/macros.texi \
 $(srcdir)/p/doc/contributors.texi \
 $(GPC_GENERATED_TEXI)

GPC_TEXI_EN=\
 $(GPC_COMMON_TEXI) \
 $(srcdir)/p/doc/en/gpc.texi \
 $(srcdir)/p/doc/en/welcome.texi \
 $(srcdir)/p/doc/en/purpose.texi \
 $(srcdir)/p/doc/en/about.texi \
 $(srcdir)/p/doc/en/news.texi \
 $(srcdir)/p/doc/en/faq.texi \
 $(srcdir)/p/doc/en/libs.texi \
 $(srcdir)/p/doc/en/install.texi \
 $(srcdir)/p/doc/en/bpqstart.texi \
 $(srcdir)/p/doc/en/invoke.texi \
 $(srcdir)/p/doc/en/programming.texi \
 $(srcdir)/p/doc/en/reference.texi \
 $(srcdir)/p/doc/en/keywords.texi \
 $(srcdir)/p/doc/en/support.texi \
 $(srcdir)/p/doc/en/todo.texi \
 $(srcdir)/p/doc/en/internals.texi \
 $(srcdir)/p/doc/en/resources.texi \
 $(srcdir)/p/doc/en/authors.texi \
 $(srcdir)/p/doc/en/copying.texi \
 $(srcdir)/p/doc/en/copying-lib.texi \
 $(srcdir)/p/doc/en/copying-demo.texi \
 $(srcdir)/p/doc/en/gnu.texi \
 $(srcdir)/p/doc/en/gpcs.texi

GPC_TEXI_DE=\
 $(GPC_COMMON_TEXI) \
 $(srcdir)/p/doc/de/gpcs.texi

# @@@@ Some files are not translated yet -- use the English versions for now
GPC_TEXI_HR=\
 $(GPC_COMMON_TEXI) \
 $(srcdir)/p/doc/hr/gpc.texi \
 $(srcdir)/p/doc/hr/welcome.texi \
 $(srcdir)/p/doc/hr/purpose.texi \
 $(srcdir)/p/doc/hr/about.texi \
 $(srcdir)/p/doc/en/news.texi \
 $(srcdir)/p/doc/hr/faq.texi \
 $(srcdir)/p/doc/hr/libs.texi \
 $(srcdir)/p/doc/en/install.texi \
 $(srcdir)/p/doc/en/bpqstart.texi \
 $(srcdir)/p/doc/hr/invoke.texi \
 $(srcdir)/p/doc/en/programming.texi \
 $(srcdir)/p/doc/en/reference.texi \
 $(srcdir)/p/doc/hr/keywords.texi \
 $(srcdir)/p/doc/hr/support.texi \
 $(srcdir)/p/doc/en/todo.texi \
 $(srcdir)/p/doc/en/internals.texi \
 $(srcdir)/p/doc/hr/resources.texi \
 $(srcdir)/p/doc/hr/authors.texi \
 $(srcdir)/p/doc/en/copying.texi \
 $(srcdir)/p/doc/en/copying-lib.texi \
 $(srcdir)/p/doc/en/copying-demo.texi \
 $(srcdir)/p/doc/en/gnu.texi \
 $(srcdir)/p/doc/hr/gpcs.texi

# @@@@ Some files are not translated yet -- use the English versions for now
GPC_TEXI_ES=\
 $(GPC_COMMON_TEXI) \
 $(srcdir)/p/doc/es/gpc.texi \
 $(srcdir)/p/doc/en/welcome.texi \
 $(srcdir)/p/doc/es/purpose.texi \
 $(srcdir)/p/doc/es/about.texi \
 $(srcdir)/p/doc/es/news.texi \
 $(srcdir)/p/doc/en/faq.texi \
 $(srcdir)/p/doc/es/libs.texi \
 $(srcdir)/p/doc/es/install.texi \
 $(srcdir)/p/doc/es/bpqstart.texi \
 $(srcdir)/p/doc/es/invoke.texi \
 $(srcdir)/p/doc/es/programming.texi \
 $(srcdir)/p/doc/es/reference.texi \
 $(srcdir)/p/doc/es/keywords.texi \
 $(srcdir)/p/doc/en/support.texi \
 $(srcdir)/p/doc/en/todo.texi \
 $(srcdir)/p/doc/es/internals.texi \
 $(srcdir)/p/doc/en/resources.texi \
 $(srcdir)/p/doc/es/authors.texi \
 $(srcdir)/p/doc/en/copying.texi \
 $(srcdir)/p/doc/en/copying-lib.texi \
 $(srcdir)/p/doc/en/copying-demo.texi \
 $(srcdir)/p/doc/en/gnu.texi \
 $(srcdir)/p/doc/es/gpcs.texi

RTS_GENERATED_FILES=\
 $(RTSSRCDIR)/acconfig.h \
 $(RTSSRCDIR)/configure \
 $(RTSSRCDIR)/rts-config.in \
 $(RTSSRCDIR)/gpc.pas

GPC_GENERATED_FILES=\
 $(GPC_GENERATED_TEXI) \
 $(srcdir)/p/parse.c \
 $(srcdir)/p/parse.h \
 $(srcdir)/p/units/crtc.h \
 $(srcdir)/p/doc/generated/gpc-run.1 \
 $(RTS_GENERATED_FILES)

GPC_DOC_DIRS_EN=-I $(srcdir)/p/doc -I $(srcdir)/p/doc/en -I $(srcdir)/p/doc/generated
GPC_DOC_DIRS_DE=-I $(srcdir)/p/doc -I $(srcdir)/p/doc/de -I $(srcdir)/p/doc/generated
GPC_DOC_DIRS_HR=-I $(srcdir)/p/doc -I $(srcdir)/p/doc/hr -I $(srcdir)/p/doc/generated -I $(srcdir)/p/doc/en
GPC_DOC_DIRS_ES=-I $(srcdir)/p/doc -I $(srcdir)/p/doc/es -I $(srcdir)/p/doc/generated -I $(srcdir)/p/doc/en
MAKEINFO_EN=LANG=en_GB LC_ALL=en_GB $(MAKEINFO) $(MAKEINFOFLAGS) $(GPC_DOC_DIRS_EN)
MAKEINFO_DE=LANG=de_DE LC_ALL=de_DE $(MAKEINFO) $(MAKEINFOFLAGS) $(GPC_DOC_DIRS_DE)
MAKEINFO_HR=LANG=hr_HR LC_ALL=hr_HR $(MAKEINFO) $(MAKEINFOFLAGS) $(GPC_DOC_DIRS_HR)
MAKEINFO_ES=LANG=es_ES LC_ALL=es_ES $(MAKEINFO) $(MAKEINFOFLAGS) $(GPC_DOC_DIRS_ES)

d198 2
a199 2
Pascal pascal: xgpc$(exeext) gpc1$(exeext) gpcpp$(exeext) gpc-run specs \
               pascal.info #pascal.utils pascal.rts pascal.generated-files pascal.docdemos
a203 5
# Create all files in the source directory that can be created automatically
pascal.generated-files: $(GPC_GENERATED_FILES) pascal.info

pascal.cvsfiles: $(srcdir)/p/INSTALL

a225 9
pascal.generated-manpages:

pascal.docdemos: p/stamp-docdemos
p/stamp-docdemos: $(GPC_TEXI_EN)
	rm -rf p/docdemos
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs p/docdemos
	$(SHELL) $(srcdir)/p/script/extract-doc-demos -o p/docdemos $(srcdir)/p/doc/*.texi $(srcdir)/p/doc/generated/*.texi $(srcdir)/p/doc/en/*.texi
	$(STAMP) "$@@"

a246 3
$(srcdir)/p/doc/generated/gpc-run.1: $(srcdir)/p/script/gpc-run $(VERSION_FILENAME)
	help2man -N "${.ALLSRC:M*gpc-run}" | sed -e s/@@version@@/$(gpc_version)/ > "$@@" || { rm -f "$@@"; false; }

a370 41
#p/parse.c p/parse.h: $(srcdir)/p/parse.y
#	cd p && $(BISON) $(BISONFLAGS) -o parse.c $(srcdir)/p/parse.y

pascal.utils: xgpc$(exeext) gpc1$(exeext) gpcpp$(exeext) pascal.rts
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs p/utils
	srcdir=`cd $(srcdir) && pwd` && cd ./p/utils && $(MAKE) -f "$$srcdir/p/utils/Makefile" $(UTILS_FLAGS_TO_PASS) GCC_DIR="$$srcdir" all

# Let the RTS Makefile make its generated files. Use `force' here
# because we don't know their dependencies here. Use Makefile.in in
# RTS source directory, so this can be run from the GPC source directory.
#
# @@@@ I tried the following (so the RTS make is invoked only once, not once per
#    RTS generated file), but it doesn't work -- when, e.g. rts/files.pas is
#    modified, rts/gpc.pas is rebuilt, but doc/generated/gpcpas.texi (which
#    depends on the latter) is not. Strange make ... :-( -- Frank
# $(RTS_GENERATED_FILES): rts-generated-files
# rts-generated-files: force
$(RTS_GENERATED_FILES): force
	cd $(RTSSRCDIR) && $(MAKE) -f Makefile.in srcdir=. $(RTS_FLAGS_TO_PASS) generated-files

# The configuration of the Run Time System relies on an autoconf-type
# configure, not a Cygnus-type one. It needs to be run *after* the
# appropriate (cross-)compiler has been built, thus depend on GCC_PARTS.
# dj: Depending on $(GCC_PARTS) here is bad news - very bad news.
# mk: but it needs $(EXTRA_OBJS) and $(LIBGCC), what to do?
# fh: $(GCC_PARTS) doesn't include the Pascal compiler, so I added explicit
# dependencies (for pascal.rts).
# Depending on `stmp-headers' used to ensure that float.h has been built;
# now it's only needed by rts/configure, hope that's not so important.
p/rts/Makefile: $(GCC_PARTS) \
 $(RTSSRCDIR)/Makefile.in $(RTSSRCDIR)/configure $(RTSSRCDIR)/rts-config.in
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs p/rts
	src=`cd $(srcdir) && pwd` && \
	cd ./p/rts && \
	$(RTS_COMPILERS) CONFIG_SITE=nonexisting-file \
	$$src/p/rts/configure --silent > /dev/null --srcdir=$$src/p/rts \
	 `if [ x$(WITH_SHARED) = xyes ]; then echo '--with-shared'; fi`

pascal.rts: p/rts/Makefile xgpc$(exeext) gpc1$(exeext) gpcpp$(exeext)
	cd ./p/rts && $(MAKE) $(RTS_COMPILERS) $(RTS_FLAGS_TO_PASS) all

a379 1
pascal.dvi: gpc.dvi
d381 1
a381 1
p/doc/info/gpc.info: $(GPC_TEXI_EN)
d386 1
a386 1
p/doc/info/gpcs.info: $(GPC_TEXI_EN)
d391 2
a392 80
gpc.dvi: $(GPC_TEXI_EN)
	TEXINPUTS=$(srcdir)/p/doc:$(srcdir)/p/doc/images:$$TEXINPUTS \
	LANG=en_GB LC_ALL=en_GB MAKEINFO="$(MAKEINFO) $(MAKEINFOFLAGS) $(GPC_DOC_DIRS_EN)" \
	texi2dvi -t @@afourpaper $(GPC_DOC_DIRS_EN) -b $(srcdir)/p/doc/en/gpc.texi > gpc.to # TeX is way too noisy ...
	if grep -i overfull gpc.to gpc.log; then false; else true; fi
	cp $(srcdir)/p/doc/images/GnuPascal.eps .

gpc.ps: gpc.dvi
	dvips -q -o gpc.ps gpc.dvi

# pdftex uses TEXPSHEADERS to search for GnuPascal.pdf -- some versions use TEXINPUTS now ...
gpc.pdf: $(GPC_TEXI_EN)
	srcdir=`cd $(srcdir) && pwd` && \
	TEXINPUTS=$$srcdir/p/doc:$$srcdir/p/doc/images:$$TEXINPUTS \
	TEXPSHEADERS=$$srcdir/p/doc/images:$$TEXPSHEADERS \
	LANG=en_GB LC_ALL=en_GB MAKEINFO="$(MAKEINFO) $(MAKEINFOFLAGS) $(GPC_DOC_DIRS_EN)" \
	texi2pdf -t @@afourpaper $(GPC_DOC_DIRS_EN) -b $(srcdir)/p/doc/en/gpc.texi > gpc.po # TeX is way too noisy ...
	if grep -i overfull gpc.po gpc.log; then false; else true; fi

gpc.txt: $(GPC_TEXI_EN)
	$(MAKEINFO_EN) --no-headers --force -o "$@@" $(srcdir)/p/doc/en/gpc.texi

HTML_DIR=./p/html

p/stamp-gpc-html: $(GPC_TEXI_EN) $(GPC_TEXI_DE) $(GPC_TEXI_HR) $(GPC_TEXI_ES)
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs $(HTML_DIR)
	-rm -rf $(HTML_DIR)/gpc $(HTML_DIR)/gpc-hr $(HTML_DIR)/gpc-es
	$(MAKEINFO_EN) --html --no-split -o $(HTML_DIR)/gpcs-en.html $(srcdir)/p/doc/en/gpcs.texi
	$(MAKEINFO_DE) --html --no-split -o $(HTML_DIR)/gpcs-de.html $(srcdir)/p/doc/de/gpcs.texi
	$(MAKEINFO_HR) --html --no-split -o $(HTML_DIR)/gpcs-hr.html $(srcdir)/p/doc/hr/gpcs.texi
	$(MAKEINFO_ES) --html --no-split -o $(HTML_DIR)/gpcs-es.html $(srcdir)/p/doc/es/gpcs.texi
	$(MAKEINFO_EN) --html $(GPC_DOC_DIRS_EN) -o $(HTML_DIR)/gpc $(srcdir)/p/doc/en/gpc.texi
	$(MAKEINFO_HR) --html $(GPC_DOC_DIRS_HR) -o $(HTML_DIR)/gpc-hr $(srcdir)/p/doc/hr/gpc.texi
	$(MAKEINFO_ES) --html $(GPC_DOC_DIRS_ES) -o $(HTML_DIR)/gpc-es $(srcdir)/p/doc/es/gpc.texi
	cd $(HTML_DIR) && tar --owner=root --group=root --mode=u=rwX,go=rX --use-compress-program=bzip2 -cf gpc-html.tar.bz2 gpc gpcs-en.html
	cd $(HTML_DIR) && tar --owner=root --group=root --mode=u=rwX,go=rX --use-compress-program=bzip2 -cf gpc-hr-html.tar.bz2 gpc-hr gpcs-hr.html
	cd $(HTML_DIR) && tar --owner=root --group=root --mode=u=rwX,go=rX --use-compress-program=bzip2 -cf gpc-es-html.tar.bz2 gpc-es gpcs-es.html
	$(STAMP) "$@@"

pascal.html: p/stamp-pascal-html
# @@@@ This rule also depends on $(srcdir)/p/doc/images/* and $(srcdir)/p/demos/*,
# but wildcards aren't allowed here and I don't want to put the whole list of files
# there. So, you'll have to force rebuilding when you only change one of those.
p/stamp-pascal-html: p/stamp-gpc-html gpc.dvi gpc.ps gpc.pdf \
 $(srcdir)/p/doc/languages \
 $(srcdir)/p/doc/en/index.html.in $(srcdir)/p/doc/hr/index.html.in $(srcdir)/p/doc/es/index.html.in \
 $(srcdir)/p/doc/en/homepage.def $(srcdir)/p/doc/hr/homepage.def $(srcdir)/p/doc/es/homepage.def \
 $(srcdir)/p/COPYING $(srcdir)/p/COPYING.LIB $(srcdir)/p/COPYING.DEMO $(VERSION_FILENAME)
	cp -f $(srcdir)/p/COPYING $(srcdir)/p/COPYING.LIB $(srcdir)/p/COPYING.DEMO gpc.dvi gpc.ps gpc.pdf $(HTML_DIR)
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs $(HTML_DIR)/images $(HTML_DIR)/demos
	for f in $(srcdir)/p/doc/images/*; do \
	  case "$$f" in \
	    */CVS|*/README) : ;; \
	    *) cp -f "$$f" $(HTML_DIR)/images || exit 1;; \
	  esac; \
	done
	for f in $(srcdir)/p/demos/*; do \
	  case "$$f" in \
	    */CVS|*/README) : ;; \
	    *) cp -f "$$f" $(HTML_DIR)/demos || exit 1;; \
	  esac; \
	done
	rm -f $(HTML_DIR)/gpc.dvi.bz2 $(HTML_DIR)/gpc.ps.bz2
	bzip2 $(HTML_DIR)/gpc.dvi $(HTML_DIR)/gpc.ps
	{ echo 'RedirectMatch (^/$$) http://www.gnu-pascal.de/gpc/h-index.html'; \
	  echo 'RedirectMatch (^/todo.html$$) http://www.gnu-pascal.de/gpc/h-todo.html'; } > $(HTML_DIR)/.htaccess
	echo '<meta http-equiv="refresh" content="0; url=gpc/h-index.html">' > $(HTML_DIR)/index.html
	echo '<meta http-equiv="refresh" content="0; url=gpc/h-todo.html">' > $(HTML_DIR)/todo.html
	$(SHELL) $(srcdir)/p/script/make-homepage $(gpc_version) $(srcdir)/p/doc $(HTML_DIR) en gpc
	$(SHELL) $(srcdir)/p/script/make-homepage $(gpc_version) $(srcdir)/p/doc $(HTML_DIR) hr gpc-hr
	$(SHELL) $(srcdir)/p/script/make-homepage $(gpc_version) $(srcdir)/p/doc $(HTML_DIR) es gpc-es
	$(SHELL) $(srcdir)/p/script/make-homepage-gpcs $(srcdir)/p/doc $(HTML_DIR) en
	$(SHELL) $(srcdir)/p/script/make-homepage-gpcs $(srcdir)/p/doc $(HTML_DIR) hr
	$(SHELL) $(srcdir)/p/script/make-homepage-gpcs $(srcdir)/p/doc $(HTML_DIR) es
	$(SHELL) $(srcdir)/p/script/make-homepage-gpcs $(srcdir)/p/doc $(HTML_DIR) de
	chmod -R go+rX $(HTML_DIR)
	$(STAMP) "$@@"

pascal.html-dist: p/stamp-pascal-html
	r=$(gpc_version) && cd ./p && tar $(GPC_TARFLAGS) ../gpc-html-$$r.tar.gz html
a398 5
pascal.install-info-man-dirs:
	for directory in $(infodir) $(man1dir); do \
	  $(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs -m a+rx $(DESTDIR)$$directory || exit 1; \
	done

a399 4
	for directory in $(prefix) $(bindir) $(unitsubdir) $(libsubdir)/include \
	                 $(infodir) $(p_inst_docdir) $(p_inst_demodir) $(p_inst_docdemodir) $(man1dir); do \
	  $(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs -m a+rx $(DESTDIR)$$directory || exit 1; \
	done
d421 1
a421 34
pascal.install-utils: #pascal.utils
	srcdir=`cd $(srcdir) && pwd` && \
	bindir=$(DESTDIR)`cd "$(bindir)"; pwd` && \
	man1dir=$(DESTDIR)`cd "$(man1dir)"; pwd` && \
	cd ./p/utils && $(MAKE) -f "$$srcdir/p/utils/Makefile" $(UTILS_FLAGS_TO_PASS) GCC_DIR="$$srcdir" bindir="$$bindir" man1dir="$$man1dir" install

pascal.install-lib: pascal.install-dir #pascal.rts
	if [ -f libgpc.a ]; then \
	  rm -f $(DESTDIR)$(libsubdir)/libgpc.a; \
	  if $(RANLIB_TEST_FOR_TARGET); then \
	    $(RANLIB_FOR_TARGET) libgpc.a || exit 1; \
	  fi; \
	  $(INSTALL_DATA) libgpc.a $(DESTDIR)$(libsubdir)/libgpc.a && \
	  chmod a-x $(DESTDIR)$(libsubdir)/libgpc.a || exit 1; \
	fi
	for f in .. $(GPC_EXTRA_INSTALL_LIBS); do \
	  if [ x"$$f" != x.. ]; then \
	    $(INSTALL_DATA) "$$f" "$(DESTDIR)$(libsubdir)/`echo "$$f" | sed -e 's,.*/,,'`" || exit 1; \
	  fi; \
	done
	if [ x$(WITH_SHARED) = xyes ] && [ -f $(GPCSOLIBNAME) ]; then \
	  $(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs -m a+rx $(DESTDIR)$(prefix)/$(GPCSOLIBDIR) && \
	  rm -f $(DESTDIR)$(libsubdir)/$(GPCSOLIBSHORTNAME) $(DESTDIR)$(prefix)/$(GPCSOLIBDIR)/$(GPCSOLIBNAME); \
	  $(INSTALL_DATA) $(GPCSOLIBNAME) $(prefix)/$(GPCSOLIBDIR)/$(GPCSOLIBNAME) && \
	  chmod a-x $(DESTDIR)$(prefix)/$(GPCSOLIBDIR)/$(GPCSOLIBNAME) && \
	  $(SYMLINK) $(real_prefix)/$(GPCSOLIBDIR)/$(GPCSOLIBNAME) $(DESTDIR)$(libsubdir)/$(GPCSOLIBSHORTNAME); \
	else \
	  true; \
	fi

pascal.install-units: pascal.install-dir $(srcdir)/p/units/crtc.h $(RTSSRCDIR)/gpc.pas
#	$(INSTALL_DATA) p/rts/rts-config.inc $(DESTDIR)$(unitsubdir)/rts-config.inc
#	$(INSTALL_DATA) $(RTSSRCDIR)/gpc.pas $(DESTDIR)$(unitsubdir)/gpc.pas
#	chmod a-x $(DESTDIR)$(unitsubdir)/rts-config.inc $(DESTDIR)$(unitsubdir)/gpc.pas
a433 117
# AIX has tight command-line length limits which would be exceeded
# in `rm -f $(p_inst_docdemodir)/*' or `chmod a-x $(p_inst_docdemodir)/*',
# probably also (soon) in `cd ./p/docdemos && echo *'
pascal.install-doc: $(PASCAL_INSTALL_DOC)
pascal.real-install-doc: pascal.install-dir $(srcdir)/p/README \
 $(srcdir)/p/NEWS $(srcdir)/p/FAQ $(srcdir)/p/AUTHORS \
 $(srcdir)/p/COPYING $(srcdir)/p/COPYING.LIB $(srcdir)/p/COPYING.DEMO $(srcdir)/p/test/README pascal.docdemos
	for f in README NEWS INSTALL FAQ AUTHORS COPYING COPYING.LIB COPYING.DEMO; do \
	  rm -f "$(DESTDIR)$(p_inst_docdir)/$$f"; \
	  $(INSTALL_DATA) "$(srcdir)/p/$$f" "$(DESTDIR)$(p_inst_docdir)/$$f" || exit 1; \
	  chmod a-x "$(DESTDIR)$(p_inst_docdir)/$$f"; \
	done
	rm -f "$(DESTDIR)$(p_inst_docdir)/BUGS"
	$(INSTALL_DATA) "$(srcdir)/p/test/README" "$(DESTDIR)$(p_inst_docdir)/BUGS"
	for f in `cd "$(srcdir)/p/demos" && echo *`; do \
	  if [ "$$f" != CVS ]; then \
	    rm -f "$(DESTDIR)$(p_inst_demodir)/$$f"; \
	    $(INSTALL_DATA) "$(srcdir)/p/demos/$$f" "$(DESTDIR)$(p_inst_demodir)/$$f" || exit 1; \
	  fi \
	done
	chmod a-x "$(DESTDIR)$(p_inst_docdir)/BUGS" "$(DESTDIR)$(p_inst_demodir)"/*
	if [ "`cd ./p/docdemos && echo a*`" != "a*" ]; then \
	  (cd "$(DESTDIR)$(p_inst_docdemodir)"; for f in *; do rm -f "$$f"; done) && \
	  for f in `cd ./p/docdemos && echo *`; do \
	    rm -f "$(DESTDIR)$(p_inst_docdemodir)/$$f"; \
	    $(INSTALL_DATA) "p/docdemos/$$f" "$(DESTDIR)$(p_inst_docdemodir)/$$f" && \
	    chmod a-x "$(DESTDIR)$(p_inst_docdemodir)/$$f" || exit 1; \
	  done; \
	fi

pascal.install-info: pascal.install-info-man-dirs pascal.info
	rm -f $(DESTDIR)$(infodir)/gpc.info* $(DESTDIR)$(infodir)/gpcs.info* $(DESTDIR)$(infodir)/gpcs-de.info* $(DESTDIR)$(infodir)/gpcs-hr.info* $(DESTDIR)$(infodir)/gpcs-es.info*
	for f in `cd p/doc/info && echo gpc.info* gpcs*.info*`; do \
	  $(INSTALL_DATA) p/doc/info/$$f $(DESTDIR)$(infodir)/$$f || exit 1; \
	done
	chmod a-x $(DESTDIR)$(infodir)/gpc.info* $(DESTDIR)$(infodir)/gpcs.info* $(DESTDIR)$(infodir)/gpcs-de.info* $(DESTDIR)$(infodir)/gpcs-hr.info* $(DESTDIR)$(infodir)/gpcs-es.info*

pascal.install-man: pascal.install-info-man-dirs $(srcdir)/p/doc/en/gpc.1 $(srcdir)/p/doc/generated/gpc-run.1
	-if [ -f gpc1$(exeext) ]; then \
	  if [ -f gpc-cross$(exeext) ]; then \
	    rm -f $(DESTDIR)$(man1dir)/$(GPC_CROSS_NAME)$(man1ext); \
	    $(INSTALL_DATA) $(srcdir)/p/doc/en/gpc.1 $(DESTDIR)$(man1dir)/$(GPC_CROSS_NAME)$(man1ext); \
	    chmod a-x $(DESTDIR)$(man1dir)/$(GPC_CROSS_NAME)$(man1ext); \
	  else \
	    rm -f $(DESTDIR)$(man1dir)/$(GPC_INSTALL_NAME)$(man1ext); \
	    $(INSTALL_DATA) $(srcdir)/p/doc/en/gpc.1 $(DESTDIR)$(man1dir)/$(GPC_INSTALL_NAME)$(man1ext); \
	    chmod a-x $(DESTDIR)$(man1dir)/$(GPC_INSTALL_NAME)$(man1ext); \
	  fi; \
	else \
	  true; \
	fi
	rm -f $(DESTDIR)$(man1dir)/gpc-run$(man1ext)
	$(INSTALL_DATA) $(srcdir)/p/doc/generated/gpc-run.1 $(DESTDIR)$(man1dir)/gpc-run$(man1ext)
	chmod a-x $(DESTDIR)$(man1dir)/gpc-run$(man1ext)

pascal.install-hr: pascal.install-info-hr pascal.install-man-hr

pascal.install-info-hr: pascal.install-info-man-dirs pascal.info
	rm -f $(DESTDIR)$(infodir)/gpc-hr.info* $(DESTDIR)$(infodir)/gpcs-hr.info*
	for f in `cd p/doc/info && echo gpc-hr.info* gpcs-hr.info*`; do \
	  $(INSTALL_DATA) p/doc/info/$$f $(DESTDIR)$(infodir)/$$f || exit 1; \
	done
	chmod a-x $(DESTDIR)$(infodir)/gpc-hr.info* $(DESTDIR)$(infodir)/gpcs-hr.info*

pascal.install-man-hr: pascal.install-info-man-dirs $(srcdir)/p/doc/hr/gpc.1
	-if [ -f gpc1$(exeext) ]; then \
	  if [ -f gpc-cross$(exeext) ]; then \
	    rm -f $(DESTDIR)$(man1dir)/$(GPC_CROSS_NAME)-hr$(man1ext); \
	    $(INSTALL_DATA) $(srcdir)/p/doc/hr/gpc.1 $(DESTDIR)$(man1dir)/$(GPC_CROSS_NAME)-hr$(man1ext); \
	    chmod a-x $(DESTDIR)$(man1dir)/$(GPC_CROSS_NAME)-hr$(man1ext); \
	  else \
	    rm -f $(DESTDIR)$(man1dir)/$(GPC_INSTALL_NAME)-hr$(man1ext); \
	    $(INSTALL_DATA) $(srcdir)/p/doc/en/gpc.1 $(DESTDIR)$(man1dir)/$(GPC_INSTALL_NAME)-hr$(man1ext); \
	    chmod a-x $(DESTDIR)$(man1dir)/$(GPC_INSTALL_NAME)-hr$(man1ext); \
	  fi; \
	else \
	  true; \
	fi

pascal.install-es: pascal.install-info-es

pascal.install-info-es: pascal.install-info-man-dirs pascal.info
	rm -f $(DESTDIR)$(infodir)/gpc-es.info* $(DESTDIR)$(infodir)/gpcs-es.info*
	for f in `cd p/doc/info && echo gpc-es.info* gpcs-es.info*`; do \
	  $(INSTALL_DATA) p/doc/info/$$f $(DESTDIR)$(infodir)/$$f || exit 1; \
	done
	chmod a-x $(DESTDIR)$(infodir)/gpc-es.info* $(DESTDIR)$(infodir)/gpcs-es.info*

# Install gpc1 et.al.
# Do *not* overwrite files if they exist.
pascal.install-compiler: pascal.install-dir #pascal
	for file in gpc1$(exeext); do \
	  if [ -f $$file ]; then \
	    rm -f $(DESTDIR)$(libsubdir)/$$file; \
	    $(INSTALL_PROGRAM) $$file $(DESTDIR)$(libsubdir)/$$file || exit 1; \
	  fi; \
	done; exit 0
	for file in $(EXTRA_PASSES) $(EXTRA_PROGRAMS) $(USE_COLLECT2) ..; do \
	  if [ x"$$file" != x.. ] && [ ! -f $(DESTDIR)$(libsubdir)/$$file ]; then \
	    $(INSTALL_PROGRAM) $$file $(DESTDIR)$(libsubdir)/$$file || exit 1; \
	  fi; \
	done; exit 0
	for file in $(EXTRA_PARTS) ..; do \
	  if [ x"$$file" != x.. ] && [ ! -f $(DESTDIR)$(libsubdir)/$$file ]; then \
	    $(INSTALL_DATA) $$file $(DESTDIR)$(libsubdir)/$$file && \
	    chmod a-x $(DESTDIR)$(libsubdir)/$$file || exit 1; \
	  fi; \
	done; exit 0
# Don't mess with specs if it doesn't exist yet.
	if [ -f specs ] && [ ! -f $(DESTDIR)$(libsubdir)/specs ]; then \
	  $(INSTALL_DATA) specs $(DESTDIR)$(libsubdir)/specs && \
	  chmod a-x $(DESTDIR)$(libsubdir)/specs || exit 1; \
	fi; exit 0

#pascal.install-normal: pascal.install-common pascal.install-compiler \
# install-gpcpp pascal.install-utils pascal.install-lib pascal.install-man \
# pascal.install-info pascal.install-units pascal.install-doc
a435 5
# This target will install GPC into an existing GCC installation,
# without overwriting existing files.
# The semicolon is to prevent the install.sh -> install default rule
# from doing anything.  Having it run true helps avoid problems and
# noise from versions of make which don't like to have null commands.
a437 69
pascal.install-with-gcc: $(INSTALL_HEADERS) pascal.install $(INSTALL_LIBGCC)
	for file in $(GCC_PASSES); do \
	  if [ x"$$file" != x"xgcc$(exeext)" ]; then \
	    rm -f $(DESTDIR)$(libsubdir)/$$file; \
	    $(INSTALL_PROGRAM) $$file $(DESTDIR)$(libsubdir)/$$file || exit 1; \
	  fi; \
	done; exit 0

pascal.uninstall:
	-rm -rf $(DESTDIR)$(bindir)/$(GPC_INSTALL_NAME)$(exeext)
	-rm -rf $(DESTDIR)$(bindir)/$(GPC_CROSS_NAME)$(exeext)
	-rm -rf $(DESTDIR)$(man1dir)/$(GPC_INSTALL_NAME)$(man1ext)
	-rm -rf $(DESTDIR)$(man1dir)/$(GPC_INSTALL_NAME)-hr$(man1ext)
	-rm -rf $(DESTDIR)$(man1dir)/$(GPC_CROSS_NAME)$(man1ext)
	-rm -rf $(DESTDIR)$(man1dir)/$(GPC_CROSS_NAME)-hr$(man1ext)
	-rm -rf $(DESTDIR)$(man1dir)/gpc-run$(man1ext)

pascal.bindist: #pascal
	tmp_base=`pwd`/tmp && \
	tmp_prefix=$$tmp_base/$(install_prefix) && \
	rm -rf $$tmp_base && \
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs -m a+rx $$tmp_prefix && \
	$(MAKE) pascal.install $(GPC_INSTALL_FLAGS_TO_PASS) "real_prefix=$(real_prefix)" prefix=$$tmp_prefix && \
	version=$(gpc_version) && (cd $$tmp_base && $(MAKEGPCBINDIST) *) && \
	cd $(srcdir) && rm -rf $$tmp_base

pascal.bindist-with-gcc: #pascal
	tmp_base=`pwd`/tmp && \
	tmp_prefix=$$tmp_base/$(install_prefix) && \
	rm -rf $$tmp_base && \
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs -m a+rx $$tmp_prefix && \
	$(MAKE) pascal.install-with-gcc $(GPC_INSTALL_FLAGS_TO_PASS) "real_prefix=$(real_prefix)" prefix=$$tmp_prefix && \
	version=$(gpc_version) && (cd $$tmp_base && $(MAKEGPCWITHGCCBINDIST) *) && \
	cd $(srcdir) && rm -rf $$tmp_base

# Test targets

p/stamp-test-Makefile: $(srcdir)/p/test/Makefile
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs p/test
	{ \
	  echo "# Automatically generated from $(srcdir)/p/test/Makefile."; \
	  echo "# Don't change manually."; \
	  echo ""; \
	  sed -e "s,^srcdir *=.*,srcdir=`cd $(srcdir)/p/test && pwd`,; \
	          s,^PC *=.*,PC=`pwd`/xgpc -B`pwd`/,; \
	          s,^TEST_PATHS *=.*,TEST_PATHS=-I ../rts --unit-path=`pwd`/p/units," \
	          $(srcdir)/p/test/Makefile; \
	} > p/test/Makefile || { rm -f p/test/Makefile; false; }
	$(STAMP) "$@@"

check-pascal: pascal.check
pascal.check: p/stamp-test-Makefile
	cd ./p/test && $(MAKE) $(TEST_FLAGS_TO_PASS) pascal.check

check-pascal-nomsg: pascal.check-nomsg
pascal.check-nomsg: p/stamp-test-Makefile
	cd ./p/test && $(MAKE) $(TEST_FLAGS_TO_PASS) pascal.check-nomsg

check-pascal-long: pascal.check-long
pascal.check-long: p/stamp-test-Makefile
	cd ./p/test && $(MAKE) $(TEST_FLAGS_TO_PASS) pascal.check-long

check-pascal-long-nolog: pascal.check-long-nolog
pascal.check-long-nolog: p/stamp-test-Makefile
	cd ./p/test && $(MAKE) $(TEST_FLAGS_TO_PASS) pascal.check-long-nolog

# @@@@ Is this meant to be done like this?
CHECK_TARGETS += check-pascal

a488 4
RTSSTAGESTUFF=p/rts/*.o p/rts/*.lo p/rts/*.gpi p/rts/*.gpd \
  p/rts/config.cache p/rts/config.log p/rts/config.status p/rts/Makefile \
  p/rts/rts-config.h p/rts/rts-config.inc p/rts/needed-options

a491 1
	-mv $(RTSSTAGESTUFF) stage1/p/rts
a494 1
	-mv $(RTSSTAGESTUFF) stage2/p/rts
a497 1
	-mv $(RTSSTAGESTUFF) stage3/p/rts
a500 35
	-mv $(RTSSTAGESTUFF) stage4/p/rts

# Maintenance hooks:

# This target creates the files that can be rebuilt, but go in the
# distribution anyway. It then copies the files to the distdir directory.
#
# This will fail on systems that don't support symlinks. Tough luck ...
# (The symlinks will disappear after integration into GCC, anyway.)
pascal.distdir: pascal.extraclean pascal.generated-files
	$(SHELL) ${GNUSYSTEM_AUX_DIR}/mkinstalldirs tmp/p
	dest=`cd ./tmp/p && pwd` && \
	cd $(srcdir)/p && \
	for file in `find . -type d -print`; do \
	  script/mkdir-p $$dest/$$file || exit 1; \
	done && \
	for file in `find . -type f -print`; do \
	  ln $$file $$dest/$$file > /dev/null 2>&1 || cp $$file $$dest/$$file || exit 1; \
	done && \
	for file in `find . -type l -print`; do \
	  ln -s `ls -l $$file | sed -e 's/.*-> *//'` $$dest/$$file || exit 1; \
	done

pascal.dist: pascal.distdir
	mv tmp gpc-$(gpc_version)
	tar $(GPC_TARFLAGS) gpc-$(gpc_version).tar.gz gpc-$(gpc_version)
	rm -rf gpc-$(gpc_version)

# requires GNU tar
pascal.testsuite-dist: $(srcdir)/p/test/README
	dest=`pwd` && cd $(srcdir) && \
	tar --owner=root --group=root --mode=u=rwX,go=rX \
	 --use-compress-program=bzip2 -cf "$$dest"/gpc-test-$(gpc_version).tar.bz2 p/test

force:
@


1.5
log
@fortran (untested), RCS IDs, no a.out/coff any more and style nits
@
text
@d1 1
a1 1
# $MirBSD$
d368 2
a369 2
Pascal pascal: xgpc$(exeext) gpc1$(exeext) gpcpp$(exeext) gpc-run pascal.utils \
               pascal.rts specs pascal.info #pascal.generated-files pascal.docdemos
d737 1
a737 1
pascal.install-utils: pascal.utils
d743 1
a743 1
pascal.install-lib: pascal.install-dir pascal.rts
d768 3
a770 3
	$(INSTALL_DATA) p/rts/rts-config.inc $(DESTDIR)$(unitsubdir)/rts-config.inc
	$(INSTALL_DATA) $(RTSSRCDIR)/gpc.pas $(DESTDIR)$(unitsubdir)/gpc.pas
	chmod a-x $(DESTDIR)$(unitsubdir)/rts-config.inc $(DESTDIR)$(unitsubdir)/gpc.pas
d897 4
a900 3
pascal.install-normal: pascal.install-common pascal.install-compiler \
 install-gpcpp pascal.install-utils pascal.install-lib pascal.install-man \
 pascal.install-info pascal.install-units pascal.install-doc
@


1.4
log
@this is as far as I get.

any further:
../gnat1' is up to date.
cd ada && make "AR_FLAGS_FOR_TARGET="  "AR_CREATE_FOR_TARGET=  if [ -f /usr/obj/gnu/gcc/gcc/../binutils/ar ] ; then  echo /usr/obj/gnu/gcc/gcc/../binutils/ar ;  else  if [ "i386-ecce-mirbsd7" = "i386-ecce-mirbsd7" ] ; then  echo ar;  else  t='s,^,i386-ecce-mirbsd7-,'; echo ar | sed -e $t ;  fi;  fi  rc"  "AR_EXTRACT_FOR_TARGET=  if [ -f /usr/obj/gnu/gcc/gcc/../binutils/ar ] ; then  echo /usr/obj/gnu/gcc/gcc/../binutils/ar ;  else  if [ "i386-ecce-mirbsd7" = "i386-ecce-mirbsd7" ] ; then  echo ar;  else  t='s,^,i386-ecce-mirbsd7-,'; echo ar | sed -e $t ;  fi;  fi  x"  "AR_FOR_TARGET=  if [ -f /usr/obj/gnu/gcc/gcc/../binutils/ar ] ; then  echo /usr/obj/gnu/gcc/gcc/../binutils/ar ;  else  if [ "i386-ecce-mirbsd7" = "i386-ecce-mirbsd7" ] ; then  echo ar;  else  t='s,^,i386-ecce-mirbsd7-,'; echo ar | sed -e $t ;  fi;  fi"  "BISON=yacc"  "BISONFLAGS="  "BOOT_CFLAGS="  "CFLAGS="  "CFLAGS_STAGE1=-march=pentium -mcpu=athlon-xp -mpreferred-stack-boundary=2 -Os -fno-align-functions -fno-strict-aliasing  -fgcse -fschedule-insns2 -fthread-jumps   -I/usr/src/gnu/gcc/gcc -I/usr/src/gnu/lib/include -DMIRBSD_NATIVE"  "CFLAGS_STAGE2=-march=pentium -mcpu=athlon-xp -mpreferred-stack-boundary=2 -Os -fno-align-functions -fno-strict-aliasing  -fgcse -fschedule-insns2 -fthread-jumps   -I/usr/src/gnu/gcc/gcc -I/usr/src/gnu/lib/include -DMIRBSD_NATIVE"  "DESTDIR="  "GCC_FOR_TARGET=./xgcc -B./ -B/usr/i386-ecce-mirbsd7/bin/ -isystem /usr/i386-ecce-mirbsd7/include -isystem /usr/i386-ecce-mirbsd7/sys-include"  "LDFLAGS="  "FLEX=flex"  "FLEXFLAGS="  "LN=ln"  "LN_S=ln -s"  "MAKEINFO=makeinfo --no-split"  "MAKEINFOFLAGS="  "MAKEOVERRIDES="  "RANLIB_FOR_TARGET=  if [ -f /usr/obj/gnu/gcc/gcc/../binutils/ranlib ] ; then  echo /usr/obj/gnu/gcc/gcc/../binutils/ranlib ;  else  if [ "i386-ecce-mirbsd7" = "i386-ecce-mirbsd7" ] ; then  echo ranlib;  else  t='s,^,i386-ecce-mirbsd7-,'; echo ranlib | sed -e $t ;  fi;  fi"  "RANLIB_TEST_FOR_TARGET=[ -f   if [ -f /usr/obj/gnu/gcc/gcc/../binutils/ranlib ] ; then  echo /usr/obj/gnu/gcc/gcc/../binutils/ranlib ;  else  if [ "i386-ecce-mirbsd7" = "i386-ecce-mirbsd7" ] ; then  echo ranlib;  else  t='s,^,i386-ecce-mirbsd7-,'; echo ranlib | sed -e $t ;  fi;  fi ]  || ( [ "i386-ecce-mirbsd7" = "i386-ecce-mirbsd7" ]  && [ -f /usr/bin/ranlib -o -f /bin/ranlib ] )"  "SHELL=/bin/sh"  "exeext="  "build_exeext="  "objext=.o"  "exec_prefix=/usr"  "prefix=/usr"  "local_prefix=/usr"  "gxx_include_dir=/usr/include/gxx"  "build_tooldir=/usr/i386-ecce-mirbsd7"  "gcc_tooldir=/usr/lib/gcc-lib/i386-ecce-mirbsd7/3.2.3/../../../../i386-ecce-mirbsd7"  "bindir=/usr/bin"  "libsubdir=/usr/lib/gcc-lib/i386-ecce-mirbsd7/3.2.3"  "datadir=/usr/share"  "localedir=/usr/share/locale" "CC=gcc"  "STAGE_PREFIX=" "ADA_FOR_BUILD="  "ADA_INCLUDE_DIR=/usr/lib/gcc-lib/i386-ecce-mirbsd7/3.2.3/adainclude"  "ADA_RTL_OBJ_DIR=/usr/lib/gcc-lib/i386-ecce-mirbsd7/3.2.3/adalib"  "ADAFLAGS=-W -Wall -gnatpg -gnata"  "ADA_FOR_TARGET="  "INSTALL_DATA=/usr/bin/install -c -m 644"  "INSTALL_PROGRAM=install -c -s"  ../gnatbind
../gnatbind' is up to date.
Graph cycles through Pascal

cd /usr/src/gnu/gcc/gcc/p/rts && make -f Makefile.in srcdir=. GCC_VERSION="3.2.3"  SHELL="/bin/sh"  CFLAGS=""  PFLAGS=""  AR="  if [ -f /usr/obj/gnu/gcc/gcc/../binutils/ar ] ; then  echo /usr/obj/gnu/gcc/gcc/../binutils/ar ;  else  if [ "i386-ecce-mirbsd7" = "i386-ecce-mirbsd7" ] ; then  echo ar;  else  t='s,^,i386-ecce-mirbsd7-,'; echo ar | sed -e $t ;  fi;  fi"  AR_FLAGS="rc"  RANLIB="  if [ -f /usr/obj/gnu/gcc/gcc/../binutils/ranlib ] ; then  echo /usr/obj/gnu/gcc/gcc/../binutils/ranlib ;  else  if [ "i386-ecce-mirbsd7" = "i386-ecce-mirbsd7" ] ; then  echo ranlib;  else  t='s,^,i386-ecce-mirbsd7-,'; echo ranlib | sed -e $t ;  fi;  fi"  RANLIB_TEST="[ -f   if [ -f /usr/obj/gnu/gcc/gcc/../binutils/ranlib ] ; then  echo /usr/obj/gnu/gcc/gcc/../binutils/ranlib ;  else  if [ "i386-ecce-mirbsd7" = "i386-ecce-mirbsd7" ] ; then  echo ranlib;  else  t='s,^,i386-ecce-mirbsd7-,'; echo ranlib | sed -e $t ;  fi;  fi ]  || ( [ "i386-ecce-mirbsd7" = "i386-ecce-mirbsd7" ]  && [ -f /usr/bin/ranlib -o -f /bin/ranlib ] )"  RTSFLAGS=""  DESTDIR="../.." generated-files
`All' not remade because of errors.
@
text
@d1 2
@


1.3
log
@first attempt at a running pascal
also, add generated files, and patch out further generation
of these files
@
text
@a123 2
MAKEINFO=makeinfo
MAKEINFOFLAGS=
a398 99
# Derive parts of the documentation directly from the source.

$(srcdir)/p/doc/generated/version.texi: $(VERSION_FILENAME)
	( \
	 release=$(gpc_version) && \
	 echo "@@c Generated automatically from `echo $(VERSION_FILENAME) | sed -e 's,.*/,,'`" && \
	 echo '@@c DO NOT CHANGE THIS FILE MANUALLY!' && \
	 echo '' && \
	 echo "@@set GPCMajor $(gpc_major)" && \
	 echo "@@set GPCMinor $(gpc_minor)" && \
	 echo "@@set GPCVersion $$release" && \
	 echo "@@set GCCVersion 2.8.1, 2.95.x or 3.2.1" \
	) > $(srcdir)/p/doc/generated/version.texi || \
	{ rm -f $(srcdir)/p/doc/generated/version.texi; false; }

$(srcdir)/p/doc/generated/lang-options.texi: $(srcdir)/p/lang-options.h
	$(SHELL) $(srcdir)/p/script/lang-options2texi $(srcdir)/p/lang-options.h $(srcdir)/p/doc/generated/lang-options.texi

$(srcdir)/p/doc/generated/keyword.texi: $(srcdir)/p/predef.h
	$(SHELL) $(srcdir)/p/script/keywords2texi $(srcdir)/p/predef.h $(srcdir)/p/doc/generated/keyword.texi

$(srcdir)/p/doc/generated/gpcpas.texi: $(RTSSRCDIR)/gpc.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(RTSSRCDIR)/gpc.pas $(srcdir)/p/doc/generated/gpcpas.texi

# This is stupid, but some stupid makes don't support nice pattern rules ...
# $(srcdir)/p/doc/generated/%.texi: $(srcdir)/p/units/%.pas
# 	$(srcdir)/p/script/pas2texi "$<" "$@@"
$(srcdir)/p/doc/generated/crt.texi: $(srcdir)/p/units/crt.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/crt.pas $(srcdir)/p/doc/generated/crt.texi
$(srcdir)/p/doc/generated/dos.texi: $(srcdir)/p/units/dos.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/dos.pas $(srcdir)/p/doc/generated/dos.texi
$(srcdir)/p/doc/generated/dosunix.texi: $(srcdir)/p/units/dosunix.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/dosunix.pas $(srcdir)/p/doc/generated/dosunix.texi
$(srcdir)/p/doc/generated/fileutils.texi: $(srcdir)/p/units/fileutils.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/fileutils.pas $(srcdir)/p/doc/generated/fileutils.texi
$(srcdir)/p/doc/generated/gmp.texi: $(srcdir)/p/units/gmp.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/gmp.pas $(srcdir)/p/doc/generated/gmp.texi
$(srcdir)/p/doc/generated/gpcutil.texi: $(srcdir)/p/units/gpcutil.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/gpcutil.pas $(srcdir)/p/doc/generated/gpcutil.texi
$(srcdir)/p/doc/generated/heapmon.texi: $(srcdir)/p/units/heapmon.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/heapmon.pas $(srcdir)/p/doc/generated/heapmon.texi
$(srcdir)/p/doc/generated/intl.texi: $(srcdir)/p/units/intl.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/intl.pas $(srcdir)/p/doc/generated/intl.texi
$(srcdir)/p/doc/generated/md5.texi: $(srcdir)/p/units/md5.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/md5.pas $(srcdir)/p/doc/generated/md5.texi
$(srcdir)/p/doc/generated/overlay.texi: $(srcdir)/p/units/overlay.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/overlay.pas $(srcdir)/p/doc/generated/overlay.texi
$(srcdir)/p/doc/generated/pipe.texi: $(srcdir)/p/units/pipe.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/pipe.pas $(srcdir)/p/doc/generated/pipe.texi
$(srcdir)/p/doc/generated/ports.texi: $(srcdir)/p/units/ports.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/ports.pas $(srcdir)/p/doc/generated/ports.texi
$(srcdir)/p/doc/generated/printer.texi: $(srcdir)/p/units/printer.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/printer.pas $(srcdir)/p/doc/generated/printer.texi
$(srcdir)/p/doc/generated/regex.texi: $(srcdir)/p/units/regex.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/regex.pas $(srcdir)/p/doc/generated/regex.texi
$(srcdir)/p/doc/generated/strings.texi: $(srcdir)/p/units/strings.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/strings.pas $(srcdir)/p/doc/generated/strings.texi
$(srcdir)/p/doc/generated/stringutils.texi: $(srcdir)/p/units/stringutils.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/stringutils.pas $(srcdir)/p/doc/generated/stringutils.texi
$(srcdir)/p/doc/generated/system.texi: $(srcdir)/p/units/system.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/system.pas $(srcdir)/p/doc/generated/system.texi
$(srcdir)/p/doc/generated/tfdd.texi: $(srcdir)/p/units/tfdd.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/tfdd.pas $(srcdir)/p/doc/generated/tfdd.texi
$(srcdir)/p/doc/generated/trap.texi: $(srcdir)/p/units/trap.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/trap.pas $(srcdir)/p/doc/generated/trap.texi
$(srcdir)/p/doc/generated/turbo3.texi: $(srcdir)/p/units/turbo3.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/turbo3.pas $(srcdir)/p/doc/generated/turbo3.texi
$(srcdir)/p/doc/generated/windos.texi: $(srcdir)/p/units/windos.pas
	$(SHELL) $(srcdir)/p/script/pas2texi $(srcdir)/p/units/windos.pas $(srcdir)/p/doc/generated/windos.texi

$(srcdir)/p/INSTALL: $(srcdir)/p/doc/en/install.texi $(GPC_GENERAL_TEXI)
	$(MAKEINFO_EN) -DINSTALLONLY --no-header --no-split install.texi -o "$@@"

$(srcdir)/p/README: $(srcdir)/p/doc/en/welcome.texi $(srcdir)/p/doc/en/purpose.texi $(GPC_GENERAL_TEXI)
	$(MAKEINFO_EN) -DREADMEONLY --no-header --no-split welcome.texi -o "$@@"

$(srcdir)/p/NEWS: $(srcdir)/p/doc/en/news.texi $(srcdir)/p/doc/en/welcome.texi \
                  $(srcdir)/p/doc/en/purpose.texi $(GPC_GENERAL_TEXI)
	$(MAKEINFO_EN) -DNEWSONLY --no-header --no-split news.texi -o "$@@"

$(srcdir)/p/FAQ: $(srcdir)/p/doc/en/faq.texi $(srcdir)/p/doc/en/purpose.texi \
                 $(srcdir)/p/doc/en/libs.texi $(srcdir)/p/doc/en/support.texi $(GPC_GENERAL_TEXI)
	$(MAKEINFO_EN) -DFAQONLY --no-header --no-split --number-sections faq.texi -o "$@@"

$(srcdir)/p/AUTHORS: $(srcdir)/p/doc/en/authors.texi $(srcdir)/p/doc/contributors.texi $(GPC_GENERAL_TEXI)
	$(MAKEINFO_EN) -DAUTHORSONLY --no-header --no-split authors.texi -o "$@@"

$(srcdir)/p/COPYING: $(srcdir)/p/doc/en/copying.texi $(GPC_GENERAL_TEXI)
	$(MAKEINFO_EN) -DCOPYINGONLY --no-header --no-split copying.texi -o "$@@"

$(srcdir)/p/COPYING.LIB: $(srcdir)/p/doc/en/copying-lib.texi $(GPC_GENERAL_TEXI)
	$(MAKEINFO_EN) -DCOPYINGONLY --no-header --no-split copying-lib.texi -o "$@@"

$(srcdir)/p/COPYING.DEMO: $(srcdir)/p/doc/en/copying-demo.texi $(GPC_GENERAL_TEXI)
	$(MAKEINFO_EN) -DCOPYINGONLY --no-header --no-split copying-demo.texi -o "$@@"

$(srcdir)/p/test/README: $(srcdir)/p/doc/en/support.texi $(GPC_GENERAL_TEXI)
	$(MAKEINFO_EN) -DTESTREADMEONLY --no-header --no-split support.texi -o "$@@"

d610 2
a611 1
	$(MAKEINFO) -o p/doc/info/gpc.info $(srcdir)/p/doc/en/gpc.texi
d615 2
a616 1
	$(MAKEINFO) -o p/doc/info/gpcs.info $(srcdir)/p/doc/en/gpcs.texi
d871 1
a871 1
pascal.install-compiler: pascal.install-dir pascal
d923 1
a923 1
pascal.bindist: pascal
d932 1
a932 1
pascal.bindist-with-gcc: pascal
@


1.2
log
@apparently final cleanup
 * forgotten commit in etc/Makefile adjusting for path changes
 * cleanup in Pascal
 * move common parts for all gcc-suite into common file
@
text
@d63 1
a63 1
GPC_GCC_VERSION_LINK_=p/diagnostic.o attribs.o main.o libbackend.a ../libiberty/libiberty.a
d68 1
a68 1
GPC_GCC_VERSION_DEPS_2=p/stamp-gbe ../libiberty/libiberty.a
d71 2
a72 2
GPC_GCC_VERSION_H_=target.h dbxout.h ../include/libiberty.h
GPC_GCC_VERSION_H_2=gansidecl.h dbxout.h ../include/libiberty.h
d134 1
a134 1
PASCAL_INSTALL_DOC=pascal.real-install-doc
a351 8
 $(srcdir)/p/INSTALL \
 $(srcdir)/p/README \
 $(srcdir)/p/NEWS \
 $(srcdir)/p/FAQ \
 $(srcdir)/p/AUTHORS \
 $(srcdir)/p/COPYING \
 $(srcdir)/p/COPYING.LIB \
 $(srcdir)/p/COPYING.DEMO \
a354 1
 $(srcdir)/p/test/README \
d369 1
a369 1
               pascal.rts specs pascal.generated-files pascal.docdemos
d417 1
a417 1
	$(srcdir)/p/script/lang-options2texi $(srcdir)/p/lang-options.h $(srcdir)/p/doc/generated/lang-options.texi
d420 1
a420 1
	$(srcdir)/p/script/keywords2texi $(srcdir)/p/predef.h $(srcdir)/p/doc/generated/keyword.texi
d423 1
a423 1
	$(srcdir)/p/script/pas2texi $(RTSSRCDIR)/gpc.pas $(srcdir)/p/doc/generated/gpcpas.texi
d429 1
a429 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/crt.pas $(srcdir)/p/doc/generated/crt.texi
d431 1
a431 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/dos.pas $(srcdir)/p/doc/generated/dos.texi
d433 1
a433 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/dosunix.pas $(srcdir)/p/doc/generated/dosunix.texi
d435 1
a435 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/fileutils.pas $(srcdir)/p/doc/generated/fileutils.texi
d437 1
a437 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/gmp.pas $(srcdir)/p/doc/generated/gmp.texi
d439 1
a439 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/gpcutil.pas $(srcdir)/p/doc/generated/gpcutil.texi
d441 1
a441 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/heapmon.pas $(srcdir)/p/doc/generated/heapmon.texi
d443 1
a443 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/intl.pas $(srcdir)/p/doc/generated/intl.texi
d445 1
a445 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/md5.pas $(srcdir)/p/doc/generated/md5.texi
d447 1
a447 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/overlay.pas $(srcdir)/p/doc/generated/overlay.texi
d449 1
a449 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/pipe.pas $(srcdir)/p/doc/generated/pipe.texi
d451 1
a451 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/ports.pas $(srcdir)/p/doc/generated/ports.texi
d453 1
a453 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/printer.pas $(srcdir)/p/doc/generated/printer.texi
d455 1
a455 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/regex.pas $(srcdir)/p/doc/generated/regex.texi
d457 1
a457 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/strings.pas $(srcdir)/p/doc/generated/strings.texi
d459 1
a459 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/stringutils.pas $(srcdir)/p/doc/generated/stringutils.texi
d461 1
a461 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/system.pas $(srcdir)/p/doc/generated/system.texi
d463 1
a463 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/tfdd.pas $(srcdir)/p/doc/generated/tfdd.texi
d465 1
a465 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/trap.pas $(srcdir)/p/doc/generated/trap.texi
d467 1
a467 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/turbo3.pas $(srcdir)/p/doc/generated/turbo3.texi
d469 1
a469 1
	$(srcdir)/p/script/pas2texi $(srcdir)/p/units/windos.pas $(srcdir)/p/doc/generated/windos.texi
d505 2
a506 2
	$(srcdir)/p/script/mkdir-p p/docdemos
	$(srcdir)/p/script/extract-doc-demos -o p/docdemos $(srcdir)/p/doc/*.texi $(srcdir)/p/doc/generated/*.texi $(srcdir)/p/doc/en/*.texi
d527 1
a527 1
	sed -e s/@@version@@/$(gpc_version)/ "$<" > "$@@" || { rm -f "$@@"; false; }
d531 1
a531 1
	help2man -N "$<" | sed -e s/@@version@@/$(gpc_version)/ > "$@@" || { rm -f "$@@"; false; }
d550 1
a550 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) $<
d585 1
a585 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) $<
d588 1
a588 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) $<
d591 1
a591 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) $<
d594 1
a594 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) $<
d597 1
a597 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) -DTARGET_NAME=\"$(target_alias)\" $<
d600 1
a600 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) $<
d603 1
a603 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) $<
d606 1
a606 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) $(BIG_SWITCHFLAG) $<
d609 1
a609 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) $<
d612 1
a612 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) -DRTS_VERSION_CHECK="\"__GPC_RTS_VERSION_`cat $(RTSSRCDIR)/rts-version`__\"" $<
d615 1
a615 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) $<
d618 1
a618 1
	$(CC) -o $@@ -c $(ALL_GPC_FLAGS) $<
d621 1
a621 1
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) $<
d624 1
a624 1
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) $<
d627 1
a627 1
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) $<
d630 1
a630 1
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) $<
d633 1
a633 1
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) $<
d636 1
a636 1
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) $<
d639 1
a639 1
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) $<
d642 1
a642 1
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) $<
d645 1
a645 1
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) $<
d648 1
a648 1
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) $<
d652 1
a652 1
	  $(MAYBE_USE_COLLECT2) -DTARGET_NAME=\"$(target_alias)\" $<
d655 1
a655 1
	$(CC) -o $@@ -c $(ALL_GPC_GBE_FLAGS) $<
d657 2
a658 2
p/parse.c p/parse.h: $(srcdir)/p/parse.y
	cd p && $(BISON) $(BISONFLAGS) -o parse.c $(srcdir)/p/parse.y
d661 1
a661 1
	$(srcdir)/p/script/mkdir-p p/utils
d688 1
a688 1
	$(srcdir)/p/script/mkdir-p p/rts
d710 2
a711 2
	[ -d "p/doc/info" ] || $(srcdir)/p/script/mkdir-p "p/doc/info"
	$(MAKEINFO_EN) -o p/doc/info/gpc.info $(srcdir)/p/doc/en/gpc.texi
d714 2
a715 2
	[ -d "p/doc/info" ] || $(srcdir)/p/script/mkdir-p "p/doc/info"
	$(MAKEINFO_EN) --no-split -o p/doc/info/gpcs.info $(srcdir)/p/doc/en/gpcs.texi
d742 1
a742 1
	$(srcdir)/p/script/mkdir-p $(HTML_DIR)
d766 1
a766 1
	$(srcdir)/p/script/mkdir-p $(HTML_DIR)/images $(HTML_DIR)/demos
d785 7
a791 7
	$(srcdir)/p/script/make-homepage $(gpc_version) $(srcdir)/p/doc $(HTML_DIR) en gpc
	$(srcdir)/p/script/make-homepage $(gpc_version) $(srcdir)/p/doc $(HTML_DIR) hr gpc-hr
	$(srcdir)/p/script/make-homepage $(gpc_version) $(srcdir)/p/doc $(HTML_DIR) es gpc-es
	$(srcdir)/p/script/make-homepage-gpcs $(srcdir)/p/doc $(HTML_DIR) en
	$(srcdir)/p/script/make-homepage-gpcs $(srcdir)/p/doc $(HTML_DIR) hr
	$(srcdir)/p/script/make-homepage-gpcs $(srcdir)/p/doc $(HTML_DIR) es
	$(srcdir)/p/script/make-homepage-gpcs $(srcdir)/p/doc $(HTML_DIR) de
d805 1
a805 1
	  $(srcdir)/p/script/mkdir-p -m a+rx $(DESTDIR)$$directory || exit 1; \
d811 1
a811 1
	  $(srcdir)/p/script/mkdir-p -m a+rx $(DESTDIR)$$directory || exit 1; \
d855 1
a855 1
	  $(srcdir)/p/script/mkdir-p -m a+rx $(DESTDIR)$(prefix)/$(GPCSOLIBDIR) && \
d1026 1
a1026 1
	$(srcdir)/p/script/mkdir-p -m a+rx $$tmp_prefix && \
d1035 1
a1035 1
	$(srcdir)/p/script/mkdir-p -m a+rx $$tmp_prefix && \
d1043 1
a1043 1
	$(srcdir)/p/script/mkdir-p p/test
d1130 1
a1130 1
	$(srcdir)/p/script/mkdir-p stage1/p/rts
d1134 1
a1134 1
	$(srcdir)/p/script/mkdir-p stage2/p/rts
d1138 1
a1138 1
	$(srcdir)/p/script/mkdir-p stage3/p/rts
d1142 1
a1142 1
	$(srcdir)/p/script/mkdir-p stage4/p/rts
d1154 1
a1154 1
	$(srcdir)/p/script/mkdir-p tmp/p
@


1.1
log
@Initial revision
@
text
@d407 2
a408 2
$(srcdir)/p/units/crtc.h: $(srcdir)/p/units/crt.inc
	$(srcdir)/p/script/crtinc2h $(srcdir)/p/units/crt.inc $(srcdir)/p/units/crtc.h
d614 1
a614 1
p/parse.o: $(srcdir)/p/parse.c $(P_H)
d666 2
a667 2
$(srcdir)/p/parse.c $(srcdir)/p/parse.h: $(srcdir)/p/parse.y
	cd $(srcdir)/p && $(BISON) $(BISONFLAGS) -o parse.c parse.y
d714 2
a715 7
pascal.info: $(srcdir)/p/doc/info/gpc.info \
             $(srcdir)/p/doc/info/gpcs.info \
             $(srcdir)/p/doc/info/gpcs-de.info \
             $(srcdir)/p/doc/info/gpc-hr.info \
             $(srcdir)/p/doc/info/gpcs-hr.info \
             $(srcdir)/p/doc/info/gpc-es.info \
             $(srcdir)/p/doc/info/gpcs-es.info
d718 7
a724 27
$(srcdir)/p/doc/info/gpc.info: $(GPC_TEXI_EN)
	[ -d "$(srcdir)/p/doc/info" ] || $(srcdir)/p/script/mkdir-p "$(srcdir)/p/doc/info"
	$(MAKEINFO_EN) -o $(srcdir)/p/doc/info/gpc.info gpc.texi

$(srcdir)/p/doc/info/gpcs.info: $(GPC_TEXI_EN)
	[ -d "$(srcdir)/p/doc/info" ] || $(srcdir)/p/script/mkdir-p "$(srcdir)/p/doc/info"
	$(MAKEINFO_EN) --no-split -o $(srcdir)/p/doc/info/gpcs.info gpcs.texi

$(srcdir)/p/doc/info/gpcs-de.info: $(GPC_TEXI_DE)
	[ -d "$(srcdir)/p/doc/info" ] || $(srcdir)/p/script/mkdir-p "$(srcdir)/p/doc/info"
	$(MAKEINFO_DE) --no-split -o $(srcdir)/p/doc/info/gpcs-de.info gpcs.texi

$(srcdir)/p/doc/info/gpc-hr.info: $(GPC_TEXI_HR)
	[ -d "$(srcdir)/p/doc/info" ] || $(srcdir)/p/script/mkdir-p "$(srcdir)/p/doc/info"
	$(MAKEINFO_HR) -o $(srcdir)/p/doc/info/gpc-hr.info gpc.texi

$(srcdir)/p/doc/info/gpcs-hr.info: $(GPC_TEXI_HR)
	[ -d "$(srcdir)/p/doc/info" ] || $(srcdir)/p/script/mkdir-p "$(srcdir)/p/doc/info"
	$(MAKEINFO_HR) --no-split -o $(srcdir)/p/doc/info/gpcs-hr.info gpcs.texi

$(srcdir)/p/doc/info/gpc-es.info: $(GPC_TEXI_ES)
	[ -d "$(srcdir)/p/doc/info" ] || $(srcdir)/p/script/mkdir-p "$(srcdir)/p/doc/info"
	$(MAKEINFO_ES) -o $(srcdir)/p/doc/info/gpc-es.info gpc.texi

$(srcdir)/p/doc/info/gpcs-es.info: $(GPC_TEXI_ES)
	[ -d "$(srcdir)/p/doc/info" ] || $(srcdir)/p/script/mkdir-p "$(srcdir)/p/doc/info"
	$(MAKEINFO_ES) --no-split -o $(srcdir)/p/doc/info/gpcs-es.info gpcs.texi
d746 1
a746 1
	$(MAKEINFO_EN) --no-headers --force -o "$@@" gpc.texi
d921 2
a922 2
	for f in `cd $(srcdir)/p/doc/info && echo gpc.info* gpcs*.info*`; do \
	  $(INSTALL_DATA) $(srcdir)/p/doc/info/$$f $(DESTDIR)$(infodir)/$$f || exit 1; \
d948 2
a949 2
	for f in `cd $(srcdir)/p/doc/info && echo gpc-hr.info* gpcs-hr.info*`; do \
	  $(INSTALL_DATA) $(srcdir)/p/doc/info/$$f $(DESTDIR)$(infodir)/$$f || exit 1; \
d972 2
a973 2
	for f in `cd $(srcdir)/p/doc/info && echo gpc-es.info* gpcs-es.info*`; do \
	  $(INSTALL_DATA) $(srcdir)/p/doc/info/$$f $(DESTDIR)$(infodir)/$$f || exit 1; \
d1120 1
a1120 1
	-rm -f p/TAGS $(GPC_GENERATED_FILES) $(srcdir)/p/doc/info/gpc*.info*
@


1.1.2.1
log
@Import an alpha version of GNU Pascal Compiler into the tree
(not to be connected to the build before the upgrade to gcc 3.3).

We couldn't use gpc 2.1 because it's too old and doesn't support
gcc 3.x at all.
@
text
@@

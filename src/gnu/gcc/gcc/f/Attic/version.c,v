head	1.3;
access;
symbols
	gcc-3_2_3:1.1.2.1 FSF:1.1.2;
locks; strict;
comment	@ * @;


1.3
date	2004.07.15.19.48.26;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2004.03.02.07.19.39;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.27.19.24.52;	author tg;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.10.27.19.24.52;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@F77 bites the dust (it's broken anyway)  <-- look, without s! :)
and gcc 3.6+ will have F95 or so...

<benz> jo, dann...
@
text
@/* $MirBSD: src/gnu/gcc/gcc/f/version.c,v 1.2 2004/03/02 07:19:39 tg Exp $ */

#include "ansidecl.h"
#include "f/version.h"

const char *const ffe_version_string = "3.2.3 20030422 (release; propolice; MirOS)";
@


1.2
log
@this is about everything needed for Fortran and Objective-C

not much, isn't it? Pascal should take this as an example
of how to behave.
@
text
@d1 1
a1 1
/* $MirBSD$ */
@


1.1
log
@Initial revision
@
text
@d1 2
d6 1
a6 1
const char *const ffe_version_string = "3.2.3 20030422 (release)";
@


1.1.2.1
log
@tg@@odem:/home/tg $ bzip2 -dc /data/gcc-3.2.3.tar.bz2 | tar xf -
tg@@odem:/home/tg $ cd gcc-3.2.3/
tg@@odem:/home/tg/gcc-3.2.3 $ find . -name .cvsignore | xargs rm
tg@@odem:/home/tg/gcc-3.2.3 $ rm -rf libjava gcc/java
tg@@odem:/home/tg/gcc-3.2.3 $ rm -rf boehm-gc fastjar libffi libiberty zlib
tg@@odem:/home/tg/gcc-3.2.3 $ cvs -qz6 -d tg@@herc:/cvs import -I ! -I CVS -b 1.1.2 src/gnu/gcc FSF gcc-3_2_3

We'll try it again. Not gcc 3.3 this time.
@
text
@@

head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.10.30.18.08.15;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.44.28;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.44.28;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@It turns out that
* mkisofs works
* the "old-style" image built on cdrom34.fs works
* the "new-style" image built on cdboot and with bsd.rd doesn't
  (cdboot seems to be not initialized correctly, will
   look after that later)
* mkhybrid has lived out its life (report regressions
  against mkisofs please)
* we should bump the patchlevel and issue a warning if
  the user installs the cdrtools port
  (I don't delete mkisofs from the port yet, the MirPorts
   framework is currently following MirOS #7 stable)
* I should get my hands on the El Torito standard, and
  a good copy of bochs :)
@
text
@#
# $Id: README,v 1.1 2003/03/22 17:44:28 tg Exp $
#
	I am enclosing 3 test programs that I use to verify the
integrity of an iso9660 disc.  The first one (isodump) is pretty
simple - it dumps to the screen the contents of the various
directories.  The second one (isovfy) goes through and looks for
problems of one kind or another.

	To use, type something like "./isodump /dev/ramdisk" or
"./isodump /dev/scd0", depending upon where the iso9660 disc is.  It
starts by displaying the files in the first sector of the root
directory.  It has some pretty simple one letter commands that you
can use to traverse the directory tree.

	a - move back one sector.
	b - move forward one sector.
	g - go to new logical sector.
	q - quit

The a and b commands do not try and stop you from going past the
beginning or end of a sector, and the g command does not have any way
of knowing whether the sector you request is actually a directory or
not.

	The output is displayed in several columns.  The first column
is the total length of the directory record for the file.  The second
column (in [] brackets) is the volume number.  Next comes the starting
extent number (in hex), and then comes the file size in bytes.  Then
cones the filename (not the Rock Ridge version), and this is preceeded
by an "*" if the file is a directory.  After this is a summary of the
Rock Ridge fields present along with a display of the translation of
the symbolic link name if the SL Rock Ridge record is present.

	I tailored this program for debugging some of the problems
that I was having earlier.  The idea is that you can tailor it
to test for problems that you might be having, so it is not intended
as a be-all and end-all dump program.

	If you move to a sector that does not contain directory
information, the results are unpredictable.

	The second program, isovfy, is run in the same way as isodump,
except that you do not have to do much except let it run.  I have it
written to verify all kinds of different things, and as people find
other sorts of problems other tests could be added.

	The third program, dump.c, basically does a hexdump of the cd.
This is screen oriented, and there are some simple commands:

	a - move back one sector.
	b - move forward one sector.
	f - enter new search string.
	+ - search forward for search string.
	g - go to new logical sector.
	q - quit


	Note that with the 'g' command, sectors are always given in
hex, and represent 2048 byte sectors (as on the cdrom).  If you know
how to decode a raw iso9660 directory, you can pick out the starting
extent number from the hexdump and know where to go from there.  The
starting extent appears something like 30 bytes prior to the start of
the iso9660 (not Rock Ridge) filename, and it appears in a 7.3.3
format (meaning that it occupies 8 bytes, 4 in little endian format,
and 4 in big endian format).  Thus you should see a mirror image of
the bytes when looking at the extent number.

	The isovfy program can also dump the contents of the path
tables, but this capability is commented out right now.  Feel free
to enable this to see what is in the tables.  Ultimately I may fix
it so that this checks the integrity of the tables as well.

	The isovfy program gives warnings about things like files that
have a size of 0 but have an extent number assigned.  The mkisofs program
should never do this, but the YM software does leave these around.
I think it is probably harmless in the YM case.~
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $Id: README,v 1.1 2000/10/10 20:40:27 beck Exp $
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

head	1.2;
access;
symbols
	cvs-200406091940:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.10.30.18.08.04;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.44.28;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.44.28;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@It turns out that
* mkisofs works
* the "old-style" image built on cdrom34.fs works
* the "new-style" image built on cdboot and with bsd.rd doesn't
  (cdboot seems to be not initialized correctly, will
   look after that later)
* mkhybrid has lived out its life (report regressions
  against mkisofs please)
* we should bump the patchlevel and issue a warning if
  the user installs the cdrtools port
  (I don't delete mkisofs from the port yet, the MirPorts
   framework is currently following MirOS #7 stable)
* I should get my hands on the El Torito standard, and
  a good copy of bochs :)
@
text
@/*
**	mac_label.h: defines Macintosh partition maps and label
**
**	Taken from "mkisofs 1.05 PLUS" by Andy Polyakov <appro@@fy.chalmers.se>
**	(see http://fy.chalmers.se/~appro/mkisofs_plus.html for details)
**
**	Much of this is already defined in the libhfs code, but to keep
**	things simple we stick with these.
*/

#ifndef __MAC_LABEL__
#define __MAC_LABEL__

#ifdef __cplusplus
extern "C" {
#endif

/* Driver Descriptor Map */
#define sbSigMagic	"ER"
struct MacLabel {
	unsigned char	sbSig[2];	/* unique value for SCSI block 0 */
	unsigned char	sbBlkSize[2];	/* block size of device */
	unsigned char	sbBlkCount[4];	/* number of blocks on device */
	unsigned char	sbDevType[2];	/* device type */
	unsigned char	sbDevId[2];	/* device id */
	unsigned char	sbData[4];	/* not used */
	unsigned char	sbDrvrCount[2];	/* driver descriptor count */
	unsigned char	ddBlock[4];	/* 1st driver's starting block */
	unsigned char	ddSize[2];	/* size of 1st driver (512-byte blks) */
	unsigned char	ddType[2];	/* system type (1 for Mac+) */
	unsigned char	ddPad[486];	/* ARRAY[0..242] OF INTEGER; not used */
};
typedef struct MacLabel MacLabel;

#define IS_MAC_LABEL(d)		(((MacLabel*)(d))->sbSig[0]=='E'&&((MacLabel*)(d))->sbSig[1]=='R')

/* Partition Map Entry */
#define pmSigMagic	"PM"

#define pmPartType_1	"Apple_partition_map"
#	define pmPartName_11	"Apple"

#define pmPartType_2	"Apple_Driver"
#define pmPartType_21	"Apple_Driver43"

#define pmPartType_3	"Apple_UNIX_SVR2"
#	define pmPartName_31	"A/UX Root"
#	define pmPartName_32	"A/UX Usr"
#	define pmPartName_33	"Random A/UX fs"
#	define pmPartName_34	"Swap"

#define pmPartType_4	"Apple_HFS"
#	define pmPartName_41	"MacOS"

#define pmPartType_5	"Apple_Free"
#	define pmPartName_51	"Extra"

#define PM2	2
#define PM4	4

struct MacPart {
	unsigned char	pmSig[2];	/* unique value for map entry blk */
	unsigned char	pmSigPad[2];	/* currently unused */
	unsigned char	pmMapBlkCnt[4];	/* # of blks in partition map */
	unsigned char	pmPyPartStart[4];/* physical start blk of partition */
	unsigned char	pmPartBlkCnt[4];/* # of blks in this partition */
	unsigned char	pmPartName[32];	/* ASCII partition name */
	unsigned char	pmPartType[32];	/* ASCII partition type */
	unsigned char	pmLgDataStart[4];/* log. # of partition's 1st data blk */
	unsigned char	pmDataCnt[4];	/* # of blks in partition's data area */
	unsigned char	pmPartStatus[4];/* bit field for partition status */
	unsigned char	pmLgBootStart[4];/* log. blk of partition's boot code */
	unsigned char	pmBootSize[4];	/* number of bytes in boot code */
	unsigned char	pmBootAddr[4];	/* memory load address of boot code */
	unsigned char	pmBootAddr2[4];	/* currently unused */
	unsigned char	pmBootEntry[4];	/* entry point of boot code */
	unsigned char	pmBootEntry2[4];/* currently unused */
	unsigned char	pmBootCksum[4];	/* checksum of boot code */
	unsigned char	pmProcessor[16];/* ASCII for the processor type */
	unsigned char	pmPad[376];	/* ARRAY[0..187] OF INTEGER; not used */
};
typedef struct MacPart MacPart;

#define IS_MAC_PART(d)		(((MacPart*)(d))->pmSig[0]=='P'&&((MacPart*)(d))->pmSig[1]=='M')

#define PM_STAT_VALID		0x01	/* Set if a valid partition map entry */
#define PM_STAT_ALLOC		0x02	/* Set if partition is already allocated; clear if available */
#define PM_STAT_INUSE		0x04	/* Set if partition is in use; may be cleared after a system reset */
#define PM_STAT_BOOTABLE	0x08	/* Set if partition contains valid boot information */
#define PM_STAT_READABLE	0x10	/* Set if partition allows reading */
#define PM_STAT_WRITABLE	0x20	/* Set if partition allows writing */
#define PM_STAT_BOOT_PIC	0x40	/* Set if boot code is position-independent */
#define PM_STAT_UNUSED		0x80	/* Unused */
#define PM_STAT_DEFAULT		PM_STAT_VALID|PM_STAT_ALLOC|PM_STAT_READABLE|PM_STAT_WRITABLE

typedef struct {
	char *name;			/* Partition name */
	char *type;			/* Partition type */
	int   ntype;			/* Partition type (numeric) */
	int   start;			/* start extent (SECTOR_SIZE blocks) */
	int   size;			/* extents (SECTOR_SIZE blocks) */
} mac_partition_table;

/* from libhfs */
#define HFS_BB_SIGWORD		0x4c4b

/* borrowed from write.c - we just need parts of this */
struct deferred_write {
	struct deferred_write * next;
	char		      * table;
	unsigned int		extent;
	unsigned int		size;
	char		      * name;
	struct directory_entry *s_entry;
	unsigned int		pad;
	unsigned int		off;
};

typedef struct deferred_write defer;

#ifdef __cplusplus
}
#endif

#endif /* __MAC_LABEL__ */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

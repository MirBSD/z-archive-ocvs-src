head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.2
	tg-mergefixes-1-branch:1.1.1.2.0.4
	tg-mergefixes-1-base:1.1.1.2
	MIROS_X:1.1.1.2.0.2
	MIROS_X_BASE:1.1.1.2
	tg-mergetmp-3:1.1.1.2
	MIRBSD_XP_MIRPPC:1.1.1.1.0.10
	cvs-200410222320:1.1.1.2
	MIRBSD_XP_SPARC_BASE:1.1.1.1
	MIRBSD_XP_SPARC:1.1.1.1.0.8
	cvs-200406091940:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200309171845:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307030815:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	cvs-20030329-2200:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.44.37;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.44.37;	author tg;	state Stab;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.10.22.23.26.39;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*
 * Copyright (c) 2000-2001 Sendmail, Inc. and its suppliers.
 *	All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 *
 *	$Sendmail: string.h,v 1.36 2001/06/17 21:31:11 ca Exp $
 */

/*
**  libsm string manipulation
*/

#ifndef SM_STRING_H
# define SM_STRING_H

# include <sm/gen.h>
# include <sm/varargs.h>
# include <string.h> /* strlc{py,at}, strerror */

/* return number of bytes left in a buffer */
#define SPACELEFT(buf, ptr)	(sizeof buf - ((ptr) - buf))

extern int PRINTFLIKE(3, 4)
sm_snprintf __P((
	char *,
	size_t,
	const char *,
	...));

extern bool
sm_match __P((
	const char *_str,
	const char *_pattern));

extern char *
sm_strdup __P((
	char *));

extern char *
sm_strndup_x __P((
	const char *_str,
	size_t _len));

/* for "normal" data (free'd before end of process) */
# define sm_strdup_x(str) strcpy(sm_malloc_x(strlen(str) + 1), str)

/* for data that is supposed to be persistent. */
# define sm_pstrdup_x(str) strcpy(sm_pmalloc_x(strlen(str) + 1), str)

# define sm_strdup_tagged_x(str, file, line, group) \
	strcpy(sm_malloc_tagged_x(strlen(str) + 1, file, line, group), str)

extern char *
sm_stringf_x __P((
	const char *_fmt,
	...));

extern char *
sm_vstringf_x __P((
	const char *_fmt,
	va_list _ap));

extern size_t
sm_strlcpy __P((
	char *_dst,
	const char *_src,
	ssize_t _len));

extern size_t
sm_strlcat __P((
	char *_dst,
	const char *_src,
	ssize_t _len));

extern size_t
sm_strlcat2 __P((
	char *,
	const char *,
	const char *,
	ssize_t));

extern size_t
#ifdef __STDC__
sm_strlcpyn(char *dst, ssize_t len, int n, ...);
#else /* __STDC__ */
sm_strlcpyn __P((char *,
	ssize_t,
	int,
	va_dcl));
#endif /* __STDC__ */

# if !HASSTRERROR
extern char *
strerror __P((
	int _errno));
# endif /* !HASSTRERROR */

extern int
sm_strrevcmp __P((
	const char *,
	const char *));

extern int
sm_strrevcasecmp __P((
	const char *,
	const char *));

extern int
sm_strcasecmp __P((
	const char *,
	const char *));

extern int
sm_strncasecmp __P((
	const char *,
	const char *,
	size_t));

extern LONGLONG_T
sm_strtoll __P((
	const char *,
	char**, int));

extern ULONGLONG_T
sm_strtoull __P((
	const char *,
	char**, int));

extern void
stripquotes __P((char *));

#endif /* SM_STRING_H */
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@update to sendmail 8.13.1/8.13.1
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001, 2003 Sendmail, Inc. and its suppliers.
d9 1
a9 1
 *	$Sendmail: string.h,v 1.38 2003/10/10 17:56:57 ca Exp $
d27 5
a31 1
sm_snprintf __P((char *, size_t, const char *, ...));
d34 3
a36 1
sm_match __P((const char *_str, const char *_pattern));
d39 2
a40 1
sm_strdup __P((char *));
d43 3
a45 15
sm_strndup_x __P((const char *_str, size_t _len));

#if DO_NOT_USE_STRCPY
/* for "normal" data (free'd before end of process) */
extern char *
sm_strdup_x __P((const char *_str));

/* for data that is supposed to be persistent. */
extern char *
sm_pstrdup_x __P((const char *_str));

extern char *
sm_strdup_tagged_x __P((const char *str, char *file, int line, int group));

#else /* DO_NOT_USE_STRCPY */
a54 1
#endif /* DO_NOT_USE_STRCPY */
d57 3
a59 1
sm_stringf_x __P((const char *_fmt, ...));
d62 3
a64 1
sm_vstringf_x __P((const char *_fmt, va_list _ap));
d67 4
a70 1
sm_strlcpy __P((char *_dst, const char *_src, ssize_t _len));
d73 4
a76 1
sm_strlcat __P((char *_dst, const char *_src, ssize_t _len));
d79 5
a83 1
sm_strlcat2 __P((char *, const char *, const char *, ssize_t));
d97 2
a98 1
strerror __P((int _errno));
d102 3
a104 1
sm_strrevcmp __P((const char *, const char *));
d107 3
a109 1
sm_strrevcasecmp __P((const char *, const char *));
d112 3
a114 1
sm_strcasecmp __P((const char *, const char *));
d117 4
a120 1
sm_strncasecmp __P((const char *, const char *, size_t));
d123 3
a125 1
sm_strtoll __P((const char *, char**, int));
d128 3
a130 1
sm_strtoull __P((const char *, char**, int));
@


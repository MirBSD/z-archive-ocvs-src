head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.2
	tg-mergefixes-1-branch:1.1.1.2.0.8
	tg-mergefixes-1-base:1.1.1.2
	MIROS_X:1.1.1.2.0.6
	MIROS_X_BASE:1.1.1.2
	tg-mergetmp-3:1.1.1.2
	MIRBSD_XP_MIRPPC:1.1.1.2.0.4
	MIRBSD_XP_SPARC_BASE:1.1.1.2
	MIRBSD_XP_SPARC:1.1.1.2.0.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	cvs-200307072125:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307021520:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3283:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.52.19;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.52.19;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.05.16.09.10.56;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: cd_atapi.c,v 1.2 2002/03/14 01:27:13 millert Exp $	*/
/*	$NetBSD: cd_atapi.c,v 1.10 1998/08/31 22:28:06 cgd Exp $	*/

/*
 * Copyright (c) 1997 Manuel Bouyer.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Charles M. Hannum.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Originally written by Julian Elischer (julian@@tfs.com)
 * for TRW Financial Systems for use under the MACH(2.5) operating system.
 *
 * TRW Financial Systems, in accordance with their agreement with Carnegie
 * Mellon University, makes this software available to CMU to distribute
 * or use in any manner that they see fit as long as this message is kept with
 * the software. For this reason TFS also grants any other persons or
 * organisations permission to use or modify this software.
 *
 * TFS supplies this software to be publicly redistributed
 * on the understanding that TFS is not responsible for the correct
 * functioning of this software in any circumstances.
 *
 * Ported to run under 386BSD by Julian Elischer (julian@@tfs.com) Sept 1992
 */
#ifndef __OpenBSD__
#include "rnd.h"
#endif

#include <sys/types.h>
#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/file.h>
#include <sys/device.h>
#include <sys/disk.h>
#include <sys/buf.h>
#include <sys/conf.h>
#if NRND > 0
#include <sys/rnd.h>
#endif

#include <sys/cdio.h>

#include <scsi/scsi_all.h>
#include <scsi/cd.h>
#include <scsi/atapi_all.h>
#include <scsi/atapi_cd.h>
#include <scsi/cdvar.h>
#include <scsi/scsiconf.h>


static int cd_atapibus_setchan(struct cd_softc *, int, int, int, int, int);
static int cd_atapibus_getvol(struct cd_softc *, struct ioc_vol *, int);
static int cd_atapibus_setvol(struct cd_softc *, const struct ioc_vol *,
	    int);
static int cd_atapibus_set_pa_immed(struct cd_softc *, int);
static int cd_atapibus_load_unload(struct cd_softc *, int, int);

const struct cd_ops cd_atapibus_ops = {
	cd_atapibus_setchan,
	cd_atapibus_getvol,
	cd_atapibus_setvol,
	cd_atapibus_set_pa_immed,
	cd_atapibus_load_unload,
};

static int
cd_atapibus_setchan(cd, p0, p1, p2, p3, flags)
	struct cd_softc *cd;
	int p0, p1, p2, p3, flags;
{
	struct atapi_cd_mode_data data;
	int error;

	if ((error = atapi_mode_sense(cd->sc_link, ATAPI_AUDIO_PAGE,
	    (struct atapi_mode_header *)&data, AUDIOPAGESIZE, flags,
	    CDRETRIES, 20000)) != 0)
		return (error);
	data.pages.audio.port[LEFT_PORT].channels = p0;
	data.pages.audio.port[RIGHT_PORT].channels = p1;
	data.pages.audio.port[2].channels = p2;
	data.pages.audio.port[3].channels = p3;
	return (atapi_mode_select(cd->sc_link,
	    (struct atapi_mode_header *)&data, AUDIOPAGESIZE, flags,
	    CDRETRIES, 20000));
}

static int
cd_atapibus_getvol(cd, arg, flags)
	struct cd_softc *cd;
	struct ioc_vol *arg;
	int flags;
{
	struct atapi_cd_mode_data data;
	int error;

	if ((error = atapi_mode_sense(cd->sc_link, ATAPI_AUDIO_PAGE,
	    (struct atapi_mode_header *)&data, AUDIOPAGESIZE, flags,
	    CDRETRIES, 20000)) != 0)
		return (error);
	arg->vol[0] = data.pages.audio.port[0].volume;
	arg->vol[1] = data.pages.audio.port[1].volume;
	arg->vol[2] = data.pages.audio.port[2].volume;
	arg->vol[3] = data.pages.audio.port[3].volume;
	return (0);
}

static int
cd_atapibus_setvol(cd, arg, flags)
	struct cd_softc *cd;
	const struct ioc_vol *arg;
	int flags;
{
	struct atapi_cd_mode_data data, mask;
	int error;

	if ((error = atapi_mode_sense(cd->sc_link, ATAPI_AUDIO_PAGE,
	    (struct atapi_mode_header *)&data, AUDIOPAGESIZE, flags,
	    CDRETRIES, 20000)) != 0)
		return (error);
	if ((error = atapi_mode_sense(cd->sc_link, ATAPI_AUDIO_PAGE_MASK,
	    (struct atapi_mode_header *)&mask, AUDIOPAGESIZE, flags,
	    CDRETRIES, 20000)) != 0)
		return (error);

	data.pages.audio.port[0].volume = arg->vol[0] &
	    mask.pages.audio.port[0].volume;
	data.pages.audio.port[1].volume = arg->vol[1] &
	    mask.pages.audio.port[1].volume;
	data.pages.audio.port[2].volume = arg->vol[2] &
	    mask.pages.audio.port[2].volume;
	data.pages.audio.port[3].volume = arg->vol[3] &
	    mask.pages.audio.port[3].volume;

	return (atapi_mode_select(cd->sc_link,
	    (struct atapi_mode_header *)&data, AUDIOPAGESIZE,
	    flags, CDRETRIES, 20000));
}

static int
cd_atapibus_set_pa_immed(cd, flags)
	struct cd_softc *cd;
	int flags;
{

	/* Noop. */
	return (0);
}

static int
cd_atapibus_load_unload(cd, options, slot)
	struct cd_softc *cd;
	int options, slot;
{
	struct atapi_load_unload atapi_cmd;

	bzero(&atapi_cmd, sizeof(atapi_cmd));
	atapi_cmd.opcode = ATAPI_LOAD_UNLOAD;
	atapi_cmd.options = options;    /* ioctl uses ATAPI values */
	atapi_cmd.slot = slot;
	return (scsi_scsi_cmd(cd->sc_link,
		(struct scsi_generic *)&atapi_cmd, sizeof(atapi_cmd),
		0, 0, CDRETRIES, 200000, NULL, 0));
}
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd_atapi.c,v 1.3 2004/05/09 14:08:11 krw Exp $	*/
d49 3
@


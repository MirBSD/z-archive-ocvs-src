head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2004.06.13.18.58.33;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.11.17.18.55.16;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove traces of attempt to code ethertap device

we'll just use Claudio Jeker's patch for layer2/3
switching of the tun(4) device (although I have no
idea how to do the /dev/tapN things; maybe the apps
can use /dev/tunN?)
@
text
@/*	$MirBSD: src/sys/net/if_tap.h,v 1.1 2003/11/17 18:55:16 tg Exp $	*/
/*	$FreeBSD: src/sys/net/if_tap.h,v 1.1 2000/07/20 17:01:10 nsayer Exp $	*/
/*	_MirBSD: if_tun.h,v 1.2 2003/11/17 18:33:35 tg Exp $	*/
/*	$OpenBSD: if_tun.h,v 1.12 2002/12/10 21:04:14 mickey Exp $	*/

/*
 * Copyright (c) 1988, Julian Onions <Julian.Onions@@nexor.co.uk>
 * Nottingham University 1987.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This driver takes packets off the IP i/f and hands them up to a
 * user process to have its wicked way with. This driver has its
 * roots in a similar driver written by Phil Cockcroft (formerly) at
 * UCL. This driver is based much more on read/write/select mode of
 * operation though.
 */

#ifndef	_NET_IF_TAP_H_
#define	_NET_IF_TAp_H_

#include <sys/ioccom.h>

#define	TAP_OPEN	0x0001
#define	TAP_INITED	0x0002
#define	TAP_RCOLL	0x0004
#define	TAP_IASET	0x0008
#define	TAP_DSTADDR	0x0010
#define	TAP_RWAIT	0x0040
#define	TAP_ASYNC	0x0080
#define	TAP_NBIO	0x0100
#define	TAP_BRDADDR	0x0200
#define	TAP_STAYUP	0x0400

#define	TAP_READY	(TAP_OPEN | TAP_INITED | TAP_IASET)

/* Maximum packet size */
#define	TAPMTU		3000

/* Maximum receive packet size (hard limit) */
#define	TAPMRU          16384

/* iface info */
struct tapinfo {
	u_int	mtu;
	u_short	type;
	u_short	flags;
	u_int	baudrate;
};
#define	TAPSIFINFO	_IOW('t', 91, struct tapinfo)
#define	TAPGIFINFO	_IOR('t', 92, struct tapinfo)

#if 0	/* XXX */
/* ioctl for changing the broadcast/point-to-point status */
#define	TAPSIFMODE      _IOW('t', 93, int)
#endif

/* ioctls for get/set debug */
#define	TAPSDEBUG	_IOW('t', 94, int)
#define	TAPGDEBUG	_IOR('t', 95, int)

#if 0	/* XXX
#define	VMIO_SIOCSIFFLAGS	_IO('V', 0)
#define	VMIO_SIOCSKEEP		_IO('V', 1)
#define	VMIO_SIOCSIFBR		_IO('V', 2)
#define	VMIO_SIOCSLADRF		_IO('V', 3)

/* XXX -- unimplemented */
#define	VMIO_SIOCSETMACADDR	_IO('V', 4)

/* XXX -- not used? */
#define	VMIO_SIOCPORT		_IO('V', 5)
#define	VMIO_SIOCBRIDGE		_IO('V', 6)
#define	VMIO_SIOCNETIF		_IO('V', 7)
#endif

#endif /* _NET_IF_TUN_H_ */
@


1.1
log
@add framework (INCOMPLETE) for the ethertap device
code from openbsd if_tun.[ch]
framework (conf, kernel) by me
diffs to ethertap device from freebsd
some ideas from Claudio Jeker
@
text
@d1 1
a1 1
/*	$MirBSD: if_tun.h,v 1.2 2003/11/17 18:33:35 tg Exp $	*/
@


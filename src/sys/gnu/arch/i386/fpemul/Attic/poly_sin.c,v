head	1.2;
access;
symbols
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	cvs-200307072125:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307021520:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.03.23.21.52.42;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.51.47;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.51.47;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Merge MirBSD-old entirely
Remove krb, yp, afs, GPL'd stuff in kernel
Adjust some other stuff

Not to be compiled yet...
@
text
@/*	$OpenBSD: poly_sin.c,v 1.1 1996/08/27 10:32:55 downsj Exp $	*/
/*
 *  poly_sin.c
 *
 *  Computation of an approximation of the sin function by a polynomial
 *
 *
 * Copyright (C) 1992,1993,1994
 *                       W. Metzenthen, 22 Parker St, Ormond, Vic 3163,
 *                       Australia.  E-mail   billm@@vaxc.cc.monash.edu.au
 * All rights reserved.
 *
 * This copyright notice covers the redistribution and use of the
 * FPU emulator developed by W. Metzenthen. It covers only its use
 * in the 386BSD, FreeBSD and NetBSD operating systems. Any other
 * use is not permitted under this copyright.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must include information specifying
 *    that source code for the emulator is freely available and include
 *    either:
 *      a) an offer to provide the source code for a nominal distribution
 *         fee, or
 *      b) list at least two alternative methods whereby the source
 *         can be obtained, e.g. a publically accessible bulletin board
 *         and an anonymous ftp site from which the software can be
 *         downloaded.
 * 3. All advertising materials specifically mentioning features or use of
 *    this emulator must acknowledge that it was developed by W. Metzenthen.
 * 4. The name of W. Metzenthen may not be used to endorse or promote
 *    products derived from this software without specific prior written
 *    permission.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * W. METZENTHEN BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *
 * The purpose of this copyright, based upon the Berkeley copyright, is to
 * ensure that the covered software remains freely available to everyone.
 *
 * The software (with necessary differences) is also available, but under
 * the terms of the GNU copyleft, for the Linux operating system and for
 * the djgpp ms-dos extender.
 *
 * W. Metzenthen   June 1994.
 *
 *
 *     $FreeBSD: poly_sin.c,v 1.5 1994/08/31 04:45:22 davidg Exp $
 *
 */


#include <gnu/arch/i386/fpemul/exception.h>
#include <gnu/arch/i386/fpemul/reg_constant.h>
#include <gnu/arch/i386/fpemul/fpu_emu.h>
#include <gnu/arch/i386/fpemul/control_w.h>


#define	HIPOWER	5
static unsigned short lterms[HIPOWER][4] =
{
	{0x846a, 0x42d1, 0xb544, 0x921f},
	{0xe110, 0x75aa, 0xbc67, 0x1466},
	{0x503d, 0xa43f, 0x83c1, 0x000a},
	{0x8f9d, 0x7a19, 0x00f4, 0x0000},
	{0xda03, 0x06aa, 0x0000, 0x0000},
};

static unsigned short negterms[HIPOWER][4] =
{
	{0x95ed, 0x2df2, 0xe731, 0xa55d},
	{0xd159, 0xe62b, 0xd2cc, 0x0132},
	{0x6342, 0xe9fb, 0x3c60, 0x0000},
	{0x6256, 0xdf5a, 0x0002, 0x0000},
	{0xf279, 0x000b, 0x0000, 0x0000},
};


/*--- poly_sine() -----------------------------------------------------------+
 |                                                                           |
 +---------------------------------------------------------------------------*/
void
poly_sine(FPU_REG * arg, FPU_REG * result)
{
	short   exponent;
	FPU_REG Xx, Xx2, Xx4, accum, negaccum;


	exponent = arg->exp - EXP_BIAS;

	if (arg->tag == TW_Zero) {
		/* Return 0.0 */
		reg_move(&CONST_Z, result);
		return;
	}
#ifdef PARANOID
	if (arg->sign != 0) {	/* Can't hack a number < 0.0 */
		EXCEPTION(EX_Invalid);
		reg_move(&CONST_QNaN, result);
		return;
	}
	if (exponent >= 0) {	/* Can't hack a number > 1.0 */
		if ((exponent == 0) && (arg->sigl == 0) && (arg->sigh == 0x80000000)) {
			reg_move(&CONST_1, result);
			return;
		}
		EXCEPTION(EX_Invalid);
		reg_move(&CONST_QNaN, result);
		return;
	}
#endif				/* PARANOID */

	Xx.sigl = arg->sigl;
	Xx.sigh = arg->sigh;
	if (exponent < -1) {
		/* shift the argument right by the required places */
		if (shrx(&(Xx.sigl), -1 - exponent) >= (unsigned)0x80000000)
			(*((long long *) (&(Xx.sigl))))++;	/* round up */
	}
	mul64((long long *) &(Xx.sigl), (long long *) &(Xx.sigl),
	    (long long *) &(Xx2.sigl));
	mul64((long long *) &(Xx2.sigl), (long long *) &(Xx2.sigl),
	    (long long *) &(Xx4.sigl));

	/* will be a valid positive nr with expon = 0 */
	*(short *) &(accum.sign) = 0;
	accum.exp = 0;

	/* Do the basic fixed point polynomial evaluation */
	polynomial((u_int *) &(accum.sigl), (u_int *)&(Xx4.sigl), lterms, HIPOWER - 1);

	/* will be a valid positive nr with expon = 0 */
	*(short *) &(negaccum.sign) = 0;
	negaccum.exp = 0;

	/* Do the basic fixed point polynomial evaluation */
	polynomial((u_int *) &(negaccum.sigl), (u_int *)&(Xx4.sigl), negterms, HIPOWER - 1);
	mul64((long long *) &(Xx2.sigl), (long long *) &(negaccum.sigl),
	    (long long *) &(negaccum.sigl));

	/* Subtract the mantissas */
	*((long long *) (&(accum.sigl))) -= *((long long *) (&(negaccum.sigl)));

	/* Convert to 64 bit signed-compatible */
	accum.exp = EXP_BIAS - 1 + accum.exp;

	*(short *) &(result->sign) = *(short *) &(accum.sign);
	result->exp = accum.exp;
	result->sigl = accum.sigl;
	result->sigh = accum.sigh;

	normalize(result);

	reg_mul(result, arg, result, FULL_PRECISION);
	reg_u_add(result, arg, result, FULL_PRECISION);

	/* A small overflow may be possible... but an illegal result. */
	if (result->exp >= EXP_BIAS) {
		if ((result->exp > EXP_BIAS)	/* Larger or equal 2.0 */
		    ||(result->sigl > 1)	/* Larger than 1.0+msb */
		    ||(result->sigh != 0x80000000)	/* Much > 1.0 */
		    ) {
#ifdef DEBUGGING
			RE_ENTRANT_CHECK_OFF
			    printk("\nEXP=%d, MS=%08x, LS=%08x\n", result->exp,
			    result->sigh, result->sigl);
			RE_ENTRANT_CHECK_ON
#endif				/* DEBUGGING */
			    EXCEPTION(EX_INTERNAL | 0x103);
		}
#ifdef DEBUGGING
		RE_ENTRANT_CHECK_OFF
		    printk("\n***CORRECTING ILLEGAL RESULT*** in poly_sin() computation\n");
		printk("EXP=%d, MS=%08x, LS=%08x\n", result->exp,
		    result->sigh, result->sigl);
		RE_ENTRANT_CHECK_ON
#endif				/* DEBUGGING */

		    result->sigl = 0;	/* Truncate the result to 1.00 */
	}
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

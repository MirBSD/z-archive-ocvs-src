head	1.6;
access;
symbols
	tg-mergetmp-mirosx-1:1.6
	tg-mergefixes-1-branch:1.6.0.8
	tg-mergefixes-1-base:1.6
	MIROS_X:1.6.0.6
	MIROS_X_BASE:1.6
	tg-mergetmp-3:1.6
	MIRBSD_XP_MIRPPC:1.6.0.4
	MIRBSD_XP_SPARC_BASE:1.6
	MIRBSD_XP_SPARC:1.6.0.2
	MIRBSD_7quater:1.5
	cvs-200405160640:1.1.1.5
	cvs-200401271800:1.1.1.5
	cvs-200401261630:1.1.1.5
	cvs-200401021645:1.1.1.4
	MIRBSD_7_ALPHA:1.5.0.6
	MIRBSD_7:1.5.0.4
	cvs-200312222040:1.1.1.4
	MIRBSD_7ter:1.5
	MIRBSD_7_DEV:1.5.0.2
	cvs-200310020700:1.1.1.4
	cvs-200309271030:1.1.1.4
	cvs-200309261655:1.1.1.4
	cvs-200309251530:1.1.1.4
	cvs-200308302005:1.1.1.4
	cvs-200308171200:1.1.1.4
	ctm-3496:1.1.1.4
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	cvs-200307072125:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200307021520:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.3
	MIRBSD_5:1.4
	cvs-200306082100:1.1.1.3
	ctm-3316:1.1.1.3
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2004.01.27.17.42.35;	author tg;	state Stab;
branches;
next	1.5;

1.5
date	2003.08.16.15.25.48;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.05.20.38.35;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.22.14.08.43;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.24.11.56.24;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.51.58;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.51.58;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.21.19.10.43;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.05.17.40.48;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.08.11.18.41.12;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.01.26.18.53.24;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@first part of mergeing OpenBSD and fixing whitespace and RCS IDs
@
text
@/*	$MirBSD: printf.c,v 1.5 2003/08/16 15:25:48 tg Exp $	*/
/*	$OpenBSD: printf.c,v 1.22 2004/01/03 14:08:53 espie Exp $	*/
/*	$NetBSD: printf.c,v 1.10 1996/11/30 04:19:21 gwr Exp $	*/

/*-
 * Copyright (c) 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)printf.c	8.1 (Berkeley) 6/11/93
 */

/*
 * Scaled down version of printf(3).
 *
 * One additional format:
 *
 * The format %b is supported to decode error registers.
 * Its usage is:
 *
 *	printf("reg=%b\n", regval, "<base><arg>*");
 *
 * where <base> is the output base expressed as a control character, e.g.
 * \10 gives octal; \20 gives hex.  Each arg is a sequence of characters,
 * the first of which gives the bit number to be inspected (origin 1), and
 * the next characters (up to a control character, i.e. a character <= 32),
 * give the name of the register.  Thus:
 *
 *	printf("reg=%b\n", 3, "\10\2BITTWO\1BITONE\n");
 *
 * would produce output:
 *
 *	reg=3<BITTWO,BITONE>
 */

#include <sys/cdefs.h>
#include <sys/types.h>
#include <sys/stdarg.h>

#include "stand.h"

void kprintn(void (*)(int), u_long, int);
void kdoprnt(void (*)(int), const char *, va_list);

void
printf(const char *fmt, ...)
{
	va_list ap;

	va_start(ap, fmt);
	kdoprnt(putchar, fmt, ap);
	va_end(ap);
}

void
vprintf(const char *fmt, va_list ap)
{
	kdoprnt(putchar, fmt, ap);
}

void
kdoprnt(void (*put)(int), const char *fmt, va_list ap)
{
	unsigned long ul;
	int ch, lflag;
	char *p;

	for (;;) {
		while ((ch = *fmt++) != '%') {
			if (ch == '\0')
				return;
			put(ch);
		}
		lflag = 0;
reswitch:	switch (ch = *fmt++) {
		case 'l':
			lflag = 1;
			goto reswitch;
#ifndef	STRIPPED
		case 'b':
		{
			int set, n;

			ul = va_arg(ap, int);
			p = va_arg(ap, char *);
			kprintn(put, ul, *p++);

			if (!ul)
				break;

			for (set = 0; (n = *p++);) {
				if (ul & (1 << (n - 1))) {
					put(set ? ',' : '<');
					for (; (n = *p) > ' '; ++p)
						put(n);
					set = 1;
				} else
					for (; *p > ' '; ++p)
						;
			}
			if (set)
				put('>');
		}
			break;
#endif
		case 'c':
			ch = va_arg(ap, int);
			put(ch & 0x7f);
			break;
		case 's':
			p = va_arg(ap, char *);
			while ((ch = *p++))
				put(ch);
			break;
		case 'd':
			ul = lflag ?
			    va_arg(ap, long) : va_arg(ap, int);
			if ((long)ul < 0) {
				put('-');
				ul = -(long)ul;
			}
			kprintn(put, ul, 10);
			break;
		case 'o':
			ul = lflag ?
			    va_arg(ap, u_long) : va_arg(ap, u_int);
			kprintn(put, ul, 8);
			break;
		case 'u':
			ul = lflag ?
			    va_arg(ap, u_long) : va_arg(ap, u_int);
			kprintn(put, ul, 10);
			break;
		case 'p':
			put('0');
			put('x');
			lflag += sizeof(void *)==sizeof(u_long)? 1 : 0;
		case 'X':
		case 'x':
			ul = lflag ?
			    va_arg(ap, u_long) : va_arg(ap, u_int);
			kprintn(put, ul, 16);
			break;
		default:
			put('%');
			if (lflag)
				put('l');
			put(ch);
		}
	}
	va_end(ap);
}

void
kprintn(void (*put)(int), unsigned long ul, int base)
{
	/* hold a long in base 8 */
	char *p, buf[(sizeof(long) * NBBY / 3) + 1];

	p = buf;
	do {
		*p++ = "0123456789ABCDEF"[ul % base];
	} while (ul /= base);
	do {
		put(*--p);
	} while (p > buf);
}

int donottwiddle = 0;

void
twiddle(void)
{
	static int pos;

	if (!donottwiddle) {
		putchar("|/-\\"[pos++ & 3]);
		putchar('\b');
	}
}
@


1.5
log
@Merge OpenBSD
@
text
@d1 2
a2 2
/*	$MirBSD: printf.c,v 1.4 2003/06/05 20:38:35 tg Exp $	*/
/*	$OpenBSD: printf.c,v 1.21 2003/08/11 06:23:09 deraadt Exp $	*/
d61 1
a61 1
#include <machine/stdarg.h>
@


1.4
log
@cvs import conflicts
@
text
@d1 2
a2 2
/*	$MirBSD: printf.c,v 1.3 2003/05/22 14:08:43 tg Exp $	*/
/*	$OpenBSD: printf.c,v 1.20 2003/06/02 23:28:09 millert Exp $	*/
d21 1
a21 1
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
d85 1
a85 4
kdoprnt(put, fmt, ap)
	void (*put)(int);
	const char *fmt;
	va_list ap;
a86 1
	char *p;
d89 1
d106 1
d121 2
a122 1
					for (; *p > ' '; ++p);
d131 1
a131 1
				put(ch & 0x7f);
d178 1
a178 4
kprintn(put, ul, base)
	void (*put)(int);
	unsigned long ul;
	int base;
d180 1
a180 1
					/* hold a long in base 8 */
d195 1
a195 1
twiddle()
@


1.3
log
@merge CVS import stuff
@
text
@d1 2
a2 2
/*	$MirBSD: printf.c,v 1.2 2003/04/24 11:56:24 tg Exp $	*/
/*	$OpenBSD: printf.c,v 1.18 2003/05/20 19:23:01 jason Exp $	*/
d17 1
a17 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d65 2
a66 26
static void kprintn(void (*)(int), u_long, int);
static void kdoprnt(void (*)(int), const char *, va_list);

#ifndef	STRIPPED
static void sputchar(int);
static char *sbuf;

static void
sputchar(c)
	int c;
{
	*sbuf++ = c;
}

void
sprintf(char *buf, const char *fmt, ...)
{
	va_list ap;

	sbuf = buf;
	va_start(ap, fmt);
	kdoprnt(sputchar, fmt, ap);
	va_end(ap);
	*sbuf = '\0';
}
#endif	/* NO_SPRINTF */
d84 1
a84 1
static void
d178 1
a178 1
static void
@


1.2
log
@always print sedecimal numbers (%X) as uppercase
@
text
@d1 2
a2 2
/*	$MirBSD$	*/
/*	$OpenBSD: printf.c,v 1.17 2002/03/15 18:19:52 millert Exp $	*/
d118 1
a118 2
	register char *p;
	register int ch;
d120 1
a120 1
	int lflag;
d136 1
a136 1
			register int set, n;
@


1.1
log
@Initial revision
@
text
@d1 1
d191 1
d218 1
a218 1
		*p++ = "0123456789abcdef"[ul % base];
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync MirBSD main source tree against OpenBSD-current,
which should be fairly stable after the Hackathon now.
@
text
@d1 1
a1 1
/*	$OpenBSD: printf.c,v 1.18 2003/05/20 19:23:01 jason Exp $	*/
d117 2
a118 1
	char *p;
d120 1
a120 1
	int ch, lflag;
d136 1
a136 1
			int set, n;
@


1.1.1.3
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
/*	$OpenBSD: printf.c,v 1.20 2003/06/02 23:28:09 millert Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
d68 26
a93 2
void kprintn(void (*)(int), u_long, int);
void kdoprnt(void (*)(int), const char *, va_list);
d111 1
a111 1
void
d204 1
a204 1
void
@


1.1.1.4
log
@Import the complete OpenBSD source tree (base system)
as of CTM delta 3496 (roughly 1200 UTC today) into the
vendor branch.
Attention: this is a big update. Don't even try to
build this system, OpenBSD 3.4-beta, yet on your own.
@
text
@d1 1
a1 1
/*	$OpenBSD: printf.c,v 1.21 2003/08/11 06:23:09 deraadt Exp $	*/
d84 4
a87 1
kdoprnt(void (*put)(int), const char *fmt, va_list ap)
d89 1
a91 1
	char *p;
a107 1

d122 1
a122 2
					for (; *p > ' '; ++p)
						;
d131 1
a131 1
			put(ch & 0x7f);
d177 4
a180 1
kprintn(void (*put)(int), unsigned long ul, int base)
d182 1
a182 1
	/* hold a long in base 8 */
d197 1
a197 1
twiddle(void)
@


1.1.1.5
log
@Import OpenBSD as of today again (seems pretty stable, I hope)

Prominent changes: more bgpd, tcpmd5; tcpdump/isakmpd fixes
@
text
@d1 1
a1 1
/*	$OpenBSD: printf.c,v 1.22 2004/01/03 14:08:53 espie Exp $	*/
d60 1
a60 1
#include <sys/stdarg.h>
@



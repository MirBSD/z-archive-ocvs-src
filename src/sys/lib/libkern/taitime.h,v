head	1.3;
access;
symbols
	tg-mergetmp-mirosx-1:1.3
	tg-mergefixes-1-branch:1.3.0.4
	tg-mergefixes-1-base:1.3
	MIROS_X:1.3.0.2
	MIROS_X_BASE:1.3
	tg-mergetmp-3:1.3
	MIRBSD_XP_MIRPPC:1.1.0.4
	MIRBSD_XP_SPARC_BASE:1.1
	MIRBSD_XP_SPARC:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2004.12.04.22.05.07;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.11.23.21.21.00;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.23.16.58.43;	author tg;	state Stab;
branches;
next	;


desc
@@


1.3
log
@modernise
in tai_make.c, %016llX outputs an int64_t, no tai64_t
@
text
@/**	$MirBSD: src/sys/lib/libkern/taitime.h,v 1.2 2004/00/11 23:21:21 tg Exp $ */
/**	_MirBSD: src/include/time.h,v 1.16 2004/11/22 15:04:52 tg Exp $ */
/*	$OpenBSD: time.h,v 1.16 2003/08/01 17:38:33 avsm Exp $	*/
/*	$NetBSD: time.h,v 1.9 1994/10/26 00:56:35 cgd Exp $	*/

/*
 * Copyright (c) 2004
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
 * Copyright (c) 1989 The Regents of the University of California.
 * All rights reserved.
 *
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this soft-
 *    ware must display the following acknowledgement:
 *	This product includes material provided by Thorsten Glaser.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)time.h	5.12 (Berkeley) 3/9/91
 */

#ifndef _TAITIME_H_
#define	_TAITIME_H_

struct tm {
	int	tm_sec;		/* seconds after the minute [0-60] */
	int	tm_min;		/* minutes after the hour [0-59] */
	int	tm_hour;	/* hours since midnight [0-23] */
	int	tm_mday;	/* day of the month [1-31] */
	int	tm_mon;		/* months since January [0-11] */
	time_t	tm_year;	/* years since 1900 */
	int	tm_wday;	/* days since Sunday [0-6] */
	int	tm_yday;	/* days since January 1 [0-365] */
	int	tm_isdst;	/* Daylight Saving Time flag */
	long	tm_gmtoff;	/* offset from UTC in seconds */
	char	*tm_zone;	/* timezone abbreviation */
};

/*
 * Represents the current date and time of day in seconds
 * since 1970-01-01 00:00:00 (beginning of the TAI year),
 * with a bias of 0x4000000000000000, as a signed 63 bit value.
 */
typedef	int64_t tai64_t;

/* Modified Julian Date */
typedef struct {
	time_t	mjd;
	int32_t	sec;
} mjd_t;

/*
 * tai64 and mjd handling functions
 */

tai64_t *_tai_leaps(void);
int	tai_isleap(tai64_t);

/* Conversion routines */
#define __TAI64_BIAS	0x4000000000000000ULL
#define	timet2tai(x)	((tai64_t)((time_t)(x) + __TAI64_BIAS))
#define	tai2timet(x)	((time_t)((tai64_t)(x) - __TAI64_BIAS))
tai64_t	utc2tai(int64_t);
int64_t	tai2utc(tai64_t);
tai64_t	mjd2tai(mjd_t);
mjd_t	tai2mjd(tai64_t);

struct tm	mjd2tm(mjd_t);
mjd_t		tm2mjd(struct tm);

#endif	/* ndef _TAITIME_H_ */
@


1.2
log
@sync with libc source; shrink and make more failproof
@
text
@d1 1
a1 1
/**	$MirBSD: src/include/time.h,v 1.16 2004/11/22 15:04:52 tg Exp $ */
d26 4
a29 1
 * 3. Neither the name of the University nor the names of its contributors
a31 3
 * 4. All advertising materials mentioning features or use of this soft-
 *    ware must display the following acknowledgement:
 *	This product includes material provided by Thorsten Glaser.
@


1.1
log
@* lalala, ABI change...
  change the calling convention for the mjd2tm and tm2mjd functions,
  to be
  - similar between themselfes
  - equal between kernel and userland
  - not using malloc
* add TAI stuff to the kernel, including leap seconds(!) :)
  -> we can soon(TM) set the RTC to UTC, even when
     having the kernel on dru^H^H^HLS^H^HTAI
* some Makefile adjustments for
  - new library stuff
  - bsd.cfwrap.mk
  - simplifications
* start fixing the build (still static, tho I didn't intend that...)
* add missing shlib version for libsupc++
@
text
@d1 4
a4 1
/* $MirBSD: src/include/time.h,v 1.6 2004/06/23 12:37:10 tg Exp $ */
d29 3
d44 2
d57 1
a57 1
	int	tm_year;	/* years since 1900 */
d68 1
a68 1
 * with a bias of 0x4000000000000000, as a signed 30 bit value.
d74 2
a75 2
	int32_t mjd;
	int32_t sec;
d78 3
d82 1
a82 1
tai64_t *tai_leaps(void);
d86 3
a88 2
tai64_t	timet2tai(time_t);
time_t	tai2timet(tai64_t);
d97 1
a97 3
#define	TAI64_BIAS	0x4000000000000000ULL

#endif	/* ndef _TAIIME_H_ */
@


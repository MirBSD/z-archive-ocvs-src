head	1.5;
access;
symbols
	tg-mergetmp-mirosx-1:1.5
	tg-mergefixes-1-branch:1.5.0.4
	tg-mergefixes-1-base:1.5
	MIROS_X:1.5.0.2
	MIROS_X_BASE:1.5
	tg-mergetmp-3:1.5
	MIRBSD_XP_MIRPPC:1.2.0.4
	MIRBSD_XP_SPARC_BASE:1.2
	MIRBSD_XP_SPARC:1.2.0.2;
locks; strict;
comment	@ * @;


1.5
date	2004.12.04.22.10.55;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.12.04.22.05.07;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.11.23.21.21.00;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.14.00.01.52;	author tg;	state Stab;
branches;
next	1.1;

1.1
date	2004.06.23.16.58.42;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@- do not make the same error people who use %ld to
  print out a time_t did
- add AUTOMATICALLY GENERATED to the preamble
@
text
@/**	$MirBSD: src/sys/lib/libkern/tai_make.c,v 1.4 2004/12/04 22:05:07 tg Exp $ */

/*-
 * Copyright (c) 2004
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
 *
 * All advertising materials mentioning features or use of this soft-
 * ware must display the following acknowledgement:
 *	This product includes material provided by Thorsten Glaser.
 *
 * Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
 * any kind, expressed or implied, to the maximum extent permitted by
 * applicable law, but with the warranty of being written without ma-
 * licious intent or gross negligence; in no event shall licensor, an
 * author or contributor be held liable for any damage, direct, indi-
 * rect or other, however caused, arising in any way out of the usage
 * of this work, even if advised of the possibility of such damage.
 *-
 * Generate dump of leap secons.
 */

#include <sys/param.h>
#include <err.h>
#include <stdio.h>
#include <time.h>

__RCSID("$MirBSD: src/sys/lib/libkern/tai_make.c,v 1.4 2004/12/04 22:05:07 tg Exp $");

static const char preamble[] =
"/* AUTOMATICALLY GENERATED - DO NOT EDIT! */\n\n"
"#include <sys/types.h>\n"
"#include <lib/libkern/taitime.h>\n\n"
"static tai64_t _leaps[] = {\n";

static const char epilogue[] =
"\t0\n"
"};\n\n"
"tai64_t *\n_tai_leaps(void)\n"
"{\n"
"	return _leaps;\n"
"}\n";


int
main(int argc, char *argv[])
{
	int64_t *t;

	if (sizeof(int64_t) != sizeof(tai64_t))
		errx(1, "tai64_t is not int64_t!");

	if ((t = (int64_t *)tai_leaps()) == NULL)
		errx(1, "Cannot get leap seconds!");

	if (!(*t))
		errx(1, "Leap second table empty!");

	printf("%s", preamble);
	while (*t) {
		printf("\t0x%16llXLL,\n", *t);
		++t;
	}
	printf("%s", epilogue);

	return 0;
}
@


1.4
log
@modernise
in tai_make.c, %016llX outputs an int64_t, no tai64_t
@
text
@d1 1
a1 1
/**	$MirBSD: src/share/misc/licence.template,v 1.20 2004/12/03 16:18:37 tg Rel $ */
d34 1
a34 1
__RCSID("$MirBSD: src/sys/lib/libkern/tai_make.c,v 1.3 2004/00/11 23:21:21 tg Exp $");
d37 1
d55 3
@


1.3
log
@sync with libc source; shrink and make more failproof
@
text
@d1 1
a1 1
/**	$MirBSD: src/sys/lib/libkern/tai_make.c,v 1.2 2004/08/14 00:01:52 tg Stab $ */
d24 1
a24 1
 * of covered work, even if advised of the possibility of such damage.
d34 1
a34 2
__RCSID("$MirBSD: src/sys/lib/libkern/tai_make.c,v 1.2 2004/08/14 00:01:52 tg Stab $");

d53 1
a53 1
	tai64_t *t;
d55 1
a55 1
	if ((t = tai_leaps()) == NULL)
@


1.2
log
@* Makefile:
	add contbuild-x as an undocumented helper target
	(I thought I had already committed this, wtf?)
* time.h, taitime.c:
	It's a _absolutely_ stoopid idea to name a function tai_now()
	if it has a different calling signature than the libtai one
	from DJB, especially if included in libc. Found while linking
	some DJB ware statically (d'oh).
	Rename tai[na]_now() to tai[na]_time() and add an optional
	pointer argument to tai_time() so it behaves exactly the
	same as time(3), just with tai64_t not time_t.
	Fix some comments and build warnings (-Wall).
* time.h:
	always expose TAI functions
	for this, pull <machine/types.h>
	fix a bit
* bsd.own.mk:
	libc interface has changed, bump major
	no need to bump libpthread
* sys.mk / param.h:
	bump
* tai_make.c:
	adjust for new time.h
@
text
@d1 1
a1 1
/**	$MirBSD: src/share/misc/licence.template,v 1.12 2004/08/08 15:38:56 tg Rel $ */
d8 9
a16 5
 * tion, including unlimited rights to use, publically perform, modi-
 * fy, merge, distribute, sell, give away or sublicence, provided the
 * above copyright notices, these terms and the disclaimer are retai-
 * ned in all redistributions, or reproduced in accompanying documen-
 * tation or other materials provided with binary redistributions.
d34 1
a34 1
__RCSID("$MirBSD: src/sys/lib/libkern/tai_make.c,v 1.1 2004/06/23 16:58:42 tg Exp $");
d45 1
a45 1
"tai64_t *\ntai_leaps(void)\n"
@


1.1
log
@* lalala, ABI change...
  change the calling convention for the mjd2tm and tm2mjd functions,
  to be
  - similar between themselfes
  - equal between kernel and userland
  - not using malloc
* add TAI stuff to the kernel, including leap seconds(!) :)
  -> we can soon(TM) set the RTC to UTC, even when
     having the kernel on dru^H^H^HLS^H^HTAI
* some Makefile adjustments for
  - new library stuff
  - bsd.cfwrap.mk
  - simplifications
* start fixing the build (still static, tho I didn't intend that...)
* add missing shlib version for libsupc++
@
text
@d1 3
a3 2
/* $MirBSD: src/share/misc/licence.template,v 1.11 2004/05/28 15:34:01 tg Rel $
 *-
a24 1
#define	_MIROS_TAI64
d30 1
a30 1
__RCSID("$MirBSD$");
@


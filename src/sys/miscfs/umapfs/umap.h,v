head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.4
	tg-mergefixes-1-branch:1.1.1.4.0.14
	tg-mergefixes-1-base:1.1.1.4
	MIROS_X:1.1.1.4.0.12
	MIROS_X_BASE:1.1.1.4
	tg-mergetmp-3:1.1.1.4
	MIRBSD_XP_MIRPPC:1.1.1.4.0.10
	MIRBSD_XP_SPARC_BASE:1.1.1.4
	MIRBSD_XP_SPARC:1.1.1.4.0.8
	MIRBSD_7quater:1.1.1.4
	cvs-200405160640:1.1.1.4
	cvs-200401271800:1.1.1.4
	cvs-200401261630:1.1.1.4
	cvs-200401021645:1.1.1.4
	MIRBSD_7_ALPHA:1.1.1.4.0.6
	MIRBSD_7:1.1.1.4.0.4
	cvs-200312222040:1.1.1.4
	MIRBSD_7ter:1.1.1.4
	MIRBSD_7_DEV:1.1.1.4.0.2
	cvs-200310020700:1.1.1.4
	cvs-200309271030:1.1.1.4
	cvs-200309261655:1.1.1.4
	cvs-200309251530:1.1.1.4
	cvs-200308302005:1.1.1.4
	cvs-200308171200:1.1.1.4
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	cvs-200307072125:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200307021520:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.3
	MIRBSD_5:1.1.1.3
	cvs-200306082100:1.1.1.3
	ctm-3316:1.1.1.3
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.52.02;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.52.02;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.21.19.10.50;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.05.17.40.55;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.08.17.14.40.08;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: umap.h,v 1.9 2002/03/14 01:27:08 millert Exp $	*/
/*	$NetBSD: umap.h,v 1.6 1996/02/09 22:41:00 christos Exp $	*/

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software donated to Berkeley by
 * the UCLA Ficus project.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)null_vnops.c       1.5 (Berkeley) 7/10/92
 *	@@(#)umap.h	8.3 (Berkeley) 1/21/94
 */

#define UMAPFILEENTRIES 64
#define GMAPFILEENTRIES 16
#define NOBODY 32767
#define NULLGROUP 65534

typedef	u_int32_t	id_t;
typedef	id_t		(*id_map_t)[2];

struct umap_args {
	char	*target;	/* Target of loopback  */
	int 	unentries;	/* # of entries in user map array */
	int 	gnentries;	/* # of entries in group map array */
	id_map_t umapdata;	/* pointer to array of user mappings */
	id_map_t gmapdata;	/* pointer to array of group mappings */
};

struct umap_mount {
	struct mount	*umapm_vfs;
	struct vnode	*umapm_rootvp;	/* Reference to root umap_node */
	int		info_unentries;	/* number of uid mappings */
	int		info_gnentries;	/* number of gid mappings */
	id_t		info_umapdata[UMAPFILEENTRIES][2]; /* mapping data for 
	    user mapping in ficus */
	id_t		info_gmapdata[GMAPFILEENTRIES][2]; /*mapping data for 
	    group mapping in ficus */
};

#ifdef _KERNEL
/*
 * A cache of vnode references
 */
struct umap_node {
	LIST_ENTRY(umap_node) umap_hash;	/* Hash list */
	struct vnode	*umap_lowervp;	/* Aliased vnode - VREFed once */
	struct vnode	*umap_vnode;	/* Back pointer to vnode/umap_node */
};

extern int	umap_node_create(struct mount *mp, struct vnode *target, struct vnode **vpp);
extern id_t	umap_reverse_findid(id_t id, id_map_t, int nentries);
extern void	umap_mapids(struct mount *v_mount, struct ucred *credp);

#define	MOUNTTOUMAPMOUNT(mp) ((struct umap_mount *)((mp)->mnt_data))
#define	VTOUMAP(vp) ((struct umap_node *)(vp)->v_data)
#define UMAPTOV(xp) ((xp)->umap_vnode)
#ifdef UMAPFS_DIAGNOSTIC
extern struct vnode *umap_checkvp(struct vnode *vp, char *fil, int lno);
#define	UMAPVPTOLOWERVP(vp) umap_checkvp((vp), __FILE__, __LINE__)
#else
#define	UMAPVPTOLOWERVP(vp) (VTOUMAP(vp)->umap_lowervp)
#endif

extern int (**umap_vnodeop_p)(void *);
extern struct vfsops umap_vfsops;

int umapfs_init(struct vfsconf *);

#endif /* _KERNEL */
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync MirBSD main source tree against OpenBSD-current,
which should be fairly stable after the Hackathon now.
@
text
@d1 2
a2 2
/*	$OpenBSD: umap.h,v 1.11 2003/05/12 23:39:14 tedu Exp $ */
/*	$NetBSD: umap.h,v 1.9 1999/07/08 01:19:06 wrstuden Exp $	*/
d40 1
a40 1
 *	@@(#)umap.h	8.4 (Berkeley) 8/20/94
a42 2
#include <miscfs/genfs/layer.h>

d48 3
d52 5
a56 8
	struct layer_args la;		/* generic layerfs args. Includes
					 * target and export info */
#define	umap_target	la.target
#define	umap_export	la.export
	int 		unentries;       /* # of entries in user map array */
	int 		gnentries;	/* # of entries in group map array */
	u_long 		(*umapdata)[2];	/* pointer to array of user mappings */
	u_long 		(*gmapdata)[2];	/* pointer to array of group mappings */
a58 2
#ifdef _KERNEL

d60 3
a62 2
	struct layer_mount lm;		
	int             info_unentries;  /* number of uid mappings */
d64 1
a64 1
	u_long		info_umapdata[UMAPFILEENTRIES][2]; /* mapping data for 
d66 1
a66 1
	u_long		info_gmapdata[GMAPFILEENTRIES][2]; /*mapping data for 
a68 12
#define	umapm_vfs		lm.layerm_vfs
#define	umapm_rootvp		lm.layerm_rootvp
#define	umapm_export		lm.layerm_export
#define	umapm_flags		lm.layerm_flags
#define	umapm_size		lm.layerm_size
#define	umapm_tag		lm.layerm_tag
#define	umapm_bypass		lm.layerm_bypass
#define	umapm_alloc		lm.layerm_alloc
#define	umapm_vnodeop_p		lm.layerm_vnodeop_p
#define	umapm_node_hashtbl	lm.layerm_node_hashtbl
#define	umapm_node_hash		lm.layerm_node_hash
#define	umapm_hashlock		lm.layerm_hashlock
d70 1
d75 3
a77 1
	struct	layer_node	ln;
d80 3
a82 7
u_long umap_reverse_findid(u_long id, u_long map[][2], int nentries);
void umap_mapids(struct mount *v_mount, struct ucred *credp);

#define	umap_hash	ln.layer_hash
#define	umap_lowervp	ln.layer_lowervp
#define	umap_vnode	ln.layer_vnode
#define	umap_flags	ln.layer_flags
d88 2
a89 1
#define	UMAPVPTOLOWERVP(vp) layer_checkvp((vp), __FILE__, __LINE__)
d94 2
a95 4
extern int (**umapfs_vnodeop_p)(void *);
extern struct vfsops umapfs_vfsops;

int     umap_bypass(void *);
d97 1
a97 1
#define NUMAPNODECACHE	16
@


1.1.1.3
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
/*	$OpenBSD: umap.h,v 1.12 2003/06/02 23:28:11 millert Exp $ */
d19 5
a23 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1.1.4
log
@Import OpenBSD source tree from CVS (anoncvs canada)
of roughly 12:00 UTC today. Bumps us to OpenBSD 3.4
and makes source/ports in sync. Hopefully.
@
text
@d1 1
a1 1
/*	$OpenBSD: umap.h,v 1.13 2003/08/14 07:46:40 mickey Exp $ */
d106 1
a106 1
extern const struct vfsops umapfs_vfsops;
@



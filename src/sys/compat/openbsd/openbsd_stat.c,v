head	1.10;
access;
symbols
	tg-mergetmp-mirosx-1:1.10
	tg-mergefixes-1-branch:1.10.0.4
	tg-mergefixes-1-base:1.10
	MIROS_X:1.10.0.2
	MIROS_X_BASE:1.10
	tg-mergetmp-3:1.10;
locks; strict;
comment	@ * @;


1.10
date	2004.12.02.18.42.46;	author tg;	state Exp;
branches;
next	1.9;

1.9
date	2004.12.02.17.59.27;	author tg;	state Exp;
branches;
next	1.8;

1.8
date	2004.11.14.01.58.13;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2004.11.14.00.18.33;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.31.20.15.52;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.31.17.00.40;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.28.21.22.26;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.28.21.06.08;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.28.20.40.36;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.28.20.29.57;	author tg;	state Exp;
branches;
next	;


desc
@@


1.10
log
@more missing-nin
@
text
@/**	$MirBSD: src/sys/compat/openbsd/openbsd_stat.c,v 1.9 2004/12/02 17:59:27 tg Exp $ */

/*-
 * Copyright (c) 2004
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
 *
 * All advertising materials mentioning features or use of this soft-
 * ware must display the following acknowledgement:
 *	This product includes material provided by Thorsten Glaser.
 *
 * Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
 * any kind, expressed or implied, to the maximum extent permitted by
 * applicable law, but with the warranty of being written without ma-
 * licious intent or gross negligence; in no event shall licensor, an
 * author or contributor be held liable for any damage, direct, indi-
 * rect or other, however caused, arising in any way out of the usage
 * of covered work, even if advised of the possibility of such damage.
 */

#include <sys/param.h>
#include <sys/syscall.h>
#include <sys/signalvar.h>
#include <sys/mount.h>
#include <sys/fcntl.h>
#include <sys/exec.h>
#include <sys/exec_olf.h>
#include <sys/malloc.h>
#include <sys/stat.h>
#include <compat/common/compat_util.h>
#include <compat/common/kern_gen.h>
#include <compat/openbsd/compat_openbsd.h>
#include <compat/openbsd/openbsd_syscallargs.h>

struct stat_compat {
	dev_t	  st_dev;
	ino_t	  st_ino;
	mode_t	  st_mode;
	nlink_t	  st_nlink;
	uid_t	  st_uid;
	gid_t	  st_gid;
	dev_t	  st_rdev;
	int32_t	  st_lspare0;
	struct	timespec_compat st_atimespec;
	struct	timespec_compat st_mtimespec;
	struct	timespec_compat st_ctimespec;
	off_t	  st_size;
	int64_t	  st_blocks;
	u_int32_t st_blksize;
	u_int32_t st_flags;
	u_int32_t st_gen;
	int32_t	  st_lspare1;
	struct	timespec_compat __st_birthtimespec;
	int64_t	  st_qspare[2];
};

static void cvtstat(struct stat *, struct stat_compat *);
extern int sys_stat(struct proc *, void *, register_t *);
extern int sys_lstat(struct proc *, void *, register_t *);
extern int sys_fstat(struct proc *, void *, register_t *);
extern int sys_fhstat(struct proc *, void *, register_t *);


/*
 * Convert from a new to an old stat structure.
 */
static void
cvtstat(struct stat *st, struct stat_compat *ost)
{
	ost->st_dev = st->st_dev;
	ost->st_ino = st->st_ino;
	ost->st_mode = st->st_mode;
	ost->st_nlink = st->st_nlink;
	ost->st_uid = st->st_uid;
	ost->st_gid = st->st_gid;
	ost->st_rdev = st->st_rdev;
	ost->st_atimespec.tv_sec = __BOUNDLONG(st->st_atimespec.tv_sec);
	ost->st_atimespec.tv_nsec = st->st_atimespec.tv_nsec;
	ost->st_mtimespec.tv_sec = __BOUNDLONG(st->st_mtimespec.tv_sec);
	ost->st_mtimespec.tv_nsec = st->st_mtimespec.tv_nsec;
	ost->st_ctimespec.tv_sec = __BOUNDLONG(st->st_ctimespec.tv_sec);
	ost->st_ctimespec.tv_nsec = st->st_ctimespec.tv_nsec;
	ost->st_size = st->st_size;
	ost->st_blocks = st->st_blocks;
	ost->st_blksize = st->st_blksize;
	ost->st_flags = st->st_flags;
	ost->st_gen = st->st_gen;
	ost->st_lspare0 = st->st_lspare0;
	ost->st_lspare1 = st->st_lspare1;
	ost->st_qspare[0] = st->st_qspare[0];
	ost->st_qspare[1] = st->st_qspare[1];
	ost->__st_birthtimespec.tv_sec =
	    __BOUNDLONG(st->__st_birthtimespec.tv_sec);
	ost->__st_birthtimespec.tv_nsec = st->__st_birthtimespec.tv_nsec;
}

int
compat_36_sys_stat(struct proc *p, void *v, register_t *retval)
{
	struct compat_36_sys_stat_args /* {
		syscallarg(const char *) path;
		syscallarg(struct stat_compat *) ub;
	} */ *uap = v;
	struct sys_stat_args {
		syscallarg(const char *) path;
		syscallarg(struct stat *) ub;
	} bap;
	struct stat sb, *sbp = NULL;
	struct stat_compat osb;
	caddr_t sg = stackgap_init(p->p_emul);
	int error;

	OPENBSD_CHECK_ALT_EXIST(p, &sg, SCARG(uap, path));
	SCARG(&bap, path) = SCARG(uap, path);
	if (SCARG(uap, ub) != NULL)
		sbp = stackgap_alloc(&sg, sizeof(sb));
	SCARG(&bap, ub) = sbp;

	if ((error = sys_stat(p, &bap, retval)))
		return error;

	if (SCARG(uap, ub) != NULL) {
		if ((error = copyin(sbp, (void *)&sb, sizeof(sb))))
			return error;
		cvtstat(&sb, &osb);
		if ((error = copyout(&osb, SCARG(uap, ub), sizeof(osb))))
			return error;
	}

	return error;
}	

int
compat_36_sys_lstat(struct proc *p, void *v, register_t *retval)
{
	struct compat_36_sys_lstat_args /* {
		syscallarg(const char *) path;
		syscallarg(struct stat_compat *) ub;
	} */ *uap = v;
	struct sys_lstat_args {
		syscallarg(const char *) path;
		syscallarg(struct stat *) ub;
	} bap;
	struct stat sb, *sbp = NULL;
	struct stat_compat osb;
	caddr_t sg = stackgap_init(p->p_emul);
	int error;

	OPENBSD_CHECK_ALT_EXIST(p, &sg, SCARG(uap, path));
	SCARG(&bap, path) = SCARG(uap, path);
	if (SCARG(uap, ub) != NULL)
		sbp = stackgap_alloc(&sg, sizeof(sb));
	SCARG(&bap, ub) = sbp;

	if ((error = sys_lstat(p, &bap, retval)))
		return error;

	if (SCARG(uap, ub) != NULL) {
		if ((error = copyin(sbp, (void *)&sb, sizeof(sb))))
			return error;
		cvtstat(&sb, &osb);
		if ((error = copyout(&osb, SCARG(uap, ub), sizeof(osb))))
			return error;
	}

	return error;
}

int
compat_36_sys_fstat(struct proc *p, void *v, register_t *retval)
{
	struct compat_36_sys_fstat_args /* {
		syscallarg(int) fd;
		syscallarg(struct stat_compat *) sb;
	} */ *uap = v;
	struct sys_fstat_args {
		syscallarg(int) fd;
		syscallarg(struct stat *) sb;
	} bap;
	struct stat sb, *sbp = NULL;
	struct stat_compat osb;
	caddr_t sg = stackgap_init(p->p_emul);
	int error;

	SCARG(&bap, fd) = SCARG(uap, fd);
	if (SCARG(uap, sb) != NULL)
		sbp = stackgap_alloc(&sg, sizeof(sb));
	SCARG(&bap, sb) = sbp;

	if ((error = sys_fstat(p, &bap, retval)))
		return error;

	if (SCARG(uap, sb) != NULL) {
		if ((error = copyin(sbp, (void *)&sb, sizeof(sb))))
			return error;
		cvtstat(&sb, &osb);
		if ((error = copyout(&osb, SCARG(uap, sb), sizeof(osb))))
			return error;
	}

	return error;
}

int
compat_36_sys_fhstat(struct proc *p, void *v, register_t *retval)
{
	struct compat_36_sys_fhstat_args /* {
		syscallarg(const fhandle_t *) fhp;
		syscallarg(struct stat *) sb;
	} */ *uap = v;
	struct sys_fstat_args {
		syscallarg(const fhandle_t *) fhp;
		syscallarg(struct stat *) sb;
	} bap;
	struct stat sb, *sbp = NULL;
	struct stat_compat osb;
	caddr_t sg = stackgap_init(p->p_emul);
	int error;

	SCARG(&bap, fhp) = SCARG(uap, fhp);
	if (SCARG(uap, sb) != NULL)
		sbp = stackgap_alloc(&sg, sizeof(sb));
	SCARG(&bap, sb) = sbp;

	if ((error = sys_fhstat(p, &bap, retval)))
		return error;

	if (SCARG(uap, sb) != NULL) {
		if ((error = copyin(sbp, (void *)&sb, sizeof(sb))))
			return error;
		cvtstat(&sb, &osb);
		if ((error = copyout(&osb, SCARG(uap, sb), sizeof(osb))))
			return error;
	}

	return error;
}
@


1.9
log
@sprinkle some more OPENBSD_CHECK_ALT_EXIST(p, &sg, SCARG(uap, path));
@
text
@d1 1
a1 1
/**	$MirBSD: src/sys/compat/openbsd/openbsd_stat.c,v 1.8 2004/11/14 01:58:13 tg Exp $ */
d38 1
@


1.8
log
@fix a few bugs; GENERIC still doesn't compile
msg framework to be revisited tomorrow
@
text
@d1 1
a1 1
/**	$MirBSD: src/sys/compat/openbsd/openbsd_stat.c,v 1.7 2004/11/14 00:18:33 tg Exp $ */
d118 1
d154 1
@


1.7
log
@these are for compat_36 now
@
text
@d1 1
a1 1
/**	$MirBSD: src/sys/compat/openbsd/openbsd_stat.c,v 1.6 2004/10/31 20:15:52 tg Exp $ */
d106 1
a106 1
		syscallarg(char *) path;
d110 1
a110 1
		syscallarg(char *) path;
d141 1
a141 1
		syscallarg(char *) path;
d145 1
a145 1
		syscallarg(char *) path;
@


1.6
log
@regen
rewrite _stat.c to behave as wrapper
@
text
@d1 1
a1 1
/**	$MirBSD: src/sys/compat/openbsd/openbsd_timet.c,v 1.4 2004/10/31 17:00:40 tg Exp $ */
d48 1
d57 2
a58 1
	int32_t	  st_lspare;
d93 2
a94 1
	ost->st_lspare = st->st_lspare;
d97 3
d103 1
a103 1
compat_35_sys_stat(struct proc *p, void *v, register_t *retval)
d105 1
a105 1
	struct compat_35_sys_stat_args /* {
d138 1
a138 1
compat_35_sys_lstat(struct proc *p, void *v, register_t *retval)
d140 1
a140 1
	struct compat_35_sys_lstat_args /* {
d173 1
a173 1
compat_35_sys_fstat(struct proc *p, void *v, register_t *retval)
d175 1
a175 1
	struct compat_35_sys_fstat_args /* {
d208 1
a208 1
compat_35_sys_fhstat(struct proc *p, void *v, register_t *retval)
d210 1
a210 1
	struct compat_35_sys_fhstat_args /* {
@


1.5
log
@use __BOUNDINT(LONG_MIN,LONG_MAX,arg) to ensure old "long" time_t fits
@
text
@d1 1
a1 1
/**	$MirBSD: src/sys/compat/openbsd/openbsd_stat.c,v 1.4 2004/10/28 21:22:26 tg Exp $ */
a5 7
 * Copyright (c) 1982, 1986, 1989, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
d7 6
a12 11
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
d14 11
a24 11
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
d28 3
a30 12
#include <sys/systm.h>
#include <sys/filedesc.h>
#include <sys/kernel.h>
#include <sys/proc.h>
#include <sys/file.h>
#include <sys/vnode.h>
#include <sys/namei.h>
#include <sys/dirent.h>
#include <sys/socket.h>
#include <sys/socketvar.h>
#include <sys/stat.h>
#include <sys/ioctl.h>
d32 2
d35 2
a36 6
#include <sys/syslog.h>
#include <sys/unistd.h>
#include <sys/resourcevar.h>
#include <sys/mount.h>
#include <sys/pipe.h>
#include <uvm/uvm_extern.h>
d61 5
a95 4
/*
 * Get file status; this version follows links.
 */
/* ARGSUSED */
d103 5
a107 1
	struct stat sb;
d109 1
a110 1
	struct nameidata nd;
d112 15
a126 15
	NDINIT(&nd, LOOKUP, FOLLOW | LOCKLEAF, UIO_USERSPACE,
	    SCARG(uap, path), p);
	if ((error = namei(&nd)) != 0)
		return (error);
	error = vn_stat(nd.ni_vp, &sb, p);
	vput(nd.ni_vp);
	if (error)
		return (error);
	/* Don't let non-root see generation numbers (for NFS security) */
	if (suser(p, 0))
		sb.st_gen = 0;
	cvtstat(&sb, &osb);
	error = copyout((caddr_t)&osb, (caddr_t)SCARG(uap, ub), sizeof (osb));
	return (error);
}
d128 2
a130 4
/*
 * Get file status; this version does not follow links.
 */
/* ARGSUSED */
d138 5
a142 1
	struct stat sb;
d144 1
a145 1
	struct nameidata nd;
d147 17
a163 14
	NDINIT(&nd, LOOKUP, NOFOLLOW | LOCKLEAF, UIO_USERSPACE,
	    SCARG(uap, path), p);
	if ((error = namei(&nd)) != 0)
		return (error);
	error = vn_stat(nd.ni_vp, &sb, p);
	vput(nd.ni_vp);
	if (error)
		return (error);
	/* Don't let non-root see generation numbers (for NFS security) */
	if (suser(p, 0))
		sb.st_gen = 0;
	cvtstat(&sb, &osb);
	error = copyout(&osb, SCARG(uap, ub), sizeof (osb));
	return (error);
a165 5

/*
 * Return status information about a file descriptor.
 */
/* ARGSUSED */
d173 7
a179 5
	int fd = SCARG(uap, fd);
	struct filedesc *fdp = p->p_fd;
	struct file *fp;
	struct stat ub;
	struct stat_compat oub;
d182 17
a198 13
	if ((fp = fd_getfile(fdp, fd)) == NULL)
		return (EBADF);
	FREF(fp);
	error = (*fp->f_ops->fo_stat)(fp, &ub, p);
	FRELE(fp);
	/* Don't let non-root see generation numbers (for NFS security) */
	if (suser(p, 0))
		ub.st_gen = 0;
	cvtstat(&ub, &oub);
	if (error == 0)
		error = copyout((caddr_t)&oub, (caddr_t)SCARG(uap, sb),
		    sizeof (oub));
	return (error);
a200 1
/* ARGSUSED */
d208 5
a212 1
	struct stat sb;
d214 1
d216 18
a233 24
	fhandle_t fh;
	struct mount *mp;
	struct vnode *vp;

	/*
	 * Must be super user
	 */
	if ((error = suser(p, 0)))
		return (error);

	if ((error = copyin(SCARG(uap, fhp), &fh, sizeof(fhandle_t))) != 0)
		return (error);

	if ((mp = vfs_getvfs(&fh.fh_fsid)) == NULL)
		return (ESTALE);
	if ((error = VFS_FHTOVP(mp, &fh.fh_fid, &vp)))
		return (error);
	error = vn_stat(vp, &sb, p);
	vput(vp);
	if (error)
		return (error);
	cvtstat(&sb, &osb);
	error = copyout(&osb, SCARG(uap, sb), sizeof(osb));
	return (error);
@


1.4
log
@fhstat(2), security, compile fixes, kill register
@
text
@d1 1
a1 1
/**	$MirBSD: src/sys/compat/openbsd/openbsd_stat.c,v 1.3 2004/10/28 21:06:08 tg Exp $ */
d98 1
a98 1
	ost->st_atimespec.tv_sec = st->st_atimespec.tv_sec;
d100 1
a100 1
	ost->st_mtimespec.tv_sec = st->st_mtimespec.tv_sec;
d102 1
a102 1
	ost->st_ctimespec.tv_sec = st->st_ctimespec.tv_sec;
@


1.3
log
@regen, and port over statting stuff (basic only)
@
text
@d1 1
a1 1
/**	$MirBSD: src/sys/compat/openbsd/openbsd_stat.c,v 1.2 2004/10/28 20:40:36 tg Exp $ */
d6 1
a6 1
 * Copyright (c) 1989, 1993
a56 1

d58 2
a62 4
#include <uvm/uvm_extern.h>

#include <sys/pipe.h>

d138 3
d171 3
d203 3
d217 31
a247 1
	return ENOSYS;
@


1.2
log
@some stat... uh, too much cassiss'ee in club-mate
@
text
@d1 1
a1 1
/**	$MirBSD: src/sys/compat/openbsd/openbsd_stat.c,v 1.1 2004/10/28 20:29:57 tg Exp $ */
d6 7
d14 11
a24 6
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
d26 11
a36 11
 * All advertising materials mentioning features or use of this soft-
 * ware must display the following acknowledgement:
 *	This product includes material provided by Thorsten Glaser.
 *
 * Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
 * any kind, expressed or implied, to the maximum extent permitted by
 * applicable law, but with the warranty of being written without ma-
 * licious intent or gross negligence; in no event shall licensor, an
 * author or contributor be held liable for any damage, direct, indi-
 * rect or other, however caused, arising in any way out of the usage
 * of covered work, even if advised of the possibility of such damage.
d40 12
a51 3
#include <sys/syscall.h>
#include <sys/signalvar.h>
#include <sys/mount.h>
a52 2
#include <sys/exec.h>
#include <sys/exec_olf.h>
d54 5
a58 2
#include <sys/stat.h>
#include <compat/common/compat_util.h>
d62 4
d86 1
d88 28
d117 4
a120 1

d124 21
d147 4
d152 1
a152 1
compat_35_sys_fstat(struct proc *p, void *v, register_t *retval)
d154 21
d177 4
d182 1
a182 1
compat_35_sys_lstat(struct proc *p, void *v, register_t *retval)
d184 22
d207 1
a207 1

d211 2
a212 24




struct compat_35_sys_stat_args {
	syscallarg(const char *) path;
	syscallarg(struct stat_compat *) ub;
};

struct compat_35_sys_fstat_args {
	syscallarg(int) fd;
	syscallarg(struct stat_compat *) sb;
};

struct compat_35_sys_lstat_args {
	syscallarg(const char *) path;
	syscallarg(struct stat_compat *) ub;
};

struct compat_35_sys_fhstat_args {
	syscallarg(const fhandle_t *) fhp;
	syscallarg(struct stat_compat *) sb;
};

@


1.1
log
@fixup compilage, now it hangs on fstat()
@
text
@d1 1
a1 1
/**	$MirBSD: src/sys/compat/openbsd/openbsd_timet.c,v 1.3 2004/10/28 17:52:15 tg Exp $ */
a39 18
struct ostat_compat {
	u_int16_t st_dev;
	ino_t	  st_ino;
	mode_t	  st_mode;
	nlink_t	  st_nlink;
	u_int16_t st_uid;
	u_int16_t st_gid;
	u_int16_t st_rdev;
	int32_t	  st_size;
	struct	timespec_compat st_atimespec;
	struct	timespec_compat st_mtimespec;
	struct	timespec_compat st_ctimespec;
	int32_t	  st_blksize;
	int32_t	  st_blocks;
	u_int32_t st_flags;
	u_int32_t st_gen;
};

d59 46
@


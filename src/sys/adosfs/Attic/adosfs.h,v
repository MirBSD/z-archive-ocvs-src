head	1.2;
access;
symbols
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	cvs-200312222040:1.1.1.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	cvs-200307072125:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307021520:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.06.29.19.50.32;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.49.14;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.49.14;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.22.20.58.18;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge the import
amd (automount dæmon) bites the dust
rewrite fake-NLS emulation, copyright to me
foobar! fnord!
@
text
@/*	$OpenBSD: adosfs.h,v 1.11 2002/03/14 01:26:25 millert Exp $	*/
/*	$NetBSD: adosfs.h,v 1.12 1996/10/08 22:18:02 thorpej Exp $	*/

/*
 * Copyright (c) 1994 Christian E. Hopps
 * Copyright (c) 1996 Matthias Scheler
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christian E. Hopps.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Amigados datestamp. (from 1/1/1978 00:00:00 local)
 */
struct datestamp {
	u_int32_t days;
	u_int32_t mins;
	u_int32_t ticks;	/* 20000 * (ticks % 50) = useconds */
				/* ticks / 50 = seconds */
};

enum anode_type { AROOT, ADIR, AFILE, ALDIR, ALFILE, ASLINK };

/* 
 * similar to inode's, we use to represent:
 * the root dir, reg dirs, reg files and extension blocks
 * note the ``tab'' is a hash table for r/d, and a data block
 * table for f/e. it is always ANODETABSZ(ap) bytes in size.
 */
struct anode {
	LIST_ENTRY(anode) link;
	enum anode_type type;
	char name[31];			/* (r/d/f) name for object */
	struct datestamp mtimev;	/* (r) volume modified */
	struct datestamp created;	/* (r) volume created */
	struct datestamp mtime;		/* (r/d/f) last modified */
	struct adosfsmount *amp;	/* owner file system */
	struct vnode *vp;		/* owner vnode */
	struct lockf *a_lockf;		/* byte level lock list */
	struct lock a_lock;		/* anode lock */
	u_int32_t fsize;		/* (f) size of file in bytes */
	daddr_t block;			/* block num */
	daddr_t pblock;			/* (d/f/e) parent block */
	daddr_t hashf;			/* (d/f) hash forward */
	daddr_t extb;			/* (f/e) extension block number */
	daddr_t linkto;			/* (hd/hf) hdr this link points at */
	daddr_t linknext;		/* (d/f/hd/hf) next chain link/head */
	daddr_t lastlindblk;		/* (f/hf) last logical indirect blk */
	daddr_t lastindblk;		/* (f/hf) last indirect block read */
	daddr_t *tab;			/* (r/d) hash table */
	int *tabi;			/* (r/d) table info */
	int ntabent;			/* (r/d) number of entries in table */
	int nwords;			/* size of blocks in 32-bit words */
	int adprot;			/* (d/f) amigados protection bits */
	uid_t uid;			/* (d/f) uid of directory/file */
	gid_t gid;			/* (d/f) gid of directory/file */
	char *slinkto;			/* name of file or dir */
};
#define VTOA(vp)		((struct anode *)(vp)->v_data)
#define ATOV(ap)		((ap)->vp)
#define ANODETABENT(ap)		((ap)->nwords - 56)
#define ANODENDATBLKENT(ap)	((ap)->nwords - 56)
#define ABLKTOINO(bn)		((ino_t)(bn))
#define AINOTOBLK(bn)		((daddr_t)(bn))
/*
 * mount data 
 */
#define ANODEHASHSZ (512)

struct adosfsmount {
	LIST_HEAD(anodechain, anode) anodetab[ANODEHASHSZ];
	struct mount *mp;	/* owner mount */
	u_int32_t dostype;	/* type of volume */
	daddr_t rootb;		/* root block number */
	int secsperblk;		/* sectors per block */
	int bsize;		/* size of blocks */
	int nwords;		/* size of blocks in long words */
	int dbsize;		/* data bytes per block */
	uid_t uid;		/* uid of mounting user */
	gid_t gid;		/* gid of mounting user */
	mode_t mask;		/* mode mask */
	struct vnode *devvp;	/* blk device mounted on */
	struct vnode *rootvp;	/* out root vnode */
	struct netexport export;
	u_int32_t *bitmap;	/* allocation bitmap */
	u_int32_t numblks;	/* number of usable blocks */
	u_int32_t freeblks;	/* number of free blocks */
};
#define VFSTOADOSFS(mp) ((struct adosfsmount *)(mp)->mnt_data)

#define IS_FFS(amp)	((amp)->dostype & 1)
#define IS_INTER(amp)	(((amp)->dostype & 7) > 1)

/*
 * AmigaDOS block stuff.
 */
#define BBOFF		(0)

#define BPT_SHORT	((u_int32_t)2)
#define BPT_DATA	((u_int32_t)8)
#define BPT_LIST	((u_int32_t)16)

#define BST_RDIR	((u_int32_t)1)
#define BST_UDIR	((u_int32_t)2)
#define BST_SLINK	((u_int32_t)3)
#define BST_LDIR	((u_int32_t)4)
#define BST_FILE	((u_int32_t)-3)
#define BST_LFILE	((u_int32_t)-4)

#define	OFS_DATA_OFFSET	(24)

/*
 * utility protos
 */
#define adoswordn(bp,wn) betoh32(*((u_int32_t *)(bp)->b_data + (wn)))

u_int32_t	 adoscksum(struct buf *, int);
int		 adoscaseequ(const char *, const char *, int, int);
int		 adoshash(const char *, int, int, int);
int		 adunixprot(int);
int		 adosfs_getblktype(struct adosfsmount *, struct buf *);

struct vnode	*adosfs_ahashget(struct mount *, ino_t);
int		 adosfs_ainshash(struct adosfsmount *, struct anode *);
void		 adosfs_aremhash(struct anode *);

int		 adosfs_lookup(void *);

int		(**adosfs_vnodeop_p)(void *);
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
/*	$OpenBSD: adosfs.h,v 1.12 2003/11/13 17:23:57 drahn Exp $	*/
d152 1
a152 1
extern int	(**adosfs_vnodeop_p)(void *);
@


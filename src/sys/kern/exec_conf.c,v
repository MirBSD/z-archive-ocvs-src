head	1.2;
access;
symbols
	tg-mergetmp-mirosx-1:1.2
	tg-mergefixes-1-branch:1.2.0.4
	tg-mergefixes-1-base:1.2
	MIROS_X:1.2.0.2
	MIROS_X_BASE:1.2
	tg-mergetmp-3:1.2
	MIRBSD_XP_MIRPPC:1.1.1.3.0.4
	MIRBSD_XP_SPARC_BASE:1.1.1.3
	MIRBSD_XP_SPARC:1.1.1.3.0.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309261655:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	cvs-200307072125:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307021520:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.10.26.16.23.31;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.51.50;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.51.50;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.30.23.24.59;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.05.16.09.06.07;	author tg;	state Stab;
branches;
next	;


desc
@@


1.2
log
@first round of compile fixes
hook it
@
text
@/**	$MirBSD$ */
/*	$OpenBSD: exec_conf.c,v 1.17 2004/04/15 00:22:42 tedu Exp $	*/
/*	$NetBSD: exec_conf.c,v 1.16 1995/12/09 05:34:47 cgd Exp $	*/

/*
 * Copyright (c) 1993, 1994 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/exec.h>
#include <sys/exec_script.h>

#if defined(_KERN_DO_ECOFF)
#include <sys/exec_ecoff.h>
#endif

#if defined(_KERN_DO_ELF) || defined(_KERN_DO_ELF64)
#include <sys/exec_elf.h>
#endif

#ifdef COMPAT_LINUX
#include <compat/linux/linux_exec.h>
#endif

#ifdef COMPAT_OPENBSD
#include <compat/openbsd/compat_openbsd.h>
#endif

extern struct emul emul_native, emul_elf32, emul_elf64, emul_aout,
	emul_linux_elf, emul_linux_aout, emul_openbsd_aout,
	emul_openbsd;

struct execsw execsw[] = {
	{ MAXINTERP, exec_script_makecmds, &emul_native, },	/* shell scripts */
#ifdef _KERN_DO_AOUT
#ifdef COMPAT_OPENBSD
	{ sizeof(struct exec), exec_aout_makecmds, &emul_openbsd_aout },
#else
	{ sizeof(struct exec), exec_aout_makecmds, &emul_native },	/* a.out binaries */
#endif
#endif
#ifdef _KERN_DO_ECOFF
	{ ECOFF_HDR_SIZE, exec_ecoff_makecmds, &emul_native },	/* ecoff binaries */
#endif
#ifdef _KERN_DO_ELF
	{ sizeof(Elf32_Ehdr), exec_elf32_makecmds, &emul_native },	/* elf binaries */
#endif
#ifdef _KERN_DO_ELF64
	{ sizeof(Elf64_Ehdr), exec_elf64_makecmds, &emul_native },	/* elf binaries */
#endif /* ELF64 */
#ifdef COMPAT_LINUX
	{ LINUX_AOUT_HDR_SIZE, exec_linux_aout_makecmds, &emul_linux_aout }, /* linux a.out */
	{ sizeof(Elf32_Ehdr), exec_linux_elf32_makecmds, &emul_linux_elf },
#endif
#ifdef COMPAT_OPENBSD
	{ sizeof(Elf32_Ehdr), exec_openbsd_elf32_makecmds, &emul_openbsd }, /* OpenBSD ELF */
#endif
#ifdef LKM
	{ 0, NULL, NULL },				/* entries for LKMs */
	{ 0, NULL, NULL },
	{ 0, NULL, NULL },
	{ 0, NULL, NULL },
	{ 0, NULL, NULL },
#endif
};
int nexecs = (sizeof execsw / sizeof(*execsw));
int exec_maxhdrsz;

void	init_exec(void);

void
init_exec(void)
{
	int i;

	/*
	 * figure out the maximum size of an exec header.
	 * XXX should be able to keep LKM code from modifying exec switch
	 * when we're still using it, but...
	 */
	for (i = 0; i < nexecs; i++)
		if (execsw[i].es_check != NULL &&
		    execsw[i].es_hdrsz > exec_maxhdrsz)
			exec_maxhdrsz = execsw[i].es_hdrsz;
}
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$OpenBSD: exec_conf.c,v 1.12 2001/11/14 14:37:22 hugh Exp $	*/
a46 8
#ifdef COMPAT_SVR4
#include <compat/svr4/svr4_exec.h>
#endif

#ifdef COMPAT_IBCS2
#include <compat/ibcs2/ibcs2_exec.h>
#endif

d51 2
a52 6
#ifdef COMPAT_BSDOS
#include <compat/bsdos/bsdos_exec.h>
#endif

#ifdef COMPAT_FREEBSD
#include <compat/freebsd/freebsd_exec.h>
d55 3
a57 11
#ifdef COMPAT_HPUX
#include <compat/hpux/hpux_exec.h>
#endif

#ifdef COMPAT_M68K4K
#include <compat/m68k4k/m68k4k_exec.h>
#endif

#ifdef COMPAT_VAX1K
#include <compat/vax1k/vax1k_exec.h>
#endif
d60 6
a65 6
#ifdef LKM
	{ 0, NULL, },					/* entries for LKMs */
	{ 0, NULL, },
	{ 0, NULL, },
	{ 0, NULL, },
	{ 0, NULL, },
a66 3
	{ MAXINTERP, exec_script_makecmds, },		/* shell scripts */
#ifdef _KERN_DO_AOUT
	{ sizeof(struct exec), exec_aout_makecmds, },	/* a.out binaries */
d69 1
a69 1
	{ ECOFF_HDR_SIZE, exec_ecoff_makecmds, },	/* ecoff binaries */
d72 1
a72 1
	{ sizeof(Elf32_Ehdr), exec_elf32_makecmds, },	/* elf binaries */
d75 2
a76 2
	{ sizeof(Elf64_Ehdr), exec_elf64_makecmds, },	/* elf binaries */
#endif
d78 2
a79 1
	{ LINUX_AOUT_HDR_SIZE, exec_linux_aout_makecmds, }, /* linux a.out */
d81 2
a82 3
#ifdef COMPAT_IBCS2
	{ COFF_HDR_SIZE, exec_ibcs2_coff_makecmds, },	/* coff binaries */
	{ XOUT_HDR_SIZE, exec_ibcs2_xout_makecmds, },	/* x.out binaries */
d84 6
a89 14
#ifdef COMPAT_BSDOS
	{ BSDOS_AOUT_HDR_SIZE, exec_bsdos_aout_makecmds, },	/* bsdos */
#endif
#ifdef COMPAT_FREEBSD
	{ FREEBSD_AOUT_HDR_SIZE, exec_freebsd_aout_makecmds, },	/* freebsd */
#endif
#ifdef COMPAT_HPUX
	{ HPUX_EXEC_HDR_SIZE, exec_hpux_makecmds, },	/* HP-UX a.out */
#endif
#ifdef COMPAT_M68K4K
	{ sizeof(struct exec), exec_m68k4k_makecmds, },	/* m68k4k a.out */
#endif
#ifdef COMPAT_VAX1K
	{ sizeof(struct exec), exec_vax1k_makecmds, },	/* vax1k a.out */
d94 18
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Synchronize with OpenBSD 3.4-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.16 2003/08/23 20:27:30 tedu Exp $	*/
a123 61

extern struct emul emul_native, emul_elf32, emul_elf64, emul_aout,
	emul_bsdos, emul_aout_freebsd, emul_elf_freebsd, emul_hpux,
	emul_ibcs2, emul_linux_elf, emul_linux_aout, emul_elf64_netbsd,
	emul_osf1, emul_sunos, emul_svr4, emul_ultrix;
struct emul *emulsw[] = {
#if defined (_KERN_DO_AOUT) && defined (COMPAT_AOUT)
	&emul_aout,
#endif
#ifdef COMPAT_BSDOS
	&emul_bsdos,
#endif
#ifdef COMPAT_FREEBSD
	&emul_aout_freebsd,
	&emul_elf_freebsd,
#endif
#ifdef COMPAT_HPUX
	&emul_hpux,
#endif
#ifdef COMPAT_IBCS2
	&emul_ibcs2,
#endif
#ifdef COMPAT_LINUX
	&emul_linux_elf,
	&emul_linux_aout,
#endif
#if defined (COMPAT_NETBSD) && defined (_KERN_DO_ELF64)
	&emul_elf64_netbsd,
#endif
#ifdef COMPAT_OSF1
	&emul_osf1,
#endif
#ifdef COMPAT_SUNOS
	&emul_sunos,
#endif
#ifdef COMPAT_SVR4
	&emul_svr4,
#endif
#ifdef COMPAT_ULTRIX
	&emul_ultrix,
#endif
};
int	nemuls = sizeof(emulsw) / sizeof(*emulsw);

void	init_exec(void);

void
init_exec(void)
{
	int i;

	/*
	 * figure out the maximum size of an exec header.
	 * XXX should be able to keep LKM code from modifying exec switch
	 * when we're still using it, but...
	 */
	for (i = 0; i < nexecs; i++)
		if (execsw[i].es_check != NULL &&
		    execsw[i].es_hdrsz > exec_maxhdrsz)
			exec_maxhdrsz = execsw[i].es_hdrsz;
}
@


1.1.1.3
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_conf.c,v 1.17 2004/04/15 00:22:42 tedu Exp $	*/
a77 5
extern struct emul emul_native, emul_elf32, emul_elf64, emul_aout,
	emul_bsdos, emul_freebsd_aout, emul_freebsd_elf, emul_hpux,
	emul_ibcs2, emul_linux_elf, emul_linux_aout, emul_netbsd_elf64,
	emul_osf1, emul_sunos, emul_svr4, emul_ultrix;

d79 8
a86 1
	{ MAXINTERP, exec_script_makecmds, &emul_native, },	/* shell scripts */
d88 1
a88 5
#ifdef COMPAT_AOUT
	{ sizeof(struct exec), exec_aout_makecmds, &emul_aout },
#else
	{ sizeof(struct exec), exec_aout_makecmds, &emul_native },	/* a.out binaries */
#endif
d91 1
a91 1
	{ ECOFF_HDR_SIZE, exec_ecoff_makecmds, &emul_native },	/* ecoff binaries */
d94 1
a94 1
	{ sizeof(Elf32_Ehdr), exec_elf32_makecmds, &emul_native },	/* elf binaries */
d97 1
a97 6
	{ sizeof(Elf64_Ehdr), exec_elf64_makecmds, &emul_native },	/* elf binaries */
#ifdef COMPAT_NETBSD
	{ sizeof(Elf64_Ehdr), exec_elf64_makecmds, &emul_netbsd_elf64 },
#endif
#ifdef COMPAT_OSF1
	{ sizeof(Elf64_Ehdr), exec_elf64_makecmds, &emul_osf1 },
a98 1
#endif /* ELF64 */
d100 1
a100 2
	{ LINUX_AOUT_HDR_SIZE, exec_linux_aout_makecmds, &emul_linux_aout }, /* linux a.out */
	{ sizeof(Elf32_Ehdr), exec_linux_elf32_makecmds, &emul_linux_elf },
d103 2
a104 2
	{ COFF_HDR_SIZE, exec_ibcs2_coff_makecmds, &emul_ibcs2 },	/* coff binaries */
	{ XOUT_HDR_SIZE, exec_ibcs2_xout_makecmds, &emul_ibcs2 },	/* x.out binaries */
d107 1
a107 1
	{ BSDOS_AOUT_HDR_SIZE, exec_bsdos_aout_makecmds, &emul_bsdos },	/* bsdos */
d110 1
a110 2
	{ FREEBSD_AOUT_HDR_SIZE, exec_freebsd_aout_makecmds, &emul_freebsd_aout },	/* freebsd */
	{ sizeof(Elf32_Ehdr), exec_freebsd_elf32_makecmds, &emul_freebsd_elf },
d113 1
a113 1
	{ HPUX_EXEC_HDR_SIZE, exec_hpux_makecmds, &emul_hpux },	/* HP-UX a.out */
d116 1
a116 1
	{ sizeof(struct exec), exec_m68k4k_makecmds, &emul_native },	/* m68k4k a.out */
d119 16
a134 1
	{ sizeof(struct exec), exec_vax1k_makecmds, &emul_native },	/* vax1k a.out */
d136 16
a151 2
#ifdef COMPAT_ULTRIX
	{ ECOFF_HDR_SIZE, exec_ecoff_makecmds, &emul_ultrix },	/* ecoff binaries */
d153 2
a154 2
#ifdef COMPAT_SVR4
	{ sizeof(Elf32_Ehdr), exec_elf32_makecmds, &emul_svr4 },	/* elf binaries */
d157 4
a160 1
	{ sizeof(struct exec), exec_aout_makecmds, &emul_sunos },
d162 2
a163 6
#ifdef LKM
	{ 0, NULL, NULL },				/* entries for LKMs */
	{ 0, NULL, NULL },
	{ 0, NULL, NULL },
	{ 0, NULL, NULL },
	{ 0, NULL, NULL },
d166 1
a166 2
int nexecs = (sizeof execsw / sizeof(*execsw));
int exec_maxhdrsz;
@



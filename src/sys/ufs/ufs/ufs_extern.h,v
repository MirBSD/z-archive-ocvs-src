head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.5
	tg-mergefixes-1-branch:1.1.1.5.0.4
	tg-mergefixes-1-base:1.1.1.5
	MIROS_X:1.1.1.5.0.2
	MIROS_X_BASE:1.1.1.5
	tg-mergetmp-3:1.1.1.5
	cvs-200412092114:1.1.1.5
	MIRBSD_XP_MIRPPC:1.1.1.4.0.4
	cvs-200410261930:1.1.1.4
	MIRBSD_XP_SPARC_BASE:1.1.1.4
	MIRBSD_XP_SPARC:1.1.1.4.0.2
	MIRBSD_7quater:1.1.1.3
	cvs-200405160640:1.1.1.4
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309261655:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	cvs-200307072125:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200307021520:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.52.26;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.52.26;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.17.42.01;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.09.25.16.40.21;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.05.16.09.12.23;	author tg;	state Stab;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.12.09.21.15.37;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: ufs_extern.h,v 1.18 2002/03/14 03:16:13 millert Exp $	*/
/*	$NetBSD: ufs_extern.h,v 1.5 1996/02/09 22:36:03 christos Exp $	*/

/*-
 * Copyright (c) 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)ufs_extern.h	8.6 (Berkeley) 8/10/94
 */

struct buf;
struct componentname;
struct direct;
struct disklabel;
struct dquot;
struct fid;
struct flock;
struct indir;
struct inode;
struct mbuf;
struct mount;
struct nameidata;
struct proc;
struct ucred;
struct ufs_args;
struct ufsmount;
struct uio;
struct vattr;
struct vfsconf;
struct vnode;

__BEGIN_DECLS
int	 ufs_access(void *);
int	 ufs_advlock(void *);
int	 ufs_bmap(void *);
int	 ufs_close(void *);
int	 ufs_create(void *);
int	 ufs_getattr(void *);
int	 ufs_inactive(void *);
int	 ufs_ioctl(void *);
int	 ufs_islocked(void *);
#ifdef NFSSERVER
int	 lease_check(void *);
#define	 ufs_lease_check lease_check
#else
#define	 ufs_lease_check ((int (*)(void *))nullop)
#endif
int	 ufs_link(void *);
int	 ufs_lock(void *);
int	 ufs_lookup(void *);
int	 ufs_mkdir(void *);
int	 ufs_mknod(void *);
int	 ufs_mmap(void *);
int	 ufs_open(void *);
int	 ufs_pathconf(void *);
int	 ufs_print(void *);
int	 ufs_readdir(void *);
int	 ufs_readlink(void *);
int	 ufs_remove(void *);
int	 ufs_rename(void *);
#define  ufs_revoke  vop_generic_revoke
int	 ufs_rmdir(void *);
int	 ufs_seek(void *);
int	 ufs_select(void *);
int	 ufs_kqfilter(void *);
int	 ufs_setattr(void *);
int	 ufs_strategy(void *);
int	 ufs_symlink(void *);
int	 ufs_unlock(void *);
int	 ufs_whiteout(void *);
int	 ufsspec_close(void *);
int	 ufsspec_read(void *);
int	 ufsspec_write(void *);

#ifdef FIFO
int	ufsfifo_read(void *);
int	ufsfifo_write(void *);
int	ufsfifo_close(void *);
#endif

/* ufs_bmap.c */
int ufs_bmaparray(struct vnode *, daddr_t, daddr_t *, struct indir *,
		       int *, int *);
int ufs_getlbns(struct vnode *, daddr_t, struct indir *, int *);

/* ufs_ihash.c */
void ufs_ihashinit(void);
struct vnode *ufs_ihashlookup(dev_t, ino_t);
struct vnode *ufs_ihashget(dev_t, ino_t);
int ufs_ihashins(struct inode *);
void ufs_ihashrem(struct inode *);

/* ufs_inode.c */
int ufs_init(struct vfsconf *);
int ufs_reclaim(struct vnode *, struct proc *);

/* ufs_lookup.c */
void ufs_dirbad(struct inode *, doff_t, char *);
int ufs_dirbadentry(struct vnode *, struct direct *, int);
void ufs_makedirentry(struct inode *, struct componentname *,
			   struct direct *);
int ufs_direnter(struct vnode *, struct vnode *, struct direct *,
		      struct componentname *, struct buf *);
int ufs_dirremove(struct vnode *, struct inode *, int, int);
int ufs_dirrewrite(struct inode *, struct inode *,
		        ino_t, int, int);
int ufs_dirempty(struct inode *, ino_t, struct ucred *);
int ufs_checkpath(struct inode *, struct inode *, struct ucred *);

/* ufs_vfsops.c */
int ufs_start(struct mount *, int, struct proc *);
int ufs_root(struct mount *, struct vnode **);
int ufs_quotactl(struct mount *, int, uid_t, caddr_t, struct proc *);
int ufs_fhtovp(struct mount *, struct ufid *, struct vnode **);
int ufs_check_export(struct mount *, struct mbuf *, int *,
		struct ucred **);

/* ufs_vnops.c */
int ufs_vinit(struct mount *, int (**)(void *),
	      int (**)(void *), struct vnode **);
int ufs_makeinode(int, struct vnode *, struct vnode **,
		  struct componentname *);

 
/*
 * Soft dependency function prototypes.
 */
void  softdep_setup_directory_add(struct buf *, struct inode *, off_t,
          long, struct buf *);
void  softdep_change_directoryentry_offset(struct inode *, caddr_t,
          caddr_t, caddr_t, int);
void  softdep_setup_remove(struct buf *,struct inode *, struct inode *,
          int);
void  softdep_setup_directory_change(struct buf *, struct inode *,
          struct inode *, long, int);
void  softdep_change_linkcnt(struct inode *);
int   softdep_slowdown(struct vnode *);

__END_DECLS
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
/*	$OpenBSD: ufs_extern.h,v 1.19 2003/06/02 23:28:23 millert Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1.1.3
log
@Release Time. Synchronize with OpenBSD 3.4-current (base system).
@
text
@d1 1
a1 1
/*	$OpenBSD: ufs_extern.h,v 1.20 2003/09/23 16:51:13 millert Exp $	*/
d88 1
a88 1
int	 ufs_poll(void *);
@


1.1.1.4
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
/*	$OpenBSD: ufs_extern.h,v 1.21 2004/05/07 01:40:16 tedu Exp $	*/
d152 2
a153 2
int  softdep_setup_directory_add(struct buf *, struct inode *, off_t,
          long, struct buf *, int);
@


1.1.1.5
log
@OpenBSD vnode locking etc. fixes
@
text
@d1 1
a1 1
/*	$OpenBSD: ufs_extern.h,v 1.22 2004/12/07 04:37:28 tedu Exp $	*/
d152 2
a153 2
void  softdep_setup_directory_add(struct buf *, struct inode *, off_t,
          long, struct buf *);
@



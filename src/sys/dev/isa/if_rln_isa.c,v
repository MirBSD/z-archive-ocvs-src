head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.1
	tg-mergefixes-1-branch:1.1.1.1.0.14
	tg-mergefixes-1-base:1.1.1.1
	MIROS_X:1.1.1.1.0.12
	MIROS_X_BASE:1.1.1.1
	tg-mergetmp-3:1.1.1.1
	MIRBSD_XP_MIRPPC:1.1.1.1.0.10
	MIRBSD_XP_SPARC_BASE:1.1.1.1
	MIRBSD_XP_SPARC:1.1.1.1.0.8
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	cvs-200307072125:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307021520:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	cvs-200305131745:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.51.08;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.51.08;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: if_rln_isa.c,v 1.2 2002/03/14 01:26:56 millert Exp $	*/

/*
 * David Leonard <d@@openbsd.org>, 1999. Public domain.
 *
 * RangeLAN2 ISA card.
 *
 * The DIP switch settings on the card to set the i/o base address are
 *
 *     addr: 1 2 3 4 5 6 7  ['X' = on = down = towards the red/green leds]
 *	100: - - - - - X -
 *	120: - - X - - X -
 *	140: - - - X - X -
 *	218: X X - - - - X
 *	270: - X X X - - X  [default]
 *	280: - - - - X - X
 *	290: - X - - X - X
 *	298: X X - - X - X
 *	2a0: - - X - X - X
 *	2a8: X - X - X - X
 *	2e0: - - X X X - X
 *	300: - - - - - X X
 *	310: - X - - - X X
 *	358: X X - X - X X
 *	360: - - X X - X X
 *	368: X - X X - X X
 *
 * PnP:
 *	PXM0100 "Symphony Cordless PnP ISA Card"
 */

#include "bpfilter.h"

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/socket.h>
#include <sys/device.h>
#include <sys/queue.h>

#include <net/if.h>

#ifdef INET
#include <netinet/in.h>
#include <netinet/if_ether.h>
#endif

#include <machine/cpu.h>
#include <machine/bus.h>
#include <machine/intr.h>

#include <dev/ic/rln.h>
#include <dev/ic/rlnvar.h>
#include <dev/ic/rlnreg.h>

#include <dev/isa/isavar.h>

static int rln_isa_probe(struct device *, void *, void *);
static void rln_isa_attach(struct device *, struct device *, void *);

struct cfattach rln_isa_ca = {
	sizeof(struct rln_softc), rln_isa_probe, rln_isa_attach
};

static const int rln_irq[] = {
	3, 4, 5, 7, 10, 11, 12, 15
};
#define NRLN_IRQ	(sizeof(rln_irq) / sizeof(rln_irq[0]))

static int
rln_isa_probe(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	struct isa_attach_args *ia = aux;
	struct rln_softc *sc = match;

	/*
	 * The i/o base addr is set by the dip switches
	 * and must be specified in the kernel config.
	 */
	if (ia->ia_iobase == IOBASEUNK)
		return (0);

	/* Attempt a card reset through the io ports */
	sc->sc_iot = ia->ia_iot;
	sc->sc_width = 0;	/* Force width probe */
	if (bus_space_map(sc->sc_iot, ia->ia_iobase, RLN_NPORTS, 0, 
	    &sc->sc_ioh))
		return (0);

	if (rln_reset(sc)) {
		bus_space_unmap(sc->sc_iot, sc->sc_ioh, RLN_NPORTS);
		return (0);
	}

	ia->ia_iosize = RLN_NPORTS;
	return (1);
}

static void
rln_isa_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct rln_softc *sc = (void *)self;
	struct isa_attach_args *ia = aux;
	int irq = ia->ia_irq;
	int mask;
	int i;

	if (irq == IRQUNK) {
		/* Allocate a valid IRQ. */
		mask = 0;
		for (i = 0; i < NRLN_IRQ; i++)
			mask |= (1 << rln_irq[i]);
		if (isa_intr_alloc(ia->ia_ic, mask, IST_EDGE, &irq))
			panic("rln_isa_attach: can't allocate irq");
	} 
#ifdef DIAGNOSTIC
	else {
		/* Check given IRQ is valid. */
		for (i = 0; i < NRLN_IRQ; i++)
			if (irq == rln_irq[i])
				break;
		if (i == NRLN_IRQ)
			printf("rln_isa_probe: using invalid irq %d\n", irq);
	}
#endif

	printf(":");

	sc->sc_ih = isa_intr_establish(ia->ia_ic, irq, IST_EDGE,
	    IPL_NET, rlnintr, sc, sc->sc_dev.dv_xname);
#ifdef DIAGNOSTIC
	if (sc->sc_ih == NULL)
		panic("rln_isa_attach: couldn't establish interrupt");
#endif

	/* Tell the card which IRQ to use. */
	sc->sc_irq = irq;
	sc->sc_width = 0;	/* re-probe width */

	printf("%s: RangeLAN2 7100", sc->sc_dev.dv_xname);
	rlnconfig(sc);
	printf("\n");
}
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

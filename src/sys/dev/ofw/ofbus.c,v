head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.2
	tg-mergefixes-1-branch:1.1.1.2.0.4
	tg-mergefixes-1-base:1.1.1.2
	MIROS_X:1.1.1.2.0.2
	MIROS_X_BASE:1.1.1.2
	tg-mergetmp-3:1.1.1.2
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	cvs-200312222040:1.1.1.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	cvs-200307072125:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307021520:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	cvs-200305131745:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.07.19.20.24.06;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.51.17;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.51.17;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.22.21.02.51;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge OpenBSD tree; bump MirBSD minor
@
text
@/*	$OpenBSD: ofbus.c,v 1.12 2002/03/14 01:26:58 millert Exp $	*/
/*	$NetBSD: ofbus.c,v 1.3 1996/10/13 01:38:11 christos Exp $	*/

/*
 * Copyright (C) 1995, 1996 Wolfgang Solfrank.
 * Copyright (C) 1995, 1996 TooLs GmbH.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by TooLs GmbH.
 * 4. The name of TooLs GmbH may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY TOOLS GMBH ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TOOLS GMBH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/systm.h>

#include <machine/autoconf.h>
#include <dev/ofw/openfirm.h>

/* a bit of a hack to prevent conflicts between ofdisk and sd/wd */
#include "sd.h"

extern void systype(char *);

int ofrprobe(struct device *, void *, void *);
void ofrattach(struct device *, struct device *, void *);
int ofbprobe(struct device *, void *, void *);
void ofbattach(struct device *, struct device *, void *);
static int ofbprint(void *, const char *);

struct cfattach ofbus_ca = {
	sizeof(struct device), ofbprobe, ofbattach
};

struct cfdriver ofbus_cd = {
	NULL, "ofbus", DV_DULL
};

struct cfattach ofroot_ca = {
	sizeof(struct device), ofrprobe, ofrattach
};
 
struct cfdriver ofroot_cd = {
	NULL, "ofroot", DV_DULL
};

static int
ofbprint(aux, name)
	void *aux;
	const char *name;
{
	struct ofprobe *ofp = aux;
	char child[64];
	int l;
	
	if ((l = OF_getprop(ofp->phandle, "name", child, sizeof child - 1)) < 0)
		panic("device without name?");
	if (l >= sizeof child)
		l = sizeof child - 1;
	child[l] = 0;
	
	if (name) {
		/* Dont print anything here, be quiet
		printf("%s at %s", child, name);
		return UNCONF;
		*/
		return QUIET;
	} else {
		printf(" (%s)", child);
	return QUIET;
	}
}

int
ofrprobe(parent, cf, aux)
	struct device *parent;
	void *cf, *aux;
{
	struct confargs *ca = aux;
	
	if (strcmp(ca->ca_name, ofroot_cd.cd_name) != 0)
		return (0);

	return 1; 
}
void
ofrattach(parent, dev, aux)
	struct device *parent, *dev;
	void *aux;
{
	int child;
	char name[64];
	struct ofprobe *ofp = aux;
	struct ofprobe probe;
	int node;
#ifdef HAVE_SYSTYPE
	char ofname[64];
	int l;
#endif
	
        if (!(node = OF_peer(0)))
                panic("No PROM root");
        probe.phandle = node;
	ofp = &probe;

	ofbprint(ofp, 0);
	printf("\n");

#ifdef HAVE_SYSTYPE
	if ((l = OF_getprop(ofp->phandle, "model", ofname, sizeof ofname - 1)) < 0)
	{
		/* no system name? */
	} else {
		if (l >= sizeof ofname)
			l = sizeof ofname - 1;
		ofname[l] = 0;
		systype(ofname);
	}
#endif
	ofw_intr_establish();
		

	for (child = OF_child(ofp->phandle); child; child = OF_peer(child)) {
		/*
		 * This is a hack to skip all the entries in the tree
		 * that aren't devices (packages, openfirmware etc.).
		 */
		if (OF_getprop(child, "device_type", name, sizeof name) < 0)
			continue;
		probe.phandle = child;
		probe.unit = 0;
		config_found(dev, &probe, ofbprint);
	}
}
int
ofbprobe(parent, cf, aux)
	struct device *parent;
	void *cf, *aux;
{
	struct ofprobe *ofp = aux;
	
	if (!OF_child(ofp->phandle))
		return 0;
	return 1;
}

#ifdef __powerpc__
void uni_n_config(int);
#endif /* __powerpc__ */
void
ofbattach(parent, dev, aux)
	struct device *parent, *dev;
	void *aux;
{
	int child;
	char name[20];
	struct ofprobe *ofp = aux;
	struct ofprobe probe;
	int units;
	
	if (!parent)
		ofbprint(aux, 0);
		
	printf("\n");

	/*
	 * This is a hack to make the probe work on the scsi (and ide) bus.
	 * YES, I THINK IT IS A BUG IN THE OPENFIRMWARE TO NOT PROBE ALL
	 * DEVICES ON THESE BUSSES.
	 */
	units = 1;
	if (OF_getprop(ofp->phandle, "name", name, sizeof name) > 0) {
		if (!strcmp(name, "scsi")) {
#if NSD > 0
			units = 0; /* if sd driver in kernel, dont use ofw */
#else
			units = 7; /* What about wide or hostid != 7?	XXX */
#endif
		} else if (!strcmp(name, "ide")) {
#if NSD > 0
			units = 0; /* if sd? driver in kernel, dont use ofw */
#else 
			units = 2;
#endif

#ifdef __powerpc__
		} else if (!strcmp(name, "uni-n")) {
			uni_n_config(ofp->phandle);
#endif /* __powerpc__ */
		}
	}
	for (child = OF_child(ofp->phandle); child; child = OF_peer(child)) {
		/*
		 * This is a hack to skip all the entries in the tree
		 * that aren't devices (packages, openfirmware etc.).
		 */
		if (OF_getprop(child, "device_type", name, sizeof name) < 0)
			continue;
		probe.phandle = child;
		for (probe.unit = 0; probe.unit < units; probe.unit++)
			config_found(dev, &probe, ofbprint);
	}
}

/*
 * Name matching routine for OpenFirmware
 */
int
ofnmmatch(cp1, cp2)
	char *cp1, *cp2;
{
	int i;
	
	for (i = 0; *cp2; i++)
		if (*cp1++ != *cp2++)
			return 0;
	return i;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
/*	$OpenBSD: ofbus.c,v 1.13 2003/10/31 04:08:10 drahn Exp $	*/
d170 3
d209 4
@


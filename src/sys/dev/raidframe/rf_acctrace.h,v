head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.1
	tg-mergefixes-1-branch:1.1.1.1.0.14
	tg-mergefixes-1-base:1.1.1.1
	MIROS_X:1.1.1.1.0.12
	MIROS_X_BASE:1.1.1.1
	tg-mergetmp-3:1.1.1.1
	cvs-200411281330:1.1.1.1
	MIRBSD_XP_MIRPPC:1.1.1.1.0.10
	MIRBSD_XP_SPARC_BASE:1.1.1.1
	MIRBSD_XP_SPARC:1.1.1.1.0.8
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	cvs-200307072125:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307021520:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	cvs-200305131745:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.51.33;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.51.33;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: rf_acctrace.h,v 1.3 2002/12/16 07:01:03 tdeval Exp $	*/
/*	$NetBSD: rf_acctrace.h,v 1.3 1999/02/05 00:06:06 oster Exp $	*/

/*
 * Copyright (c) 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Mark Holland
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/*****************************************************************************
 *
 * acctrace.h -- Header file for acctrace.c
 *
 *****************************************************************************/


#ifndef	_RF__RF_ACCTRACE_H_
#define	_RF__RF_ACCTRACE_H_

#include "rf_types.h"
#include "rf_hist.h"
#include "rf_etimer.h"

typedef struct RF_user_acc_stats_s {
	RF_uint64	suspend_ovhd_us;/*
					 * usec spent mucking in the
					 * access-suspension code.
					 */
	RF_uint64	map_us;		/* usec spent mapping the access. */
	RF_uint64	lock_us;	/*
					 * usec spent locking & unlocking
					 * stripes, including time spent
					 * blocked.
					 */
	RF_uint64	dag_create_us;	/* usec spent creating the DAGs. */
	RF_uint64	dag_retry_us;	/*
					 * _total_ usec spent retrying the op
					 * -- not broken down into components.
					 */
	RF_uint64	exec_us;	/* usec spent in DispatchDAG. */
	RF_uint64	exec_engine_us;	/*
					 * usec spent in engine, not including
					 * blocking time.
					 */
	RF_uint64	cleanup_us;	/*
					 * usec spent tearing down the dag &
					 * maps, and generally cleaning up.
					 */
} RF_user_acc_stats_t;

typedef struct RF_recon_acc_stats_s {
	RF_uint32	recon_start_to_fetch_us;
	RF_uint32	recon_fetch_to_return_us;
	RF_uint32	recon_return_to_submit_us;
} RF_recon_acc_stats_t;

typedef struct RF_acctrace_entry_s {
	union {
		RF_user_acc_stats_t	user;
		RF_recon_acc_stats_t	recon;
	}		specific;
	RF_uint8	reconacc;	/*
					 * Whether this is a tracerec for a
					 * user acc or a recon acc.
					 */
	RF_uint64	xor_us;		/* usec spent doing XORs. */
	RF_uint64	q_us;		/* usec spent doing XORs. */
	RF_uint64	plog_us;	/*
					 * usec spent waiting to stuff parity
					 * into log.
					 */
	RF_uint64	diskqueue_us;	/*
					 * _total_ usec spent in disk queue(s),
					 * incl concurrent ops.
					 */
	RF_uint64	diskwait_us;	/*
					 * _total_ usec spent actually waiting
					 * on the disk, incl concurrent ops.
					 */
	RF_uint64	total_us;	/* Total usec spent on this access. */
	RF_uint64	num_phys_ios;	/* Number of physical I/Os invoked. */
	RF_uint64	phys_io_us;	/* Time of physical I/O. */
	RF_Etimer_t	tot_timer;	/*
					 * A timer used to compute total
					 * access time.
					 */
	RF_Etimer_t	timer;		/*
					 * A generic timer val for timing
					 * events that live across procedure
					 * boundaries.
					 */
	RF_Etimer_t	recon_timer;	/* Generic timer for recon stuff. */
	RF_uint64	index;
} RF_AccTraceEntry_t;

typedef struct RF_AccTotals_s {
	/* User acc stats. */
	RF_uint64	suspend_ovhd_us;
	RF_uint64	map_us;
	RF_uint64	lock_us;
	RF_uint64	dag_create_us;
	RF_uint64	dag_retry_us;
	RF_uint64	exec_us;
	RF_uint64	exec_engine_us;
	RF_uint64	cleanup_us;
	RF_uint64	user_reccount;
	/* Recon acc stats. */
	RF_uint64	recon_start_to_fetch_us;
	RF_uint64	recon_fetch_to_return_us;
	RF_uint64	recon_return_to_submit_us;
	RF_uint64	recon_io_overflow_count;
	RF_uint64	recon_phys_io_us;
	RF_uint64	recon_num_phys_ios;
	RF_uint64	recon_diskwait_us;
	RF_uint64	recon_reccount;
	/* Trace entry stats. */
	RF_uint64	xor_us;
	RF_uint64	q_us;
	RF_uint64	plog_us;
	RF_uint64	diskqueue_us;
	RF_uint64	diskwait_us;
	RF_uint64	total_us;
	RF_uint64	num_log_ents;
	RF_uint64	phys_io_overflow_count;
	RF_uint64	num_phys_ios;
	RF_uint64	phys_io_us;
	RF_uint64	bigvals;
	/* Histograms. */
	RF_Hist_t	dw_hist[RF_HIST_NUM_BUCKETS];
	RF_Hist_t	tot_hist[RF_HIST_NUM_BUCKETS];
} RF_AccTotals_t;

#if	RF_UTILITY == 0
RF_DECLARE_EXTERN_MUTEX(rf_tracing_mutex);
#endif	/* RF_UTILITY == 0 */

int  rf_ConfigureAccessTrace(RF_ShutdownList_t **);
void rf_LogTraceRec(RF_Raid_t * raid, RF_AccTraceEntry_t *);
void rf_FlushAccessTraceBuf(void);

#endif	/* !_RF__RF_ACCTRACE_H_ */
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

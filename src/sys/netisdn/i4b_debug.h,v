head	1.2;
access;
symbols
	tg-mergetmp-mirosx-1:1.2
	tg-mergefixes-1-branch:1.2.0.14
	tg-mergefixes-1-base:1.2
	MIROS_X:1.2.0.12
	MIROS_X_BASE:1.2
	MIRBSD_XP_MIRPPC:1.2.0.10
	MIRBSD_XP_SPARC_BASE:1.2
	MIRBSD_XP_SPARC:1.2.0.8
	MIRBSD_7quater:1.2
	MIRBSD_7_ALPHA:1.2.0.6
	MIRBSD_7:1.2.0.4
	MIRBSD_7ter:1.2
	MIRBSD_7_DEV:1.2.0.2
	MIRBSD_5:1.1
	MIRBSD_4:1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.10.03.15.20.49;	author tg;	state Stab;
branches;
next	1.1;

1.1
date	2003.04.06.04.37.48;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Sync with NetBSD

|| Among others, this gives us:

Module Name:    src
Committed By:   pooka
Date:           Thu Sep 25 15:34:38 UTC 2003

Added Files:
        src/sys/netisdn: i4b_capi.h i4b_capi_l4if.c i4b_capi_llif.c
            i4b_capi_msgs.c i4b_capi_msgs.h

Log Message:
Add a support layer for the ISDN CAPI (http://www.capi.org/), which should
make it pretty simple to write drivers for cards which conform to CAPI.

This code was originally written by Juha-Matti Liukkonen <jml@@cubical.fi>
of Cubical Solutions Ltd. for FreeBSD, and was now adapted to NetBSD
by myself for the same company.

|| and

Module Name:    src
Committed By:   pooka
Date:           Thu Sep 25 15:53:26 UTC 2003

Added Files:
        src/sys/dev/ic: iavc.c iavcreg.h iavcvar.h
        src/sys/dev/pci: iavc_pci.c

Log Message:
Add a driver for the CAPI-compliant AVM B1/T1 cards.

The driver backend is capable of supporting also ISA cards (no DMA)
and primary rate (PRI) cards in addition to the basic rate ones,
but I don't any to test on right now, so we don't support those
currently.

This code was originally written by Juha-Matti Liukkonen <jml@@cubical.fi>
of Cubical Solutions Ltd. for FreeBSD, and was ported to NetBSD by
myself for the same company.

==================================================================

The full list of ISDN files is now:

src/etc/MAKEDEV.mi
src/etc/Makefile
src/etc/etc.i386/MAKEDEV
src/etc/etc.i386/MAKEDEV.md
src/etc/isdnd.rc.sample
src/etc/isdnd.sppp.sample
src/etc/mtree/4.4BSD.dist
src/etc/ppp/ppp.conf.sample
src/etc/rc
src/etc/rc.conf
src/include/Makefile
src/share/man/man4/Makefile
src/share/man/man4/daic.4
src/share/man/man4/iavc.4
src/share/man/man4/ifpci.4
src/share/man/man4/ippp.4
src/share/man/man4/irip.4
src/share/man/man4/isdn.4
src/share/man/man4/isdnbchan.4
src/share/man/man4/isdncapi.4
src/share/man/man4/isdnctl.4
src/share/man/man4/isdntel.4
src/share/man/man4/isdntrc.4
src/share/man/man4/isic.4
src/share/man/man4/iwic.4
src/sys/arch/i386/conf/GENERIC
src/sys/arch/i386/i386/conf.c
src/sys/conf/files
src/sys/dev/ic/daic.c
src/sys/dev/ic/daicreg.h
src/sys/dev/ic/daicvar.h
src/sys/dev/ic/hscx.c
src/sys/dev/ic/hscx.h
src/sys/dev/ic/iavc.c
src/sys/dev/ic/iavcreg.h
src/sys/dev/ic/iavcvar.h
src/sys/dev/ic/ipac.h
src/sys/dev/ic/isac.c
src/sys/dev/ic/isac.h
src/sys/dev/ic/isacsx.c
src/sys/dev/ic/isacsx.h
src/sys/dev/ic/isic.c
src/sys/dev/ic/isic_bchan.c
src/sys/dev/ic/isic_l1.c
src/sys/dev/ic/isic_l1.h
src/sys/dev/ic/isic_l1fsm.c
src/sys/dev/isa/daic_isa.c
src/sys/dev/isa/files.isa
src/sys/dev/isa/files.isapnp
src/sys/dev/isa/isic_isa.c
src/sys/dev/isa/isic_isa_avm_a1.c
src/sys/dev/isa/isic_isa_itk_ix1.c
src/sys/dev/isa/isic_isa_tel_s016.c
src/sys/dev/isa/isic_isa_tel_s0163.c
src/sys/dev/isa/isic_isa_tel_s08.c
src/sys/dev/isa/isic_isa_usr_sti.c
src/sys/dev/isa/isic_isapnp.c
src/sys/dev/isa/isic_isapnp_ctx_s0P.c
src/sys/dev/isa/isic_isapnp_drn_ngo.c
src/sys/dev/isa/isic_isapnp_dynalink.c
src/sys/dev/isa/isic_isapnp_elsa_qs1i.c
src/sys/dev/isa/isic_isapnp_itkix.c
src/sys/dev/isa/isic_isapnp_siemens_isurf.c
src/sys/dev/isa/isic_isapnp_sws.c
src/sys/dev/isa/isic_isapnp_tel_s0P.c
src/sys/dev/microcode/daic/Makefile
src/sys/dev/microcode/daic/dnload.h
src/sys/dev/microcode/daic/dnload.h-dist
src/sys/dev/microcode/daic/gendnloadh
src/sys/dev/pci/files.pci
src/sys/dev/pci/fwlynx_pci.c
src/sys/dev/pci/iavc_pci.c
src/sys/dev/pci/ifpci.c
src/sys/dev/pci/ifpci2.c
src/sys/dev/pci/isic_pci.c
src/sys/dev/pci/isic_pci.h
src/sys/dev/pci/isic_pci_elsa_qs1p.c
src/sys/dev/pci/iwic_bchan.c
src/sys/dev/pci/iwic_dchan.c
src/sys/dev/pci/iwic_fsm.c
src/sys/dev/pci/iwic_pci.c
src/sys/dev/pci/iwicreg.h
src/sys/dev/pci/iwicvar.h
src/sys/dev/pci/pcidevs
src/sys/dev/pci/pcidevs.h
src/sys/dev/pci/pcidevs_data.h
src/sys/dev/pci/pcireg.h
src/sys/dev/pcmcia/files.pcmcia
src/sys/dev/pcmcia/isic_pcmcia.c
src/sys/dev/pcmcia/isic_pcmcia.h
src/sys/dev/pcmcia/isic_pcmcia_avm_fritz.c
src/sys/dev/pcmcia/isic_pcmcia_elsa_isdnmc.c
src/sys/dev/pcmcia/isic_pcmcia_elsa_mcall.c
src/sys/dev/pcmcia/isic_pcmcia_sbspeedstar2.c
src/sys/net/if_sppp.h
src/sys/netisdn/i4b_capi.h
src/sys/netisdn/i4b_capi_l4if.c
src/sys/netisdn/i4b_capi_llif.c
src/sys/netisdn/i4b_capi_msgs.c
src/sys/netisdn/i4b_capi_msgs.h
src/sys/netisdn/i4b_cause.h
src/sys/netisdn/i4b_ctl.c
src/sys/netisdn/i4b_debug.h
src/sys/netisdn/i4b_global.h
src/sys/netisdn/i4b_i4bdrv.c
src/sys/netisdn/i4b_iframe.c
src/sys/netisdn/i4b_ioctl.h
src/sys/netisdn/i4b_ipr.c
src/sys/netisdn/i4b_isdnq931.h
src/sys/netisdn/i4b_isppp.c
src/sys/netisdn/i4b_isppp.h
src/sys/netisdn/i4b_l1l2.h
src/sys/netisdn/i4b_l2.c
src/sys/netisdn/i4b_l2.h
src/sys/netisdn/i4b_l2fsm.c
src/sys/netisdn/i4b_l2fsm.h
src/sys/netisdn/i4b_l2if.c
src/sys/netisdn/i4b_l2timer.c
src/sys/netisdn/i4b_l3.h
src/sys/netisdn/i4b_l3fsm.c
src/sys/netisdn/i4b_l3fsm.h
src/sys/netisdn/i4b_l3l4.h
src/sys/netisdn/i4b_l3timer.c
src/sys/netisdn/i4b_l4.c
src/sys/netisdn/i4b_l4.h
src/sys/netisdn/i4b_l4if.c
src/sys/netisdn/i4b_l4mgmt.c
src/sys/netisdn/i4b_l4timer.c
src/sys/netisdn/i4b_lme.c
src/sys/netisdn/i4b_mbuf.c
src/sys/netisdn/i4b_mbuf.h
src/sys/netisdn/i4b_q931.c
src/sys/netisdn/i4b_q931.h
src/sys/netisdn/i4b_q932fac.c
src/sys/netisdn/i4b_q932fac.h
src/sys/netisdn/i4b_rbch.c
src/sys/netisdn/i4b_rbch_ioctl.h
src/sys/netisdn/i4b_sframe.c
src/sys/netisdn/i4b_tei.c
src/sys/netisdn/i4b_tel.c
src/sys/netisdn/i4b_tel_ioctl.h
src/sys/netisdn/i4b_trace.c
src/sys/netisdn/i4b_trace.h
src/sys/netisdn/i4b_uframe.c
src/sys/netisdn/i4b_util.c
src/sys/sys/cdefs.h
src/sys/sys/device.h
src/sys/sys/select.h
src/usr.sbin/Makefile
src/usr.sbin/isdnd/Makefile
src/usr.sbin/isdnd/alias.c
src/usr.sbin/isdnd/alias.h
src/usr.sbin/isdnd/config.h
src/usr.sbin/isdnd/controller.c
src/usr.sbin/isdnd/curses.c
src/usr.sbin/isdnd/dial.c
src/usr.sbin/isdnd/exec.c
src/usr.sbin/isdnd/fsm.c
src/usr.sbin/isdnd/holiday.c
src/usr.sbin/isdnd/isdnd.8
src/usr.sbin/isdnd/isdnd.acct.5
src/usr.sbin/isdnd/isdnd.h
src/usr.sbin/isdnd/isdnd.rates.5
src/usr.sbin/isdnd/isdnd.rc.5
src/usr.sbin/isdnd/log.c
src/usr.sbin/isdnd/main.c
src/usr.sbin/isdnd/monitor.c
src/usr.sbin/isdnd/monitor.h
src/usr.sbin/isdnd/msghdl.c
src/usr.sbin/isdnd/pathnames.h
src/usr.sbin/isdnd/pcause.c
src/usr.sbin/isdnd/process.c
src/usr.sbin/isdnd/rates.c
src/usr.sbin/isdnd/rc_config.c
src/usr.sbin/isdnd/rc_parse.y
src/usr.sbin/isdnd/rc_scan.l
src/usr.sbin/isdnd/support.c
src/usr.sbin/isdnd/timer.c
src/usr.sbin/ppp/ppp/Makefile
src/usr.sbin/ppp/ppp/i4b.c

Please correct me if anything should be missing.
@
text
@/* $MirBSD$ */

/*
 * Copyright (c) 1997, 2000 Hellmuth Michaelis. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *---------------------------------------------------------------------------
 *
 *	i4b_debug.h - i4b debug header file
 *
 *---------------------------------------------------------------------------*/

#ifndef I4B_DEBUG_H
#define I4B_DEBUG_H

#if !defined DO_I4B_DEBUG
# define DO_I4B_DEBUG 1		/* default = include debugging code */
#elif DO_I4B_DEBUG != 0
# undef DO_I4B_DEBUG
# define DO_I4B_DEBUG 1
#endif

#undef DO_I4B_MAXDEBUG		/* default = disable ALL debug messages */

#if DO_I4B_DEBUG

extern unsigned int i4b_l1_debug;
extern unsigned int i4b_l2_debug;
extern unsigned int i4b_l3_debug;
extern unsigned int i4b_l4_debug;

#define NDBGL1(bits, fmt, args...)				 	\
	if(bits & i4b_l1_debug)						\
	{ printf("%s (L1): %s: " fmt "\n", sc->sc_dev.dv_xname, __FUNCTION__ , ##args ); }

#define NDBGL2(bits, fmt, args...)				 	\
	if(bits & i4b_l2_debug)						\
	{ printf("i4b-L2 %s: " fmt "\n", __FUNCTION__ , ##args ); }
	
#define NDBGL3(bits, fmt, args...)				 	\
	if(bits & i4b_l3_debug)						\
	{ printf("i4b-L3 %s: " fmt "\n", __FUNCTION__ , ##args ); }
	
#define NDBGL4(bits, fmt, args...)				 	\
	if(bits & i4b_l4_debug)						\
	{ printf("i4b-L4 %s: " fmt "\n", __FUNCTION__ , ##args ); }
	
#else /* !DO_I4B_DEBUG */

#define NDBGL1(bits, fmt, args...);
#define NDBGL2(bits, fmt, args...);
#define NDBGL3(bits, fmt, args...);
#define NDBGL4(bits, fmt, args...);

#endif /* DO_I4B_DEBUG */

/* Layer 1 */

#define L1_ERROR	0x0001		/* general error message*/
#define L1_PRIM		0x0002		/* interlayer primitives*/
#define L1_BCHAN	0x0004		/* B channel action	*/
#define L1_H_ERR	0x0008		/* HSCX errors		*/
#define L1_H_IRQ	0x0010		/* HSCX IRQ messages	*/
#define L1_I_ERR	0x0020		/* ISAC errors		*/
#define L1_I_MSG	0x0040		/* ISAC messages	*/
#define L1_I_SETUP	0x0080		/* ISAC setup messages	*/
#define L1_F_MSG	0x0100		/* FSM messages		*/
#define L1_F_ERR	0x0200		/* FSM error messages	*/
#define L1_T_MSG	0x0400		/* Timer messages	*/
#define L1_T_ERR	0x0800		/* Timer error messages	*/
#define L1_H_XFRERR	0x1000		/* HSCX data xfer error */
#define L1_I_CICO	0x2000		/* ISAC command in/out	*/
#define L1_S_MSG	0x4000		/* silent messages (soft-HDLC)	*/
#define L1_S_ERR	0x8000		/* error messages (soft-HDLC)	*/

#define L1_DEBUG_MAX	0xffef		/* all messages on except IRQ!	*/
#define L1_DEBUG_ERR (L1_S_ERR | L1_H_ERR | L1_I_ERR | L1_F_ERR | L1_T_ERR | L1_ERROR)

#ifndef L1_DEBUG_DEFAULT
#ifdef DO_I4B_MAXDEBUG
#define L1_DEBUG_DEFAULT L1_DEBUG_MAX
#else
#define L1_DEBUG_DEFAULT L1_DEBUG_ERR
#endif
#endif

/* Layer 2 */

#define L2_ERROR	0x0001		/* general error message	*/
#define L2_PRIM		0x0002		/* interlayer primitives	*/
#define L2_U_MSG	0x0004		/* U frame messages		*/
#define L2_U_ERR	0x0008		/* U frame error messages	*/
#define L2_S_MSG	0x0010		/* S frame messages		*/
#define L2_S_ERR	0x0020		/* S frame error messages	*/
#define L2_I_MSG	0x0040		/* I frame messages		*/
#define L2_I_ERR	0x0080		/* I frame error messages	*/
#define L2_F_MSG	0x0100		/* FSM messages			*/
#define L2_F_ERR	0x0200		/* FSM error messages		*/
#define L2_T_MSG	0x0400		/* timer messages		*/
#define L2_T_ERR	0x0800		/* timer error messages		*/
#define L2_TEI_MSG	0x1000		/* TEI messages			*/
#define L2_TEI_ERR	0x2000		/* TEI error messages		*/

#define L2_DEBUG_MAX	0x3fff		/* all messages on		*/
#define L2_DEBUG_ERR (L2_ERROR | L2_I_ERR | L2_F_ERR | L2_T_ERR | L2_S_ERR | L2_TEI_ERR | L2_U_ERR )

#ifndef L2_DEBUG_DEFAULT
#ifdef DO_I4B_MAXDEBUG
#define L2_DEBUG_DEFAULT L2_DEBUG_MAX
#else
#define L2_DEBUG_DEFAULT L2_DEBUG_ERR
#endif
#endif

/* Layer 3 */

#define L3_ERR		0x0001		/* general error message	*/
#define L3_MSG		0x0002		/* general message		*/
#define L3_F_MSG	0x0004		/* FSM messages			*/
#define L3_F_ERR	0x0008		/* FSM error messages		*/
#define L3_T_MSG	0x0010		/* timer messages		*/
#define L3_T_ERR	0x0020		/* timer error messages		*/
#define L3_P_MSG	0x0040		/* protocol messages		*/
#define L3_P_ERR	0x0080		/* protocol error messages	*/
#define L3_A_MSG	0x0100		/* AOC messages			*/
#define L3_A_ERR	0x0200		/* AOC error messages		*/
#define L3_PRIM		0x0400		/* messages exchanged		*/

#define L3_DEBUG_MAX	0x07ff		/* all messages on	*/
#define L3_DEBUG_ERR	(L3_ERR | L3_F_ERR | L3_T_ERR | L3_P_ERR | L3_A_ERR)

#ifndef L3_DEBUG_DEFAULT
#ifdef DO_I4B_MAXDEBUG
#define L3_DEBUG_DEFAULT L3_DEBUG_MAX
#else
#define L3_DEBUG_DEFAULT L3_DEBUG_ERR
#endif
#endif

/* Layer 4 */

#define L4_ERR		0x0001		/* general error message	*/
#define L4_MSG		0x0002		/* general message		*/
#define L4_TIMO		0x0004		/* b channel idle timeout msgs	*/
#define L4_DIALST	0x0008		/* network driver dial states	*/
#define L4_IPRDBG	0x0010		/* ipr driver debug messages	*/
#define L4_RBCHDBG	0x0020		/* rbch driver debug messages	*/
#define L4_ISPDBG	0x0040		/* isp driver debug messages	*/
#define L4_TELDBG	0x0080		/* tel driver debug messages	*/
#define L4_TINADBG	0x0100		/* tina driver debug messages	*/
#define L4_TINAMSG	0x0200		/* tina driver messages		*/
#define L4_TINAERR	0x0400		/* tina driver error messages	*/
#define L4_INGDBG	0x0800		/* ing driver debug messages	*/
#define L4_IAVCDBG	0x1000		/* iavc driver debug messages	*/

#define L4_DEBUG_MAX	0x0fff		/* all messages on	*/
#define L4_DEBUG_ERR	(L4_ERR | L4_TINADBG |  L4_TINAMSG | L4_TINAERR)

#ifndef L4_DEBUG_DEFAULT
#ifdef DO_I4B_MAXDEBUG
#define L4_DEBUG_DEFAULT L4_DEBUG_MAX
#else
#define L4_DEBUG_DEFAULT L4_DEBUG_ERR
#endif
#endif

/*---------------------------------------------------------------------------*
 * 	ioctl via /dev/i4bctl:
 *	get/set current debug bits settings
 *---------------------------------------------------------------------------*/

typedef struct {
	unsigned int	l1;
	unsigned int	l2;
	unsigned int	l3;
	unsigned int	l4;	
} ctl_debug_t;
	
#define	I4B_CTL_GET_DEBUG	_IOR('C', 0, ctl_debug_t)

#define	I4B_CTL_SET_DEBUG	_IOW('C', 1, ctl_debug_t)

/*---------------------------------------------------------------------------*
 *	generic get chipset statistics
 *---------------------------------------------------------------------------*/

/* for the ihfc-driver: structure for HFC-1/S/SP statistics */

typedef struct {
	int txframes;
	int rxframes;
	int xdu;
	int rdo;
	int crc;
	int rab;
} hfcstat_t;


/* for the isic-driver: structure for HSCX statistics */

typedef struct {
	int unit;	/* controller number */
	int chan;	/* channel number */
	int vfr;
	int rdo;
	int crc;
	int rab;
	int xdu;
	int rfo;
} hscxstat_t;

/* generic statistics structure */

struct chipstat {
	int driver_type;		/* type, L1DRVR_XXXX		*/
	int driver_unit;		/* the unit number		*/
	int driver_bchannel;		/* the B-channel		*/
	union stats {			/* union for all drivers	*/
		hfcstat_t  hfcstat;	/* for ihfc driver, L1DRVR_IHFC	*/
		hscxstat_t hscxstat;	/* for isic driver, L1DRVR_ISIC	*/
	} stats;
};

/* get statistics */

#define	I4B_CTL_GET_CHIPSTAT	_IOWR('C', 2, struct chipstat)

/* clear statistics */

#define	I4B_CTL_CLR_CHIPSTAT	_IOW('C', 3, struct chipstat)

/*---------------------------------------------------------------------------*
 *	get LAPD/Q.921 statistics
 *---------------------------------------------------------------------------*/
typedef struct {

	/* transmit */

	u_long	tx_i;		/* I 	*/
	u_long	tx_rr;		/* RR	*/
	u_long	tx_rnr;		/* RNR 	*/
	u_long	tx_rej;		/* REJ	*/
	u_long	tx_sabme;	/* SABME*/
	u_long	tx_dm;		/* DM	*/
	u_long	tx_disc;	/* DISC */
	u_long	tx_ua;		/* UA	*/
	u_long	tx_frmr;	/* FRMR	*/	
	u_long	tx_tei;		/* TEI	*/

	/* receive */

	u_long	rx_i;		/* I    */
	u_long	rx_rr;		/* RR   */
	u_long	rx_rnr;		/* RNR  */
	u_long	rx_rej;		/* REJ  */
	u_long	rx_sabme;	/* SABME*/
	u_long	rx_tei;		/* TEI	*/
	u_long	rx_ui;		/* UI	*/
	u_long	rx_disc;	/* DISC */
	u_long	rx_xid;		/* XID	*/
	u_long	rx_dm;		/* DM	*/
	u_long	rx_ua;		/* UA	*/
	u_long	rx_frmr;	/* FRMR	*/	
	
	/* errors */

	u_long	err_rx_len;	/* incorrect length */
	u_long	err_rx_badf;	/* bad frame type */
	u_long	err_rx_bads;	/* bad s frame */
	u_long	err_rx_badu;	/* bad u frame */
	u_long	err_rx_badui;	/* bad ui frame */
} lapdstat_t;

typedef struct {
	int unit;
	lapdstat_t lapdstat;
} l2stat_t;

#define	I4B_CTL_GET_LAPDSTAT	_IOWR('C', 4, l2stat_t)

#define	I4B_CTL_CLR_LAPDSTAT	_IOW('C', 5, int)

#endif
/* EOF */
@


1.1
log
@Pull in ISDN support from NetBSD, push out the old
one with the "I require you to send me a postcard"
licence.

This enables building a kernel with ISDN support
(it's just slower and like 200 KiB bigger), but
disables isdnd from userland and needs different
manpages and other fixes from NetBSD.

Also added:
 - support for the callout API from NetBSD, which
   is in fact our stolen new-style timeout API,
   just with a bit more overhead and different names
   for the structure
 - some includes sync with NBSD
 - a shitload of kludges to make ISDN build

This needs security, style and bloat audits fast.
And testing.
@
text
@d1 2
a29 7
 *	-----------------------------------
 *
 *	$Id: i4b_debug.h,v 1.3 2002/04/09 20:48:21 martin Exp $ 
 *
 * $FreeBSD$
 *
 *      last edit-date: [Wed May 31 09:51:34 2000]
d174 1
@


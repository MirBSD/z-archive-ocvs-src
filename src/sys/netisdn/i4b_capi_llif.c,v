head	1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1
	tg-mergefixes-1-branch:1.1.0.14
	tg-mergefixes-1-base:1.1
	MIROS_X:1.1.0.12
	MIROS_X_BASE:1.1
	MIRBSD_XP_MIRPPC:1.1.0.10
	MIRBSD_XP_SPARC_BASE:1.1
	MIRBSD_XP_SPARC:1.1.0.8
	MIRBSD_7quater:1.1
	MIRBSD_7_ALPHA:1.1.0.6
	MIRBSD_7:1.1.0.4
	MIRBSD_7ter:1.1
	MIRBSD_7_DEV:1.1.0.2;
locks; strict;
comment	@ * @;


1.1
date	2003.10.03.15.20.48;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Sync with NetBSD

|| Among others, this gives us:

Module Name:    src
Committed By:   pooka
Date:           Thu Sep 25 15:34:38 UTC 2003

Added Files:
        src/sys/netisdn: i4b_capi.h i4b_capi_l4if.c i4b_capi_llif.c
            i4b_capi_msgs.c i4b_capi_msgs.h

Log Message:
Add a support layer for the ISDN CAPI (http://www.capi.org/), which should
make it pretty simple to write drivers for cards which conform to CAPI.

This code was originally written by Juha-Matti Liukkonen <jml@@cubical.fi>
of Cubical Solutions Ltd. for FreeBSD, and was now adapted to NetBSD
by myself for the same company.

|| and

Module Name:    src
Committed By:   pooka
Date:           Thu Sep 25 15:53:26 UTC 2003

Added Files:
        src/sys/dev/ic: iavc.c iavcreg.h iavcvar.h
        src/sys/dev/pci: iavc_pci.c

Log Message:
Add a driver for the CAPI-compliant AVM B1/T1 cards.

The driver backend is capable of supporting also ISA cards (no DMA)
and primary rate (PRI) cards in addition to the basic rate ones,
but I don't any to test on right now, so we don't support those
currently.

This code was originally written by Juha-Matti Liukkonen <jml@@cubical.fi>
of Cubical Solutions Ltd. for FreeBSD, and was ported to NetBSD by
myself for the same company.

==================================================================

The full list of ISDN files is now:

src/etc/MAKEDEV.mi
src/etc/Makefile
src/etc/etc.i386/MAKEDEV
src/etc/etc.i386/MAKEDEV.md
src/etc/isdnd.rc.sample
src/etc/isdnd.sppp.sample
src/etc/mtree/4.4BSD.dist
src/etc/ppp/ppp.conf.sample
src/etc/rc
src/etc/rc.conf
src/include/Makefile
src/share/man/man4/Makefile
src/share/man/man4/daic.4
src/share/man/man4/iavc.4
src/share/man/man4/ifpci.4
src/share/man/man4/ippp.4
src/share/man/man4/irip.4
src/share/man/man4/isdn.4
src/share/man/man4/isdnbchan.4
src/share/man/man4/isdncapi.4
src/share/man/man4/isdnctl.4
src/share/man/man4/isdntel.4
src/share/man/man4/isdntrc.4
src/share/man/man4/isic.4
src/share/man/man4/iwic.4
src/sys/arch/i386/conf/GENERIC
src/sys/arch/i386/i386/conf.c
src/sys/conf/files
src/sys/dev/ic/daic.c
src/sys/dev/ic/daicreg.h
src/sys/dev/ic/daicvar.h
src/sys/dev/ic/hscx.c
src/sys/dev/ic/hscx.h
src/sys/dev/ic/iavc.c
src/sys/dev/ic/iavcreg.h
src/sys/dev/ic/iavcvar.h
src/sys/dev/ic/ipac.h
src/sys/dev/ic/isac.c
src/sys/dev/ic/isac.h
src/sys/dev/ic/isacsx.c
src/sys/dev/ic/isacsx.h
src/sys/dev/ic/isic.c
src/sys/dev/ic/isic_bchan.c
src/sys/dev/ic/isic_l1.c
src/sys/dev/ic/isic_l1.h
src/sys/dev/ic/isic_l1fsm.c
src/sys/dev/isa/daic_isa.c
src/sys/dev/isa/files.isa
src/sys/dev/isa/files.isapnp
src/sys/dev/isa/isic_isa.c
src/sys/dev/isa/isic_isa_avm_a1.c
src/sys/dev/isa/isic_isa_itk_ix1.c
src/sys/dev/isa/isic_isa_tel_s016.c
src/sys/dev/isa/isic_isa_tel_s0163.c
src/sys/dev/isa/isic_isa_tel_s08.c
src/sys/dev/isa/isic_isa_usr_sti.c
src/sys/dev/isa/isic_isapnp.c
src/sys/dev/isa/isic_isapnp_ctx_s0P.c
src/sys/dev/isa/isic_isapnp_drn_ngo.c
src/sys/dev/isa/isic_isapnp_dynalink.c
src/sys/dev/isa/isic_isapnp_elsa_qs1i.c
src/sys/dev/isa/isic_isapnp_itkix.c
src/sys/dev/isa/isic_isapnp_siemens_isurf.c
src/sys/dev/isa/isic_isapnp_sws.c
src/sys/dev/isa/isic_isapnp_tel_s0P.c
src/sys/dev/microcode/daic/Makefile
src/sys/dev/microcode/daic/dnload.h
src/sys/dev/microcode/daic/dnload.h-dist
src/sys/dev/microcode/daic/gendnloadh
src/sys/dev/pci/files.pci
src/sys/dev/pci/fwlynx_pci.c
src/sys/dev/pci/iavc_pci.c
src/sys/dev/pci/ifpci.c
src/sys/dev/pci/ifpci2.c
src/sys/dev/pci/isic_pci.c
src/sys/dev/pci/isic_pci.h
src/sys/dev/pci/isic_pci_elsa_qs1p.c
src/sys/dev/pci/iwic_bchan.c
src/sys/dev/pci/iwic_dchan.c
src/sys/dev/pci/iwic_fsm.c
src/sys/dev/pci/iwic_pci.c
src/sys/dev/pci/iwicreg.h
src/sys/dev/pci/iwicvar.h
src/sys/dev/pci/pcidevs
src/sys/dev/pci/pcidevs.h
src/sys/dev/pci/pcidevs_data.h
src/sys/dev/pci/pcireg.h
src/sys/dev/pcmcia/files.pcmcia
src/sys/dev/pcmcia/isic_pcmcia.c
src/sys/dev/pcmcia/isic_pcmcia.h
src/sys/dev/pcmcia/isic_pcmcia_avm_fritz.c
src/sys/dev/pcmcia/isic_pcmcia_elsa_isdnmc.c
src/sys/dev/pcmcia/isic_pcmcia_elsa_mcall.c
src/sys/dev/pcmcia/isic_pcmcia_sbspeedstar2.c
src/sys/net/if_sppp.h
src/sys/netisdn/i4b_capi.h
src/sys/netisdn/i4b_capi_l4if.c
src/sys/netisdn/i4b_capi_llif.c
src/sys/netisdn/i4b_capi_msgs.c
src/sys/netisdn/i4b_capi_msgs.h
src/sys/netisdn/i4b_cause.h
src/sys/netisdn/i4b_ctl.c
src/sys/netisdn/i4b_debug.h
src/sys/netisdn/i4b_global.h
src/sys/netisdn/i4b_i4bdrv.c
src/sys/netisdn/i4b_iframe.c
src/sys/netisdn/i4b_ioctl.h
src/sys/netisdn/i4b_ipr.c
src/sys/netisdn/i4b_isdnq931.h
src/sys/netisdn/i4b_isppp.c
src/sys/netisdn/i4b_isppp.h
src/sys/netisdn/i4b_l1l2.h
src/sys/netisdn/i4b_l2.c
src/sys/netisdn/i4b_l2.h
src/sys/netisdn/i4b_l2fsm.c
src/sys/netisdn/i4b_l2fsm.h
src/sys/netisdn/i4b_l2if.c
src/sys/netisdn/i4b_l2timer.c
src/sys/netisdn/i4b_l3.h
src/sys/netisdn/i4b_l3fsm.c
src/sys/netisdn/i4b_l3fsm.h
src/sys/netisdn/i4b_l3l4.h
src/sys/netisdn/i4b_l3timer.c
src/sys/netisdn/i4b_l4.c
src/sys/netisdn/i4b_l4.h
src/sys/netisdn/i4b_l4if.c
src/sys/netisdn/i4b_l4mgmt.c
src/sys/netisdn/i4b_l4timer.c
src/sys/netisdn/i4b_lme.c
src/sys/netisdn/i4b_mbuf.c
src/sys/netisdn/i4b_mbuf.h
src/sys/netisdn/i4b_q931.c
src/sys/netisdn/i4b_q931.h
src/sys/netisdn/i4b_q932fac.c
src/sys/netisdn/i4b_q932fac.h
src/sys/netisdn/i4b_rbch.c
src/sys/netisdn/i4b_rbch_ioctl.h
src/sys/netisdn/i4b_sframe.c
src/sys/netisdn/i4b_tei.c
src/sys/netisdn/i4b_tel.c
src/sys/netisdn/i4b_tel_ioctl.h
src/sys/netisdn/i4b_trace.c
src/sys/netisdn/i4b_trace.h
src/sys/netisdn/i4b_uframe.c
src/sys/netisdn/i4b_util.c
src/sys/sys/cdefs.h
src/sys/sys/device.h
src/sys/sys/select.h
src/usr.sbin/Makefile
src/usr.sbin/isdnd/Makefile
src/usr.sbin/isdnd/alias.c
src/usr.sbin/isdnd/alias.h
src/usr.sbin/isdnd/config.h
src/usr.sbin/isdnd/controller.c
src/usr.sbin/isdnd/curses.c
src/usr.sbin/isdnd/dial.c
src/usr.sbin/isdnd/exec.c
src/usr.sbin/isdnd/fsm.c
src/usr.sbin/isdnd/holiday.c
src/usr.sbin/isdnd/isdnd.8
src/usr.sbin/isdnd/isdnd.acct.5
src/usr.sbin/isdnd/isdnd.h
src/usr.sbin/isdnd/isdnd.rates.5
src/usr.sbin/isdnd/isdnd.rc.5
src/usr.sbin/isdnd/log.c
src/usr.sbin/isdnd/main.c
src/usr.sbin/isdnd/monitor.c
src/usr.sbin/isdnd/monitor.h
src/usr.sbin/isdnd/msghdl.c
src/usr.sbin/isdnd/pathnames.h
src/usr.sbin/isdnd/pcause.c
src/usr.sbin/isdnd/process.c
src/usr.sbin/isdnd/rates.c
src/usr.sbin/isdnd/rc_config.c
src/usr.sbin/isdnd/rc_parse.y
src/usr.sbin/isdnd/rc_scan.l
src/usr.sbin/isdnd/support.c
src/usr.sbin/isdnd/timer.c
src/usr.sbin/ppp/ppp/Makefile
src/usr.sbin/ppp/ppp/i4b.c

Please correct me if anything should be missing.
@
text
@/*	$MirBSD$	*/
/*	$NetBSD: i4b_capi_llif.c,v 1.2 2003/09/26 15:17:23 pooka Exp $	*/

/*
 * Copyright (c) 2001 Cubical Solutions Ltd. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * capi/capi_llif.c	The i4b CAPI link layer interface.
 *
 * $FreeBSD: src/sys/i4b/capi/capi_llif.c,v 1.1 2001/05/25 08:39:31 hm Exp $
 */

#include <sys/cdefs.h>

#include <sys/param.h>
#include <sys/kernel.h>
#include <sys/systm.h>
#include <sys/mbuf.h>
#include <sys/socket.h>
#include <sys/timeout.h>
#include <net/if.h>

#include <netisdn/i4b_debug.h>
#include <netisdn/i4b_ioctl.h>
#include <netisdn/i4b_cause.h>
#include <netisdn/i4b_l3l4.h>
#include <netisdn/i4b_mbuf.h>
#include <netisdn/i4b_global.h>
#include <netisdn/i4b_l4.h>
#include <netisdn/i4b_capi.h>
#include <netisdn/i4b_capi_msgs.h>

/*
//  capi_ll_control
//      CAPI link layer control routine. Called by a link layer
//      driver when its state changes.
*/

int
capi_ll_control(capi_softc_t *sc, int op, int arg)
{
    switch (op) {
    case CAPI_CTRL_READY:
	if (arg) {
	    sc->sc_state = C_READY;

	    /*
	     *  Register our CAPI ApplId and send CAPI_LISTEN_REQ
	     *  with CIP Mask value 1 (match all).
	     */

	    sc->reg_appl(sc, I4BCAPI_APPLID, sc->sc_nbch);
	    capi_listen_req(sc, 0x10007);

	} else {
	    sc->sc_state = C_DOWN;
	    /* XXX go through cds and notify L4 of pdeact? XXX */
	}
	break;

    case CAPI_CTRL_PROFILE:
	bcopy((char*) arg, &sc->sc_profile, sizeof(sc->sc_profile));
	break;

    case CAPI_CTRL_NEW_NCCI:
    case CAPI_CTRL_FREE_NCCI:
	/* We ignore the controller's NCCI notifications. */
	break;

    default:
	printf("capi%d: unknown control %d\n", sc->sc_unit, op);
    }

    return 0;
}

/*
//  i4b_capi_handlers
//      Array of message-handler pairs used to dispatch CAPI
//      messages sent to I4BCAPI_APPLID.
*/

static struct capi_cmdtab {
    u_int16_t cmd;
    void (*handler)(capi_softc_t *, struct mbuf *);
} i4b_capi_handlers[] = {
    { CAPI_LISTEN_CONF,           capi_listen_conf },
    { CAPI_INFO_IND,              capi_info_ind },
    { CAPI_ALERT_CONF,            capi_alert_conf },
    { CAPI_CONNECT_CONF,          capi_connect_conf },
    { CAPI_CONNECT_IND,           capi_connect_ind },
    { CAPI_CONNECT_ACTIVE_IND,    capi_connect_active_ind },
    { CAPI_CONNECT_B3_CONF,       capi_connect_b3_conf },
    { CAPI_CONNECT_B3_IND,        capi_connect_b3_ind },
    { CAPI_CONNECT_B3_ACTIVE_IND, capi_connect_b3_active_ind },
    { CAPI_DATA_B3_CONF,          capi_data_b3_conf },
    { CAPI_DATA_B3_IND,           capi_data_b3_ind },
    { CAPI_DISCONNECT_B3_IND,     capi_disconnect_b3_ind },
    { CAPI_DISCONNECT_CONF,       capi_disconnect_conf },
    { CAPI_DISCONNECT_IND,        capi_disconnect_ind },
    { 0, 0 }
};

/*
//  capi_ll_receive
//      CAPI link layer receive upcall. Called by a link layer
//      driver to dispatch incoming CAPI messages.
*/

int
capi_ll_receive(capi_softc_t *sc, struct mbuf *m)
{
    u_int8_t *p = mtod(m, u_int8_t*);
    u_int16_t len, applid, msgid, cmd;

    capimsg_getu16(p + 0, &len);
    capimsg_getu16(p + 2, &applid);
    capimsg_getu16(p + 4, &cmd);
    capimsg_getu16(p + 6, &msgid);

#if 0
    printf("capi%d: ll_receive hdr %04x %04x %04x %04x\n", sc->sc_unit,
	   len, applid, cmd, msgid);
#endif

    if (applid == I4BCAPI_APPLID) {
	struct capi_cmdtab *e;
	for (e = i4b_capi_handlers; e->cmd && e->cmd != cmd; e++);
	if (e->cmd) (*e->handler)(sc, m);
	else printf("capi%d: unknown message %04x\n", sc->sc_unit, cmd);

    } else {
	/* XXX we could handle arbitrary ApplIds here XXX */
	printf("capi%d: message %04x for unknown applid %d\n", sc->sc_unit,
	       cmd, applid);
    }

    if (m->m_next) {
	i4b_Bfreembuf(m->m_next);
	m->m_next = NULL;
    }
    i4b_Dfreembuf(m);
    return(0);
}
@

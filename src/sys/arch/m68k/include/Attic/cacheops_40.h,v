head	1.2;
access;
symbols
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	cvs-200307072125:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307021520:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.04.06.04.28.47;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.49.46;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.49.46;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove "some dead architectures".

These are all but i386 and x86-64 (which is not in the tree yet),
because I have no machines to work with.

Re-adding support should be fairly easy, just cvs adding a partial
OpenBSD checkout and pulling in stuff like kernel signal patch, humantime,
etc. which got added to i386 as well.

You will need gcc support as well.
@
text
@/*	$OpenBSD: cacheops_40.h,v 1.4 2002/03/14 01:26:34 millert Exp $	*/
/*	$NetBSD: cacheops_40.h,v 1.1 1997/06/02 20:26:41 leo Exp $	*/

/*-
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Leo Weppelman
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Invalidate entire TLB.
 */
void TBIA_40(void);
extern __inline__ void
TBIA_40()
{
	__asm __volatile (" .word 0xf518" ); /*  pflusha */
}

/*
 * Invalidate any TLB entry for given VA (TB Invalidate Single)
 */
void TBIS_40(vaddr_t);
extern __inline__ void
TBIS_40(va)
	vaddr_t	va;
{
	register vaddr_t	r_va __asm("a0") = va;
	int	tmp;

	__asm __volatile (" movc   %1, dfc;"	/* select supervisor	*/
			  " .word 0xf508;"	/* pflush a0@@		*/
			  " moveq  %3, %1;"	/* select user		*/
			  " movc   %1, dfc;"
			  " .word 0xf508;" : "=d" (tmp) :
			  "0" (FC_SUPERD), "a" (r_va), "i" (FC_USERD));
}

/*
 * Invalidate supervisor side of TLB
 */
void TBIAS_40(void);
extern __inline__ void
TBIAS_40()
{
	/*
	 * Cannot specify supervisor/user on pflusha, so we flush all
	 */
	__asm __volatile (" .word 0xf518;");
}

/*
 * Invalidate user side of TLB
 */
void TBIAU_40(void);
extern __inline__ void
TBIAU_40()
{
	/*
	 * Cannot specify supervisor/user on pflusha, so we flush all
	 */
	__asm __volatile (" .word 0xf518;");
}

/*
 * Invalidate instruction cache
 */
void ICIA_40(void);
extern __inline__ void
ICIA_40()
{
	__asm __volatile (" .word 0xf498;"); /* cinva ic */
}

void ICPA_40(void);
extern __inline__ void
ICPA_40()
{
	__asm __volatile (" .word 0xf498;"); /* cinva ic */
}

/*
 * Invalidate data cache.
 */
void DCIA_40(void);
extern __inline__ void
DCIA_40()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

void DCIS_40(void);
extern __inline__ void
DCIS_40()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

void DCIU_40(void);
extern __inline__ void
DCIU_40()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

void DCIAS_40(paddr_t);
extern __inline__ void
DCIAS_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf468;" : : "a" (r_pa)); /* cpushl dc,a0@@ */
}

void PCIA_40(void);
extern __inline__ void
PCIA_40()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

void DCFA_40(void);
extern __inline__ void
DCFA_40()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

/* invalidate instruction physical cache line */
void ICPL_40(paddr_t);
extern __inline__ void
ICPL_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf488;" : : "a" (r_pa)); /* cinvl ic,a0@@ */
}

/* invalidate instruction physical cache page */
void ICPP_40(paddr_t);
extern __inline__ void
ICPP_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf490;" : : "a" (r_pa)); /* cinvp ic,a0@@ */
}

/* invalidate data physical cache line */
void DCPL_40(paddr_t);
extern __inline__ void
DCPL_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf448;" : : "a" (r_pa)); /* cinvl dc,a0@@ */
}

/* invalidate data physical cache page */
void DCPP_40(paddr_t);
extern __inline__ void
DCPP_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf450;" : : "a" (r_pa)); /* cinvp dc,a0@@ */
}

/* invalidate data physical all */
void DCPA_40(void);
extern __inline__ void
DCPA_40()
{
	__asm __volatile (" .word 0xf458;"); /* cinva dc */
}

/* data cache flush line */
void DCFL_40(paddr_t);
extern __inline__ void
DCFL_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf468;" : : "a" (r_pa)); /* cpushl dc,a0@@ */
}

/* data cache flush page */
void DCFP_40(paddr_t);
extern __inline__ void
DCFP_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf470;" : : "a" (r_pa)); /* cpushp dc,a0@@ */
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

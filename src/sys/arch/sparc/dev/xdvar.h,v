head	1.5;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.1
	tg-mergefixes-1-branch:1.1.1.1.0.4
	tg-mergefixes-1-base:1.1.1.1
	MIROS_X:1.1.1.1.0.2
	MIROS_X_BASE:1.1.1.1
	tg-mergetmp-3:1.1.1.1
	MIRBSD_XP_SPARC:1.3.0.2
	MIRBSD_7quater:1.2.2.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.2.2.1.0.4
	MIRBSD_7:1.2.2.1.0.2
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.2.2.1
	MIRBSD_7_DEV:1.2.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	cvs-200307072125:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307021520:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.11.13.02.25.30;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.15.19.31.51;	author tg;	state dead;
branches;
next	1.3;

1.3
date	2003.12.17.18.29.37;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.06.04.30.00;	author tg;	state dead;
branches
	1.2.2.1;
next	1.1;

1.1
date	2003.03.22.17.50.14;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.50.14;	author tg;	state Exp;
branches;
next	;

1.2.2.1
date	2003.10.23.21.33.16;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@welcome back, sparc
(usr.bin/pmdb was never deleted)
@
text
@/*	$OpenBSD: xdvar.h,v 1.5 2001/03/24 10:07:21 ho Exp $	*/
/*	$NetBSD: xdvar.h,v 1.5 1996/03/31 22:38:56 pk Exp $	*/

/*
 *
 * Copyright (c) 1995 Charles D. Cranor
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Charles D. Cranor.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * x d v a r . h
 *
 * this file defines the software structure we use to control the
 * 753/7053.
 *
 * author: Chuck Cranor <chuck@@ccrc.wustl.edu>
 */

/*
 * i/o request: wrapper for hardware's iopb data structure
 */

struct xd_iorq {
  struct xd_iopb *iopb;             /* address of matching iopb */
  struct xdc_softc *xdc;            /* who we are working with */
  struct xd_softc *xd;              /* which disk */
  int ttl;                          /* time to live */
  int mode;                         /* current mode (state+other data) */
  int tries;                        /* number of times we have tried it */
  int errno;                        /* error number if we fail */
  int lasterror;		    /* last error we got */
  int blockno;                      /* starting block no for this xfer */
  int sectcnt;                      /* number of sectors in xfer */
  char *dbuf;                       /* KVA of data buffer (advances) */
  char *dbufbase;                   /* base of dbuf */
  struct buf *buf;                  /* for NORM */
};

/*
 * state
 */

#define XD_SUB_MASK 0xf0            /* mask bits for state */
#define XD_SUB_FREE 0x00            /* free */
#define XD_SUB_NORM 0x10            /* normal I/O request */
#define XD_SUB_WAIT 0x20            /* normal I/O request in the
                                             context of a process */
#define XD_SUB_POLL 0x30            /* polled mode */
#define XD_SUB_DONE 0x40            /* not active, but can't be free'd yet */
#define XD_SUB_NOQ  0x50            /* don't queue, just submit (internal) */

#define XD_STATE(X) ((X) & XD_SUB_MASK) /* extract state from mode */
#define XD_NEWSTATE(OLD, NEW) (((OLD) & ~XD_SUB_MASK) |(NEW)) /* new state */


/*
 * other mode data
 */

#define XD_MODE_VERBO 0x08          /* print error messages */
#define XD_MODE_B144  0x04          /* handling a bad144 sector */


/*
 * software timers and flags
 */

#define XDC_SUBWAITLIM 4   /* max number of "done" IOPBs there can be
				where we still allow a SUB_WAIT command */
#define XDC_TICKCNT (5*hz) /* call xdc_tick on this interval (5 sec) */
#define XDC_MAXTTL     2   /* max number of xd ticks to live */
#define XDC_NOUNIT (-1)    /* for xdcmd: no unit number */

/*
 * a "xd_softc" structure contains per-disk state info.
 */

struct xd_softc {
  struct device sc_dev;            /* device struct, reqd by autoconf */
  struct disk sc_dk;		   /* generic disk info */
  struct xdc_softc *parent;        /* parent */
  u_short flags;                   /* flags */
  u_short state;                   /* device state */
  int xd_drive;                    /* unit number */
  /* geometry */
  u_short ncyl, acyl, pcyl;        /* number of cyl's */
  u_short sectpercyl;              /* nhead*nsect */
  u_char nhead;                    /* number of heads */
  u_char nsect;                    /* number of sectors per track */
  u_char hw_spt;                   /* as above, but includes spare sectors */
  struct dkbad dkb;                /* bad144 sectors */
};

/*
 * flags
 */

#define XD_WLABEL 0x0001           /* write label */
/*
 * state
 */

#define XD_DRIVE_UNKNOWN 0         /* never talked to it */
#define XD_DRIVE_ATTACHING 1       /* attach in progress */
#define XD_DRIVE_NOLABEL 2         /* drive on-line, no label */
#define XD_DRIVE_ONLINE  3         /* drive is on-line */

/*
 * a "xdc_softc" structure contains per-disk-controller state info,
 * including a list of active controllers.
 */

struct xdc_softc {
  struct device sc_dev;            /* device struct, reqd by autoconf */
  struct intrhand sc_ih;           /* interrupt info */
  struct evcnt sc_intrcnt;         /* event counter (for vmstat -i) */

  struct xdc *xdc;                 /* vaddr of vme registers */

  struct xd_softc *sc_drives[XDC_MAXDEV];   /* drives on this controller */
  int ipl;                         /* interrupt level */
  int vector;                      /* interrupt vector */

  struct xd_iorq *reqs;            /* i/o requests */
  struct xd_iopb *iopbase;         /* iopb base addr (maps iopb->iorq) */
  struct xd_iopb *dvmaiopb;        /* iopb base in DVMA space, not kvm */
  struct buf sc_wq;                /* queue'd IOPBs for this controller */
  char freereq[XDC_MAXIOPB];       /* free list (stack) */
  char waitq[XDC_MAXIOPB];         /* wait queue */
  u_char nfree;                    /* number of iopbs free */
  u_char nrun;                     /* number running */
  u_char nwait;                    /* number of waiting iopbs */
  u_char ndone;                    /* number of done IORQs */
  u_char waithead;                 /* head of queue */
  u_char waitend;		   /* end of queue */
  struct timeout xdc_tick_tmo;	   /* for xdc_tick() */
};

/*
 * reset blast modes
 */

#define XD_RSET_NONE (-1)          /* restart all requests */
#define XD_RSET_ALL  (-2)          /* don't restart anything */
@


1.4
log
@sparc has to die :(

it was nice while it lasted, but I couldn't even live up to
my promise to provide XFree86 4.4.0 on sparc due to lack of
time (and money and health).

also, compat_freebsd dies, without prejudice.

<mirabile> benz: sparc darf sterben?
<mirabile> compat_freebsd darf sterben?
<benz> na gut

in addition, some set shuffling (it was a good idea originally
to pull out gcc3 specifics to the egcs set, but with gcc3 being
the only compiler that isn't it any more)
@
text
@@


1.3
log
@second (piecewise) attempt to merge MirBSD #7ter into HEAD
@
text
@@


1.2
log
@Remove "some dead architectures".

These are all but i386 and x86-64 (which is not in the tree yet),
because I have no machines to work with.

Re-adding support should be fairly easy, just cvs adding a partial
OpenBSD checkout and pulling in stuff like kernel signal patch, humantime,
etc. which got added to i386 as well.

You will need gcc support as well.
@
text
@@


1.2.2.1
log
@o move machine-dependent ATM and PLIP options out of mi space
  in i386 GENERIC kernel
o bring back in all of the sparc32 stuff I could find

maintained by: wbx@@
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

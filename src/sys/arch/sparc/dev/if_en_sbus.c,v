head	1.5;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.1
	tg-mergefixes-1-branch:1.1.1.1.0.4
	tg-mergefixes-1-base:1.1.1.1
	MIROS_X:1.1.1.1.0.2
	MIROS_X_BASE:1.1.1.1
	tg-mergetmp-3:1.1.1.1
	MIRBSD_XP_SPARC:1.3.0.2
	MIRBSD_7quater:1.2.2.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.2.2.1.0.4
	MIRBSD_7:1.2.2.1.0.2
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.2.2.1
	MIRBSD_7_DEV:1.2.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	cvs-200307072125:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307021520:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.11.13.02.25.21;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.15.19.31.45;	author tg;	state dead;
branches;
next	1.3;

1.3
date	2003.12.17.18.28.10;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.06.04.29.56;	author tg;	state dead;
branches
	1.2.2.1;
next	1.1;

1.1
date	2003.03.22.17.50.14;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.50.14;	author tg;	state Exp;
branches;
next	;

1.2.2.1
date	2003.10.23.21.33.14;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@welcome back, sparc
(usr.bin/pmdb was never deleted)
@
text
@/*	$OpenBSD: if_en_sbus.c,v 1.5 2002/04/30 01:12:29 art Exp $	*/
/*	$NetBSD: if_en_sbus.c,v 1.4 1997/05/24 20:16:22 pk Exp $	*/

/*
 *
 * Copyright (c) 1996 Charles D. Cranor and Washington University.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Charles D. Cranor and
 *	Washington University.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *
 * i f _ e n _ s b u s . c  
 *
 * author: Chuck Cranor <chuck@@ccrc.wustl.edu>
 * started: spring, 1996.
 *
 * SBUS glue for the eni155s card.
 */

#include <sys/param.h>
#include <sys/types.h>
#include <sys/device.h>
#include <sys/mbuf.h>
#include <sys/socket.h>
#include <sys/socketvar.h>

#include <net/if.h>

#include <machine/autoconf.h>
#include <machine/cpu.h>

#include <sparc/dev/sbusvar.h>

#include <dev/ic/midwayreg.h>
#include <dev/ic/midwayvar.h>


/*
 * local structures
 */

struct en_sbus_softc {
  /* bus independent stuff */
  struct en_softc esc;		/* includes "device" structure */

  /* sbus glue */
  struct sbusdev sc_sd;		/* sbus device */
  struct intrhand sc_ih;	/* interrupt vectoring */
};

/*
 * local defines (SBUS specific stuff)
 */

#define EN_IPL 5

/*
 * prototypes
 */

static	int en_sbus_match(struct device *, void *, void *);
static	void en_sbus_attach(struct device *, struct device *, void *);

/*
 * SBUS autoconfig attachments
 */

struct cfattach en_sbus_ca = {
    sizeof(struct en_sbus_softc), en_sbus_match, en_sbus_attach,
};

/***********************************************************************/

/*
 * autoconfig stuff
 */

static int en_sbus_match(parent, match, aux)

struct device *parent;
void *match;
void *aux;

{
  struct cfdata *cf = match;
  struct confargs *ca = aux;
  register struct romaux *ra = &ca->ca_ra;

  if (strcmp("ENI-155s", ra->ra_name))
    return 0;
  if (ca->ca_bustype == BUS_SBUS)
    return (1);
  
  return 0;
}


static void en_sbus_attach(parent, self, aux)

struct device *parent, *self;
void *aux;

{
  struct en_softc *sc = (void *)self;
  struct en_sbus_softc *scs = (void *)self;
  struct confargs *ca = aux;
  int lcv, iplcode;

  printf("\n");

  if (CPU_ISSUN4M) {
    printf("%s: sun4m DMA not supported yet\n", sc->sc_dev.dv_xname);
    return;
  }

  sc->en_base = (caddr_t) mapiodev(ca->ca_ra.ra_reg, 0, 4*1024*1024);

  if (ca->ca_ra.ra_nintr == 1) {
    sc->ipl = ca->ca_ra.ra_intr[0].int_pri;
  } else {
    printf("%s: claims to be at the following IPLs: ", sc->sc_dev.dv_xname);
    iplcode = 0;
    for (lcv = 0 ; lcv < ca->ca_ra.ra_nintr ; lcv++) {
      printf("%d ", ca->ca_ra.ra_intr[lcv].int_pri);
      if (EN_IPL == ca->ca_ra.ra_intr[lcv].int_pri)
        iplcode = lcv;
    }
    if (!iplcode) {
      printf("%s: can't find the IPL we want (%d)\n", sc->sc_dev.dv_xname,
		EN_IPL);
      return;
    }
    printf("\n%s: we choose IPL %d\n", sc->sc_dev.dv_xname, EN_IPL);
    sc->ipl = iplcode;
  }
  scs->sc_ih.ih_fun = en_intr;
  scs->sc_ih.ih_arg = sc;
  intr_establish(EN_IPL, &scs->sc_ih, IPL_NET);

  /*
   * done SBUS specific stuff
   */

  en_attach(sc);

}
@


1.4
log
@sparc has to die :(

it was nice while it lasted, but I couldn't even live up to
my promise to provide XFree86 4.4.0 on sparc due to lack of
time (and money and health).

also, compat_freebsd dies, without prejudice.

<mirabile> benz: sparc darf sterben?
<mirabile> compat_freebsd darf sterben?
<benz> na gut

in addition, some set shuffling (it was a good idea originally
to pull out gcc3 specifics to the egcs set, but with gcc3 being
the only compiler that isn't it any more)
@
text
@@


1.3
log
@second (piecewise) attempt to merge MirBSD #7ter into HEAD
@
text
@@


1.2
log
@Remove "some dead architectures".

These are all but i386 and x86-64 (which is not in the tree yet),
because I have no machines to work with.

Re-adding support should be fairly easy, just cvs adding a partial
OpenBSD checkout and pulling in stuff like kernel signal patch, humantime,
etc. which got added to i386 as well.

You will need gcc support as well.
@
text
@@


1.2.2.1
log
@o move machine-dependent ATM and PLIP options out of mi space
  in i386 GENERIC kernel
o bring back in all of the sparc32 stuff I could find

maintained by: wbx@@
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

head	1.2;
access;
symbols
	cvs-200405160640:1.1.1.5
	cvs-200401271800:1.1.1.5
	cvs-200401261630:1.1.1.5
	cvs-200401021645:1.1.1.4
	cvs-200312222040:1.1.1.4
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.2
	cvs-200309261655:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	cvs-200307072125:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307021520:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.04.06.04.29.29;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.50.01;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.50.01;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.09.25.16.35.54;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.10.02.07.39.36;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.12.22.20.59.56;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.01.26.18.42.23;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove "some dead architectures".

These are all but i386 and x86-64 (which is not in the tree yet),
because I have no machines to work with.

Re-adding support should be fairly easy, just cvs adding a partial
OpenBSD checkout and pulling in stuff like kernel signal patch, humantime,
etc. which got added to i386 as well.

You will need gcc support as well.
@
text
@/*	$OpenBSD: board.h,v 1.15 2002/06/04 00:09:08 deraadt Exp $ */
/*
 * Copyright (c) 1996 Nivas Madhur
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Nivas Madhur.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
/*
 * Mach Operating System
 * Copyright (c) 1991 Carnegie Mellon University
 * Copyright (c) 1991 OMRON Corporation
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 */
#ifndef __MACHINE_BOARD_H__
#define __MACHINE_BOARD_H__
/*
 *      VME187 CPU board constants - derived from Luna88k
 */

/*
 * Something to put append a 'U' to a long constant if it's C so that
 * it'll be unsigned in both ANSI and traditional.
 */
#if defined(_LOCORE)
#define U(num)	num
#elif defined(__STDC__)
#define U(num)	num ## U
#else
#define U(num)	num/**/U
#endif
#define UDEFINED

#define MAX_CPUS	4	/* no. of CPUs */
#define MAX_CMMUS	8	/* 2 CMMUs per CPU - 1 data and 1 code */

#define SYSV_BASE	U(0x00000000)	/* system virtual base */

#define MAXU_ADDR	U(0x40000000)	/* size of user virtual space */
#define MAXPHYSMEM	U(0x10000000)	/* max physical memory */

#define VMEA16		U(0xFFFF0000)	/* VMEbus A16 */
#define VMEA16_SIZE	U(0x0000EFFF)	/* VMEbus A16 size */
#define VMEA32D16    	U(0xFF000000)	/* VMEbus A32/D16 */
#define VMEA32D16_SIZE	U(0x007FFFFF)	/* VMEbus A32/D16 size */


/* These need to be here because of the way m18x_cmmu.c 
   handles the CMMU's. */
#define CMMU_SIZE	0x1000

#ifndef CMMU_DEFS
#define CMMU_DEFS
#define SBC_CMMU_I	U(0xFFF77000) 	/* Single Board Computer code CMMU */
#define SBC_CMMU_D	U(0xFFF7F000) 	/* Single Board Computer data CMMU */

#define VME_CMMU_I0	U(0xFFF7E000) 	/* MVME188 code CMMU 0 */
#define VME_CMMU_I1	U(0xFFF7D000) 	/* MVME188 code CMMU 1 */
#define VME_CMMU_I2	U(0xFFF7B000) 	/* MVME188 code CMMU 2 */
#define VME_CMMU_I3	U(0xFFF77000) 	/* MVME188 code CMMU 3 */
#define VME_CMMU_D0	U(0xFFF6F000) 	/* MVME188 data CMMU 0 */
#define VME_CMMU_D1	U(0xFFF5F000) 	/* MVME188 data CMMU 1 */
#define VME_CMMU_D2	U(0xFFF3F000) 	/* MVME188 data CMMU 2 */
#define VME_CMMU_D3	U(0xFFF7F000) 	/* MVME188 data CMMU 3 */
#endif /* CMMU_DEFS */

/* These are the hardware exceptions. */
#define INT_BIT		0x1		/* interrupt exception		*/
#define IACC_BIT	0x2		/* instruction access exception	*/
#define DACC_BIT	0x4		/* data access exception	*/
#define MACC_BIT	0x8		/* misaligned access exception	*/
#define UOPC_BIT	0x10		/* unimplemented opcode exception*/
#define PRIV_BIT	0x20		/* privilege violation exception*/
#define BND_BIT		0x40		/* bounds check violation	*/
#define IDE_BIT		0x80		/* illegal integer divide	*/
#define IOV_BIT		0x100		/* integer overflow exception	*/
#define ERR_BIT		0x200		/* error exception		*/
#define FPUP_BIT	0x400		/* FPU precise exception	*/
#define FPUI_BIT	0x800		/* FPU imprecise exception	*/

/* machine dependant definitions */

#if defined(MVME187) || defined(MVME197)
#include <machine/mvme1x7.h>
#endif
#ifdef MVME187
#include <machine/mvme187.h>
#endif 
#ifdef MVME188
#include <machine/mvme188.h>
#endif
#ifdef MVME197
#include <machine/mvme197.h>
#endif

#endif /* __MACHINE_BOARD_H__ */


@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Release Time. Synchronize with OpenBSD 3.4-current (base system).
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.16 2003/09/16 20:52:19 miod Exp $ */
d51 13
d67 1
a67 1
#define SYSV_BASE	0x00000000	/* system virtual base */
d69 2
a70 2
#define MAXU_ADDR	0x40000000	/* size of user virtual space */
#define MAXPHYSMEM	0x10000000	/* max physical memory */
d72 4
a75 4
#define VMEA16		0xFFFF0000	/* VMEbus A16 */
#define VMEA16_SIZE	0x0000EFFF	/* VMEbus A16 size */
#define VMEA32D16    	0xFF000000	/* VMEbus A32/D16 */
#define VMEA32D16_SIZE	0x007FFFFF	/* VMEbus A32/D16 size */
d84 2
a85 2
#define SBC_CMMU_I	0xFFF77000 	/* Single Board Computer code CMMU */
#define SBC_CMMU_D	0xFFF7F000 	/* Single Board Computer data CMMU */
d87 8
a94 8
#define VME_CMMU_I0	0xFFF7E000 	/* MVME188 code CMMU 0 */
#define VME_CMMU_I1	0xFFF7D000 	/* MVME188 code CMMU 1 */
#define VME_CMMU_I2	0xFFF7B000 	/* MVME188 code CMMU 2 */
#define VME_CMMU_I3	0xFFF77000 	/* MVME188 code CMMU 3 */
#define VME_CMMU_D0	0xFFF6F000 	/* MVME188 data CMMU 0 */
#define VME_CMMU_D1	0xFFF5F000 	/* MVME188 data CMMU 1 */
#define VME_CMMU_D2	0xFFF3F000 	/* MVME188 data CMMU 2 */
#define VME_CMMU_D3	0xFFF7F000 	/* MVME188 data CMMU 3 */
d127 2
@


1.1.1.3
log
@Import OpenBSD source tree again, with critical bug fixes
(OpenSSL, bc, dc, sensorsd, pf, ...)
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.17 2003/09/28 16:01:11 miod Exp $ */
d69 2
d82 1
@


1.1.1.4
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.19 2003/11/09 00:32:00 miod Exp $ */
d65 1
a65 1
/* These need to be here because of the way m18x_cmmu.c
d95 1
a95 1
/* machine dependent definitions */
d102 1
a102 1
#endif
@


1.1.1.5
log
@Import OpenBSD as of today again (seems pretty stable, I hope)

Prominent changes: more bgpd, tcpmd5; tcpdump/isakmpd fixes
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.20 2004/01/19 17:21:23 miod Exp $ */
d47 24
d72 8
a79 2
#define MAX_CPUS	4	/* maximum number of CPUs */
#define MAX_CMMUS	8	/* maximum number of CMMUs */
d81 13
a93 1
#define MAXPHYSMEM	0x30000000	/* maximum physical memory (768MB) */
d95 1
a95 1
/* Board-dependent definitions */
@



head	1.2;
access;
symbols
	cvs-200405160640:1.1.1.11
	cvs-200401271800:1.1.1.10
	cvs-200401261630:1.1.1.10
	cvs-200401021645:1.1.1.10
	cvs-200312222040:1.1.1.9
	cvs-200310020700:1.1.1.8
	cvs-200309271030:1.1.1.8
	cvs-200309261655:1.1.1.8
	cvs-200309251530:1.1.1.7
	cvs-200308302005:1.1.1.7
	cvs-200308171200:1.1.1.6
	ctm-3496:1.1.1.6
	ctm-3449:1.1.1.5
	ctm-3437:1.1.1.5
	cvs-200307191805:1.1.1.5
	ctm-3425:1.1.1.5
	cvs-200307091500:1.1.1.4
	cvs-200307072125:1.1.1.4
	ctm-3389:1.1.1.4
	cvs-200307021520:1.1.1.4
	cvs-200306291430:1.1.1.4
	ctm-3341:1.1.1.4
	cvs-200306082100:1.1.1.4
	ctm-3316:1.1.1.4
	ctm-3272:1.1.1.4
	ctm-3264:1.1.1.3
	cvs-200305071630:1.1.1.2
	ctm-3255:1.1.1.2
	ctm-3229:1.1.1.2
	ctm-3203:1.1.1.2
	cvs-20030410-1130:1.1.1.2
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.04.06.04.28.20;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.49.29;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.49.29;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.10.14.46.30;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.12.16.21.29;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.05.21.19.04.54;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.07.18.13.44.59;	author tg;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.08.11.18.33.48;	author tg;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2003.08.30.23.09.09;	author tg;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2003.09.26.17.05.22;	author tg;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2003.12.22.20.58.45;	author tg;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2004.01.02.17.48.27;	author tg;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2004.05.16.08.41.27;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove "some dead architectures".

These are all but i386 and x86-64 (which is not in the tree yet),
because I have no machines to work with.

Re-adding support should be fairly easy, just cvs adding a partial
OpenBSD checkout and pulling in stuff like kernel signal patch, humantime,
etc. which got added to i386 as well.

You will need gcc support as well.
@
text
@/*	$OpenBSD: sti_sgc.c,v 1.9 2002/03/14 01:26:31 millert Exp $	*/

/*
 * Copyright (c) 2000 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF MIND,
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * These cards has to be known to work so far:
 *	- HPA1991AGrayscale rev 0.02	(705/35) (byte-wide)
 *	- HPA1991AC19       rev 0.02	(715/33) (byte-wide)
 *	- HPA208LC1280      rev 8.04	(712/80) just works
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <uvm/uvm.h>

#include <machine/bus.h>
#include <machine/cpu.h>
#include <machine/iomod.h>
#include <machine/autoconf.h>

#include <dev/wscons/wsdisplayvar.h>
#include <dev/wscons/wsconsio.h>

#include <dev/ic/stireg.h>
#include <dev/ic/stivar.h>

#include <hppa/dev/cpudevs.h>

#define	STI_MEMSIZE	0x1000000

int  sti_sgc_probe(struct device *, void *, void *);
void sti_sgc_attach(struct device *, struct device *, void *);

struct cfattach sti_sgc_ca = {
	sizeof(struct sti_softc), sti_sgc_probe, sti_sgc_attach
};

int
sti_sgc_probe(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	register struct confargs *ca = aux;
	bus_space_handle_t ioh, romh;
	u_int rom;
	u_char devtype;
	int rv = 0, romunmapped = 0;

	if (ca->ca_type.iodc_type != HPPA_TYPE_FIO ||
	    (ca->ca_type.iodc_sv_model != HPPA_FIO_GSGC &&
	     ca->ca_type.iodc_sv_model != HPPA_FIO_SGC))
		return 0;

	if ((rv = bus_space_map(ca->ca_iot, ca->ca_hpa, STI_MEMSIZE, 0, &ioh))) {
#ifdef STIDEBUG
		printf("st: cannot map io space (%d)\n", rv);
#endif
		return 0;
	}

	/*
	 * Locate STI ROM.
	 * On some machines it may not be part of the HPA space.
	 */
	if (PAGE0->pd_resv2[1] < HPPA_IOBEGIN) {
		rom = ca->ca_hpa;
		romh = ioh;
		romunmapped++;
	} else
		rom = PAGE0->pd_resv2[1];

#ifdef STIDEBUG
	printf ("sti: hpa=%x, rom=%x\n", ca->ca_hpa, rom);
#endif

	/* if it does not map, probably part of the lasi space */
	if (rom != ca->ca_hpa &&
	    (rv = bus_space_map(ca->ca_iot, rom, IOMOD_HPASIZE, 0, &romh))) {
#ifdef STIDEBUG
		printf ("sti: cannot map rom space (%d)\n", rv);
#endif
		if ((rom & HPPA_IOBEGIN) == HPPA_IOBEGIN) {
			romh = rom;
			romunmapped++;
		} else {
			/* in this case i have no freaking idea */
			bus_space_unmap(ca->ca_iot, ioh,  STI_MEMSIZE);
			return 0;
		}
	}

#ifdef STIDEBUG
	printf("sti: ioh=%x, romh=%x\n", ioh, romh);
#endif

	devtype = bus_space_read_1(ca->ca_iot, romh, 3);

#ifdef STIDEBUG
	printf("sti: devtype=%d\n", devtype);
#endif
#if 0 /* ignore this for now */
	if ((ca->ca_type.iodc_sv_model == HPPA_FIO_SGC &&
	     STI_ID_HI(STI_TYPE_BWGRF, rioh) == STI_ID_FDDI) ||
	    (devtype != STI_TYPE_BWGRF && devtype != STI_TYPE_WWGRF)) {
#ifdef STIDEBUG
		printf("sti: not a graphics device (%x)\n", devtype);
#endif
	} else
#endif
		rv = 1;

	bus_space_unmap(ca->ca_iot, ioh,  STI_MEMSIZE);
	if (!romunmapped)
		bus_space_unmap(ca->ca_iot, romh, IOMOD_HPASIZE);
	return rv;
}

void
sti_sgc_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct sti_softc *sc = (void *)self;
	struct confargs *ca = aux;
	bus_addr_t addr;
	int rv;

	if (PAGE0->pd_resv2[1] < HPPA_IOBEGIN)
		addr = ca->ca_hpa;
	else
		addr = PAGE0->pd_resv2[1];

	sc->memt = sc->iot = ca->ca_iot;

	if ((rv = bus_space_map(ca->ca_iot, ca->ca_hpa, STI_MEMSIZE, 0,
	    &sc->ioh))) {
#ifdef STIDEBUG
		printf("st: cannot map io space (%d)\n", rv);
#endif
		return;
	}

	/* if it does not map, probably part of the lasi space */
	if (addr == ca->ca_hpa)
		sc->romh = sc->ioh;
	else if ((rv = bus_space_map(ca->ca_iot, addr, IOMOD_HPASIZE, 0, &sc->romh))) {
#ifdef STIDEBUG
		printf ("sti: cannot map rom space (%d)\n", rv);
#endif
		if ((addr & HPPA_IOBEGIN) == HPPA_IOBEGIN)
			sc->romh = addr;
		else {
			/* in this case i have no freaking idea */
			bus_space_unmap(ca->ca_iot, sc->ioh,  STI_MEMSIZE);
			return;
		}
	}

	sc->sc_devtype = bus_space_read_1(sc->iot, sc->romh, 3);
#ifdef STIDEBUG
	printf("sti: hpa=%x, rom=%x\n", ca->ca_hpa, addr);
	printf("sti: ioh=%x, romh=%x\n", sc->ioh, sc->romh);
#endif
	if (ca->ca_hpa == (hppa_hpa_t)PAGE0->mem_cons.pz_hpa)
		sc->sc_flags |= STI_CONSOLE;
	sti_attach_common(sc);
}

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD cvs as of roughly 11:11 UTC today,
or CTM delta 3188/3189/3190.
@
text
@d1 1
a1 1
/*	$OpenBSD: sti_sgc.c,v 1.10 2003/03/29 00:56:08 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 2000-2003 Michael Shalayeff
a58 2
#define	STI_ROMSIZE	0x30000
#define	STI_ID_FDDI	0x280b31af	/* Medusa FDDI ROM id */
d60 1
a60 1
int sti_sgc_probe(struct device *, void *, void *);
a66 4
struct cfattach sti_phantom_ca = {
	sizeof(struct sti_softc), sti_sgc_probe, sti_sgc_attach
};

d72 1
a72 1
	struct confargs *ca = aux;
d74 1
a74 1
	u_int32_t id, rom;
d78 3
a80 9
	if (ca->ca_type.iodc_type != HPPA_TYPE_FIO)
		return (0);

	/* these can only be graphics anyway */
	if (ca->ca_type.iodc_sv_model == HPPA_FIO_GSGC)
		return (1);

	/* these need futher checking for the graphics id */
	if (ca->ca_type.iodc_sv_model != HPPA_FIO_SGC)
d130 4
a133 13
	rv = 1;
	switch (devtype) {
	case STI_DEVTYPE4:
		id = bus_space_read_4(ca->ca_iot, romh, 0x8);
		break;
	case STI_DEVTYPE1:
		id = (bus_space_read_1(ca->ca_iot, romh, 0x10 +  3) << 24) |
		     (bus_space_read_1(ca->ca_iot, romh, 0x10 +  7) << 16) |
		     (bus_space_read_1(ca->ca_iot, romh, 0x10 + 11) <<  8) |
		     (bus_space_read_1(ca->ca_iot, romh, 0x10 + 15));

		break;
	default:
d135 1
a135 1
		printf("sti: unknown type (%x)\n", devtype);
d137 1
a137 6
		rv = 0;
	}

	if (ca->ca_type.iodc_sv_model == HPPA_FIO_SGC && id == STI_ID_FDDI) {
#ifdef STIDEBUG
		printf("sti: not a graphics device\n");
d139 1
a139 2
		rv = 0;
	}
d144 1
a144 1
	return (rv);
a161 3
#ifdef STIDEBUG
	printf("sti: hpa=%x, rom=%x\n", ca->ca_hpa, addr);
#endif
d167 1
a167 1
		printf(": cannot map io space (%d)\n", rv);
d175 4
a178 1
	else if ((rv = bus_space_map(ca->ca_iot, addr, STI_ROMSIZE, 0, &sc->romh))) {
a181 3
#ifdef STIDEBUG
			printf (": cannot map rom space (%d)\n", rv);
#endif
d188 1
d190 1
a192 1
	sc->sc_devtype = bus_space_read_1(sc->iot, sc->romh, 3);
d197 1
@


1.1.1.3
log
@Sync to OpenBSD branch HEAD
@
text
@d1 1
a1 1
/*	$OpenBSD: sti_sgc.c,v 1.11 2003/05/07 18:26:09 mickey Exp $	*/
d58 1
a58 1
#define	STI_MEMSIZE	0x2000000
@


1.1.1.4
log
@Sync MirBSD main source tree against OpenBSD-current,
which should be fairly stable after the Hackathon now.
@
text
@d1 1
a1 1
/*	$OpenBSD: sti_sgc.c,v 1.13 2003/05/20 20:54:43 mickey Exp $	*/
a61 3
#define	STI_INEG_REV	0x60
#define	STI_INEG_PROM	0xf0011000

a72 20
/*
 * Locate STI ROM.
 * On some machines it may not be part of the HPA space.
 */
paddr_t
sti_sgc_getrom(struct confargs *ca)
{
	paddr_t rom;

	if (PAGE0->pd_resv2[1] < HPPA_IOBEGIN)
		if (ca->ca_type.iodc_revision == STI_INEG_REV)
			rom = STI_INEG_PROM;
		else
			rom = ca->ca_hpa;
	else
		rom = PAGE0->pd_resv2[1];

	return (rom);
}

d80 1
a80 2
	paddr_t rom;
	u_int32_t id;
d102 11
a112 1
	rom = sti_sgc_getrom(ca);
a116 5
	if (rom == ca->ca_hpa) {
		romh = ioh;
		romunmapped++;
	}

d181 1
a181 1
	paddr_t addr;
d184 4
a187 1
	addr = sti_sgc_getrom(ca);
@


1.1.1.5
log
@Synchronize source tree with OpenBSD
note: due to recent changes in the codebase of OpenBSD,
out libcom_err will be incompatible with theirs...
but this is no issue because we don't provide a dynamically
linked one, and theirs won't be provided longer any more anyways.
@
text
@d1 1
a1 1
/*	$OpenBSD: sti_sgc.c,v 1.14 2003/07/16 06:42:06 mickey Exp $	*/
d86 1
a86 2
		if (ca->ca_type.iodc_sv_model == HPPA_FIO_GSGC &&
		    ca->ca_type.iodc_revision == STI_INEG_REV)
@


1.1.1.6
log
@Import the complete OpenBSD source tree (base system)
as of CTM delta 3496 (roughly 1200 UTC today) into the
vendor branch.
Attention: this is a big update. Don't even try to
build this system, OpenBSD 3.4-beta, yet on your own.
@
text
@d1 1
a1 1
/*	$OpenBSD: sti_sgc.c,v 1.15 2003/08/11 07:35:39 mickey Exp $	*/
d59 1
a59 1
#define	STI_ROMSIZE	0x8000
d103 1
a103 1
	bus_space_handle_t romh;
d120 7
d132 5
d138 2
a139 1
	if ((rv = bus_space_map(ca->ca_iot, rom, STI_ROMSIZE, 0, &romh))) {
d148 1
d154 1
a154 1
	printf("sti: romh=%x\n", romh);
d181 1
a181 2
	if (rv &&
	    ca->ca_type.iodc_sv_model == HPPA_FIO_SGC && id == STI_ID_FDDI) {
d188 1
d190 1
a190 1
		bus_space_unmap(ca->ca_iot, romh, STI_ROMSIZE);
d201 1
a201 1
	paddr_t rom;
d204 1
a204 1
	rom = sti_sgc_getrom(ca);
d207 1
a207 1
	printf("sti: hpa=%x, rom=%x\n", ca->ca_hpa, rom);
d220 1
a220 1
	if (rom == ca->ca_hpa)
d222 3
a224 3
	else if ((rv = bus_space_map(ca->ca_iot, rom, STI_ROMSIZE, 0, &sc->romh))) {
		if ((rom & HPPA_IOBEGIN) == HPPA_IOBEGIN)
			sc->romh = rom;
@


1.1.1.7
log
@Synchronize with OpenBSD 3.4-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: sti_sgc.c,v 1.16 2003/08/21 18:03:18 mickey Exp $	*/
a61 5
/* gecko optional graphics */
#define	STI_GOPT1_REV	0x17
#define	STI_GOPT2_REV	0x70

/* internal EG */
d81 1
a81 1
sti_sgc_getrom(int unit, struct confargs *ca)
d83 1
a83 1
	paddr_t rom = PAGE0->pd_resv2[1];
d85 1
a85 1
	if (unit) {
a86 10
		    (ca->ca_type.iodc_revision == STI_GOPT1_REV ||
		     ca->ca_type.iodc_revision == STI_GOPT2_REV))
			/* these two share the onboard's prom */ ;
		else
			rom = 0;
	}

	if (rom < HPPA_IOBEGIN) {
		if (unit == 0 &&
		    ca->ca_type.iodc_sv_model == HPPA_FIO_GSGC &&
d91 2
a92 1
	}
a101 1
	struct cfdata *cf = match;
d120 1
a120 1
	rom = sti_sgc_getrom(cf->cf_unit, ca);
d190 1
a190 1
	rom = sti_sgc_getrom(sc->sc_dev.dv_cfdata->cf_unit, ca);
@


1.1.1.8
log
@Import some pieces of OpenBSD changes I unbedingtly wanted to have
@
text
@d1 1
a1 1
/*	$OpenBSD: sti_sgc.c,v 1.17 2003/09/25 22:17:40 mickey Exp $	*/
a234 4

	/* PCXL2: enale accel i/o for this space */
	if (cpu_type == hpcxl2)
		eaio_l2(0x8 >> (((ca->ca_hpa >> 25) & 3) - 2));
@


1.1.1.9
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
/*	$OpenBSD: sti_sgc.c,v 1.20 2003/12/17 05:22:38 mickey Exp $	*/
d58 2
a59 1
#define	STI_ROMSIZE	(sizeof(struct sti_dd) * 4)
d120 1
a120 1
	u_int32_t id, romend;
d127 4
d132 1
a132 2
	if (ca->ca_type.iodc_sv_model != HPPA_FIO_GSGC &&
	    ca->ca_type.iodc_sv_model != HPPA_FIO_SGC)
d149 1
a149 1
			/* in this case nobody has no freaking idea */
d154 4
a166 1
		romend = bus_space_read_4(ca->ca_iot, romh, 0x18);
d173 1
a173 5
		romend =
		     (bus_space_read_1(ca->ca_iot, romh, 0x50 +  3) << 24) |
		     (bus_space_read_1(ca->ca_iot, romh, 0x50 +  7) << 16) |
		     (bus_space_read_1(ca->ca_iot, romh, 0x50 + 11) <<  8) |
		     (bus_space_read_1(ca->ca_iot, romh, 0x50 + 15));
a189 9
	if (ca->ca_naddrs >= sizeof(ca->ca_addrs)/sizeof(ca->ca_addrs[0])) {
		printf("sti: address list overflow\n");
		return (0);
	}

	ca->ca_addrs[ca->ca_naddrs].addr = rom;
	ca->ca_addrs[ca->ca_naddrs].size = round_page(romend);
	ca->ca_naddrs++;

a202 1
	u_int32_t romlen;
d205 5
a210 1
	sc->base = ca->ca_hpa;
d212 12
a223 4
	/* we stashed rom addr/len into the last slot during probe */
	rom = ca->ca_addrs[ca->ca_naddrs - 1].addr;
	romlen = ca->ca_addrs[ca->ca_naddrs - 1].size;
	if ((rv = bus_space_map(ca->ca_iot, rom, romlen, 0, &sc->romh))) {
d227 1
d229 3
d240 3
@


1.1.1.10
log
@Import OpenBSD again, for various reasons.
@
text
@d1 1
a1 1
/*	$OpenBSD: sti_sgc.c,v 1.21 2003/12/22 23:39:06 mickey Exp $	*/
a68 2
extern struct cfdriver sti_cd;

a121 4

	/* due to the graphic nature of this program do probe only one */
	if (cf->cf_unit > sti_cd.cd_ndevs)
		return (0);
@


1.1.1.11
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
/*	$OpenBSD: sti_sgc.c,v 1.22 2004/04/07 18:24:19 mickey Exp $	*/
d15 5
d24 7
a30 8
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
@



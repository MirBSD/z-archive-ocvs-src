head	1.5;
access;
symbols
	tg-mergetmp-mirosx-1:1.5
	tg-mergefixes-1-branch:1.5.0.8
	tg-mergefixes-1-base:1.5
	MIROS_X:1.5.0.6
	MIROS_X_BASE:1.5
	tg-mergetmp-3:1.5
	MIRBSD_XP_MIRPPC:1.5.0.4
	MIRBSD_XP_SPARC_BASE:1.5
	MIRBSD_XP_SPARC:1.5.0.2;
locks; strict;
comment	@ * @;


1.5
date	2004.09.17.19.01.17;	author tg;	state Exp;
branches
	1.5.6.1
	1.5.8.1;
next	1.4;

1.4
date	2004.09.08.18.17.13;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.18.18.10.39;	author tg;	state Stab;
branches;
next	1.2;

1.2
date	2004.05.17.18.24.38;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.07.01.39.31;	author tg;	state Exp;
branches;
next	;

1.5.6.1
date	2005.01.06.16.39.31;	author tg;	state Exp;
branches;
next	;

1.5.8.1
date	2005.01.09.14.27.44;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@use __LP64__ not __machine_is_64_bits
inspired by obsd commit by miod@@
@
text
@/**	$MirBSD: src/include/stdint.h,v 1.4 2004/09/08 18:17:13 tg Exp $ */

/*-
 * Copyright (c) 2004
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publically perform, modi-
 * fy, merge, distribute, sell, give away or sublicence, provided the
 * above copyright notices, these terms and the disclaimer are retai-
 * ned in all redistributions, or reproduced in accompanying documen-
 * tation or other materials provided with binary redistributions.
 *
 * Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
 * any kind, expressed or implied, to the maximum extent permitted by
 * applicable law, but with the warranty of being written without ma-
 * licious intent or gross negligence; in no event shall licensor, an
 * author or contributor be held liable for any damage, direct, indi-
 * rect or other, however caused, arising in any way out of the usage
 * of covered work, even if advised of the possibility of such damage.
 *-
 * "minimal" replacement for ISO C99 "stdint.h" header file (not com-
 * plete yet, but pretty near
 */

#ifndef	_STDINT_H
#define	_STDINT_H

/* get {,u,u_}int8_t definitions and stuff */

#include <machine/types.h>

/* define extended integer types to be the same as basic ones for now */

typedef	int8_t		int_least8_t;
typedef	int16_t		int_least16_t;
typedef	int32_t		int_least32_t;
typedef	int64_t		int_least64_t;
typedef	uint8_t		uint_least8_t;
typedef	uint16_t	uint_least16_t;
typedef	uint32_t	uint_least32_t;
typedef	uint64_t	uint_least64_t;

typedef	int8_t		int_fast8_t;		/* probably int? */
typedef	int16_t		int_fast16_t;		/* probably int? */
typedef	int32_t		int_fast32_t;
typedef	int64_t		int_fast64_t;
typedef	uint8_t		uint_fast8_t;		/* probably unsigned? */
typedef	uint16_t	uint_fast16_t;		/* probably unsigned? */
typedef	uint32_t	uint_fast32_t;
typedef	uint64_t	uint_fast64_t;

/* we don't have 128 bits yet ;-) */

typedef	int64_t		intmax_t;
typedef	uint64_t	uintmax_t;

/* XXX these really belong in <machine/types.h> (maybe create u_register_t) */
typedef long		intptr_t;
typedef unsigned long	uintptr_t;


#if (!defined(__cplusplus)) || defined(__STDC_LIMIT_MACROS)

/* basic types */

#define	INT8_MIN	(-0x7F-1)
#define	INT8_MAX	0x7F
#define	UINT8_MAX	0xFFU

#define	INT16_MIN	(-0x7FFF-1)
#define	INT16_MAX	0x7FFF
#define	UINT16_MAX	0xFFFFU

#define	INT32_MIN	(-0x7FFFFFFF-1)
#define	INT32_MAX	0x7FFFFFFF
#define	UINT32_MAX	0xFFFFFFFFU

#define	INT64_MIN	(-0x7FFFFFFFFFFFFFFF-1)
#define	INT64_MAX	0x7FFFFFFFFFFFFFFF
#define	UINT64_MAX	0xFFFFFFFFFFFFFFFFU

/* minimum types - same as basic types for now */

#define	INT_LEAST8_MIN		INT8_MIN
#define	INT_LEAST8_MAX		INT8_MAX
#define	UINT_LEAST8_MAX		UINT8_MAX

#define	INT_LEAST16_MIN		INT16_MIN
#define	INT_LEAST16_MAX		INT16_MAX
#define	UINT_LEAST16_MAX	UINT16_MAX

#define	INT_LEAST32_MIN		INT32_MIN
#define	INT_LEAST32_MAX		INT32_MAX
#define	UINT_LEAST32_MAX	UINT32_MAX

#define	INT_LEAST64_MIN		INT64_MIN
#define	INT_LEAST64_MAX		INT64_MAX
#define	UINT_LEAST64_MAX	UINT64_MAX

/* fastest types - same as basic types for now */

#define	INT_FAST8_MIN		INT8_MIN
#define	INT_FAST8_MAX		INT8_MAX
#define	UINT_FAST8_MAX		UINT8_MAX

#define	INT_FAST16_MIN		INT16_MIN
#define	INT_FAST16_MAX		INT16_MAX
#define	UINT_FAST16_MAX		UINT16_MAX

#define	INT_FAST32_MIN		INT32_MIN
#define	INT_FAST32_MAX		INT32_MAX
#define	UINT_FAST32_MAX		UINT32_MAX

#define	INT_FAST64_MIN		INT64_MIN
#define	INT_FAST64_MAX		INT64_MAX
#define	UINT_FAST64_MAX		UINT64_MAX

/* pointer types - machdep */

#ifdef	__LP64__
#define	INTPTR_MIN		INT64_MIN
#define	INTPTR_MAX		INT64_MAX
#define	UINTPTR_MAX		UINT64_MAX
#else
#define	INTPTR_MIN		INT32_MIN
#define	INTPTR_MAX		INT32_MAX
#define	UINTPTR_MAX		UINT32_MAX
#endif

/* largest integer - 64 bit for now */

#define	INTMAX_MIN		INT64_MIN
#define	INTMAX_MAX		INT64_MAX
#define	UINTMAX_MAX		UINT64_MAX

/* misc. types */

/* ptrdiff_t is a signed intptr_t */
#define	PTRDIFF_MIN		INTPTR_MIN
#define	PTRDIFF_MAX		INTPTR_MAX

/* sig_atomic_t is an int */
#define	SIG_ATOMIC_MIN		INT32_MIN
#define	SIG_ATOMIC_MAX		INT32_MAX

/* size_t is the same as an uintptr_t */
#define	SIZE_MAX		UINTPTR_MAX

/* wchar_t and wint_t are always int */
#define	WCHAR_MIN		INT32_MIN
#define	WCHAR_MAX		INT32_MAX
#define	WINT_MIN		INT32_MIN
#define	WINT_MAX		INT32_MAX

#endif	/* ndef C++ or def __STDC_LIMIT_MACROS */


/* Apple says when to not define these */

#if (!defined(__cplusplus)) || defined(__STDC_CONSTANT_MACROS)

#define	INT8_C(x)	((int8_t)x)
#define	INT16_C(x)	((int16_t)x)
#define	INT32_C(x)	(x ## L)
#define	INT64_C(x)	(x ## LL)

#define	UINT8_C(x)	((uint8_t)x)
#define	UINT16_C(x)	((uint16_t)x)
#define	UINT32_C(x)	(x ## UL)
#define	UINT64_C(x)	(x ## ULL)

#define	INTMAX_C(x)	(x ## LL)
#define	UINTMAX_C(x)	(x ## ULL)

#endif	/* ndef C++ or def __STDC_CONSTANT_MACROS */

#endif	/* ndef _STDINT_H */
@


1.5.8.1
log
@fold MIROS_X branch
@
text
@d1 1
a1 1
/**	$MirBSD: src/include/stdint.h,v 1.5.6.1 2005/01/06 16:39:31 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2004, 2005
d8 5
a12 5
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
d20 1
a20 1
 * of this work, even if advised of the possibility of such damage.
d57 4
@


1.5.6.1
log
@intptr_t and friends
inspired by net, open and free
@
text
@d1 1
a1 1
/**	$MirBSD: src/share/misc/licence.template,v 1.20 2004/12/03 16:18:37 tg Rel $ */
d4 1
a4 1
 * Copyright (c) 2004, 2005
d8 5
a12 5
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
d20 1
a20 1
 * of this work, even if advised of the possibility of such damage.
d57 4
@


1.4
log
@resolve "stdint.h pulls inttypes.h" problem for once
please test
@
text
@d1 1
a1 1
/**	$MirBSD: src/share/misc/licence.template,v 1.14 2004/08/15 15:29:11 tg Rel $ */
d29 1
a29 1
/* get {,u,u_}int8_t definitions and __machine_is_64_bits */
a31 1
#include <machine/internal_types.h>
d121 1
a121 1
#ifdef	__machine_is_64_bits
@


1.3
log
@fsf says that c99 says that inttypes.h includes stdint.h
WTF HAVE THEY BEEN SMOKING?
@
text
@d1 1
a1 1
/* $MirBSD: src/include/stdint.h,v 1.2 2004/05/17 18:24:38 tg Exp $ */
d3 21
a23 4
/*
 * Minimal implementation of a <stdint.h> include file
 * for the MirOS project, as mandated by C99 standard.
 * Written by Thorsten Glaser <x86@@ePost.de>
d31 1
a31 3
#ifndef _INTTYPES_H_
#include <inttypes.h>
#endif
d45 2
a46 2
typedef	int8_t		int_fast8_t;
typedef	int16_t		int_fast16_t;
d49 2
a50 2
typedef	uint8_t		uint_fast8_t;
typedef	uint16_t	uint_fast16_t;
d59 3
a62 1
/* Apple says when to not define these */
@


1.2
log
@yes, I don't use the "typedef" keyword
in C much, why are you asking, GNU configure?
@
text
@d1 1
a1 1
/* $MirBSD: src/include/stdint.h,v 1.1 2004/05/07 01:39:31 tg Exp $ */
d14 1
d16 1
@


1.1
log
@* write a <stdint.h> header in order to be more C99 compliant
  (not tested against C99 or in compilation yet)
  prodded by Bastian Blank
* while here, unify definition of NULL to ((void *)((_BSD_PTRDIFF_T_)0UL))
  whenever _BSD_PTRDIFF_T_ is available, as done in <sys/param.h> long ago
* while here, add RCS IDs and fix whitespace at end of line
@
text
@d1 1
a1 1
/* $MirBSD$ */
d19 17
a35 17
typedef	int8_t		int_least8_t
typedef	int16_t		int_least16_t
typedef	int32_t		int_least32_t
typedef	int64_t		int_least64_t
typedef	uint8_t		uint_least8_t
typedef	uint16_t	uint_least16_t
typedef	uint32_t	uint_least32_t
typedef	uint64_t	uint_least64_t

typedef	int8_t		int_fast8_t
typedef	int16_t		int_fast16_t
typedef	int32_t		int_fast32_t
typedef	int64_t		int_fast64_t
typedef	uint8_t		uint_fast8_t
typedef	uint16_t	uint_fast16_t
typedef	uint32_t	uint_fast32_t
typedef	uint64_t	uint_fast64_t
d39 2
a40 2
typedef	int64_t		intmax_t
typedef	uint64_t	uintmax_t
@


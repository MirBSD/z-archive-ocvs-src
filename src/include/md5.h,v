head	1.4;
access;
symbols
	tg-mergetmp-mirosx-1:1.4
	tg-mergefixes-1-branch:1.4.0.8
	tg-mergefixes-1-base:1.4
	MIROS_X:1.4.0.6
	MIROS_X_BASE:1.4
	tg-mergetmp-3:1.4
	MIRBSD_XP_MIRPPC:1.4.0.4
	MIRBSD_XP_SPARC_BASE:1.4
	MIRBSD_XP_SPARC:1.4.0.2
	cvs-200406230830:1.1.1.6
	MIRBSD_7quater:1.1.1.3
	cvs-200405160640:1.1.1.5
	cvs-200401271800:1.1.1.4
	cvs-200401261630:1.1.1.4
	cvs-200401021645:1.1.1.4
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.4
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	cvs-200305131745:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2004.06.23.08.41.04;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2004.05.21.21.20.11;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.20.20.16.09;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.44.46;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.44.46;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.29.17.20.29;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.08.11.18.19.22;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.12.22.20.58.15;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.05.16.07.16.35;	author tg;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2004.06.23.08.34.17;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@merge
@
text
@/* $MirBSD: src/include/md5.h,v 1.3 2004/05/21 21:20:11 tg Exp $ */
/* $OpenBSD: md5.h,v 1.16 2004/06/22 01:57:30 jfb Exp $	*/

#ifndef	_MD5_H_
#define	_MD5_H_

#define	MD5_BLOCK_LENGTH		64
#define	MD5_DIGEST_LENGTH		16
#define	MD5_DIGEST_STRING_LENGTH	(MD5_DIGEST_LENGTH * 2 + 1)

typedef struct MD5Context {
	u_int32_t state[4];
	u_int64_t count;
	u_int8_t  buffer[MD5_BLOCK_LENGTH];
} MD5_CTX;

__BEGIN_DECLS
/* low-level MD5 functions from md5c.c */
void	MD5Init(MD5_CTX *);
void	MD5Update(MD5_CTX *, const u_int8_t *, size_t)
		__attribute__((__bounded__(__string__,2,3)));
void	MD5Pad(MD5_CTX *);
void	MD5Final(u_int8_t [MD5_DIGEST_LENGTH], MD5_CTX *)
		__attribute__((__bounded__(__minbytes__,1,MD5_DIGEST_LENGTH)));
void	MD5Transform(u_int32_t [4], const u_int8_t [MD5_BLOCK_LENGTH])
		__attribute__((__bounded__(__minbytes__,1,4)))
		__attribute__((__bounded__(__minbytes__,2,MD5_BLOCK_LENGTH)));

/* high-level functions from mdXhl.c */
char   *MD5End(MD5_CTX *, char *)
		__attribute__((__bounded__(__minbytes__,2,MD5_DIGEST_STRING_LENGTH)));
char   *MD5File(const char *, char *)
		__attribute__((__bounded__(__minbytes__,2,MD5_DIGEST_STRING_LENGTH)));
char   *MD5FileChunk(const char *, char *, off_t, off_t)
		__attribute__((__bounded__(__minbytes__,2,MD5_DIGEST_STRING_LENGTH)));
char   *MD5Data(const u_int8_t *, size_t, char *)
		__attribute__((__bounded__(__string__,1,2)))
		__attribute__((__bounded__(__minbytes__,3,MD5_DIGEST_STRING_LENGTH)));
__END_DECLS

#endif	/* _MD5_H_ */
@


1.3
log
@merge includes; instead of using openbsd new md5.h just make mine
more compatible and add their new declarations
@
text
@d1 2
a2 10
/* $MirBSD: src/include/md5.h,v 1.2 2004/04/20 20:16:09 tg Exp $ */
/* $OpenBSD: md5.h,v 1.15 2004/05/03 17:30:14 millert Exp $	*/

/*
 * Adapted for and from the
 *  Public Domain md5 code by Colin Plumb
 *  Beer-Ware mdXhl code by Poul-Henning Kamp
 *  OpenBSD buffer boundaries by Anil Madhavapeddy
 * by Thorsten Glaser <x86@@ePost.de>
 */
d32 1
a32 1
char   *MD5File(char *, char *)
d34 1
a34 1
char   *MD5FileChunk(char *, char *, off_t, off_t)
@


1.2
log
@preliminarily commit an update of md5 code from rsa's to public domain
code from http://www.fourmilab.ch/md5/
idea From: Todd C. Miller <Todd.Miller@@courtesan.com>
and sent to openbsd for inclusion
@
text
@d1 2
a2 1
/* $MirBSD$ */
d15 3
a17 1
#include <sys/cdefs.h>
d20 3
a22 3
	u_int32_t buf[4];
	u_int32_t bits[2];
	u_int8_t  carry[64];
d28 1
a28 1
void	MD5Update(MD5_CTX *, const unsigned char *, size_t)
d30 4
a33 3
void	MD5Final(unsigned char [16], MD5_CTX *)
		__attribute__((__bounded__(__minbytes__,1,16)));
void	MD5Transform(u_int32_t [4], const u_int8_t [64])
d35 1
a35 1
		__attribute__((__bounded__(__minbytes__,2,64)));
d39 1
a39 1
		__attribute__((__bounded__(__minbytes__,2,33)));
d41 4
a44 2
		__attribute__((__bounded__(__minbytes__,2,33)));
char   *MD5Data(const unsigned char *, size_t, char *)
d46 1
a46 1
		__attribute__((__bounded__(__minbytes__,3,33)));
@


1.1
log
@Initial revision
@
text
@d1 8
a8 2
/* MD5.H - header file for MD5C.C
 * $OpenBSD: md5.h,v 1.7 2002/12/23 04:33:31 millert Exp $
d11 2
a12 2
/* Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All
rights reserved.
d14 1
a14 18
License to copy and use this software is granted provided that it
is identified as the "RSA Data Security, Inc. MD5 Message-Digest
Algorithm" in all material mentioning or referencing this software
or this function.

License is also granted to make and use derivative works provided
that such works are identified as "derived from the RSA Data
Security, Inc. MD5 Message-Digest Algorithm" in all material
mentioning or referencing the derived work.

RSA Data Security, Inc. makes no representations concerning either
the merchantability of this software or the suitability of this
software for any particular purpose. It is provided "as is"
without express or implied warranty of any kind.

These notices must be retained in any copies of any part of this
documentation and/or software.
 */
a15 4
#ifndef _MD5_H_
#define _MD5_H_

/* MD5 context. */
d17 3
a19 3
    u_int32_t state[4];		/* state (ABCD) */
    u_int64_t count;		/* number of bits, modulo 2^64 */
    unsigned char buffer[64];	/* input buffer */
a21 2
#include <sys/cdefs.h>

d23 18
a40 7
void   MD5Init(MD5_CTX *);
void   MD5Update(MD5_CTX *, const unsigned char *, size_t);
void   MD5Final(unsigned char [16], MD5_CTX *);
void   MD5Transform(u_int32_t [4], const unsigned char [64]);
char * MD5End(MD5_CTX *, char *);
char * MD5File(char *, char *);
char * MD5Data(const unsigned char *, size_t, char *);
d43 1
a43 1
#endif /* _MD5_H_ */
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@the previous cvs import did not finish due to 'memory fault'
sync with OpenBSD-cvs
@
text
@d2 1
a2 1
 * $OpenBSD: md5.h,v 1.9 2003/06/26 19:34:17 avsm Exp $
@


1.1.1.3
log
@Import the complete OpenBSD source tree (base system)
as of CTM delta 3496 (roughly 1200 UTC today) into the
vendor branch.
Attention: this is a big update. Don't even try to
build this system, OpenBSD 3.4-beta, yet on your own.
@
text
@d2 1
a2 1
 * $OpenBSD: md5.h,v 1.10 2003/08/01 17:38:33 avsm Exp $
d46 1
a46 2
char * MD5Data(const unsigned char *, size_t, char *)
		__attribute__ ((__bounded__(__string__,3,2)));
@


1.1.1.4
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d2 1
a2 1
 * $OpenBSD: md5.h,v 1.11 2003/10/07 22:17:27 avsm Exp $
d41 5
a45 11
void   MD5Update(MD5_CTX *, const unsigned char *, size_t)
		__attribute__((__bounded__(__string__,2,3)));
void   MD5Final(unsigned char [16], MD5_CTX *)
		__attribute__((__bounded__(__minbytes__,1,16)));
void   MD5Transform(u_int32_t [4], const unsigned char [64])
		__attribute__((__bounded__(__minbytes__,1,4)))
		__attribute__((__bounded__(__minbytes__,2,64)));
char * MD5End(MD5_CTX *, char *)
		__attribute__((__bounded__(__minbytes__,2,33)));
char * MD5File(char *, char *)
		__attribute__((__bounded__(__minbytes__,2,33)));
d47 1
a47 2
		__attribute__((__bounded__(__string__,1,2)))
		__attribute__((__bounded__(__minbytes__,3,33)));
@


1.1.1.5
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 6
a6 1
/*	$OpenBSD: md5.h,v 1.15 2004/05/03 17:30:14 millert Exp $	*/
d8 17
a24 10
/*
 * This code implements the MD5 message-digest algorithm.
 * The algorithm is due to Ron Rivest.  This code was
 * written by Colin Plumb in 1993, no copyright is claimed.
 * This code is in the public domain; do with it what you wish.
 *
 * Equivalent code is available from RSA Data Security, Inc.
 * This code has been tested against that, and is equivalent,
 * except that you don't need to include two pages of legalese
 * with every copy.
d30 1
a30 4
#define	MD5_BLOCK_LENGTH		64
#define	MD5_DIGEST_LENGTH		16
#define	MD5_DIGEST_STRING_LENGTH	(MD5_DIGEST_LENGTH * 2 + 1)

d32 3
a34 3
	u_int32_t state[4];			/* state */
	u_int64_t count;			/* number of bits, mod 2^64 */
	u_int8_t buffer[MD5_BLOCK_LENGTH];	/* input buffer */
d40 2
a41 2
void	 MD5Init(MD5_CTX *);
void	 MD5Update(MD5_CTX *, const u_int8_t *, size_t)
d43 3
a45 4
void	 MD5Pad(MD5_CTX *);
void	 MD5Final(u_int8_t [MD5_DIGEST_LENGTH], MD5_CTX *)
		__attribute__((__bounded__(__minbytes__,1,MD5_DIGEST_LENGTH)));
void	 MD5Transform(u_int32_t [4], const u_int8_t [MD5_BLOCK_LENGTH])
d47 6
a52 8
		__attribute__((__bounded__(__minbytes__,2,MD5_BLOCK_LENGTH)));
char	*MD5End(MD5_CTX *, char *)
		__attribute__((__bounded__(__minbytes__,2,MD5_DIGEST_STRING_LENGTH)));
char	*MD5File(char *, char *)
		__attribute__((__bounded__(__minbytes__,2,MD5_DIGEST_STRING_LENGTH)));
char	*MD5FileChunk(char *, char *, off_t, off_t)
		__attribute__((__bounded__(__minbytes__,2,MD5_DIGEST_STRING_LENGTH)));
char	*MD5Data(const u_int8_t *, size_t, char *)
d54 1
a54 1
		__attribute__((__bounded__(__minbytes__,3,MD5_DIGEST_STRING_LENGTH)));
@


1.1.1.6
log
@We need more current includes for this to work, too.
@
text
@d1 1
a1 1
/*	$OpenBSD: md5.h,v 1.16 2004/06/22 01:57:30 jfb Exp $	*/
d42 1
a42 1
char	*MD5File(const char *, char *)
d44 1
a44 1
char	*MD5FileChunk(const char *, char *, off_t, off_t)
@



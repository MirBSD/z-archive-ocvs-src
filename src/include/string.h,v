head	1.5;
access;
symbols
	tg-mergetmp-mirosx-1:1.5
	tg-mergefixes-1-branch:1.5.0.4
	tg-mergefixes-1-base:1.5
	MIROS_X:1.5.0.2
	MIROS_X_BASE:1.5
	tg-mergetmp-3:1.5
	MIRBSD_XP_MIRPPC:1.4.0.4
	MIRBSD_XP_SPARC_BASE:1.4
	MIRBSD_XP_SPARC:1.4.0.2
	cvs-200406230830:1.1.1.5
	MIRBSD_7quater:1.1.1.4
	cvs-200405160640:1.1.1.4
	cvs-200401271800:1.1.1.4
	cvs-200401261630:1.1.1.4
	cvs-200401021645:1.1.1.4
	MIRBSD_7_ALPHA:1.1.1.4.0.6
	MIRBSD_7:1.1.1.4.0.4
	cvs-200312222040:1.1.1.4
	MIRBSD_7ter:1.1.1.4
	MIRBSD_7_DEV:1.1.1.4.0.2
	cvs-200310020700:1.1.1.4
	cvs-200309271030:1.1.1.4
	cvs-200309251530:1.1.1.4
	cvs-200308302005:1.1.1.4
	cvs-200308171200:1.1.1.4
	ctm-3496:1.1.1.4
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	cvs-200305131745:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.11.22.14.59.34;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.23.08.41.04;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2004.06.13.20.56.39;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.07.01.39.32;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.44.46;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.44.46;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.17.22.07;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.29.17.20.30;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.08.11.18.19.24;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.06.23.08.34.19;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@all:	clean up, delint
time.h:	wrap time_t values which exceed DJB's definition of a tai64_t
	into the "invalid / reserved" area of the MirOS tai64_t so that
	it can transparenly convert between these two
	(macro versions only; the C versions still truncate correctly)
@
text
@/**	$MirBSD$ */
/*	$OpenBSD: string.h,v 1.14 2004/06/20 17:47:07 avsm Exp $	*/
/*	$NetBSD: string.h,v 1.6 1994/10/26 00:56:30 cgd Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)string.h	5.10 (Berkeley) 3/9/91
 */

#ifndef _STRING_H_
#define	_STRING_H_

#include <machine/ansi.h>

#ifdef	_BSD_SIZE_T_
typedef	_BSD_SIZE_T_	size_t;
#undef	_BSD_SIZE_T_
#endif

#ifndef NULL
#ifdef 	__GNUG__
#define	NULL	__null
#elif defined(lint)
#define	NULL	0
#else
#define	NULL	((void *)((_BSD_PTRDIFF_T_)0UL))
#endif
#endif

#include <sys/cdefs.h>

__BEGIN_DECLS
void	*memchr(const void *, int, size_t);
int	 memcmp(const void *, const void *, size_t);
void	*memcpy(void *, const void *, size_t)
		__attribute__ ((__bounded__(__buffer__,1,3)))
		__attribute__ ((__bounded__(__buffer__,2,3)));
void	*memmove(void *, const void *, size_t)
		__attribute__ ((__bounded__(__buffer__,1,3)))
		__attribute__ ((__bounded__(__buffer__,2,3)));
void	*memset(void *, int, size_t)
		__attribute__ ((__bounded__(__buffer__,1,3)));
char	*strcat(char *, const char *);
char	*strchr(const char *, int);
int	 strcmp(const char *, const char *);
int	 strcoll(const char *, const char *);
char	*strcpy(char *, const char *);
size_t	 strcspn(const char *, const char *);
char	*strerror(int);
int	 strerror_r(int, char *, size_t)
		__attribute__ ((__bounded__(__string__,2,3)));
size_t	 strlen(const char *);
char	*strncat(char *, const char *, size_t)
		__attribute__ ((__bounded__(__string__,1,3)));
int	 strncmp(const char *, const char *, size_t);
char	*strncpy(char *, const char *, size_t)
		__attribute__ ((__bounded__(__string__,1,3)));
char	*strpbrk(const char *, const char *);
char	*strrchr(const char *, int);
size_t	 strspn(const char *, const char *);
char	*strstr(const char *, const char *);
char	*strtok(char *, const char *);
char	*strtok_r(char *, const char *, char **);
size_t	 strxfrm(char *, const char *, size_t)
		__attribute__ ((__bounded__(__string__,1,3)));

/* Nonstandard routines */
#if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE)
int	 bcmp(const void *, const void *, size_t);
void	 bcopy(const void *, void *, size_t)
		__attribute__ ((__bounded__(__buffer__,1,3)))
		__attribute__ ((__bounded__(__buffer__,2,3)));
void	 bzero(void *, size_t)
		__attribute__ ((__bounded__(__buffer__,1,2)));
int	 ffs(int);
char	*index(const char *, int);
void	*memccpy(void *, const void *, int, size_t)
		__attribute__ ((__bounded__(__buffer__,1,4)));
char	*rindex(const char *, int);
int	 strcasecmp(const char *, const char *);
char	*strdup(const char *);
size_t	 strlcat(char *, const char *, size_t)
		__attribute__ ((__bounded__(__string__,1,3)));
size_t	 strlcpy(char *, const char *, size_t)
		__attribute__ ((__bounded__(__string__,1,3)));
void	 strmode(int, char *);
int	 strncasecmp(const char *, const char *, size_t);
char	*strsep(char **, const char *);
char	*strsignal(int);
#endif
__END_DECLS

#endif /* _STRING_H_ */
@


1.4
log
@merge
@
text
@d1 3
a3 3
/* $MirBSD: src/include/string.h,v 1.3 2004/06/13 20:56:39 tg Exp $ */
/* $OpenBSD: string.h,v 1.14 2004/06/20 17:47:07 avsm Exp $	*/
/* $NetBSD: string.h,v 1.6 1994/10/26 00:56:30 cgd Exp $	*/
d46 1
a46 1
#ifndef	NULL
d49 2
@


1.3
log
@* regenerate generated files (MAKEDEV, syscalls)
* regenerate i386->FLOPPY and sparc->GENERIC manually
* remove sun4 support from sparc kernel, because our CFLAGS
  prevent v7 from working anyways
* patch in Claudio Jeker's tap-for-tun diff, and fix his
  spelling and whitespace-at-eol (he delivers good KNF tho)
* move cccp.1 manpage to where gcc-local.1 landed as well
  (the FSF COPYING is a bit more restrictive, but easy enough;
  we have worse things in usr.sbin/?????/)
* bcopy, bcmp, bzero removal
* memcpy -> memmove where memcpy() is not available
* overhaul of headers (bcopy, too)
* a bunch more NULL and time_t fixes
@
text
@d1 2
a2 2
/* $MirBSD: src/include/string.h,v 1.2 2004/05/07 01:39:32 tg Exp $ */
/* $OpenBSD: string.h,v 1.13 2003/08/01 17:38:33 avsm Exp $	*/
d95 1
@


1.2
log
@* write a <stdint.h> header in order to be more C99 compliant
  (not tested against C99 or in compilation yet)
  prodded by Bastian Blank
* while here, unify definition of NULL to ((void *)((_BSD_PTRDIFF_T_)0UL))
  whenever _BSD_PTRDIFF_T_ is available, as done in <sys/param.h> long ago
* while here, add RCS IDs and fix whitespace at end of line
@
text
@d1 3
a3 3
/*	$MirBSD$ */
/*	$OpenBSD: string.h,v 1.13 2003/08/01 17:38:33 avsm Exp $	*/
/*	$NetBSD: string.h,v 1.6 1994/10/26 00:56:30 cgd Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$OpenBSD: string.h,v 1.9 2002/11/21 20:42:39 marc Exp $	*/
d17 1
a17 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d38 1
d50 1
a50 1
#define	NULL	0L
d59 8
a66 3
void	*memcpy(void *, const void *, size_t);
void	*memmove(void *, const void *, size_t);
void	*memset(void *, int, size_t);
d74 2
a75 1
int	 strerror_r(int, char *, size_t);
d77 2
a78 1
char	*strncat(char *, const char *, size_t);
d80 2
a81 1
char	*strncpy(char *, const char *, size_t);
d88 2
a89 1
size_t	 strxfrm(char *, const char *, size_t);
d94 4
a97 2
void	 bcopy(const void *, void *, size_t);
void	 bzero(void *, size_t);
d100 2
a101 1
void	*memccpy(void *, const void *, int, size_t);
d105 4
a108 2
size_t	 strlcat(char *, const char *, size_t);
size_t	 strlcpy(char *, const char *, size_t);
d113 1
a113 1
#endif 
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
/*	$OpenBSD: string.h,v 1.10 2003/06/02 19:34:12 millert Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1.1.3
log
@the previous cvs import did not finish due to 'memory fault'
sync with OpenBSD-cvs
@
text
@d1 1
a1 1
/*	$OpenBSD: string.h,v 1.12 2003/06/26 19:34:17 avsm Exp $	*/
@


1.1.1.4
log
@Import the complete OpenBSD source tree (base system)
as of CTM delta 3496 (roughly 1200 UTC today) into the
vendor branch.
Attention: this is a big update. Don't even try to
build this system, OpenBSD 3.4-beta, yet on your own.
@
text
@d1 1
a1 1
/*	$OpenBSD: string.h,v 1.13 2003/08/01 17:38:33 avsm Exp $	*/
d57 3
a59 8
void	*memcpy(void *, const void *, size_t)
		__attribute__ ((__bounded__(__buffer__,1,3)))
		__attribute__ ((__bounded__(__buffer__,2,3)));
void	*memmove(void *, const void *, size_t)
		__attribute__ ((__bounded__(__buffer__,1,3)))
		__attribute__ ((__bounded__(__buffer__,2,3)));
void	*memset(void *, int, size_t)
		__attribute__ ((__bounded__(__buffer__,1,3)));
d67 1
a67 2
int	 strerror_r(int, char *, size_t)
		__attribute__ ((__bounded__(__string__,2,3)));
d69 1
a69 2
char	*strncat(char *, const char *, size_t)
		__attribute__ ((__bounded__(__string__,1,3)));
d71 1
a71 2
char	*strncpy(char *, const char *, size_t)
		__attribute__ ((__bounded__(__string__,1,3)));
d78 1
a78 2
size_t	 strxfrm(char *, const char *, size_t)
		__attribute__ ((__bounded__(__string__,1,3)));
d83 2
a84 4
void	 bcopy(const void *, void *, size_t)
		__attribute__ ((__bounded__(__buffer__,2,3)));
void	 bzero(void *, size_t)
		__attribute__ ((__bounded__(__buffer__,1,2)));
d87 1
a87 2
void	*memccpy(void *, const void *, int, size_t)
		__attribute__ ((__bounded__(__buffer__,1,4)));
d91 2
a92 4
size_t	 strlcat(char *, const char *, size_t)
		__attribute__ ((__bounded__(__string__,1,3)));
size_t	 strlcpy(char *, const char *, size_t)
		__attribute__ ((__bounded__(__string__,1,3)));
@


1.1.1.5
log
@We need more current includes for this to work, too.
@
text
@d1 1
a1 1
/*	$OpenBSD: string.h,v 1.14 2004/06/20 17:47:07 avsm Exp $	*/
a92 1
		__attribute__ ((__bounded__(__buffer__,1,3)))
@



head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.3
	tg-mergefixes-1-branch:1.1.1.3.0.8
	tg-mergefixes-1-base:1.1.1.3
	MIROS_X:1.1.1.3.0.6
	MIROS_X_BASE:1.1.1.3
	tg-mergetmp-3:1.1.1.3
	MIRBSD_XP_MIRPPC:1.1.1.3.0.4
	MIRBSD_XP_SPARC_BASE:1.1.1.3
	MIRBSD_XP_SPARC:1.1.1.3.0.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.17.46.45;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.46.45;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.17.25.53;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.12.22.21.07.12;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!/bin/sh -
#	$OpenBSD: makelist,v 1.4 2002/02/16 21:27:26 millert Exp $
#	$NetBSD: makelist,v 1.3 1997/01/11 06:48:00 lukem Exp $
#
# Copyright (c) 1992, 1993
#	The Regents of the University of California.  All rights reserved.
#
# This code is derived from software contributed to Berkeley by
# Christos Zoulas of Cornell University.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	@@(#)makelist	5.3 (Berkeley) 6/4/93

# makelist.sh: Automatically generate header files...

AWK=/usr/bin/awk
USAGE="Usage: $0 -h|-e|-fc|-fh|-bc|-bh <filenames>" 

if [ "x$1" = "x" ]
then
    echo $USAGE 1>&2
    exit 1
fi

FLAG="$1"
shift

FILES="$@@"

case $FLAG in
-h)
    set - `echo $FILES | sed -e 's/\\./_/g'`
    hdr="_h_`basename $1`"
    cat $FILES | $AWK '
	BEGIN {
	    printf("/* Automatically generated file, do not edit */\n");
	    printf("#ifndef %s\n#define %s\n", "'$hdr'", "'$hdr'");
	}
	/\(\):/ {
	    pr = substr($2, 1, 2);
	    if (pr == "vi" || pr == "em" || pr == "ed") {
		name = substr($2, 1, length($2) - 3);
		printf("protected el_action_t\t%-25.25s(EditLine *, int);\n", name);
	    }
	}
	END {
	    printf("#endif /* %s */\n", "'$hdr'");
	}';;
-bc)
    cat $FILES | $AWK '
	BEGIN {
	    printf("/* Automatically generated file, do not edit */\n");
	    printf("#include \"sys.h\"\n#include \"el.h\"\n");
	    printf("private struct el_bindings_t el_func_help[] = {\n");
	    low = "abcdefghijklmnopqrstuvwxyz_";
	    high = "ABCDEFGHIJKLMNOPQRSTUVWXYZ_";
	    for (i = 1; i <= length(low); i++)
		tr[substr(low, i, 1)] = substr(high, i, 1);
	}
	/\(\):/ {
	    pr = substr($2, 1, 2);
	    if (pr == "vi" || pr == "em" || pr == "ed") {
		name = substr($2, 1, length($2) - 3);
		uname = "";
		fname = "";
		for (i = 1; i <= length(name); i++) {
		    s = substr(name, i, 1);
		    uname = uname tr[s];
		    if (s == "_")
			s = "-";
		    fname = fname s;
		}
		     
		printf("    { %-30.30s %-30.30s\n","\"" fname "\",", uname ",");
		ok = 1; 
	    }
	}
	/^ \*/ {
	    if (ok) {
		printf("      \"");
		for (i = 2; i < NF; i++)
		    printf("%s ", $i);
		printf("%s\" },\n", $i);
		ok = 0;
	    }
	}
	END {
	    printf("    { NULL, 0, NULL }\n");
	    printf("};\n");
	    printf("\nprotected el_bindings_t* help__get()");
	    printf("{ return el_func_help; }\n");
	}';;
-bh)
    $AWK '
	BEGIN { 
	    printf("/* Automatically generated file, do not edit */\n");
	    printf("#ifndef _h_help_c\n#define _h_help_c\n");
	    printf("protected el_bindings_t *help__get\t(void);\n");
	    printf("#endif /* _h_help_c */\n");
	}' /dev/null;;
-fh)
    cat $FILES | $AWK '/el_action_t/ { print $3 }' | \
    sort | tr '[a-z]' '[A-Z]' | $AWK '
	BEGIN { 
	    printf("/* Automatically generated file, do not edit */\n");
	    printf("#ifndef _h_fcns_c\n#define _h_fcns_c\n");
	    count = 0; 
	}
	{ 
	    printf("#define\t%-30.30s\t%3d\n", $1, count++);
	}
	END {
	    printf("#define\t%-30.30s\t%3d\n", "EL_NUM_FCNS", count);

	    printf("typedef el_action_t (*el_func_t)(EditLine *, int);");
	    printf("\nprotected el_func_t* func__get(void);\n");
	    printf("#endif /* _h_fcns_c */\n");
	}';;
-fc)
    cat $FILES | $AWK '/el_action_t/ { print $3 }' | sort | $AWK '
	BEGIN {
	    printf("/* Automatically generated file, do not edit */\n");
	    printf("#include \"sys.h\"\n#include \"el.h\"\n");
	    printf("private el_func_t el_func[] = {");
	    maxlen = 80;
	    needn = 1;
	    len = 0;
	}
	{
	    clen = 25 + 2;
	    len += clen;
	    if (len >= maxlen) 
		needn = 1;
	    if (needn) {
		printf("\n    ");
		needn = 0;
		len = 4 + clen;
	    }
	    s = $1 ",";
	    printf("%-26.26s ", s);
	}
	END {
	    printf("\n};\n");
	    printf("\nprotected el_func_t* func__get() { return el_func; }\n");
	}';;
-e)
	echo "$FILES" | tr ' ' '\012' | $AWK '
	BEGIN {
	    printf("/* Automatically generated file, do not edit */\n");
	    printf("#define protected static\n");
	    printf("#define SCCSID\n");
	}
	{
	    printf("#include \"%s\"\n", $1);
	}';;
*)
    echo $USAGE 1>&2
    exit 1;;
esac
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d2 1
a2 1
#	$OpenBSD: makelist,v 1.5 2003/06/02 20:18:40 millert Exp $
d19 5
a23 1
# 3. Neither the name of the University nor the names of its contributors
@


1.1.1.3
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d2 2
a3 2
#	$OpenBSD: makelist,v 1.6 2003/10/31 08:42:24 otto Exp $
#	$NetBSD: makelist,v 1.8 2003/03/10 21:21:10 christos Exp $
d19 1
a19 5
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
d39 2
a40 2
AWK=awk
USAGE="Usage: $0 -h|-e|-fc|-fh|-bc|-bh|-m <filenames>"
a53 3

#	generate foo.h file from foo.c
#
d66 1
a66 5
#
# XXX:	need a space between name and prototype so that -fc and -fh
#	parsing is much easier
#
		printf("protected el_action_t\t%s (EditLine *, int);\n", name);
d71 1
a71 5
	}'
	;;

#	generate help.c from various .c files
#
d77 1
a77 1
	    printf("private const struct el_bindings_t el_func_help[] = {\n");
d96 1
a96 1

d98 1
a98 1
		ok = 1;
d113 1
a113 1
	    printf("\nprotected const el_bindings_t* help__get()");
d115 1
a115 5
	}'
	;;

#	generate help.h from various .c files
#
d118 1
a118 1
	BEGIN {
d121 1
a121 1
	    printf("protected const el_bindings_t *help__get(void);\n");
d123 1
a123 5
	}' /dev/null
	;;

#	generate fcns.h from various .h files
#
d127 1
a127 1
	BEGIN {
d130 1
a130 1
	    count = 0;
d132 1
a132 1
	{
d139 1
a139 1
	    printf("\nprotected const el_func_t* func__get(void);\n");
d141 1
a141 5
	}'
	;;

#	generate fcns.c from various .h files
#
d147 1
a147 1
	    printf("private const el_func_t el_func[] = {");
d155 1
a155 1
	    if (len >= maxlen)
d167 2
a168 6
	    printf("\nprotected const el_func_t* func__get() { return el_func; }\n");
	}'
	;;

#	generate editline.c from various .c files
#
d178 1
a178 41
	}'
	;;

#	generate man page fragment from various .c files
#
-m)
    cat $FILES | $AWK '
	BEGIN {
	    printf(".\\\" Section automatically generated with makelist\n");
	    printf(".Bl -tag -width 4n\n");
	}
	/\(\):/ {
	    pr = substr($2, 1, 2);
	    if (pr == "vi" || pr == "em" || pr == "ed") {
		name = substr($2, 1, length($2) - 3);
		fname = "";
		for (i = 1; i <= length(name); i++) {
		    s = substr(name, i, 1);
		    if (s == "_")
			s = "-";
		    fname = fname s;
		}

		printf(".It Ic %s\n", fname);
		ok = 1;
	    }
	}
	/^ \*/ {
	    if (ok) {
		for (i = 2; i < NF; i++)
		    printf("%s ", $i);
		printf("%s.\n", $i);
		ok = 0;
	    }
	}
	END {
	    printf(".El\n");
	    printf(".\\\" End of section automatically generated with makelist\n");
	}'
	;;

d181 1
a181 3
    exit 1
    ;;

@



head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.2
	tg-mergefixes-1-branch:1.1.1.2.0.14
	tg-mergefixes-1-base:1.1.1.2
	MIROS_X:1.1.1.2.0.12
	MIROS_X_BASE:1.1.1.2
	tg-mergetmp-3:1.1.1.2
	MIRBSD_XP_MIRPPC:1.1.1.2.0.10
	MIRBSD_XP_SPARC_BASE:1.1.1.2
	MIRBSD_XP_SPARC:1.1.1.2.0.8
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	cvs-200305071630:1.1.1.2
	ctm-3255:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-3203:1.1.1.2
	cvs-20030410-1130:1.1.1.2
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.47.05;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.47.05;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.10.14.41.40;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $Id: r1r2.c,v 1.8 2001/08/02 17:02:05 rees Exp $ */

/*
copyright 1999
the regents of the university of michigan
all rights reserved

permission is granted to use, copy, create derivative works 
and redistribute this software and such derivative works 
for any purpose, so long as the name of the university of 
michigan is not used in any advertising or publicity 
pertaining to the use or distribution of this software 
without specific, written prior authorization.  if the 
above copyright notice or any other identification of the 
university of michigan is included in any copy of any 
portion of this software, then the disclaimer below must 
also be included.

this software is provided as is, without representation 
from the university of michigan as to its fitness for any 
purpose, and without warranty by the university of 
michigan of any kind, either express or implied, including 
without limitation the implied warranties of 
merchantability and fitness for a particular purpose. the 
regents of the university of michigan shall not be liable 
for any damages, including special, indirect, incidental, or 
consequential damages, with respect to any claim arising 
out of or in connection with the use of the software, even 
if it has been or is hereafter advised of the possibility of 
such damages.
*/

/*
 * Return text for a given pair of sw1/sw2 status bytes
 */

#ifdef __palmos__
#include <Common.h>
#include <System/SysAll.h>
#include <System/Unix/sys_types.h>
#include <System/Unix/unix_stdlib.h>
#include <System/Unix/unix_string.h>
#include <UI/UIAll.h>
#include "field.h"
#else
#include <stdio.h>
#endif

#include "sectok.h"

static char *scsws(int sw);

static struct r1r2s {
    int sw;
    char *s;
} r1r2s[] = {
    {0x9000, "ok"},

    /* sectok errors */
    {0x0601, "no such tty"},
    {0x0602, "out of memory"},
    {0x0603, "timeout"},
    {0x0604, "slag!"},
    {0x0605, "card type not supported"},
    {0x0606, "no card in reader"},
    {0x0607, "not implemented"},
    {0x0608, "error loading driver"},
    {0x0609, "communications error"},
    {0x060a, "reader not open"},
    {0x060c, "config conflict"},
    {0x060d, "unknown error"},

    /* card errors */
    {0x61ff, "ok; response available %x"},
    {0x6234, "no such method"},
    {0x6239, "out of memory"},
    {0x6255, "null pointer"},
    {0x6257, "array index out of bounds"},
    {0x6258, "index out of bounds"},
    {0x6281, "rec is corrupt"},
    {0x6283, "invalid file"},
    {0x6300, "auth failed"},
    {0x6381, "invalid key"},
    {0x67ff, "invalid length; should be %x"},
    {0x6980, "bad param"},
    {0x6982, "permission denied"},
    {0x6983, "auth method blocked"},
    {0x6984, "data invalid"},
    {0x6985, "no file selected"},
    {0x6987, "busy/SM missing"},
    {0x6988, "SM wrong"},
    {0x6a80, "invalid file type"},
    {0x6a81, "function not supported"},
    {0x6a82, "file not found"},
    {0x6a83, "no such rec"},
    {0x6b00, "wrong mode"},
    {0x6cff, "wrong length; should be %x"},
    {0x6d00, "unknown instruction"},
    {0x6e00, "wrong class"},
    {0x6f14, "invalid applet state"},
    {0x6f15, "invalid state"},
    {0x6f19, "applet already running"},
    {0x6fb0, "uninitialized key"},
    {0x9481, "bad state"},
    {0x0000, NULL}
};

#ifdef TEST
main(int ac, char *av[])
{
    int sw;
    char *s;

    if (ac != 2) {
	fprintf(stderr, "usage: %s sw (in hex, please)\n", av[0]);
	exit(1);
    }
    sscanf(av[1], "%x", &sw);
    sectok_print_sw(sw);
    exit(0);
}
#endif

void sectok_print_sw(int sw)
{
    printf("%s\n", sectok_get_sw(sw));
}

char *sectok_get_sw(int sw)
{
    char *s;
    static char buf[64];

    s = scsws(sw);
    if (s)
	sprintf(buf, "%04x %s", sw, s);
    else
	sprintf(buf, "%04x", sw);
    return buf;
}

static char *scsws(int sw)
{
    int i, r1 = sectok_r1(sw), r2 = sectok_r2(sw), tr1, tr2;
    static char buf[64];

    for (i = 0; r1r2s[i].s; i++) {
	tr1 = sectok_r1(r1r2s[i].sw);
	tr2 = sectok_r2(r1r2s[i].sw);
	if (tr1 == r1 && (tr2 == r2 || tr2 == 0xff))
	    break;
    }

    if (sectok_r2(r1r2s[i].sw) != 0xff)
	return r1r2s[i].s;
    sprintf(buf, r1r2s[i].s, r2);
    return buf;
}

#ifndef __palmos__
int
sectok_fdump_reply(FILE *f, unsigned char *p, int n, int sw)
{
    int i;

    for (i = 0; i < n; i++)
	fprintf(f, "%d:%x ", i + 1, p[i]);
    if (n)
	fprintf(f, "\n");
    if (sw)
	fprintf(f, "%s\n", sectok_get_sw(sw));
    return n;
}

int
sectok_dump_reply(unsigned char *p, int n, int sw)
{
    return sectok_fdump_reply(stdout, p, n, sw);
}
#else
int
sectok_dump_reply(unsigned char *p, int n, int sw)
{
    int i;

    hidefield(printfield->id);
    for (i = 0; i < n; i++)
	palmprintf("%d:%x ", i + 1, p[i]);
    if (n)
	palmprintf("\n");
    if (sw)
	palmprintf("%s\n", sectok_get_sw(sw));
    showfield(printfield->id);
    return n;
}
#endif
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD cvs as of roughly 11:11 UTC today,
or CTM delta 3188/3189/3190.
@
text
@d1 1
a1 1
/* $Id: r1r2.c,v 1.9 2003/04/02 22:57:51 deraadt Exp $ */
d136 1
a136 1
	snprintf(buf, sizeof buf, "%04x %s", sw, s);
d138 1
a138 1
	snprintf(buf, sizeof buf, "%04x", sw);
d156 1
a156 1
    snprintf(buf, sizeof buf, r1r2s[i].s, r2);
@


head	1.2;
access;
symbols
	tg-mergetmp-mirosx-1:1.2
	tg-mergefixes-1-branch:1.2.0.4
	tg-mergefixes-1-base:1.2
	MIROS_X:1.2.0.2
	MIROS_X_BASE:1.2
	expat-1_95_8:1.1.3.2
	expat-1_95_6:1.1.3.1
	tg:1.1.3
	cvs-200410141645:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.10.22.23.51.36;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.14.20.54.41;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.3.1;
next	;

1.1.1.1
date	2004.10.14.20.54.41;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2004.10.22.23.33.49;	author tg;	state Exp;
branches;
next	1.1.3.2;

1.1.3.2
date	2004.10.22.23.35.47;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@foolish attempt at merger
@
text
@/* internal.h

   Internal definitions used by Expat.  This is not needed to compile
   client code.

   The following calling convention macros are defined for frequently
   called functions:

   FASTCALL    - Used for those internal functions that have a simple
                 body and a low number of arguments and local variables.

   PTRCALL     - Used for functions called though function pointers.

   PTRFASTCALL - Like PTRCALL, but for low number of arguments.

   inline      - Used for selected internal functions for which inlining
                 may improve performance on some platforms.

   Note: Use of these macros is based on judgement, not hard rules,
         and therefore subject to change.
*/

#if defined(__GNUC__) && defined(__i386__)
/* We'll use this version by default only where we know it helps.

   regparm() generates warnings on Solaris boxes.   See SF bug #692878.

   Instability reported with egcs on a RedHat Linux 7.3.
   Let's comment out:
   #define FASTCALL __attribute__((stdcall, regparm(3)))
   and let's try this:
*/
#define FASTCALL __attribute__((regparm(3)))
#define PTRFASTCALL __attribute__((regparm(3)))
#endif

/* Using __fastcall seems to have an unexpected negative effect under
   MS VC++, especially for function pointers, so we won't use it for
   now on that platform. It may be reconsidered for a future release
   if it can be made more effective.
   Likely reason: __fastcall on Windows is like stdcall, therefore
   the compiler cannot perform stack optimizations for call clusters.
*/

/* Make sure all of these are defined if they aren't already. */

#ifndef FASTCALL
#define FASTCALL
#endif

#ifndef PTRCALL
#define PTRCALL
#endif

#ifndef PTRFASTCALL
#define PTRFASTCALL
#endif

#ifndef XML_MIN_SIZE
#if !defined(__cplusplus) && !defined(inline)
#ifdef __GNUC__
#define inline __inline
#endif /* __GNUC__ */
#endif
#endif /* XML_MIN_SIZE */

#ifdef __cplusplus
#define inline inline
#else
#ifndef inline
#define inline
#endif
#endif
@


1.1
log
@Initial revision
@
text
@d23 7
a29 3
#if defined(__GNUC__)
/* Instability reported with egcs on a RedHat Linux 7.3.
   Let's comment it out:
a33 1
#define PTRCALL
d35 1
a36 1
#elif defined(WIN32)
a43 3
#define FASTCALL
#define PTRCALL
#define PTRFASTCALL
d45 1
a45 1
#endif
@


1.1.3.1
log
@vendor-branch-ify libexpat with obsd srcs
@
text
@@


1.1.3.2
log
@most current libexpat
@
text
@d23 3
a25 7
#if defined(__GNUC__) && defined(__i386__)
/* We'll use this version by default only where we know it helps.

   regparm() generates warnings on Solaris boxes.   See SF bug #692878.

   Instability reported with egcs on a RedHat Linux 7.3.
   Let's comment out:
d30 1
a31 1
#endif
d33 1
d41 3
d45 1
a45 1
/* Make sure all of these are defined if they aren't already. */
@


1.1.1.1
log
@openbsd imported libexpat into base
@
text
@@

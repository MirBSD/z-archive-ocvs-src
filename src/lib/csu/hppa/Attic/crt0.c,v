head	1.2;
access;
symbols
	cvs-200410141645:1.1.1.4
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	cvs-200312222040:1.1.1.3
	cvs-200310231600:1.1.5.1
	netbsd:1.1.5
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.04.12.20.54.40;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.46.01;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.5.1;
next	;

1.1.1.1
date	2003.03.22.17.46.01;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.17.23.40;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.12.22.21.05.47;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.10.14.17.14.54;	author tg;	state Exp;
branches;
next	;

1.1.5.1
date	2003.10.23.16.06.41;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove more non-x86-32 from src
@
text
@/*	$OpenBSD: crt0.c,v 1.6 2003/02/28 18:05:51 deraadt Exp $	*/

/*
 * Copyright (c) 2001 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

int	global __asm ("$global$") = 0;
int	sh_func_adrs __asm ("$$sh_func_adrs") = 0;

#if defined(LIBC_SCCS) && !defined(lint)
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.6 2003/02/28 18:05:51 deraadt Exp $";
#endif /* LIBC_SCCS and not lint */

#include <sys/syscall.h>
#include <sys/fcntl.h>
#include <sys/exec.h>
#include <stdlib.h>
#include <paths.h>

#include "common.h"

typedef char Obj_Entry;

/*
 * Lots of the chunks of this file cobbled together from pieces of
 * other OpenBSD crt files, including the common code.
 */

char	**environ;

extern void	__init(void);
extern void	__fini(void);

#ifdef MCRT0
extern void	monstartup(u_long, u_long);
extern void	_mcleanup(void);
extern unsigned char etext, eprol;
#endif /* MCRT0 */

void __start(char **, void (*)(void), const Obj_Entry *);
static char *__strrchr(const char *p, char ch);

void
__start(sp, cleanup, obj)
	char **sp;
	void (*cleanup)(void);			/* from shared loader */
	const Obj_Entry *obj;			/* from shared loader */
{
	struct ps_strings *arginfo = (struct ps_strings *)sp;
	char **argv, *namep;
	char *s;

	__asm __volatile (".import $global$, data\n\t"
			  "ldil L%%$global$, %%r27\n\t"
			  "ldo	R%%$global$(%%r27), %%r27" ::: "r27");

	argv = arginfo->ps_argvstr;
	environ = arginfo->ps_envstr;
	if ((namep = argv[0]) != NULL) {	/* NULL ptr if argc = 0 */
		if ((__progname = _strrchr(namep, '/')) == NULL)
			__progname = namep;
		else
			__progname++;
		for (s = __progname_storage; *__progname &&
		    s < &__progname_storage[sizeof __progname_storage - 1]; )
			*s++ = *__progname++;
		*s = '\0';
		__progname = __progname_storage;
	}

#ifdef MCRT0
	atexit(_mcleanup);
	monstartup((u_long)&eprol, (u_long)&etext);
#endif

	__init();

	exit(main(arginfo->ps_nargvstr, argv, environ));
}

static char *
__strrchr(const char *p, char ch)
{
	char *save;

	for (save = NULL;; ++p) {
		if (*p == ch)
			save = (char *)p;
		if (!*p)
			return(save);
	}
}

#ifdef MCRT0
__asm (".export eprol, entry\n\t.label eprol");
#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.5.1
log
@Import NetBSD lib/csu into vendor branch to ease future updates
@
text
@d1 1
a1 1
/*	$NetBSD: crt0.c,v 1.4 2003/10/06 05:28:05 matt Exp $	*/
d4 1
a4 3
 * Copyright (c) 2002 Matt Fredette
 * Copyright (c) 1999 Klaus Klein
 * Copyright (c) 1995 Christopher G. Demetriou
d6 1
a6 1
 * 
d17 1
a17 3
 *          This product includes software developed for the
 *          NetBSD Project.  See http://www.NetBSD.org/ for
 *          information about NetBSD.
d20 1
a20 1
 * 
d24 8
a31 9
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * <<Id: LICENSE,v 1.2 2000/06/14 15:57:33 cgd Exp>>
d34 13
d49 1
a49 1
int	__global __asm ("$global$") = 0;
d51 9
a59 6
static void ___start __P((struct ps_strings *,
    void (*cleanup) __P((void)), const Obj_Entry *, int)) 
#ifdef __GNUC__
    __attribute__((__unused__))
#endif
    ;
d61 13
a73 20
__asm("\n"
"	.text				\n"
"	.align	4			\n"
"	.globl	_start			\n"
"	.globl	_start			\n"
"	.type	__start,@@function	\n"
"	.type	__start,@@function	\n"
"_start:				\n"
"__start:				\n"
"	.import	$global$, data		\n"
"	ldil	L%$global$, %r27	\n"
"	ldo	R%$global$(%r27), %r27	\n"
"	copy	%r27, %r19		\n"
"	b	___start		\n"
"	copy	%r27, %arg3		\n");

static void
___start(ps_strings, cleanup, obj, dp)
	struct ps_strings *ps_strings;
	void (*cleanup) __P((void));		/* from shared loader */
a74 1
	int dp;
d76 13
a88 11
	int argc;
	char **argv;
	int fini_plabel[2];

	argc = ps_strings->ps_nargvstr;
	argv = ps_strings->ps_argvstr;
	environ = ps_strings->ps_envstr;

	if ((__progname = argv[0]) != NULL) {	/* NULL ptr if argc = 0 */
		if ((__progname = _strrchr(__progname, '/')) == NULL)
			__progname = argv[0];
d91 5
a97 29
	if (ps_strings != (struct ps_strings *)0)
		__ps_strings = ps_strings;

#ifdef DYNAMIC
	/*
	 * XXX fredette - when not compiling PIC, you currently 
	 * can't detect an undefined weak symbol by seeing if 
	 * its address is NULL.  The compiler emits code to find 
	 * _DYNAMIC relative to %dp, the assembler notes the 
	 * needed relocations, but when the linker sees that the 
	 * (weak) symbol isn't defined it drops the ball - the 
	 * relocations are never filled, and the binary ends up 
	 * with code that sees an address of %dp plus zero, 
	 * which != NULL.
	 *
	 * Arguably the linker could/should distinguish between
	 * code that is after a weak undefined symbol's contents 
	 * from code that is after its address.  In the first case, 
	 * it would warn and/or bail.  In the second case, it 
	 * would fix up instructions to give a symbol address
	 * of NULL.
	 *
	 * For now, we take the easy way out and compare &_DYNAMIC 
	 * to %dp, as well as to NULL.
	 */
	if (&_DYNAMIC != NULL && (int)&_DYNAMIC != dp)
		_rtld_setup(cleanup, obj);
#endif

d100 1
a100 1
	monstartup((u_long)&_eprol, (u_long)&_etext);
d103 1
a103 25
	/*
	 * Since crt0.o, crtbegin.o, and crtend.o are always
	 * compiled PIC, they must have %r19 set correctly on
	 * entry to any function they contain.  However, when
	 * a program is linked statically, the linker does
	 * not fill a PLABEL relocation with a pointer to a 
	 * true PLABEL, it just fills it with the offset of the
	 * function.  This shows the linker's assumption that 
	 * when linking statically, *all* of the code has *not* 
	 * been compiled PIC.  I guess to assume otherwise
	 * would be a performance hit, as you would end up
	 * with unnecessary PLABELs for function pointers.
	 *
	 * But here, passing the address of the PIC _fini to
	 * atexit, we must make sure that we pass a PLABEL.
	 */
	fini_plabel[0] = (int)_fini;
	if (fini_plabel[0] & 2)
		/* _fini is already a PLABEL. */
		atexit(_fini);
	else {
		fini_plabel[1] = dp;
		atexit((void (*)(void))(((int)fini_plabel) | 2));
	}
	_init();
d105 1
a105 1
	exit(main(argc, argv, environ));
d108 12
a119 6
/*
 * NOTE: Leave the RCS ID _after_ __start(), in case it gets placed in .text.
 */
#if defined(LIBC_SCCS) && !defined(lint)
__RCSID("$NetBSD: crt0.c,v 1.4 2003/10/06 05:28:05 matt Exp $");
#endif /* LIBC_SCCS and not lint */
d121 3
a123 1
#include "common.c"
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.8 2003/06/04 04:43:56 deraadt Exp $	*/
d15 5
d38 1
a38 1
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.8 2003/06/04 04:43:56 deraadt Exp $";
a40 1
#include <sys/param.h>
d47 2
a69 3
char *__progname = "";
char __progname_storage[NAME_MAX+1];

d87 1
a87 1
		if ((__progname = __strrchr(namep, '/')) == NULL)
@


1.1.1.3
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.9 2003/12/04 23:10:37 mickey Exp $	*/
d33 1
a33 1
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.9 2003/12/04 23:10:37 mickey Exp $";
a66 23
void __start(char **sp, void (*cleanup)(void), const Obj_Entry *obj);

__asm(
	".import $global$, data\n\t"
	".import ___start, code\n\t"
	".text\n\t"
	".align	4\n\t"
	".export _start, entry\n\t"
	".export __start, entry\n\t"
	".type	_start,@@function\n\t"
	".type	__start,@@function\n\t"
	".label _start\n\t"
	".label __start\n\t"
	".proc\n\t"
	".callinfo frame=0, calls\n\t"
	".entry\n\t"
	"ldil	L%$global$, %r27\n\t"
	".call\n\t"
	"b	___start\n\t"
	"ldo	R%$global$(%r27), %r27\n\t"
	".exit\n\t"
	".procend\n\t");

d68 1
a68 1
___start(sp, cleanup, obj)
d76 4
@


1.1.1.4
log
@newer obsd startup files
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.10 2004/06/01 21:06:17 mickey Exp $	*/
d30 1
d33 1
a33 1
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.10 2004/06/01 21:06:17 mickey Exp $";
@



head	1.5;
access;
symbols
	MIRBSD_5:1.3;
locks; strict;
comment	@ * @;


1.5
date	2003.07.06.00.56.10;	author tg;	state dead;
branches;
next	1.4;

1.4
date	2003.06.30.13.42.20;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.24.15.36.09;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.24.15.32.37;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.04.24.15.22.48;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@switch the CSU system over to NetBSD style
@
text
@/*	$MirBSD: crt0.c,v 1.4 2003/06/30 13:42:20 tg Exp $	*/
/*	$OpenBSD: crt0.c,v 1.10 2003/04/17 03:44:59 drahn Exp $	*/
/*	$NetBSD: crt0.c,v 1.20 1995/06/03 13:16:08 pk Exp $	*/

/*
 * Copyright (c) 1995 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#if defined(LIBC_SCCS) && !defined(lint)
static const char rcsid[] = "$MirBSD: crt0.c,v 1.4 2003/06/30 13:42:20 tg Exp $";
#endif /* LIBC_SCCS and not lint */

#include <sys/param.h>
#include <sys/exec.h>
#include <stdlib.h>

char	**environ;
char	*__progname = "";

char	__progname_storage[NAME_MAX+1];

#ifdef MCRT0
extern void	monstartup(u_long, u_long);
extern void	_mcleanup(void);
extern unsigned char _etext, _eprol;
#endif /* MCRT0 */

extern void	_init(void);
extern void	_fini(void);
static char	*_strrchr(char *, char);

__asm("	.text\n\t"
	".align	4\n\t"
	".globl	__start\n\t"
	".globl	_start\n\t"
	"_start:\n\t"
	"__start:\n\t"
	"pushl	%ebx\n\t"		/* ps_strings */
	"pushl	%ecx\n\t"		/* obj */
	"pushl	%edx\n\t"		/* cleanup */
	"movl	12(%esp),%eax\n\t"
	"leal	20(%esp,%eax,4),%ecx\n\t"
	"leal	16(%esp),%edx\n\t"
	"pushl	%ecx\n\t"
	"pushl	%edx\n\t"
	"pushl	%eax\n\t"
	"call	___start");

int main(int, char **, char **);
void ___start(int argc, char **argv, char **envp, void (*cleanup)(void),
    const void *obj, struct ps_strings *ps_strings);

void
___start(int argc, char **argv, char **envp, void (*cleanup)(void),
    const void *obj, struct ps_strings *ps_strings)
{
	char *namep;
	char *s;

        environ = envp;

	if ((namep = argv[0]) != NULL) {	/* NULL ptr if argc = 0 */
		if ((__progname = _strrchr(namep, '/')) == NULL)
			__progname = namep;
		else
			++__progname;
		for (s = __progname_storage; *__progname &&
		    s < &__progname_storage[sizeof __progname_storage - 1]; )
			*s++ = *__progname++;
		*s = '\0';
		__progname = __progname_storage;
	}

#ifdef MCRT0
	atexit(_mcleanup);
	monstartup((u_long)&_eprol, (u_long)&_etext);
#endif

	atexit(_fini);
	_init();

	exit(main(argc, argv, environ));
}

static char *
_strrchr(p, ch)
register char *p, ch;
{
	register char *save;

	for (save = NULL;; ++p) {
		if (*p == ch)
			save = (char *)p;
		if (!*p)
			return(save);
	}
/* NOTREACHED */
}

#ifdef MCRT0
asm ("	.text");
asm ("_eprol:");
#endif
@


1.4
log
@fix prototype, include
@
text
@d1 1
a1 1
/*	$MirBSD: crt0.c,v 1.3 2003/04/24 15:36:09 tg Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$MirBSD: crt0.c,v 1.3 2003/04/24 15:36:09 tg Exp $";
@


1.3
log
@make the style of the files a bit more unique
and add RCS Ids
@
text
@d1 1
a1 1
/*	$MirBSD: crt0.c,v 1.2 2003/04/24 15:32:37 tg Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$MirBSD: crt0.c,v 1.2 2003/04/24 15:32:37 tg Exp $";
d41 1
d77 2
d81 2
a82 7
___start(argc, argv, envp, cleanup, obj, ps_strings)
	int argc;
	char **argv;
	char **envp;
	void (*cleanup)(void);			/* from shared loader */
	const void *obj;			/* from shared loader */
	struct ps_strings *ps_strings;
@


1.2
log
@re-add Makefile that got accidentally deleted
change the order in which ctors and dtors were processed,
to match pre-existing behaviour and not NetBSD one
@
text
@d1 1
a1 1
/*	$MirBSD: crt0.c,v 1.1 2003/04/24 15:22:48 tg Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$MirBSD: crt0.c,v 1.1 2003/04/24 15:22:48 tg Exp $";
a42 2
static char	*_strrchr(char *, char);

d46 1
a46 1
char __progname_storage[NAME_MAX+1];
d56 1
@


1.1
log
@remove a.out files (common.* and c++rt*)
merge md/mi into single file, may be ifdef'd later
ease compilation
@
text
@d1 1
a1 1
/*	$MirBSD: crt0.c,v 1.6 2003/04/24 11:04:01 tg Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$MirBSD: crt0.c,v 1.6 2003/04/24 11:04:01 tg Exp $";
d60 3
a62 3
	".align  4\n\t"
	".globl  __start\n\t"
	".globl  _start\n\t"
d65 10
a74 10
	"pushl   %ebx\n\t"		/* ps_strings */
	"pushl   %ecx\n\t"		/* obj */
	"pushl   %edx\n\t"		/* cleanup */
	"movl    12(%esp),%eax\n\t"
	"leal    20(%esp,%eax,4),%ecx\n\t"
	"leal    16(%esp),%edx\n\t"
	"pushl   %ecx\n\t"
	"pushl   %edx\n\t"
	"pushl   %eax\n\t"
	"call    ___start");
a113 1

@


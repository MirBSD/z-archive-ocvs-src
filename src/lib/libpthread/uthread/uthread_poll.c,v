head	1.5;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.5
	tg-mergefixes-1-branch:1.1.1.5.0.4
	tg-mergefixes-1-base:1.1.1.5
	MIROS_X:1.1.1.5.0.2
	MIROS_X_BASE:1.1.1.5
	tg-mergetmp-3:1.1.1.5
	cvs-200412031430:1.1.1.5
	MIRBSD_XP_MIRPPC:1.4.0.4
	MIRBSD_XP_SPARC_BASE:1.4
	MIRBSD_XP_SPARC:1.4.0.2
	cvs-200406230735:1.1.1.4
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.4
	cvs-200401271800:1.1.1.4
	cvs-200401261630:1.1.1.4
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.12.03.14.42.50;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.01.27.17.41.59;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2004.01.03.02.26.23;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.27.11.15.14;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.47.05;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.47.05;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.22.21.07.42;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.01.02.17.57.57;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.01.26.18.22.05;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.12.03.14.36.39;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@merge
@
text
@/**	$MirBSD$ */
/*	$OpenBSD: uthread_poll.c,v 1.11 2004/11/30 00:14:51 pat Exp $	*/
/*
 * Copyright (c) 1999 Daniel Eischen <eischen@@vigrid.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Daniel Eischen.
 * 4. Neither the name of the author nor the names of any co-contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY DANIEL EISCHEN AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $FreeBSD: uthread_poll.c,v 1.4 1999/08/30 00:02:08 deischen Exp $
 */
#include <unistd.h>
#include <errno.h>
#include <string.h>
#include <poll.h>
#include <sys/types.h>
#include <sys/time.h>
#include <sys/fcntl.h>
#ifdef _THREAD_SAFE
#include <pthread.h>
#include "pthread_private.h"


int
poll(struct pollfd fds[], nfds_t nfds, int timeout)
{
	struct pthread	*curthread = _get_curthread();
	struct timespec	ts;
	nfds_t		n, numfds = nfds;
	int             ret = 0;
	struct pthread_poll_data data;

	/* This is a cancellation point: */
	_thread_enter_cancellation_point();

	if (numfds > (nfds_t)_thread_dtablesize) {
		numfds = _thread_dtablesize;
	}
	/* Check if a timeout was specified: */
	if (timeout == INFTIM) {
		/* Wait for ever: */
		_thread_kern_set_timeout(NULL);
	} else if (timeout > 0) {
		/* Convert the timeout in msec to a timespec: */
		ts.tv_sec = timeout / 1000;
		ts.tv_nsec = (timeout % 1000) * 1000000;

		/* Set the wake up time: */
		_thread_kern_set_timeout(&ts);
	} else if (timeout < 0) {
		/* a timeout less than zero but not == INFTIM is invalid */
		errno = EINVAL;
		_thread_leave_cancellation_point();
		return (-1);
	}

	if (((ret = _thread_sys_poll(fds, numfds, 0)) == 0) && (timeout != 0)) {
		data.nfds = numfds;
		data.fds = fds;

		/*
		 * Clear revents in case of a timeout which leaves fds
		 * unchanged:
		 */
		for (n = 0; n < numfds; n++) {
			fds[n].revents = 0;
		}

		curthread->data.poll_data = &data;
		curthread->interrupted = 0;
		_thread_kern_sched_state(PS_POLL_WAIT, __FILE__, __LINE__);
		if (curthread->interrupted) {
			errno = EINTR;
			ret = -1;
		} else {
			ret = data.nfds;
		}
	}

	/* No longer in a cancellation point: */
	_thread_leave_cancellation_point();

	return (ret);
}
#endif
@


1.4
log
@first part of mergeing OpenBSD and fixing whitespace and RCS IDs
@
text
@d1 2
a2 2
/*	$MirBSD: uthread_poll.c,v 1.3 2004/01/03 02:26:23 tg Exp $	*/
/*	$OpenBSD: uthread_poll.c,v 1.10 2004/01/19 17:53:38 millert Exp $	*/
d77 1
@


1.3
log
@Merge OpenBSD
@
text
@d1 2
a2 2
/*	$MirBSD: uthread_poll.c,v 1.2 2003/12/27 11:15:14 tg Exp $	*/
/*	$OpenBSD: uthread_poll.c,v 1.9 2004/01/01 08:19:33 brad Exp $	*/
d53 1
a53 1
	nfds_t		numfds = nfds;
a54 1
	unsigned int	i;
d60 1
a60 1
	if ((unsigned)numfds > (unsigned)_thread_dtablesize) {
d88 2
a89 2
		for (i = 0; i < numfds; i++) {
			fds[i].revents = 0;
@


1.2
log
@make libs build
@
text
@d1 2
a2 2
/*	$MirBSD$	*/
/*	$OpenBSD: uthread_poll.c,v 1.8 2003/12/10 23:10:08 millert Exp $	*/
d58 3
d103 3
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$OpenBSD: uthread_poll.c,v 1.7 2002/01/10 00:38:39 fgsch Exp $	*/
d48 2
a49 2
int 
poll(struct pollfd fds[], int nfds, int timeout)
d53 3
a55 2
	int		numfds = nfds;
	int             i, ret = 0;
d58 1
a58 1
	if (numfds > _thread_dtablesize) {
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_poll.c,v 1.8 2003/12/10 23:10:08 millert Exp $	*/
d48 1
a48 1
poll(struct pollfd fds[], nfds_t nfds, int timeout)
d52 1
a52 1
	nfds_t		numfds = nfds;
@


1.1.1.3
log
@Import OpenBSD again, for various reasons.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_poll.c,v 1.9 2004/01/01 08:19:33 brad Exp $	*/
a55 3
	/* This is a cancellation point: */
	_thread_enter_cancellation_point();

a97 3

	/* No longer in a cancellation point: */
	_thread_leave_cancellation_point();
@


1.1.1.4
log
@Import OpenBSD as of today again (seems pretty stable, I hope)

Prominent changes: more bgpd, tcpmd5; tcpdump/isakmpd fixes
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_poll.c,v 1.10 2004/01/19 17:53:38 millert Exp $	*/
d52 2
a53 2
	nfds_t		n, numfds = nfds;
	int             ret = 0;
d59 1
a59 1
	if (numfds > (nfds_t)_thread_dtablesize) {
d87 2
a88 2
		for (n = 0; n < numfds; n++) {
			fds[n].revents = 0;
@


1.1.1.5
log
@your daily dose of bugfixes and security updates from obsd
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_poll.c,v 1.11 2004/11/30 00:14:51 pat Exp $	*/
a75 1
		_thread_leave_cancellation_point();
@



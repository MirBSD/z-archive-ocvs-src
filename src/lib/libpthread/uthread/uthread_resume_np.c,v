head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.2
	tg-mergefixes-1-branch:1.1.1.2.0.8
	tg-mergefixes-1-base:1.1.1.2
	MIROS_X:1.1.1.2.0.6
	MIROS_X_BASE:1.1.1.2
	tg-mergetmp-3:1.1.1.2
	cvs-200412031430:1.1.1.2
	MIRBSD_XP_MIRPPC:1.1.1.2.0.4
	MIRBSD_XP_SPARC_BASE:1.1.1.2
	MIRBSD_XP_SPARC:1.1.1.2.0.2
	cvs-200406230735:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.47.05;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.47.05;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.05.16.09.27.17;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: uthread_resume_np.c,v 1.5 2001/12/19 02:02:52 fgsch Exp $	*/
/*
 * Copyright (c) 1995 John Birrell <jb@@cimlogic.com.au>.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by John Birrell.
 * 4. Neither the name of the author nor the names of any co-contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY JOHN BIRRELL AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $FreeBSD: uthread_resume_np.c,v 1.7 1999/08/28 00:03:44 peter Exp $
 */
#include <errno.h>
#ifdef _THREAD_SAFE
#include <pthread.h>
#include "pthread_private.h"

/* Resume a thread: */
int
pthread_resume_np(pthread_t thread)
{
	int	ret;
	enum	pthread_susp old_suspended;

	/* Find the thread in the list of active threads: */
	if ((ret = _find_thread(thread)) == 0) {
		/* Cancel any pending suspensions: */
		old_suspended = thread->suspended;
		thread->suspended = SUSP_NO;

		/* Is it currently suspended? */
		if (thread->state == PS_SUSPENDED) {
			/*
			 * Defer signals to protect the scheduling queues
			 * from access by the signal handler:
			 */
			_thread_kern_sig_defer();

			switch (old_suspended) {
			case SUSP_MUTEX_WAIT:
				/* Set the thread's state back. */
				PTHREAD_SET_STATE(thread,PS_MUTEX_WAIT);
				break;
			case SUSP_COND_WAIT:
				/* Set the thread's state back. */
				PTHREAD_SET_STATE(thread,PS_COND_WAIT);
				break;
			case SUSP_JOIN:
				/* Set the thread's state back. */
				PTHREAD_SET_STATE(thread,PS_JOIN);
				break;
			case SUSP_NOWAIT:
				/* Allow the thread to run. */
				PTHREAD_SET_STATE(thread,PS_RUNNING);
				PTHREAD_WAITQ_REMOVE(thread);
				PTHREAD_PRIOQ_INSERT_TAIL(thread);
				break;
			case SUSP_NO:
			case SUSP_YES:
				/* Allow the thread to run. */
				PTHREAD_SET_STATE(thread,PS_RUNNING);
				PTHREAD_PRIOQ_INSERT_TAIL(thread);
				break;
			}

			/*
			 * Undefer and handle pending signals, yielding if
			 * necessary:
			 */
			_thread_kern_sig_undefer();
		}
	}
	return(ret);
}
#endif
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_resume_np.c,v 1.6 2004/05/01 22:15:10 marc Exp $	*/
a39 2
static void	resume_common(struct pthread *, enum pthread_susp);

d61 26
a86 1
			resume_common(thread, old_suspended);
a95 63
}

void
pthread_resume_all_np(void)
{
	struct pthread		*curthread = _get_curthread();
	struct pthread		*thread;
	enum pthread_susp 	old_suspended;

	/*
	 * Defer signals to protect the scheduling queues from access
	 * by the signal handler:
	 */
	_thread_kern_sig_defer();

	TAILQ_FOREACH(thread, &_thread_list, tle) {
		if (thread != curthread) {
			/* Cancel any pending suspensions: */
                	old_suspended = thread->suspended;
                	thread->suspended = SUSP_NO;

                	/* Is it currently suspended? */
                	if (thread->state == PS_SUSPENDED)
				resume_common(thread, old_suspended);
		}
	}

	/*
	 * Undefer and handle pending signals, yielding if necessary:
	 */
	_thread_kern_sig_undefer();
}

static void
resume_common(struct pthread *thread, enum pthread_susp old_suspended)
{
	switch (old_suspended) {
	case SUSP_MUTEX_WAIT:
		/* Set the thread's state back. */
		PTHREAD_SET_STATE(thread,PS_MUTEX_WAIT);
		break;
	case SUSP_COND_WAIT:
		/* Set the thread's state back. */
		PTHREAD_SET_STATE(thread,PS_COND_WAIT);
		break;
	case SUSP_JOIN:
		/* Set the thread's state back. */
		PTHREAD_SET_STATE(thread,PS_JOIN);
		break;
	case SUSP_NOWAIT:
		/* Allow the thread to run. */
		PTHREAD_SET_STATE(thread,PS_RUNNING);
		PTHREAD_WAITQ_REMOVE(thread);
		PTHREAD_PRIOQ_INSERT_TAIL(thread);
		break;
	case SUSP_NO:
	case SUSP_YES:
		/* Allow the thread to run. */
		PTHREAD_SET_STATE(thread,PS_RUNNING);
		PTHREAD_PRIOQ_INSERT_TAIL(thread);
		break;
	}

@


head	1.2;
access;
symbols
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.06.23.08.24.25;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.47.02;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.47.02;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* more or less automatic merge
* RCS IDs into .comment section
* whitespace police
@
text
@/* $OpenBSD: thread_storage.c,v 1.6 2002/11/05 22:19:55 marc Exp $ */
/* Public Domain */

/*
 * libpthread's stronger functions
 */

#include <stdlib.h>
#include <pthread.h>
#include <string.h>
#include "pthread_private.h"

void
_libc_private_storage_lock(mutex)
        pthread_mutex_t *mutex;
{
	if (__isthreaded && pthread_mutex_lock(mutex) != 0)
		PANIC("_libc_private_storage_lock");
}

void
_libc_private_storage_unlock(mutex)
        pthread_mutex_t *mutex;
{
	if (__isthreaded && pthread_mutex_unlock(mutex) != 0)
		PANIC("_libc_private_storage_unlock");
}

void *
_libc_private_storage(volkey, init, initsz, error)
	volatile struct _thread_private_key_struct * volkey;
	void *	init;
	size_t	initsz;
	void *	error;
{
	void *result;
	void (*cleanfn)(void *);
	struct _thread_private_key_struct * key;

	/* Use static storage while not threaded: */
	if (!__isthreaded)
		return init;

	key = (struct _thread_private_key_struct *)volkey;	/* for gcc */

	/* Create the key once: */
	if (volkey->once.state == PTHREAD_NEEDS_INIT) {
		if (pthread_mutex_lock(&key->once.mutex) != 0)
			return error;
		if (volkey->once.state == PTHREAD_NEEDS_INIT) {
			if (key->cleanfn == NULL)
				cleanfn = free;
			else
				cleanfn = key->cleanfn;
			if (pthread_key_create(&key->key, cleanfn) != 0) {
				pthread_mutex_unlock(&key->once.mutex);
				return error;
			}
			key->once.state = PTHREAD_DONE_INIT;
		}
		pthread_mutex_unlock(&key->once.mutex);
	}

	/* XXX signals may cause re-entrancy here? */

	/* Acquire this key's thread-specific storage: */
	result = pthread_getspecific(key->key);

	/* Allocate and initialise storage if unallocated: */
	if (result == NULL) {
		result = malloc(initsz);
		if (result == NULL)
			return error;
		if (pthread_setspecific(key->key, result) != 0) {
			free(result);
			return error;
		}
		memcpy(result, init, initsz);
	}

	return result;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

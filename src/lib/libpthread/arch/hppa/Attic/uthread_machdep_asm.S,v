head	1.2;
access;
symbols
	cvs-200412031430:1.1.1.1
	cvs-200406230735:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	cvs-200312222040:1.1.1.1
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.22.14.07.35;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.47.01;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.47.01;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge CVS import stuff
@
text
@/*	$OpenBSD: uthread_machdep_asm.S,v 1.2 2003/01/16 19:16:02 mickey Exp $	*/
/*	Michael Shalayeff <mickey@@openbsd.org>. Public Domain. */

#include <machine/asm.h>
#define	_LOCORE
#include <machine/frame.h>

#define	FRAMESIZE	0x60

/*
 * void _thread_machdep_init(statep, base, len, entry)
 *	struct _machdep_state *statep;
 *	void *base;
 *	int len;
 *	void (*entry)(void);
 */
ENTRY(_thread_machdep_init,FRAMESIZE)
	ldo	7(arg1), arg1
	dep	r0, 31, 3, arg1
	ldo	FRAMESIZE(arg1), t1
	stw	t1, 0(arg0)
	stw	arg1, 4(arg0)
	bv	r0(rp)
	stw	arg3, 0(arg1)
EXIT(_thread_machdep_init)

/*
 * void _thread_machdep_switch(newstate, oldstate);
 *	struct _machdep_state *newstate, *oldstate;
 */
ENTRY(_thread_machdep_switch,0)
	copy	sp, t1
	ldo	FRAMESIZE(sp), sp
	stw	sp, 0(arg1)
	stw	t1, 4(arg1)
	stw	 r2, 0x00(t1)
	stw	 r3, 0x04(t1)
	stw	 r4, 0x08(t1)
	stw	 r5, 0x0c(t1)
	stw	 r6, 0x10(t1)
	stw	 r7, 0x14(t1)
	stw	 r8, 0x18(t1)
	stw	 r9, 0x1c(t1)
	stw	r10, 0x20(t1)
	stw	r11, 0x24(t1)
	stw	r12, 0x28(t1)
	stw	r13, 0x2c(t1)
	stw	r14, 0x30(t1)
	stw	r15, 0x34(t1)
	stw	r16, 0x38(t1)
	stw	r17, 0x3c(t1)
	stw	r18, 0x40(t1)

	ldw	0(arg0), sp
	ldw	4(arg0), t1
	ldw	0x00(t1), r2
	ldw	0x04(t1), r3
	ldw	0x08(t1), r4
	ldw	0x0c(t1), r5
	ldw	0x10(t1), r6
	ldw	0x14(t1), r7
	ldw	0x18(t1), r8
	ldw	0x1c(t1), r9
	ldw	0x20(t1), r10
	ldw	0x24(t1), r11
	ldw	0x28(t1), r12
	ldw	0x2c(t1), r13
	ldw	0x30(t1), r14
	ldw	0x34(t1), r15
	ldw	0x38(t1), r16
	ldw	0x3c(t1), r17
	ldw	0x40(t1), r18
	bv	r0(rp)
	ldo	-FRAMESIZE(sp), sp
EXIT(_thread_machdep_switch)

/*
 * void _thread_machdep_save_float_state(struct _machdep_state* statep);
 */
ENTRY(_thread_machdep_save_float_state,0)
	ldo	8(arg0), arg0
	fstds,ma fr0 , 8(arg0)
	fstds,ma fr1 , 8(arg0)
	fstds,ma fr2 , 8(arg0)
	fstds,ma fr3 , 8(arg0)
	fstds,ma fr4 , 8(arg0)
	fstds,ma fr5 , 8(arg0)
	fstds,ma fr6 , 8(arg0)
	fstds,ma fr7 , 8(arg0)
	fstds,ma fr8 , 8(arg0)
	fstds,ma fr9 , 8(arg0)
	fstds,ma fr10, 8(arg0)
	fstds,ma fr11, 8(arg0)
	fstds,ma fr12, 8(arg0)
	fstds,ma fr13, 8(arg0)
	fstds,ma fr14, 8(arg0)
	fstds,ma fr15, 8(arg0)
	fstds,ma fr16, 8(arg0)
	fstds,ma fr17, 8(arg0)
	fstds,ma fr18, 8(arg0)
	fstds,ma fr19, 8(arg0)
	fstds,ma fr20, 8(arg0)
	fstds,ma fr21, 8(arg0)
	fstds,ma fr22, 8(arg0)
	fstds,ma fr23, 8(arg0)
	fstds,ma fr24, 8(arg0)
	fstds,ma fr25, 8(arg0)
	fstds,ma fr26, 8(arg0)
	fstds,ma fr27, 8(arg0)
	fstds,ma fr28, 8(arg0)
	fstds,ma fr29, 8(arg0)
	fstds,ma fr30, 8(arg0)
	bv	r0(rp)
	fstd,ma	fr31, 8(arg0)
EXIT(_thread_machdep_save_float_state)

/*
 * void _thread_machdep_restore_float_state(struct _machdep_state* statep);
 */
ENTRY(_thread_machdep_restore_float_state,0)
	ldo	8*32(arg0), arg0
	fldds,ma -8(arg0), fr31
	fldds,ma -8(arg0), fr30
	fldds,ma -8(arg0), fr29
	fldds,ma -8(arg0), fr28
	fldds,ma -8(arg0), fr27
	fldds,ma -8(arg0), fr26
	fldds,ma -8(arg0), fr25
	fldds,ma -8(arg0), fr24
	fldds,ma -8(arg0), fr23
	fldds,ma -8(arg0), fr22
	fldds,ma -8(arg0), fr21
	fldds,ma -8(arg0), fr20
	fldds,ma -8(arg0), fr19
	fldds,ma -8(arg0), fr18
	fldds,ma -8(arg0), fr17
	fldds,ma -8(arg0), fr16
	fldds,ma -8(arg0), fr15
	fldds,ma -8(arg0), fr14
	fldds,ma -8(arg0), fr13
	fldds,ma -8(arg0), fr12
	fldds,ma -8(arg0), fr11
	fldds,ma -8(arg0), fr10
	fldds,ma -8(arg0), fr9
	fldds,ma -8(arg0), fr8
	fldds,ma -8(arg0), fr7
	fldds,ma -8(arg0), fr6
	fldds,ma -8(arg0), fr5
	fldds,ma -8(arg0), fr4
	fldds,ma -8(arg0), fr3
	fldds,ma -8(arg0), fr2
	fldds,ma -8(arg0), fr1
	bv	%r0(rp)
	fldds,ma -8(arg0), fr0
EXIT(_thread_machdep_restore_float_state)

	.end
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

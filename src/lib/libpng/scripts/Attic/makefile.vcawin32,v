head	1.2;
access;
symbols
	libpng-1_2_8:1.1.3.2
	png-1_2_7:1.1.3.2
	png-1_2_6p1:1.1.3.2
	png-1_2_6rc1:1.1.3.2
	png-1_2_5p2:1.1.3.1
	tg:1.1.3;
locks; strict;
comment	@# @;


1.2
date	2004.03.07.21.43.29;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.03.07.21.18.58;	author tg;	state Exp;
branches
	1.1.3.1;
next	;

1.1.3.1
date	2004.03.07.21.18.58;	author tg;	state Exp;
branches;
next	1.1.3.2;

1.1.3.2
date	2004.08.05.12.15.09;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@un-junk libpng and MirOSify
@
text
@# makefile for libpng
# Copyright (C) 1998 Tim Wegner
# For conditions of distribution and use, see copyright notice in png.h
# Assumes that zlib.lib, zconf.h, and zlib.h have been copied to ..\zlib
# To use, do "nmake /f scripts\makefile.vcawin32"

# -------- Microsoft Visual C++ 5.0 and later, uses assembler code --------

# Caution: the assembler code was introduced at libpng version 1.0.4 and has
# not yet been thoroughly tested.

# If you don't want to use assembler code, use makefile.vcwin32 instead.

CFLAGS=-DPNG_USE_PNGVCRD -Ox -GA3s -nologo -W3 -I..\zlib

CC=cl
LD=link
LDFLAGS= 
O=.obj

#uncomment next to put error messages in a file
#ERRFILE= >> pngerrs

# variables
OBJS1 = png$(O) pngset$(O) pngget$(O) pngrutil$(O) pngtrans$(O) pngwutil$(O)
OBJS2 = pngmem$(O) pngpread$(O) pngread$(O) pngerror$(O) pngwrite$(O)
OBJS3 = pngrtran$(O) pngwtran$(O) pngrio$(O) pngwio$(O) pngvcrd$(O)

all: libpng.lib

png$(O): png.h pngconf.h
		  $(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngset$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngget$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngread$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngpread$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngrtran$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngrutil$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngvcrd$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngerror$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngmem$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngrio$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngwio$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngtest$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngtrans$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngwrite$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngwtran$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

pngwutil$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)

libpng.lib: $(OBJS1) $(OBJS2) $(OBJS3)
	echo something to del > libpng.lib
	del libpng.lib
	lib /OUT:libpng.lib $(OBJS1) $(OBJS2) $(OBJS3)

pngtest.exe: pngtest.obj libpng.lib
	$(LD) $(LDFLAGS) pngtest.obj libpng.lib ..\zlib\zlib.lib /OUT:pngtest.exe /SUBSYSTEM:CONSOLE

test: pngtest.exe
	pngtest

# End of makefile for libpng

@


1.1
log
@Initial revision
@
text
@@


1.1.3.1
log
@Import the PNG library from ports/graphics/png/w-png-1.2.5p2/libpng-1.2.5

libpng is OSI certified Open Source software; the small wording mistake
to not write "with or without fee" in the licence (png.h) was fixed by
encouraging the use in commercial software
@
text
@@


1.1.3.2
log
@libpng 1.2.6rc1, said to solve some security leaks, but
also brings in enhancements
@
text
@a7 1
# If you don't want to use assembler (MMX) code, use makefile.vcwin32 instead.
d9 2
a10 8
# Compiler, linker, librarian, and other tools
CC = cl
LD = link
AR = lib
CFLAGS  = -DPNG_USE_PNGVCRD -nologo -MD -O2 -W3 -I..\zlib
LDFLAGS = -nologo
ARFLAGS = -nologo
RM = del
d12 7
a18 1
# File extensions
d22 1
a22 1
#ERRFILE= >> pngerrs.log
d24 4
a27 6
# Variables
OBJS1 = png$(O) pngerror$(O) pngget$(O) pngmem$(O) pngpread$(O)
OBJS2 = pngread$(O) pngrio$(O) pngrtran$(O) pngrutil$(O) pngset$(O)
OBJS3 = pngtrans$(O) pngwio$(O) pngwrite$(O) pngwtran$(O) pngwutil$(O)
OBJS4 = pngvcrd$(O)
OBJS  = $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4)
a28 1
# Targets
d32 1
a32 1
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)
d52 3
d82 4
a85 2
pngvcrd$(O): png.h pngconf.h
	$(CC) -c $(CFLAGS) $*.c $(ERRFILE)
d87 2
a88 6
libpng.lib: $(OBJS)
	-$(RM) $@@
	$(AR) $(ARFLAGS) -out:$@@ $(OBJS) $(ERRFILE)

pngtest.exe: pngtest$(O) libpng.lib
	$(LD) $(LDFLAGS) -out:$@@ pngtest$(O) libpng.lib ..\zlib\zlib.lib $(ERRFILE)
a91 6

clean:
	-$(RM) *$(O)
	-$(RM) libpng.lib
	-$(RM) pngtest.exe
	-$(RM) pngout.png
@


head	1.2;
access;
symbols
	cvs-200408220000:1.1.1.2
	MIRBSD_7quater:1.1.1.2
	openssl-0_9_7d:1.1.3.1
	cvs-200405160640:1.1.1.2
	cvs-200403222025:1.1.1.2
	cvs-200403181737:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.2
	openssl-0_9_7c:1.1.3.1
	openssl-0_9_7b:1.1.3.1
	tg:1.1.3
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309261655:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.10.29.18.34.53;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.47.10;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.3.1;
next	;

1.1.1.1
date	2003.03.22.17.47.10;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.21.18.59.27;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2003.10.29.16.09.26;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke a small bunch of files considered unused
also, note that RC5 (TM?) is only patented in U.S.of.A.
@
text
@#pragma once


#ifdef __cplusplus
extern "C" {
#endif



enum
{
	kMacSocket_TimeoutErr = -2
};


//	Since MacSocket does busy waiting, I do a callback while waiting

typedef OSErr (*MacSocket_IdleWaitCallback)(void *);


//	Call this before anything else!

OSErr MacSocket_Startup(void);


//	Call this to cleanup before quitting

OSErr MacSocket_Shutdown(void);


//	Call this to allocate a "socket" (reference number is returned in outSocketNum)
//	Note that inDoThreadSwitching is pretty much irrelevant right now, since I ignore it
//	The inTimeoutTicks parameter is applied during reads/writes of data
//	The inIdleWaitCallback parameter specifies a callback which is called during busy-waiting periods
//	The inUserRefPtr parameter is passed back to the idle-wait callback

OSErr MacSocket_socket(int *outSocketNum,const Boolean inDoThreadSwitching,const long inTimeoutTicks,MacSocket_IdleWaitCallback inIdleWaitCallback,void *inUserRefPtr);


//	Call this to connect to an IP/DNS address
//	Note that inTargetAddressAndPort is in "IP:port" format-- e.g. 10.1.1.1:123

OSErr MacSocket_connect(const int inSocketNum,char *inTargetAddressAndPort);


//	Call this to listen on a port
//	Since this a low-performance implementation, I allow a maximum of 1 (one!) incoming request when I listen

OSErr MacSocket_listen(const int inSocketNum,const int inPortNum);


//	Call this to close a socket

OSErr MacSocket_close(const int inSocketNum);


//	Call this to receive data on a socket
//	Most parameters' purpose are obvious-- except maybe "inBlock" which controls whether I wait for data or return immediately

int MacSocket_recv(const int inSocketNum,void *outBuff,int outBuffLength,const Boolean inBlock);


//	Call this to send data on a socket

int MacSocket_send(const int inSocketNum,void *inBuff,int inBuffLength);


//	If zero bytes were read in a call to MacSocket_recv(), it may be that the remote end has done a half-close
//	This function will let you check whether that's true or not

Boolean MacSocket_RemoteEndIsClosing(const int inSocketNum);


//	Call this to see if the listen has completed after a call to MacSocket_listen()

Boolean MacSocket_ListenCompleted(const int inSocketNum);


//	These really aren't very useful anymore

Boolean MacSocket_LocalEndIsOpen(const int inSocketNum);
Boolean MacSocket_RemoteEndIsOpen(const int inSocketNum);


//	You may wish to change the userRefPtr for a socket callback-- use this to do it

void MacSocket_SetUserRefPtr(const int inSocketNum,void *inNewRefPtr);


//	Call these to get the socket's IP:port descriptor

void MacSocket_GetLocalIPAndPort(const int inSocketNum,char *outIPAndPort,const int inIPAndPortLength);
void MacSocket_GetRemoteIPAndPort(const int inSocketNum,char *outIPAndPort,const int inIPAndPortLength);


//	Call this to get error info from a socket

void MacSocket_GetSocketErrorInfo(const int inSocketNum,int *outSocketErrCode,char *outSocketErrString,const int inSocketErrStringMaxLength);


#ifdef __cplusplus
}
#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.3.1
log
@for the damned sixth time: try to import (stock) OpenSSL 0.9.7b (on which
the OpenBSD-openssl and our libcrypto and libssl are based) into a vendor
branch in order to schedule an update to OpenSSL.

CVS hates me today.
@
text
@d65 1
a65 1
int MacSocket_send(const int inSocketNum,const void *inBuff,int inBuffLength);
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync MirBSD main source tree against OpenBSD-current,
which should be fairly stable after the Hackathon now.
@
text
@d65 1
a65 1
int MacSocket_send(const int inSocketNum,const void *inBuff,int inBuffLength);
@


head	1.2;
access;
symbols
	cvs-200408220000:1.1.1.2
	MIRBSD_7quater:1.1.1.1
	openssl-0_9_7d:1.1.3.2
	cvs-200405160640:1.1.1.2
	cvs-200403222025:1.1.1.1
	cvs-200403181737:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	openssl-0_9_7c:1.1.3.1
	openssl-0_9_7b:1.1.3.1
	tg:1.1.3
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.10.29.18.40.48;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.47.55;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.3.1;
next	;

1.1.1.1
date	2003.03.22.17.47.55;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.05.16.09.37.34;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2003.10.29.16.12.47;	author tg;	state Exp;
branches;
next	1.1.3.2;

1.1.3.2
date	2004.05.23.17.14.03;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke a small bunch of files considered unused
also, note that RC5 (TM?) is only patented in U.S.of.A.
@
text
@#!/usr/local/bin/perl
#
# OS2-EMX.pl - for EMX GCC on OS/2
#

$o='\\';
$cp='copy';
$rm='rm -f';

# C compiler stuff

$cc='gcc';
$cflags="-DL_ENDIAN -O3 -fomit-frame-pointer -m486 -Zmtd -Wall ";
$cflags.="-Zomf " if $shlib;
$shl_cflag="-Zdll";

if ($debug) { 
	$cflags.="-g "; 
}

$obj=$shlib ? '.obj' : '.o';
$ofile='-o ';

# EXE linking stuff
$link='${CC}';
$lflags='${CFLAGS} -Zbsd-signals -s';
$efile='-o ';
$exep='.exe';
$ex_libs="-lsocket";

# static library stuff
$mklib='ar r';
$mlflags='';
$ranlib="ar s";
$plib='';
$libp=$shlib ? ".lib" : ".a";
$shlibp=$shlib ? ".dll" : ".a";
$lfile='';

$asm=$shlib ? 'as -Zomf' : 'as';
$afile='-o ';
$bn_asm_obj="";
$bn_asm_src="";
$des_enc_obj="";
$des_enc_src="";
$bf_enc_obj="";
$bf_enc_src="";

if (!$no_asm)
	{
	$bn_asm_obj="crypto\\bn\\asm\\bn-os2$obj crypto\\bn\\asm\\co-os2$obj";
	$bn_asm_src="crypto\\bn\\asm\\bn-os2.asm crypto\\bn\\asm\\co-os2.asm";
	$des_enc_obj="crypto\\des\\asm\\d-os2$obj crypto\\des\\asm\\y-os2$obj";
	$des_enc_src="crypto\\des\\asm\\d-os2.asm crypto\\des\\asm\\y-os2.asm";
	$bf_enc_obj="crypto\\bf\\asm\\b-os2$obj";
	$bf_enc_src="crypto\\bf\\asm\\b-os2.asm";
	$cast_enc_obj="crypto\\cast\\asm\\c-os2$obj";
	$cast_enc_src="crypto\\cast\\asm\\c-os2.asm";
	$rc4_enc_obj="crypto\\rc4\\asm\\r4-os2$obj";
	$rc4_enc_src="crypto\\rc4\\asm\\r4-os2.asm";
	$rc5_enc_obj="crypto\\rc5\\asm\\r5-os2$obj";
	$rc5_enc_src="crypto\\rc5\\asm\\r5-os2.asm";
	$md5_asm_obj="crypto\\md5\\asm\\m5-os2$obj";
	$md5_asm_src="crypto\\md5\\asm\\m5-os2.asm";
	$sha1_asm_obj="crypto\\sha\\asm\\s1-os2$obj";
	$sha1_asm_src="crypto\\sha\\asm\\s1-os2.asm";
	$rmd160_asm_obj="crypto\\ripemd\\asm\\rm-os2$obj";
	$rmd160_asm_src="crypto\\ripemd\\asm\\rm-os2.asm";
	}

if ($shlib)
	{
	$mlflags.=" $lflags -Zdll";
	$lib_cflag=" -D_DLL";
	$out_def="out_dll";
	$tmp_def="tmp_dll";
	}

sub do_lib_rule
	{
	local($obj,$target,$name,$shlib)=@@_;
	local($ret,$_,$Name);

	$target =~ s/\//$o/g if $o ne '/';
	$target="$target";
	($Name=$name) =~ tr/a-z/A-Z/;

	$ret.="$target: \$(${Name}OBJ)\n";
	if (!$shlib) 
		{
		$ret.="\t\$(RM) $target\n";
		$ret.="\t\$(MKLIB) $target \$(${Name}OBJ)\n";
		$ret.="\t\$(RANLIB) $target\n\n";
		}
	else
		{
		local($ex)=($target =~ /O_SSL/)?' $(L_CRYPTO)':'';
		$ex.=' -lsocket';
		$ret.="\t\$(LINK) \$(SHLIB_CFLAGS) \$(MLFLAGS) $efile$target \$(SHLIB_EX_OBJ) \$(${Name}OBJ) $ex os2/${Name}.def\n";
		$ret.="\temximp -o $out_def/$name.a os2/${Name}.def\n";
		$ret.="\temximp -o $out_def/$name.lib os2/${Name}.def\n\n";
		}
	}

sub do_link_rule
	{
	local($target,$files,$dep_libs,$libs)=@@_;
	local($ret,$_);
	
	$file =~ s/\//$o/g if $o ne '/';
	$n=&bname($target);
	$ret.="$target: $files $dep_libs\n";
	$ret.="\t\$(LINK) ${efile}$target \$(CFLAG) \$(LFLAGS) $files $libs\n\n";
	return($ret);
	}

1;
@


1.1
log
@Initial revision
@
text
@@


1.1.3.1
log
@for the damned sixth time: try to import (stock) OpenSSL 0.9.7b (on which
the OpenBSD-openssl and our libcrypto and libssl are based) into a vendor
branch in order to schedule an update to OpenSSL.

CVS hates me today.
@
text
@@


1.1.3.2
log
@Import OpenSSL 0.9.7d into vendor branch to ease future updates
OpenBSD has patched libssl up to 0.9.7d as well.
@
text
@d6 2
a7 2
$o='/';
$cp='cp';
a9 2
$preamble = "SHELL=sh\n";

d51 18
a68 18
	$bn_asm_obj="crypto/bn/asm/bn-os2$obj crypto/bn/asm/co-os2$obj";
	$bn_asm_src="crypto/bn/asm/bn-os2.asm crypto/bn/asm/co-os2.asm";
	$des_enc_obj="crypto/des/asm/d-os2$obj crypto/des/asm/y-os2$obj";
	$des_enc_src="crypto/des/asm/d-os2.asm crypto/des/asm/y-os2.asm";
	$bf_enc_obj="crypto/bf/asm/b-os2$obj";
	$bf_enc_src="crypto/bf/asm/b-os2.asm";
	$cast_enc_obj="crypto/cast/asm/c-os2$obj";
	$cast_enc_src="crypto/cast/asm/c-os2.asm";
	$rc4_enc_obj="crypto/rc4/asm/r4-os2$obj";
	$rc4_enc_src="crypto/rc4/asm/r4-os2.asm";
	$rc5_enc_obj="crypto/rc5/asm/r5-os2$obj";
	$rc5_enc_src="crypto/rc5/asm/r5-os2.asm";
	$md5_asm_obj="crypto/md5/asm/m5-os2$obj";
	$md5_asm_src="crypto/md5/asm/m5-os2.asm";
	$sha1_asm_obj="crypto/sha/asm/s1-os2$obj";
	$sha1_asm_src="crypto/sha/asm/s1-os2.asm";
	$rmd160_asm_obj="crypto/ripemd/asm/rm-os2$obj";
	$rmd160_asm_src="crypto/ripemd/asm/rm-os2.asm";
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d6 2
a7 2
$o='/';
$cp='cp';
a9 2
$preamble = "SHELL=sh\n";

d51 18
a68 18
	$bn_asm_obj="crypto/bn/asm/bn-os2$obj crypto/bn/asm/co-os2$obj";
	$bn_asm_src="crypto/bn/asm/bn-os2.asm crypto/bn/asm/co-os2.asm";
	$des_enc_obj="crypto/des/asm/d-os2$obj crypto/des/asm/y-os2$obj";
	$des_enc_src="crypto/des/asm/d-os2.asm crypto/des/asm/y-os2.asm";
	$bf_enc_obj="crypto/bf/asm/b-os2$obj";
	$bf_enc_src="crypto/bf/asm/b-os2.asm";
	$cast_enc_obj="crypto/cast/asm/c-os2$obj";
	$cast_enc_src="crypto/cast/asm/c-os2.asm";
	$rc4_enc_obj="crypto/rc4/asm/r4-os2$obj";
	$rc4_enc_src="crypto/rc4/asm/r4-os2.asm";
	$rc5_enc_obj="crypto/rc5/asm/r5-os2$obj";
	$rc5_enc_src="crypto/rc5/asm/r5-os2.asm";
	$md5_asm_obj="crypto/md5/asm/m5-os2$obj";
	$md5_asm_src="crypto/md5/asm/m5-os2.asm";
	$sha1_asm_obj="crypto/sha/asm/s1-os2$obj";
	$sha1_asm_src="crypto/sha/asm/s1-os2.asm";
	$rmd160_asm_obj="crypto/ripemd/asm/rm-os2$obj";
	$rmd160_asm_src="crypto/ripemd/asm/rm-os2.asm";
@


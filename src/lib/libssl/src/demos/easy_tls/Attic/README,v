head	1.2;
access;
symbols
	cvs-200408220000:1.1.1.1
	MIRBSD_7quater:1.1.1.1
	openssl-0_9_7d:1.1.3.1
	cvs-200405160640:1.1.1.1
	cvs-200403222025:1.1.1.1
	cvs-200403181737:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	openssl-0_9_7c:1.1.3.1
	openssl-0_9_7b:1.1.3.1
	tg:1.1.3
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.10.29.18.36.25;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.47.43;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.3.1;
next	;

1.1.1.1
date	2003.03.22.17.47.43;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2003.10.29.16.04.19;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke a small bunch of files considered unused
also, note that RC5 (TM?) is only patented in U.S.of.A.
@
text
@easy_tls - generic SSL/TLS proxy
========

(... and example for non-blocking SSL/TLS I/O multiplexing.)


  easy_tls.c, easy_tls.h:

     Small generic SSL/TLS proxy library: With a few function calls,
     an application socket will be replaced by a pipe handled by a
     separate SSL/TLS proxy process.  This allows easily adding
     SSL/TLS support to many programs not originally designed for it.

     [Actually easy_tls.c is not a proper library: Customization
     requires defining preprocessor macros while compiling it.
     This is quite confusing, so I'll probably change it.]

     These files may be used under the OpenSSL license.



  test.c, test.h, Makefile, cert.pem, cacerts.pem:

     Rudimentary example program using the easy_tls library, and
     example key and certificates for it.  Usage examples:

       $ ./test 8443     # create server listening at port 8443
       $ ./test 127.0.0.1 8443  # create client, connect to port 8443
                                # at IP address 127.0.0.1

     'test' will not automatically do SSL/TLS, or even read or write
     data -- it must be told to do so on input lines starting
     with a command letter.  'W' means write a line, 'R' means
     read a line, 'C' means close the connection, 'T' means
     start an SSL/TLS proxy.  E.g. (user input tagged with '*'):

     * R
       <<< 220 mail.example.net
     * WSTARTTLS
       >>> STARTTLS
     * R
       <<< 220 Ready to start TLS
     * T
       test_process_init(fd = 3, client_p = 1, apparg = (nil))
       +++ `E:self signed certificate in certificate chain'
       +++ `<... certificate info ...>'
     * WHELO localhost
       >>> HELO localhost
       R
       <<< 250 mail.example.net

     You can even do SSL/TLS over SSL/TLS over SSL/TLS ... by using
     'T' multiple times.  I have no idea why you would want to though.


This code is rather old.  When I find time I will update anything that
should be changed, and improve code comments.  To compile the sample
program 'test' on platforms other then Linux or Solaris, you will have
to edit the Makefile.

As noted above, easy_tls.c will be changed to become a library one
day, which means that future revisions will not be fully compatible to
the current version.

Bodo Möller <bodo@@openssl.org>
@


1.1
log
@Initial revision
@
text
@@


1.1.3.1
log
@for the damned sixth time: try to import (stock) OpenSSL 0.9.7b (on which
the OpenBSD-openssl and our libcrypto and libssl are based) into a vendor
branch in order to schedule an update to OpenSSL.

CVS hates me today.
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

head	1.2;
access;
symbols
	cdk-4_9_11-20041224:1.1.3.1
	cdk-4_9_11-20040831:1.1.3.1
	tg:1.1.3;
locks; strict;
comment	@# @;


1.2
date	2004.09.27.18.58.22;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.09.27.16.28.14;	author tg;	state Exp;
branches
	1.1.3.1;
next	;

1.1.3.1
date	2004.09.27.16.28.14;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@give dave@@ and tyler@@ something to play with

how about
--default <arg> (to be selected, instead the first)
--timeout <arg> (waits <arg> seconds, then returns the default argument)
@
text
@#!/bin/sh

#
# Description:
#		This demonstrates the CDK command line
# interface to the scale widget.
#

#
# Create some global variables.
#
CDK_SCALE="../cdkscale"
CDK_LABEL="../cdklabel"
output="/tmp/scale_output.$$"
tmp="/tmp/tmp.$$"

#
# Create the title.
#
title="<C>Enter a value using the cursor keys."
label="</R>Value"
buttons=" OK 
 Cancel "

#
# Create the scale box.
#
${CDK_SCALE} -f 20 -l 0 -h 100 -i 5 -L "${label}" -T "${title}" -B "${buttons}" -O ${output}
selected=$?
if [ $selected -lt 0 ]; then
   exit;
fi
answer=`cat ${output}`

#
# Create the message for the label widget.
#
echo "<C>Here is the value you selected" > ${tmp}
echo " " >> ${tmp}
echo "<C></R>${answer}" >> ${tmp}
echo " " >> ${tmp}
echo "<C>You chose button #${selected}" >> ${tmp}
echo " " >> ${tmp}
echo "<C>Hit </R>space<!R> to continue." >> ${tmp}

#
# Create the label widget to display the information.
#
${CDK_LABEL} -f ${tmp} -p " "

#
# Clean up.
#
rm -f ${tmp} ${output}
@


1.1
log
@Initial revision
@
text
@@


1.1.3.1
log
@Import Tom Dickey's libcdk.
@
text
@@

head	1.2;
access;
symbols
	cdk-4_9_11-20041224:1.1.3.1
	cdk-4_9_11-20040831:1.1.3.1
	tg:1.1.3;
locks; strict;
comment	@# @;


1.2
date	2004.09.27.18.58.21;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.09.27.16.28.14;	author tg;	state Exp;
branches
	1.1.3.1;
next	;

1.1.3.1
date	2004.09.27.16.28.14;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@give dave@@ and tyler@@ something to play with

how about
--default <arg> (to be selected, instead the first)
--timeout <arg> (waits <arg> seconds, then returns the default argument)
@
text
@#!/bin/sh

#
# Description:
#		This demonstrates the CDK command line
# interface to the label widget.
#

#
# Create some global variables.
#
CDK_LABEL="../cdklabel"
dfTmp="/tmp/label.$$"
tmp="/tmp/tmp.$$"
top="/tmp/dfTop.$$"
bottom="/tmp/dfBottom.$$"

#
# Get the filesystem information.
#
getDiskInfo()
{
   fileName=$1;
   command="df"

   #
   # Determine the type of operating system.
   #
   machine=`uname -s`
   if [ "$machine" = "SunOS" ]; then
      level=`uname -r`

      if [ "$level" -gt 4 ]; then
         command="df -kl"
      fi
   else
      if [ "$machine" = "AIX" ]; then
         command="df -i"
      fi
   fi

   #
   # Run the command.
   #
   ${command} > ${fileName}
}

#
# Get the disk information.
#
getDiskInfo ${dfTmp}

#
# Bold the first line of the df command.
#
head -1 ${dfTmp} | awk '{printf "</B>%s\n", $0}' > ${top}
tail +2 ${dfTmp} > ${bottom}

#
# Create the message for the label widget.
#
echo "<C>This is the current" > ${tmp}
echo "<C>status of your local filesystems." >> ${tmp}
echo "<C><#HL(2)>" >> ${tmp}
cat ${top} >> ${tmp}
cat ${bottom} >> ${tmp}
echo "<C><#HL(2)>" >> ${tmp}
echo "" >> ${tmp}
echo "<C>Hit </R>space<!R> to continue." >> ${tmp}

#
# Create the label widget to display the information.
#
${CDK_LABEL} -f "${tmp}" -p " " -c "ls" -S

#
# Clean up.
#
rm -f ${tmp} ${output} ${dfTmp} ${top} ${bottom}
@


1.1
log
@Initial revision
@
text
@@


1.1.3.1
log
@Import Tom Dickey's libcdk.
@
text
@@

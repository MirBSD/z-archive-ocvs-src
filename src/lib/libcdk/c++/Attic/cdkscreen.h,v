head	1.2;
access;
symbols
	cdk-4_9_11-20041224:1.1.3.1
	cdk-4_9_11-20040831:1.1.3.1
	tg:1.1.3;
locks; strict;
comment	@ * @;


1.2
date	2004.09.27.18.58.19;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2004.09.27.16.28.14;	author tg;	state Exp;
branches
	1.1.3.1;
next	;

1.1.3.1
date	2004.09.27.16.28.14;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@give dave@@ and tyler@@ something to play with

how about
--default <arg> (to be selected, instead the first)
--timeout <arg> (waits <arg> seconds, then returns the default argument)
@
text
@#ifndef CDKSCREEN_H
#define CDK_SCREEN_H

extern "C"
{
#include <cdk.h>
}

class CDKScreen 
{
  // The window which curses uses.
  WINDOW *cursesWin;
  // The CDKSCREEN struct assigned to this object.
  CDKSCREEN *cdkscreen;
 public:
  // Constructor.
  CDKScreen();
  // Deconstructor.
  ~CDKScreen();
  // Return a pointer to the CDKScreen structure.
  CDKSCREEN *screen(void);
  // Refresh the screen.
  // Note, this function is renamed to avoid clashing with the refresh() macro.
  void refreshscr(void);
  // Erase, but don't destroy, all widgets.
  // Note, this function is renamed to avoid clashing with the erase() macro.
  void erasescr(void);
};

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.3.1
log
@Import Tom Dickey's libcdk.
@
text
@@

head	1.3;
access;
symbols
	cvs-200406230735:1.1.1.1
	MIRBSD_7quater:1.2
	cvs-200405160640:1.1.1.1
	cvs-200402042200:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.2.0.6
	MIRBSD_7:1.2.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.2
	MIRBSD_7_DEV:1.2.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2004.01.24.01.05.29;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2003.09.14.18.15.51;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.46.18;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.46.18;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* now that ld.so is fixed, we don't need that kind of kludge any more
* bump libc major because of a removal
* while here, stub out NLS/Locale even more
* generic whitespace cleanup
* licence template update
@
text
@/*
 * Written by J.T. Conklin <jtc@@netbsd.org>.
 * Public domain.
 */

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$MirBSD: localeconv.c,v 1.2 2003/09/14 18:15:51 tg Exp $";
#endif /* LIBC_SCCS and not lint */

#include <sys/localedef.h>
#include <locale.h>

/*
 * Return the current locale conversion.
 */
struct lconv *
localeconv()
{
    static struct lconv ret;

    if (ret.n_sep_by_space != _DefaultMonetaryLocale.n_sep_by_space /* CHAR_MAX */) {
	/* LC_MONETARY */
	ret.int_curr_symbol	= _DefaultMonetaryLocale.int_curr_symbol;
	ret.currency_symbol	= _DefaultMonetaryLocale.currency_symbol;
	ret.mon_decimal_point	= _DefaultMonetaryLocale.mon_decimal_point;
	ret.mon_thousands_sep	= _DefaultMonetaryLocale.mon_thousands_sep;
	ret.mon_grouping	= _DefaultMonetaryLocale.mon_grouping;
	ret.positive_sign	= _DefaultMonetaryLocale.positive_sign;
	ret.negative_sign	= _DefaultMonetaryLocale.negative_sign;
	ret.int_frac_digits	= _DefaultMonetaryLocale.int_frac_digits;
	ret.frac_digits		= _DefaultMonetaryLocale.frac_digits;
	ret.p_cs_precedes	= _DefaultMonetaryLocale.p_cs_precedes;
	ret.p_sep_by_space	= _DefaultMonetaryLocale.p_sep_by_space;
	ret.n_cs_precedes	= _DefaultMonetaryLocale.n_cs_precedes;
	ret.n_sep_by_space	= _DefaultMonetaryLocale.n_sep_by_space;
	ret.p_sign_posn		= _DefaultMonetaryLocale.p_sign_posn;
	ret.n_sign_posn		= _DefaultMonetaryLocale.n_sign_posn;
	/* LC_NUMERIC */
	ret.decimal_point	= (char *) _DefaultNumericLocale.decimal_point;
	ret.thousands_sep	= (char *) _DefaultNumericLocale.thousands_sep;
	ret.grouping		= (char *) _DefaultNumericLocale.grouping;
    }

    return (&ret);
}
@


1.2
log
@o remove NLS/Locale manual pages
o stub out setlocale(3): only returns "C" now
o remove pointer stuff (reducing footprint of libc), as well
  as the ability to eventually ever change the locale information
o faster initialisation in localeconv(3) depends on the known
  value of the static locale data
o retain libc.so compatibility, only removing external functions
o KNF while here (whitespace at EOL, ANSI C not K&R C)
@
text
@d7 1
a7 1
static char *rcsid = "$MirBSD: localeconv.c,v 1.3 1997/07/23 21:14:40 kstailey Exp $";
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
static char *rcsid = "$OpenBSD: localeconv.c,v 1.3 1997/07/23 21:14:40 kstailey Exp $";
a13 12
 * The localeconv() function constructs a struct lconv from the current
 * monetary and numeric locales.
 *
 * Because localeconv() may be called many times (especially by library
 * routines like printf() & strtod()), the approprate members of the
 * lconv structure are computed only when the monetary or numeric
 * locale has been changed.
 */
int __mlocale_changed = 1;
int __nlocale_changed = 1;

/*
d21 1
a21 1
    if (__mlocale_changed) {
d23 15
a37 19
	ret.int_curr_symbol	= _CurrentMonetaryLocale->int_curr_symbol;
	ret.currency_symbol	= _CurrentMonetaryLocale->currency_symbol;
	ret.mon_decimal_point	= _CurrentMonetaryLocale->mon_decimal_point;
	ret.mon_thousands_sep	= _CurrentMonetaryLocale->mon_thousands_sep;
	ret.mon_grouping	= _CurrentMonetaryLocale->mon_grouping;
	ret.positive_sign	= _CurrentMonetaryLocale->positive_sign;
	ret.negative_sign	= _CurrentMonetaryLocale->negative_sign;
	ret.int_frac_digits	= _CurrentMonetaryLocale->int_frac_digits;
	ret.frac_digits		= _CurrentMonetaryLocale->frac_digits;
	ret.p_cs_precedes	= _CurrentMonetaryLocale->p_cs_precedes;
	ret.p_sep_by_space	= _CurrentMonetaryLocale->p_sep_by_space;
	ret.n_cs_precedes	= _CurrentMonetaryLocale->n_cs_precedes;
	ret.n_sep_by_space	= _CurrentMonetaryLocale->n_sep_by_space;
	ret.p_sign_posn		= _CurrentMonetaryLocale->p_sign_posn;
	ret.n_sign_posn		= _CurrentMonetaryLocale->n_sign_posn;
	__mlocale_changed = 0;
    }

    if (__nlocale_changed) {
d39 3
a41 4
	ret.decimal_point	= (char *) _CurrentNumericLocale->decimal_point;
	ret.thousands_sep	= (char *) _CurrentNumericLocale->thousands_sep;
	ret.grouping		= (char *) _CurrentNumericLocale->grouping;
	__nlocale_changed = 0;
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

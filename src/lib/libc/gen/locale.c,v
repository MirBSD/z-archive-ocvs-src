head	1.2;
access;
symbols
	tg-mergetmp-mirosx-1:1.2
	tg-mergefixes-1-branch:1.2.0.8
	tg-mergefixes-1-base:1.2
	MIROS_X:1.2.0.6
	MIROS_X_BASE:1.2
	tg-mergetmp-3:1.2
	MIRBSD_XP_MIRPPC:1.2.0.4
	MIRBSD_XP_SPARC_BASE:1.2
	MIRBSD_XP_SPARC:1.2.0.2;
locks; strict;
comment	@ * @;


1.2
date	2004.06.19.21.24.35;	author tg;	state Stab;
branches;
next	1.1;

1.1
date	2004.01.24.01.05.28;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* make the NLS and locale functions (stubs) weak
* re-enable SCCS/RCS IDs in libc
@
text
@/* $MirBSD: src/lib/libc/gen/locale.c,v 1.1 2004/01/24 01:05:28 tg Exp $
 *-
 * Copyright (c) 2003, 2004
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
 * Derived from work placed into the public domain by
 *	J.T. Conklin <jtc@@netbsd.org>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publically perform, modi-
 * fy, merge, distribute, sell, give away or sublicence, provided the
 * above copyright notices, these terms and the disclaimer are retai-
 * ned in all redistributions, or reproduced in accompanying documen-
 * tation or other materials provided with binary redistributions.
 *
 * Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
 * any kind, expressed or implied, to the maximum extent permitted by
 * applicable law, but with the warranty of being written without ma-
 * licious intent or gross negligence; in no event shall licensor, an
 * author or contributor be held liable for any damage, direct, indi-
 * rect or other, however caused, arising in any way out of the usage
 * of covered work, even if advised of the possibility of such damage.
 *-
 * Fake locale support, just enough to fool people. Functions are de-
 * fined weak in case someone wants to override these.
 */

#include <sys/param.h>
#include <sys/localedef.h>
#include <langinfo.h>
#include <locale.h>

__RCSID("$MirBSD$");

const _TimeLocale _DefaultTimeLocale = {
	{ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"	},
	{ "Sunday", "Monday", "Tuesday", "Wednesday",
	  "Thursday", "Friday", "Saturday"			},
	{ "Jan", "Feb", "Mar", "Apr", "May", "Jun",
	  "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"		},
	{ "January", "February", "March", "April",
	  "May", "June", "July", "August", "September",
	  "October", "November", "December"			},
	{ "AM", "PM"						},
	"%a %b %d %H:%M:%S %Y", "%m/%d/%y",
	"%H:%M:%S", "%I:%M:%S %p"
};

const struct lconv _DefaultLocaleConv = {
	".", "", "", "", "", "", "", "", "", "",
	CHAR_MAX, CHAR_MAX, CHAR_MAX, CHAR_MAX,
	CHAR_MAX, CHAR_MAX, CHAR_MAX, CHAR_MAX
};

char *
__weak_setlocale(int category, const char *locale)
{
	return "C";
}

struct lconv *
__weak_localeconv(void)
{
	return (struct lconv *)&_DefaultLocaleConv;
}

char *
__weak_nl_langinfo(nl_item item)
{
	const char *s;

	switch (item) {
	  case D_T_FMT:
		s = _DefaultTimeLocale.d_t_fmt;
		break;
	  case D_FMT:
		s = _DefaultTimeLocale.d_fmt;
		break;
	  case T_FMT:
		s = _DefaultTimeLocale.t_fmt;
		break;
	  case T_FMT_AMPM:
		s = _DefaultTimeLocale.t_fmt_ampm;
		break;
	  case AM_STR:
	  case PM_STR:
		s = _DefaultTimeLocale.am_pm[item - AM_STR];
		break;
	  case DAY_1:
	  case DAY_2:
	  case DAY_3:
	  case DAY_4:
	  case DAY_5:
	  case DAY_6:
	  case DAY_7:
		s = _DefaultTimeLocale.day[item - DAY_1];
		break;
	  case ABDAY_1:
	  case ABDAY_2:
	  case ABDAY_3:
	  case ABDAY_4:
	  case ABDAY_5:
	  case ABDAY_6:
	  case ABDAY_7:
		s = _DefaultTimeLocale.abday[item - ABDAY_1];
		break;
	  case MON_1:
	  case MON_2:
	  case MON_3:
	  case MON_4:
	  case MON_5:
	  case MON_6:
	  case MON_7:
	  case MON_8:
	  case MON_9:
	  case MON_10:
	  case MON_11:
	  case MON_12:
		s = _DefaultTimeLocale.mon[item - MON_1];
		break;
	  case ABMON_1:
	  case ABMON_2:
	  case ABMON_3:
	  case ABMON_4:
	  case ABMON_5:
	  case ABMON_6:
	  case ABMON_7:
	  case ABMON_8:
	  case ABMON_9:
	  case ABMON_10:
	  case ABMON_11:
	  case ABMON_12:
		s = _DefaultTimeLocale.abmon[item - ABMON_1];
		break;
	  case RADIXCHAR:
		s = _DefaultLocaleConv.decimal_point;
		break;
	  case YESSTR:
		s = "yes";
		break;
	  case YESEXPR:
		s = "^[Yy]";
		break;
	  case NOSTR:
		s = "no";
		break;
	  case NOEXPR:
		s = "^[Nn]";
		break;
	  case THOUSEP:
	  case CRNCYSTR:
	  default:
		s = _DefaultLocaleConv.thousands_sep;
		break;
	}

	return (char *)s;
}

__weak_alias(setlocale, __weak_setlocale);
__weak_alias(localeconv, __weak_localeconv);
__weak_alias(nl_langinfo, __weak_nl_langinfo);
@


1.1
log
@* now that ld.so is fixed, we don't need that kind of kludge any more
* bump libc major because of a removal
* while here, stub out NLS/Locale even more
* generic whitespace cleanup
* licence template update
@
text
@d1 1
a1 1
/* $MirBSD: licence.template,v 1.8 2003/12/17 14:35:00 tg Exp $
d4 1
a4 1
 *	Thorsten "mirabile" Glaser <x86@@ePost.de>
d8 6
a13 6
 * Subject to these terms, everybody who obtained a copy of this work
 * is hereby permitted to deal in the work without restriction inclu-
 * ding without limitation the rights to use, distribute, sell, modi-
 * fy, publically perform, give away, merge or sublicence it provided
 * this notice is kept and the authors and contributors are given due
 * credit in derivates or accompanying documents.
d15 7
a21 5
 * This work is provided "as is" with no explicit or implicit warran-
 * ties whatsoever to the maximum extent permitted by applicable law;
 * in no event may an author or contributor be held liable for damage
 * that is, directly or indirectly, caused by the work, even if advi-
 * sed of the possibility of such damage.
d23 2
a24 1
 * Fake locale support, just enough to fool people
d27 1
a27 4
#if defined(LIBC_SCCS) && !defined(lint)
static const char RCSId[] = "$MirBSD$";
#endif

d32 2
d55 1
a55 1
setlocale(int category, const char *locale)
d61 1
a61 1
localeconv(void)
d67 1
a67 1
nl_langinfo(nl_item item)
d158 4
@


head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.4
	tg-mergefixes-1-branch:1.1.1.4.0.8
	tg-mergefixes-1-base:1.1.1.4
	MIROS_X:1.1.1.4.0.6
	MIROS_X_BASE:1.1.1.4
	tg-mergetmp-3:1.1.1.4
	cvs-200412031430:1.1.1.4
	MIRBSD_XP_MIRPPC:1.1.1.4.0.4
	cvs-200410252005:1.1.1.4
	MIRBSD_XP_SPARC_BASE:1.1.1.4
	MIRBSD_XP_SPARC:1.1.1.4.0.2
	cvs-200406230735:1.1.1.4
	MIRBSD_7quater:1.1.1.3
	cvs-200405160640:1.1.1.4
	cvs-200402042200:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309261655:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.3
	MIRBSD_5:1.1.1.3
	cvs-200306082100:1.1.1.3
	ctm-3316:1.1.1.3
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	cvs-200305071630:1.1.1.2
	ctm-3255:1.1.1.2
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2003.03.22.17.46.17;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.46.17;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.05.20.55.27;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.05.17.24.31;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.05.16.09.17.56;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\"	$OpenBSD: setjmp.3,v 1.15 2003/03/06 19:54:52 jmc Exp $
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd June 4, 1993
.Dt SETJMP 3
.Os
.Sh NAME
.Nm sigsetjmp ,
.Nm siglongjmp ,
.Nm setjmp ,
.Nm longjmp ,
.Nm _setjmp ,
.Nm _longjmp ,
.Nm longjmperror
.Nd non-local jumps
.Sh SYNOPSIS
.Fd #include <setjmp.h>
.Ft int
.Fn sigsetjmp "sigjmp_buf env" "int savemask"
.Ft void
.Fn siglongjmp "sigjmp_buf env" "int val"
.Ft int
.Fn setjmp "jmp_buf env"
.Ft void
.Fn longjmp "jmp_buf env" "int val"
.Ft int
.Fn _setjmp "jmp_buf env"
.Ft void
.Fn _longjmp "jmp_buf env" "int val"
.Ft void
.Fn longjmperror void
.Sh DESCRIPTION
The
.Fn sigsetjmp ,
.Fn setjmp ,
and
.Fn _setjmp
functions save their calling environment in
.Fa env .
Each of these functions returns 0.
.Pp
The corresponding
.Fn longjmp
functions restore the environment saved by the most recent
invocation of the respective
.Fn setjmp
function.
They then return so that program execution continues as if the corresponding
invocation of the
.Fn setjmp
call had just returned the value specified by
.Fa val ,
instead of 0.
.Pp
Pairs of calls may be intermixed; i.e., both
.Fn sigsetjmp
and
.Fn siglongjmp
as well as
.Fn setjmp
and
.Fn longjmp
combinations may be used in the same program.
However, individual calls may not \(em e.g., the
.Fa env
argument to
.Fn setjmp
may not be passed to
.Fn siglongjmp .
.Pp
The
.Fn longjmp
routines may not be called after the routine which called the
.Fn setjmp
routines returns.
.Pp
All accessible objects have values as of the time
.Fn longjmp
routine was called, except that the values of objects of automatic storage
invocation duration that do not have the
.Li volatile
type and have been changed between the
.Fn setjmp
invocation and
.Fn longjmp
call are indeterminate.
.Pp
The
.Fn setjmp Ns / Ns Fn longjmp
function pairs save and restore the signal mask while
.Fn _setjmp Ns / Ns Fn _longjmp
function pairs save and restore only the register set and the stack (see
.Xr sigmask 3 ) .
.Pp
The
.Fn sigsetjmp Ns / Ns Fn siglongjmp
function pairs save and restore the signal mask if the argument
.Fa savemask
is non-zero.
Otherwise, only the register set and the stack are saved.
.Pp
In other words,
.Fn setjmp Ns / Ns Fn longjmp
are functionally equivalent to
.Fn sigsetjmp Ns / Ns Fn siglongjmp
when
.Fn sigsetjmp
is called with a non-zero
.Fa savemask
argument.
Conversely,
.Fn _setjmp Ns / Ns Fn _longjmp
are functionally equivalent to
.Fn sigsetjmp Ns / Ns Fn siglongjmp
when
.Fn sigsetjmp
is called with a zero-value
.Fa savemask .
.Pp
The
.Fn sigsetjmp Ns / Ns Fn siglongjmp
interfaces are preferred for maximum portability.
.Sh ERRORS
If the contents of the
.Fa env
are corrupted or correspond to an environment that has already returned,
the
.Fn longjmp
routine calls the routine
.Fn longjmperror 3 .
If
.Fn longjmperror
returns the program is aborted (see
.Xr abort 3 ) .
The default version of
.Fn longjmperror
prints the message
.Dq Li longjmp botch
to standard error and returns.
User programs wishing to exit more gracefully should write their own
versions of
.Fn longjmperror .
.Sh SEE ALSO
.Xr sigaction 2 ,
.Xr sigaltstack 2 ,
.Xr signal 3
.Sh STANDARDS
The
.Fn setjmp
and
.Fn longjmp
functions conform to
.St -ansiC .
The
.Fn sigsetjmp
and
.Fn siglongjmp
functions conform to
.St -p1003.1-90 .
.Sh CAVEATS
Historically, on
.At V ,
the
.Fn setjmp Ns / Ns Fn longjmp
functions have been equivalent to the
.Bx
.Fn _setjmp Ns / Ns Fn _longjmp
functions and do not restore the signal mask.
Because of this discrepancy, the
.Fn sigsetjmp Ns / Ns Fn siglongjmp
interfaces should be used if portability is desired.
.Pp
Use of
.Fn longjmp
or
.Fn siglongjmp
from inside a signal handler is not as easy as it might seem.
Generally speaking, all possible code paths between the
.Fn setjmp
and
.Fn longjmp
must be signal race safe, as discussed in
.Xr signal 3 .
Furthermore, the code paths must not do resource management
(such as
.Xr open 2
or
.Xr close 2 )
without blocking the signal in question, or resources might
be mismanaged.
Obviously this makes
.Fn longjmp
much less useful than previously thought.
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@sync the libraries as well before doing flag day
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.16 2003/04/30 06:28:10 jmc Exp $
d164 1
a164 1
.Xr longjmperror 3 .
d167 1
a167 1
returns, the program is aborted (see
@


1.1.1.3
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.17 2003/06/02 20:18:34 millert Exp $
d18 5
a22 1
.\" 3. Neither the name of the University nor the names of its contributors
@


1.1.1.4
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.20 2004/03/02 19:11:38 millert Exp $
a83 7
The value specified by
.Fa val
must be non-zero; a 0 value is treated as 1 to allow the programmer
to differentiate between a direct invocation of
.Fn setjmp
and a return via
.Fn longjmp .
@



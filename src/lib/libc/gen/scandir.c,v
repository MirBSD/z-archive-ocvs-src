head	1.5;
access;
symbols
	tg-mergetmp-mirosx-1:1.5
	tg-mergefixes-1-branch:1.5.0.8
	tg-mergefixes-1-base:1.5
	MIROS_X:1.5.0.6
	MIROS_X_BASE:1.5
	tg-mergetmp-3:1.5
	cvs-200412031430:1.1.1.4
	MIRBSD_XP_MIRPPC:1.5.0.4
	cvs-200410252005:1.1.1.4
	MIRBSD_XP_SPARC_BASE:1.5
	MIRBSD_XP_SPARC:1.5.0.2
	cvs-200406230735:1.1.1.4
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.3
	cvs-200402042200:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309261655:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.06.23.08.24.30;	author tg;	state Stab;
branches;
next	1.4;

1.4
date	2004.06.20.02.56.42;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.27.22.37.20;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.27.21.26.50;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.46.17;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.46.17;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.17.24.31;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.05.16.09.17.55;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.06.23.07.40.58;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@* more or less automatic merge
* RCS IDs into .comment section
* whitespace police
@
text
@/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/* $OpenBSD: scandir.c,v 1.9 2004/05/18 02:05:52 jfb Exp $ */

/*
 * Scan the directory dirname calling select to make a list of selected
 * directory entries then sort using qsort and compare routine dcomp.
 * Returns the number of entries and a pointer to a list of pointers to
 * struct dirent (through namelist). Returns -1 if there were any errors.
 */

#include <sys/types.h>
#include <sys/stat.h>
#include <dirent.h>
#include <errno.h>
#include <limits.h>
#include <stdlib.h>
#include <string.h>

__RCSID("$MirBSD: src/lib/libc/gen/scandir.c,v 1.4 2004/06/20 02:56:42 tg Exp $");

/*
 * The DIRSIZ macro is the minimum record length which will hold the directory
 * entry.  This requires the amount of space in struct dirent without the
 * d_name field, plus enough space for the name and a terminating nul byte
 * (dp->d_namlen + 1), rounded up to a 4 byte boundary.
 */
#undef DIRSIZ
#define DIRSIZ(dp)							\
	((sizeof(struct dirent) - sizeof(dp)->d_name) +			\
	    (((dp)->d_namlen + 1 + 3) &~ 3))

int
scandir(const char *dirname, struct dirent ***namelist,
    int (*select)(struct dirent *), int (*dcomp)(const void *, const void *))
{
	struct dirent *d, *p, **names = NULL;
	size_t nitems = 0;
	struct stat stb;
	long arraysz;
	DIR *dirp;

	if ((dirp = opendir(dirname)) == NULL)
		return (-1);
	if (fstat(dirp->dd_fd, &stb) < 0)
		goto fail;

	/*
	 * estimate the array size by taking the size of the directory file
	 * and dividing it by a multiple of the minimum size entry.
	 */
	arraysz = (stb.st_size / 24);
	if (arraysz > SIZE_T_MAX / sizeof(struct dirent *)) {
		errno = ENOMEM;
		goto fail;
	}
	names = (struct dirent **)malloc(arraysz * sizeof(struct dirent *));
	if (names == NULL)
		goto fail;

	while ((d = readdir(dirp)) != NULL) {
		if (select != NULL && !(*select)(d))
			continue;	/* just selected names */

		/*
		 * Check to make sure the array has space left and
		 * realloc the maximum size.
		 */
		if (nitems >= arraysz) {
			struct dirent **nnames;

			if (fstat(dirp->dd_fd, &stb) < 0)
				goto fail;

			arraysz = stb.st_size / 12;
			nnames = (struct dirent **)realloc((char *)names,
				arraysz * sizeof(struct dirent *));
			if (nnames == NULL)
				goto fail;

			names = nnames;
		}

		/*
		 * Make a minimum size copy of the data
		 */
		p = (struct dirent *)malloc(DIRSIZ(d));
		if (p == NULL)
			goto fail;

		p->d_ino = d->d_ino;
		p->d_type = d->d_type;
		p->d_reclen = d->d_reclen;
		p->d_namlen = d->d_namlen;
		memmove(p->d_name, d->d_name, p->d_namlen + 1);
		names[nitems++] = p;
	}
	closedir(dirp);
	if (nitems && dcomp != NULL)
		qsort(names, nitems, sizeof(struct dirent *), dcomp);
	*namelist = names;
	return (nitems);

fail:
	while (nitems > 0)
		free(names[--nitems]);
	free(names);
	closedir(dirp);
	return (-1);
}

/*
 * Alphabetic order comparison routine for those who want it.
 */
int
alphasort(const void *d1, const void *d2)
{
	return(strcmp((*(struct dirent **)d1)->d_name,
	    (*(struct dirent **)d2)->d_name));
}
@


1.4
log
@first (user-land) part of time_t64 building
* gcc and egcs are only half-made, using GCC_FOR_TARGET=pgcc/gcc
  (I hope I won't lose Ada now...)
* perl isn't made at all (miniperl...)
* ndat is obsolete anyways
@
text
@d30 2
d47 1
a47 1
__RCSID("$MirBSD$");
d61 2
a62 5
scandir(dirname, namelist, select, dcomp)
	const char *dirname;
	struct dirent ***namelist;
	int (*select)(struct dirent *);
	int (*dcomp)(const void *, const void *);
d143 1
a143 3
alphasort(d1, d2)
	const void *d1;
	const void *d2;
@


1.3
log
@make tree build through
add -Werror (but not -Wall) to lib/*
make most of libc compile with -Wall (stopped at regexp code... ugly)
bump version
@
text
@a0 1
/* $MirBSD: scandir.c,v 1.2 2003/11/27 21:26:50 tg Exp $ */
a29 4
#if defined(LIBC_SCCS) && !defined(lint)
static const char rcsid[] = "$OpenBSD: scandir.c,v 1.7 2003/06/02 20:18:34 millert Exp $";
#endif /* LIBC_SCCS and not lint */

d45 2
d65 2
a66 2
	register struct dirent *d, *p, **names;
	register size_t nitems;
d72 1
a72 1
		return(-1);
d74 1
a74 1
		return(-1);
d83 1
a83 1
		return(-1);
d87 1
a87 1
		return(-1);
a88 1
	nitems = 0;
d92 1
a92 11
		/*
		 * Make a minimum size copy of the data
		 */
		p = (struct dirent *)malloc(DIRSIZ(d));
		if (p == NULL)
			return(-1);
		p->d_ino = d->d_ino;
		p->d_type = d->d_type;
		p->d_reclen = d->d_reclen;
		p->d_namlen = d->d_namlen;
		memmove(p->d_name, d->d_name, p->d_namlen + 1);
d97 2
a98 2
		if (++nitems >= arraysz) {
			register struct dirent **nnames;
d101 2
a102 1
				return(-1);	/* just might have grown */
d106 3
a108 5
			if (nnames == NULL) {
				if (names)
					free(names);
				return(-1);
			}
d111 14
a124 1
		names[nitems-1] = p;
d130 8
a137 1
	return(nitems);
@


1.2
log
@strcpy, strcat, bzero, bcmp, bcopy whack in lib/
@
text
@d1 1
a1 1
/* $MirBSD$ */
d32 1
a32 1
static char rcsid[] = "$OpenBSD: scandir.c,v 1.7 2003/06/02 20:18:34 millert Exp $";
@


1.1
log
@Initial revision
@
text
@d1 1
d14 1
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d32 1
a32 1
static char rcsid[] = "$OpenBSD: scandir.c,v 1.6 2002/07/30 22:47:22 millert Exp $";
d81 1
a81 1
	 * and dividing it by a multiple of the minimum size entry. 
d106 1
a106 1
		bcopy(d->d_name, p->d_name, p->d_namlen + 1);
d113 1
a113 1
			
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d13 5
a17 1
 * 3. Neither the name of the University nor the names of its contributors
d35 1
a35 1
static char rcsid[] = "$OpenBSD: scandir.c,v 1.7 2003/06/02 20:18:34 millert Exp $";
@


1.1.1.3
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d31 1
a31 1
static char rcsid[] = "$OpenBSD: scandir.c,v 1.8 2004/03/05 04:11:51 tedu Exp $";
d67 2
a68 2
	struct dirent *d, *p, **names = NULL;
	size_t nitems = 0;
d74 1
a74 1
		return (-1);
d76 1
a76 1
		goto fail;
d85 1
a85 1
		goto fail;
d89 1
a89 1
		goto fail;
d91 1
d95 11
a105 1

d110 2
a111 2
		if (nitems >= arraysz) {
			struct dirent **nnames;
d114 1
a114 2
				goto fail;

d118 5
a122 3
			if (nnames == NULL)
				goto fail;

d125 1
a125 14

		/*
		 * Make a minimum size copy of the data
		 */
		p = (struct dirent *)malloc(DIRSIZ(d));
		if (p == NULL)
			goto fail;

		p->d_ino = d->d_ino;
		p->d_type = d->d_type;
		p->d_reclen = d->d_reclen;
		p->d_namlen = d->d_namlen;
		bcopy(d->d_name, p->d_name, p->d_namlen + 1);
		names[nitems++] = p;
d131 1
a131 8
	return (nitems);

fail:
	while (nitems > 0)
		free(names[--nitems]);
	free(names);
	closedir(dirp);
	return (-1);
@


1.1.1.4
log
@OpenBSD libc as of today
@
text
@d31 1
a31 1
static char rcsid[] = "$OpenBSD: scandir.c,v 1.9 2004/05/18 02:05:52 jfb Exp $";
d61 5
a65 2
scandir(const char *dirname, struct dirent ***namelist,
    int (*select)(struct dirent *), int (*dcomp)(const void *, const void *))
d146 3
a148 1
alphasort(const void *d1, const void *d2)
@



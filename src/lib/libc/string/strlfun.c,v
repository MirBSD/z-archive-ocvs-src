head	1.7;
access;
symbols
	tg-mergetmp-mirosx-1:1.7
	tg-mergefixes-1-branch:1.7.0.4
	tg-mergefixes-1-base:1.7
	MIROS_X:1.7.0.2
	MIROS_X_BASE:1.7
	tg-mergetmp-3:1.7
	MIRBSD_XP_MIRPPC:1.5.0.4
	MIRBSD_XP_SPARC_BASE:1.5
	MIRBSD_XP_SPARC:1.5.0.2;
locks; strict;
comment	@ * @;


1.7
date	2004.12.05.16.07.53;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2004.11.10.17.28.41;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.27.19.35.37;	author tg;	state Stab;
branches;
next	1.4;

1.4
date	2004.07.23.07.29.32;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2004.06.30.18.05.40;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.27.18.52.23;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.24.21.11.18;	author tg;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update licence, comments
@
text
@/**	$MirBSD: src/share/misc/licence.template,v 1.20 2004/12/03 16:18:37 tg Rel $ */
/*	$OpenBSD: strlcpy.c,v 1.8 2003/06/17 21:56:24 millert Exp $ */
/*	$OpenBSD: strlcat.c,v 1.11 2003/06/17 21:56:24 millert Exp $ */

/*-
 * Copyright (c) 2004
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
 *
 * Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
 * any kind, expressed or implied, to the maximum extent permitted by
 * applicable law, but with the warranty of being written without ma-
 * licious intent or gross negligence; in no event shall licensor, an
 * author or contributor be held liable for any damage, direct, indi-
 * rect or other, however caused, arising in any way out of the usage
 * of this work, even if advised of the possibility of such damage.
 *-
 * Implementation for most of this code by myself.
 * Some optimisation ideas from Bodo Eggert (via d.a.s.r).
 * The rest of the code is covered by the terms below:
 *-
 * Copyright (c) 1998 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */


#include <sys/types.h>
#include <string.h>

#ifdef HAVE_CONFIG_H
/* packaged with third-party software */
#include "config.h"
#define LIBC_SCCS
#else /* ! def HAVE_CONFIG_H */
/* integrated into MirOS C library */
#undef HAVE_STRLCPY
#undef HAVE_STRLCAT
#endif /* ! def HAVE_CONFIG_H */

#ifndef __RCSID
#define __RCSID(x)	static const char __rcsid[] = (x)
#endif

__RCSID("$MirBSD: src/lib/libc/string/strlfun.c,v 1.6 2004/11/10 17:28:41 tg Exp $");


#ifndef	HAVE_STRLCPY
/*
 * Copy src to string dst of size siz.  At most siz-1 characters
 * will be copied.  Always NUL terminates (unless siz == 0).
 * Returns strlen(src); if retval >= siz, truncation occurred.
 */
size_t
strlcpy(char *dst, const char *src, size_t siz)
{
	const char *s = src;

	if (!siz) goto traverse_src;

	/* Copy as many bytes as will fit */
	for (; --siz && (*dst++ = *s++); /* nothing */)
		;

	/* Not enough room in dst, add NUL and traverse rest of src */
	if (!siz) {
		/* Save, since we've copied at max. (siz-1) characters */
		*dst = '\0';	/* NUL-terminate dst */
traverse_src:
		while (*s++)
			;
	}

	return (s - src - 1);	/* count does not include NUL */
}
#endif	/* ndef HAVE_STRLCPY */

#ifndef	HAVE_STRLCAT
/*
 * Appends src to string dst of size siz (unlike strncat, siz is the
 * full size of dst, not space left).  At most siz-1 characters
 * will be copied.  Always NUL terminates (unless siz <= strlen(dst)).
 * Returns strlen(src) + MIN(siz, strlen(initial dst)).
 * If retval >= siz, truncation occurred.
 */
size_t
strlcat(char *dst, const char *src, size_t siz)
{
	char *d = dst;
	size_t dl, n = siz;
	const size_t sl = strlen(src);

	while (n-- && (*d++ != '\0'))
		;
	if (!++n && (*d != '\0'))
		return strlen(src);

	dl = --d - dst;		/* original strlen(dst), max. siz-1 */
	n = siz - dl;
	dl += sl;

	if (!n--)
		return dl;

	if (n > sl)
		n = sl;		/* number of octets to copy */
	for (; n-- && (*d++ = *src++); /* nothing */)
		;
	*d = '\0';		/* NUL-terminate dst */
	return dl;
}
#endif	/* ndef HAVE_STRLCAT */
@


1.6
log
@* new licence template
* better RCS ID macro
@
text
@d1 1
a1 1
/**	$MirBSD: src/lib/libc/string/strlfun.c,v 1.5 2004/08/27 19:35:37 tg Stab $ */
d22 1
a22 1
 * of covered work, even if advised of the possibility of such damage.
d25 1
a25 1
 * Some optimizations idea from Bodo Eggert in d.a.s.r.
d27 1
a27 3
 */

/*
d58 1
a58 2
#define __RCSID(x)	static const char __rcsid[] \
			__attribute__((section(".comment"))) = (x)
d61 1
a61 1
__RCSID("$MirBSD: src/lib/libc/string/strlfun.c,v 1.5 2004/08/27 19:35:37 tg Stab $");
d85 1
a85 1
  traverse_src:
d106 1
a106 1
	size_t n = siz, dl;
d113 1
@


1.5
log
@minor nits
@
text
@d1 1
a1 1
/**	$MirBSD: src/lib/libc/string/strlfun.c,v 1.4 2004/07/23 07:29:32 tg Exp $ */
d10 5
a14 5
 * tion, including unlimited rights to use, publically perform, modi-
 * fy, merge, distribute, sell, give away or sublicence, provided the
 * above copyright notices, these terms and the disclaimer are retai-
 * ned in all redistributions, or reproduced in accompanying documen-
 * tation or other materials provided with binary redistributions.
d24 3
a26 2
 * Implementation by myself
 * Some optimizations idea from Bodo Eggert
d49 1
a49 1
#ifdef	HAVE_CONFIG_H
d52 13
a64 12
#define	LIBC_SCCS
#else	/* ! def(HAVE_CONFIG_H) */
/* integrated into C library */
#undef	HAVE_STRLCPY
#undef	HAVE_STRLCAT
#endif	/* ! def(HAVE_CONFIG_H) */

#if defined(__RCSID)
__RCSID("$MirBSD: src/lib/libc/string/strlfun.c,v 1.4 2004/07/23 07:29:32 tg Exp $");
#elif defined(LIBC_SCCS) && !defined(lint)
static const char rcsid[] = "$MirBSD: src/lib/libc/string/strlfun.c,v 1.4 2004/07/23 07:29:32 tg Exp $";
#endif	/* LIBC_SCCS and not lint */
@


1.4
log
@adhere to documentation: check if source is C string
in strlcat() -> used by GNU configure check in glib2
@
text
@d1 3
a3 3
/* $MirBSD: src/lib/libc/string/strlfun.c,v 1.3 2004/06/30 18:05:40 tg Exp $ */
/* $OpenBSD: strlcpy.c,v 1.8 2003/06/17 21:56:24 millert Exp $ */
/* $OpenBSD: strlcat.c,v 1.11 2003/06/17 21:56:24 millert Exp $ */
d59 1
a59 1
__RCSID("$MirBSD: src/lib/libc/string/strlfun.c,v 1.3 2004/06/30 18:05:40 tg Exp $");
d61 1
a61 1
static const char rcsid[] = "$MirBSD: src/lib/libc/string/strlfun.c,v 1.3 2004/06/30 18:05:40 tg Exp $";
@


1.3
log
@* update licence template
* move system includes up
* check if __RCSID is defined, and use it, else use the
  old-fashioned static const char rcsid[] method (with-
  out __attribute__ cause it's for portable mirbsdksh)
@
text
@d1 1
a1 1
/* $MirBSD: src/lib/libc/string/strlfun.c,v 1.2 2004/04/27 18:52:23 tg Exp $ */
d24 1
a24 1
 *
d59 1
a59 1
__RCSID("$MirBSD$");
d61 1
a61 1
static const char rcsid[] = "$MirBSD: src/lib/libc/string/strlfun.c,v 1.2 2004/04/27 18:52:23 tg Exp $";
d112 2
@


1.2
log
@the cause of some bugs: don't count the trailing NUL byte
as part of the string length, or, even worse, append the
string after it.

this slows down strlcat() by another DEC operation, but it
should still be en par or faster than the other implementation.
@
text
@d1 1
a1 1
/* $MirBSD: src/lib/libc/string/strlfun.c,v 1.1 2004/04/24 21:11:18 tg Exp $ */
d5 3
a7 2
/* Copyright (c) 2004
 *	Thorsten "mirabile" Glaser <x86@@ePost.de>
d9 15
a23 6
 * Subject to these terms, everybody who obtained a copy of this work
 * is hereby permitted to deal in the work without restriction inclu-
 * ding without limitation the rights to use, distribute, sell, modi-
 * fy, publically perform, give away, merge or sublicence it provided
 * this notice is kept and the authors and contributors are given due
 * credit in derivates or accompanying documents.
a24 8
 * This work is provided by its developers (authors and contributors)
 * "as is" and without any warranties whatsoever, express or implied,
 * to the maximum extent permitted by applicable law; in no event may
 * developers be held liable for damage caused, directly or indirect-
 * ly, but not by a developer's malice intent, even if advised of the
 * possibility of such damage.
 */
/*
d27 1
d44 4
d58 4
a61 2
#if defined(LIBC_SCCS) && !defined(lint)
static const char rcsid[] = "$MirBSD: src/lib/libc/string/strlfun.c,v 1.1 2004/04/24 21:11:18 tg Exp $";
a62 3

#include <sys/types.h>
#include <string.h>
@


1.1
log
@optimize strlcpy/strlcat functions, derived from a
discussion thread in usenet
for -O2, both new functions are an improvement
(especially strlcpy)
for -Os, strlcat is a bit slower than the original
@
text
@d1 1
a1 1
/* $MirBSD$ */
d52 1
a52 1
static const char rcsid[] = "$MirBSD$";
d106 1
a106 1
	dl = d - dst;		/* original strlen(dst), max. siz-1 */
@


head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.5
	tg-mergefixes-1-branch:1.1.1.5.0.4
	tg-mergefixes-1-base:1.1.1.5
	MIROS_X:1.1.1.5.0.2
	MIROS_X_BASE:1.1.1.5
	tg-mergetmp-3:1.1.1.5
	MIRBSD_XP_MIRPPC:1.1.1.3.0.4
	cvs-200410261930:1.1.1.5
	cvs-200410222040:1.1.1.4
	tg-mergetmp-1:1.1.1.3
	MIRBSD_XP_SPARC_BASE:1.1.1.3
	MIRBSD_XP_SPARC:1.1.1.3.0.2
	cvs-200406230735:1.1.1.3
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.3
	cvs-200402042200:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309261655:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3255:1.1.1.1
	ctm-3229:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2003.03.22.17.46.18;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.46.18;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.17.24.41;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.01.02.17.56.37;	author tg;	state Stab;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.10.22.20.49.01;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.10.26.19.35.19;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\"	$OpenBSD: getservent.3,v 1.11 2000/12/24 00:30:56 aaron Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd January 12, 1994
.Dt GETSERVENT 3
.Os
.Sh NAME
.Nm getservent ,
.Nm getservbyport ,
.Nm getservbyname ,
.Nm setservent ,
.Nm endservent
.Nd get service entry
.Sh SYNOPSIS
.Fd #include <netdb.h>
.Ft struct servent *
.Fn getservent "void"
.Ft struct servent *
.Fn getservbyname "char *name" "char *proto"
.Ft struct servent *
.Fn getservbyport "int port" "char *proto"
.Ft void
.Fn setservent "int stayopen"
.Ft void
.Fn endservent "void"
.Sh DESCRIPTION
The
.Fn getservent ,
.Fn getservbyname ,
and
.Fn getservbyport
functions each return a pointer to an object with the following structure
containing the broken-out fields of a line in the network services database,
.Pa /etc/services .
.Bd -literal -offset indent
struct	servent {
	char	*s_name;	/* official name of service */
	char	**s_aliases;	/* alias list */
	int	s_port;		/* port service resides at */
	char	*s_proto;	/* protocol to use */
};
.Ed
.Pp
The members of this structure are:
.Bl -tag -width s_aliases
.It Fa s_name
The official name of the service.
.It Fa s_aliases
A zero-terminated list of alternate names for the service.
.It Fa s_port
The port number at which the service resides.
Port numbers are returned in network byte order.
.It Fa s_proto
The name of the protocol to use when contacting the service.
.El
.Pp
The
.Fn getservent
function reads the next line of the file, opening the file if necessary.
.Pp
The
.Fn setservent
function opens and rewinds the file.
If the
.Fa stayopen
flag is non-zero,
the net database will not be closed after each call to
.Fn getservbyname
or
.Fn getservbyport .
.Pp
The
.Fn endservent
function closes the file.
.Pp
The
.Fn getservbyname
and
.Fn getservbyport
functions sequentially search from the beginning of the file until a
matching protocol name or port number (specified in network byte order)
is found, or until
.Dv EOF
is encountered.
If a protocol name is also supplied (non-null),
searches must also match the protocol.
.Sh FILES
.Bl -tag -width /etc/services -compact
.It Pa /etc/services
.El
.Sh DIAGNOSTICS
Null pointer (0) returned on
.Dv EOF
or error.
.Sh SEE ALSO
.Xr getprotoent 3 ,
.Xr services 5
.Sh HISTORY
The
.Fn getservent ,
.Fn getservbyport ,
.Fn getservbyname ,
.Fn setservent ,
and
.Fn endservent
functions appeared in
.Bx 4.2 .
.Sh BUGS
These functions use static data storage; if the data is needed for future use,
it should be copied before any subsequent calls overwrite it.
Expecting port numbers to fit in a 32-bit quantity is probably naive.
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getservent.3,v 1.12 2003/06/02 20:18:35 millert Exp $
d14 5
a18 1
.\" 3. Neither the name of the University nor the names of its contributors
@


1.1.1.3
log
@Import OpenBSD again, for various reasons.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getservent.3,v 1.13 2003/12/30 10:35:36 jmc Exp $
d45 1
a45 1
.Fn getservbyname "const char *name" "const char *proto"
d47 1
a47 1
.Fn getservbyport "int port" "const char *proto"
@


1.1.1.4
log
@import some updates/fixes from openbsd
@
text
@d1 1
a1 1
.\"	$OpenBSD: getservent.3,v 1.14 2004/10/17 20:24:23 millert Exp $
d30 1
a30 1
.Dd October 13, 2004
a34 1
.Nm getservent_r ,
a35 1
.Nm getservbyport_r ,
a36 1
.Nm getservbyname_r ,
d38 1
a38 3
.Nm setservent_r ,
.Nm endservent ,
.Nm endservent_r
a44 2
.Fn getservent_r "struct servent *servent" "struct servent_data *servent_data"
.Ft struct servent *
a46 2
.Fn getservbyname_r "const char *name" "const char *proto" "struct servent *servent" "struct servent_data *servent_data"
.Ft struct servent *
a47 2
.Ft struct servent *
.Fn getservbyport_r "int port" "const char *proto" "struct servent *servent" "struct servent_data *servent_data"
a50 2
.Fn setservent_r "int stayopen" "struct servent_data *servent_data"
.Ft void
a51 2
.Ft void
.Fn endservent_r "struct servent_data *servent_data"
a112 24
.Pp
The
.Fn getservent_r ,
.Fn getservbyport_r ,
.Fn getservbyname_r ,
.Fn setservent_r ,
and
.Fn endservent_r
functions are reentrant versions of the above functions that take a
pointer to a
.Fa servent_data
structure which is used to store state information.
The structure must be zero-filled before it is used
and should be considered opaque for the sake of portability.
.Pp
The
.Fn getservent_r ,
.Fn getservbyport_r ,
and
.Fn getservbyname_r
functions
also take a pointer to a
.Fa servent
structure which is used to store the results of the database lookup.
a132 1
.Pp
a133 9
The
.Fn getservent_r ,
.Fn getservbyport_r ,
.Fn getservbyname_r ,
.Fn setservent_r ,
and
.Fn endservent_r
functions appeared in
.Ox 3.7 .
d135 2
a136 2
The non-reentrant functions use static data storage; if the data is needed
for future use, it should be copied before any subsequent calls overwrite it.
@


1.1.1.5
log
@* include, libc/net: openbsd borked on the initial get*_r api
* sys/ufs: generic sync w/ openbsd, in the hope to fix stuff.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getservent.3,v 1.16 2004/10/26 15:52:50 millert Exp $
d49 1
a49 1
.Ft int
d53 1
a53 1
.Ft int
d57 1
a57 1
.Ft int
d156 4
a159 18
.Sh RETURN VALUES
The
.Fn getservent ,
.Fn getservbyport ,
and
.Fn getservbyname
functions return a pointer to a
.Fa servent
structure on success or a null pointer if end-of-file
is reached or an error occurs.
.Pp
The
.Fn getservent_r ,
.Fn getservbyport_r ,
and
.Fn getservbyname_r
functions return 0 on success or \-1 if end-of-file
is reached or an error occurs.
a162 20
.Sh STANDARDS
The
.Fn getservent ,
.Fn getservbynumber ,
.Fn getservbyname ,
.Fn setservent ,
and
.Fn endservent
functions conform to
.St -p1003.1-2003 .
.Pp
The
.Fn getservent_r ,
.Fn getservbyport_r ,
.Fn getservbyname_r ,
.Fn setservent_r ,
and
.Fn endservent_r
functions are not currently standardized.
This implementation follows the API used by HP, IBM and Digital.
@



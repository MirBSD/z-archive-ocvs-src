head	1.5;
access;
symbols
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.4
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	cvs-200307072125:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200307030815:1.1.1.1
	cvs-200307021520:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2004.09.15.18.00.59;	author tg;	state dead;
branches;
next	1.4;

1.4
date	2004.05.21.21.10.54;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2003.12.23.13.42.04;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.15.00.37.46;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.35.11;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.35.11;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.09.25.16.08.10;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.12.22.20.23.17;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.05.16.07.26.23;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove the openbsd-style installation documentation
Benny will provide some new, better, later.
@
text
@dnl	$MirBSD: src/distrib/notes/i386/upgrade,v 1.4 2004/05/21 21:10:54 tg Stab $
dnl	$OpenBSD: upgrade,v 1.24 2004/03/28 20:38:09 millert Exp $
dnl OpenBSDUpgrade({:-the CD-ROM or an installation floppy as you would do for
dnl a new installation-:})
Upgrading is not recommended and may not be possible.

When prompted, select the (U)pgrade option rather than the (I)nstall
option at the prompt in the install process.

The upgrade script will ask you for the existing root partition, and
will use the existing filesystems defined in /etc/fstab to install the
new system in. It will also use your existing network parameters.

From then on, the upgrade procedure is very close to the installation
procedure described earlier in this document. Note that the upgrade
procedure will not let you pick the ``etc{:--:}OSrev.tgz'' set, so as to
preserve your files in `/etc' which you are likely to have customized
since a previous installation.

When the upgrade procedure tells you that the upgrade is complete, do not
reboot the system yet.

It is STRONGLY advised that you unpack the etc{:--:}OSrev.tgz set in
a temporary directory and merge changes by hand, since all components of
your system may not function correctly until your files in `/etc' are
updated.
@


1.4
log
@not-so-easy merge
note: the release process is currently marked as broken, because
the install.sub file needs some major fixes.
they are so major I'll eventually rewrite the stuff now. let's see.
@
text
@d1 1
a1 1
dnl	$MirBSD: src/distrib/notes/i386/upgrade,v 1.3 2003/12/23 13:42:04 tg Exp $
@


1.3
log
@* merge in OpenBSD
* rename cd34.iso to cdrom8.iso

XXX gzip/compress on ramdisk in MirOS should still
XXX	be able to compress and not only decompress
XXX	files. must be revisited
@
text
@d1 2
a2 2
dnl	$MirBSD$
dnl	$OpenBSD: upgrade,v 1.22 2003/11/10 22:11:35 espie Exp $
d5 1
a5 3
Due to the change from a.out to ELF binary format in OpenBSD 3.4,
upgrades can be a complex, delicate process. The best solution, whenever
possible, is to backup your data and reinstall from scratch.
d7 2
a8 3
The second best solution is to remove all ports, third party programs and
libraries installed on your system; upgrade; and then add ELF versions of
the removed files.
d10 3
a12 3
In all cases, once you start the upgrade you MUST complete it. If the
upgrade process fails or is abandoned before it completes you will almost
certainly be left with a non-functional system.
d14 5
a18 2
Finally, you cannot use the bsd.rd kernel to upgrade the system. The
existing bootblocks on your system cannot boot the OSREV bsd.rd.
d20 7
a26 5
If you must do an upgrade while preserving the functionality of any
existing a.out binary files, you've got a problem. This is not
supported in MirBSD OSREV any more, because every version since
MirBSD #2 has had ELF exec support, and MirBSD #3 onwards was ELF,
although before MirBSD #5 the binary format changed again.
@


1.2
log
@Nuke cdrom34.fs, we don't need it any more.
Move to cd34.iso based upon /boot and bsd.rd (gzipped).
@
text
@d1 2
a2 1
dnl	$OpenBSD: upgrade,v 1.20 2003/09/09 22:03:56 miod Exp $
d5 1
a5 1
Due to the change from a.out to ELF binary format in OpenBSD OSREV,
d21 4
a24 79
existing a.out binary files, then the rest of this section will guide you
through that process.

The two main hurdles in upgrading from an a.out system to an ELF OpenBSD
OSREV system while preserving the functioning of a.out binaries are:
- the a.out binary emulation, required for compatibility with a.out
  binaries using shared libraries, is not enabled by default, and requires
  an explicit configuration change.
- a.out shared libraries (lib*.so) need to be moved to a specific location
  for proper operation of older binaries.

Before you start the upgrade process, the a.out emulation area needs to be
set up. It needs to be put inside a /emul/a.out hierarchy. This directory can,
however, be a symbolic link, should the available space in the root partition
not be enough.

It is recommended that the following instructions and commands are issued in
single-user mode.

The /emul/a.out hierarchy should be populated by the a.out shared libraries.
An easy way to do it is to run the following commands as root:

   mkdir -p /emul/a.out/var/run
   tar cf - /sbin/ldconfig /usr/bin/ldd /usr/libexec/ld.so |
       tar -C /emul/a.out -xpf -
   for lib in $(/sbin/ldconfig -r |
     awk '/=>/ { print $3 }');
   do
     dirname $lib;
   done | sort -u > /root/a.out-libdirs
   tar cf - $(find $(< /root/a.out-libdirs) -name "lib*.so.*") |
       tar -C /emul/a.out -xpf -

Then, a cache of these shared libraries must be generated with:

   cp /var/run/ld.so.hints /var/run/ld.so.hints.backup
   /sbin/ldconfig -s $(/usr/bin/sed 's,^/,/emul/a.out/,' /root/a.out-libdirs) 
   /bin/mv /var/run/ld.so.hints /emul/a.out/var/run
   /bin/mv /var/run/ld.so.hints.backups /var/run/ld.so.hints

The last step before the upgrade is to enable the a.out emulation, in
order to be sure that /etc/rc.local or any other customization you have
made to the system will still run:

  echo "kern.emul.aout=1" >> /etc/sysctl.conf

Hint: you will need a kernel with COMPAT_AOUT compiled in. The MirBSD
GENERIC and RAMDISK* kernels do NOT contain this option!

The upgrade is now possible. Boot from the CD-ROM or an installation
floppy, as you would do for a new installation. 

When prompted, select the (U)pgrade option rather than the (I)nstall
option at the prompt in the install process.

The upgrade script will ask you for the existing root partition, and
will use the existing filesystems defined in /etc/fstab to install the
new system in. It will also use your existing network parameters.

From then, the upgrade procedure is very close to the installation
procedure described earlier in this document. Note that the upgrade
procedure will not let you pick the ``etc{:--:}OSrev.tgz'' set, so as to
preserve your files in `/etc' which you are likely to have customized
since a previous installation.

When the upgrade procedure tells you that the upgrade is complete, do not
reboot the system yet.

However, it is strongly advised that you unpack the etc{:--:}OSrev.tgz set in
a temporary directory and merge changes by hand, since all components of
your system may not function correctly until your files in `/etc' are
updated.

After the upgrade is completed, it is now possible to remove the old a.out
shared libraries from their initial locations:

  rm -f $(file $(find $(< /root/a.out-libdirs) -name "lib*.so.*") |
    awk -F: '/demand paged/ { print $1 }')
  rm -f /root/a.out-libdirs
@


1.1
log
@Initial revision
@
text
@d1 98
a98 2
OpenBSDUpgrade({:-the CD-ROM or an installation floppy as you would do for
a new installation-:})
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Release Time. Synchronize with OpenBSD 3.4-current (base system).
@
text
@d1 2
a2 95
dnl	$OpenBSD: upgrade,v 1.20 2003/09/09 22:03:56 miod Exp $
dnl OpenBSDUpgrade({:-the CD-ROM or an installation floppy as you would do for
dnl a new installation-:})
Due to the change from a.out to ELF binary format in OpenBSD OSREV,
upgrades can be a complex, delicate process. The best solution, whenever
possible, is to backup your data and reinstall from scratch.

The second best solution is to remove all ports, third party programs and
libraries installed on your system; upgrade; and then add ELF versions of
the removed files.

In all cases, once you start the upgrade you MUST complete it. If the
upgrade process fails or is abandoned before it completes you will almost
certainly be left with a non-functional system.

Finally, you cannot use the bsd.rd kernel to upgrade the system. The
existing bootblocks on your system cannot boot the OSREV bsd.rd.

If you must do an upgrade while preserving the functionality of any
existing a.out binary files, then the rest of this section will guide you
through that process.

The two main hurdles in upgrading from an a.out system to an ELF OpenBSD
OSREV system while preserving the functioning of a.out binaries are:
- the a.out binary emulation, required for compatibility with a.out
  binaries using shared libraries, is not enabled by default, and requires
  an explicit configuration change.
- a.out shared libraries (lib*.so) need to be moved to a specific location
  for proper operation of older binaries.

Before you start the upgrade process, the a.out emulation area needs to be
set up. It needs to be put inside a /emul/a.out hierarchy. This directory can,
however, be a symbolic link, should the available space in the root partition
not be enough.

It is recommended that the following instructions and commands are issued in
single-user mode.

The /emul/a.out hierarchy should be populated by the a.out shared libraries.
An easy way to do it is to run the following commands as root:

   mkdir -p /emul/a.out/var/run
   tar cf - /sbin/ldconfig /usr/bin/ldd /usr/libexec/ld.so |
       tar -C /emul/a.out -xpf -
   for lib in $(/sbin/ldconfig -r |
     awk '/=>/ { print $3 }');
   do
     dirname $lib;
   done | sort -u > /root/a.out-libdirs
   tar cf - $(find $(< /root/a.out-libdirs) -name "lib*.so.*") |
       tar -C /emul/a.out -xpf -

Then, a cache of these shared libraries must be generated with:

   cp /var/run/ld.so.hints /var/run/ld.so.hints.backup
   /sbin/ldconfig -s $(/usr/bin/sed 's,^/,/emul/a.out/,' /root/a.out-libdirs) 
   /bin/mv /var/run/ld.so.hints /emul/a.out/var/run
   /bin/mv /var/run/ld.so.hints.backups /var/run/ld.so.hints

The last step before the upgrade is to enable the a.out emulation, in
order to be sure that /etc/rc.local or any other customization you have
made to the system will still run:

  echo "kern.emul.aout=1" >> /etc/sysctl.conf

The upgrade is now possible. Boot from the CD-ROM or an installation
floppy, as you would do for a new installation. 

When prompted, select the (U)pgrade option rather than the (I)nstall
option at the prompt in the install process.

The upgrade script will ask you for the existing root partition, and
will use the existing filesystems defined in /etc/fstab to install the
new system in. It will also use your existing network parameters.

From then, the upgrade procedure is very close to the installation
procedure described earlier in this document. Note that the upgrade
procedure will not let you pick the ``etc{:--:}OSrev.tgz'' set, so as to
preserve your files in `/etc' which you are likely to have customized
since a previous installation.

When the upgrade procedure tells you that the upgrade is complete, do not
reboot the system yet.

However, it is strongly advised that you unpack the etc{:--:}OSrev.tgz set in
a temporary directory and merge changes by hand, since all components of
your system may not function correctly until your files in `/etc' are
updated.

After the upgrade is completed, it is now possible to remove the old a.out
shared libraries from their initial locations:

  rm -f $(file $(find $(< /root/a.out-libdirs) -name "lib*.so.*") |
    awk -F: '/demand paged/ { print $1 }')
  rm -f /root/a.out-libdirs
@


1.1.1.3
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
dnl	$OpenBSD: upgrade,v 1.22 2003/11/10 22:11:35 espie Exp $
a64 8


ATTENTION! Several configuration files under /etc, such as /etc/login.conf,
will refer to existing a.out binaries. DO NOT UPGRADE YOUR SYSTEM UNLESS
YOU HAVE ENABLED A.OUT EMULATION FIRST! After you merge configuration files
changes and replace or remove your existing a.out binaries, it will be
possible to disable a.out emulation.

@


1.1.1.4
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
dnl	$OpenBSD: upgrade,v 1.24 2004/03/28 20:38:09 millert Exp $
d4 14
a17 18
Prior to version 3.4, OpenBSD used the a.out binary format.  Beginning
with version 3.4, OpenBSD uses the ELF binary format.  Because of
this, upgrades from a version of OpenBSD prior to 3.4 can be a
complex, delicate process.  The best solution, whenever possible,
is to back up your data and reinstall from scratch.

The second best solution is to remove all ports, third party programs
and libraries installed on your system; upgrade; and then add ELF
versions of the removed files.

In all cases, once you start the upgrade you MUST complete it. If
the upgrade process fails, or is abandoned before it completes, you
will almost certainly be left with a non-functional system.

If upgrading from a version of OpenBSD prior to 3.4, you cannot use
the bsd.rd kernel to upgrade the system.  The existing bootblocks
on your system cannot boot the OSREV bsd.rd--use the bsd.rd-a.out
kernel instead.
d32 1
a32 1
set up. It needs to be put inside an /emul/a.out hierarchy. This directory can,
d74 2
a75 2
The upgrade is now possible. Boot from the CD-ROM, an installation
floppy, or the bsd.rd-a.out kernel as you would do for a new installation. 
d84 1
a84 1
From then on, the upgrade procedure is very close to the installation
d93 1
a93 1
It is STRONGLY advised that you unpack the etc{:--:}OSrev.tgz set in
d98 1
a98 1
After the upgrade is completed, it is possible to remove the old a.out
@



head	1.4;
access;
symbols
	tg-mergetmp-mirosx-1:1.4
	tg-mergefixes-1-branch:1.4.0.4
	tg-mergefixes-1-base:1.4
	MIROS_X:1.4.0.2
	MIROS_X_BASE:1.4
	tg-mergetmp-3:1.4
	cvs-200412082250:1.1.1.3
	cvs-200411261545:1.1.1.2
	MIRBSD_XP_MIRPPC:1.2.0.4
	cvs-200410281445:1.1.1.1
	cvs-200410222245:1.1.1.1
	cvs-200410151735:1.1.1.1
	cvs-200410141645:1.1.1.1
	MIRBSD_XP_SPARC_BASE:1.2
	MIRBSD_XP_SPARC:1.2.0.2
	cvs-200409261605:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2004.12.08.22.56.43;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.11.26.16.50.10;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.26.17.38.53;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.09.26.16.09.59;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.09.26.16.09.59;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.11.26.15.49.42;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.12.08.22.51.46;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@merge what we want
@
text
@/**	$MirBSD: src/usr.sbin/ntpd/util.c,v 1.3 2004/11/26 16:50:10 tg Exp $ */
/*	$OpenBSD: util.c,v 1.10 2004/12/08 15:47:38 mickey Exp $ */

/*
 * Copyright (c) 2004
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
 * Copyright (c) 2004 Alexander Guy <alexander.guy@@andern.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER
 * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/time.h>
#include <limits.h>

#include "ntpd.h"

__RCSID("$MirBSD: src/usr.sbin/ntpd/util.c,v 1.3 2004/11/26 16:50:10 tg Exp $");

double
gettime(void)
{
	tai64na_t t;

	taina_time(&t);
	return (1.0E-09 * t.nano + tai2utc(t.secs) + JAN_1970);
}


void
d_to_tv(double d, struct timeval *tv)
{
	tv->tv_sec = (long)d;
	tv->tv_usec = (d - tv->tv_sec) * 1000000;
}

double
lfp_to_d(struct l_fixedpt lfp)
{
	double	ret;

	lfp.int_partl = ntohl(lfp.int_partl);
	lfp.fractionl = ntohl(lfp.fractionl);

	ret = (double)(lfp.int_partl) + ((double)lfp.fractionl / UINT_MAX);

	return (ret);
}

struct l_fixedpt
d_to_lfp(double d)
{
	struct l_fixedpt	lfp;

	lfp.int_partl = htonl((u_int32_t)d);
	lfp.fractionl = htonl((u_int32_t)((d - (u_int32_t)d) * UINT_MAX));

	return (lfp);
}

double
sfp_to_d(struct s_fixedpt sfp)
{
	double	ret;

	sfp.int_parts = ntohs(sfp.int_parts);
	sfp.fractions = ntohs(sfp.fractions);

	ret = (double)(sfp.int_parts) + ((double)sfp.fractions / USHRT_MAX);

	return (ret);
}

struct s_fixedpt
d_to_sfp(double d)
{
	struct s_fixedpt	sfp;

	sfp.int_parts = htons((u_int16_t)d);
	sfp.fractions = htons((u_int16_t)((d - (u_int16_t)d) * USHRT_MAX));

	return (sfp);
}
@


1.3
log
@merge
@
text
@d1 2
a2 2
/**	$MirBSD: src/usr.sbin/ntpd/util.c,v 1.2 2004/09/26 17:38:53 tg Exp $ */
/*	$OpenBSD: util.c,v 1.9 2004/11/12 17:24:52 henning Exp $ */
d27 1
a27 1
__RCSID("$MirBSD: src/usr.sbin/ntpd/util.c,v 1.2 2004/09/26 17:38:53 tg Exp $");
d51 2
a52 2
	lfp.int_part = ntohl(lfp.int_part);
	lfp.fraction = ntohl(lfp.fraction);
d54 1
a54 1
	ret = (double)(lfp.int_part) + ((double)lfp.fraction / UINT_MAX);
d64 2
a65 2
	lfp.int_part = htonl((u_int32_t)d);
	lfp.fraction = htonl((u_int32_t)((d - (u_int32_t)d) * UINT_MAX));
d75 2
a76 2
	sfp.int_part = ntohs(sfp.int_part);
	sfp.fraction = ntohs(sfp.fraction);
d78 1
a78 1
	ret = (double)(sfp.int_part) + ((double)sfp.fraction / USHRT_MAX);
d88 2
a89 2
	sfp.int_part = htons((u_int16_t)d);
	sfp.fraction = htons((u_int16_t)((d - (u_int16_t)d) * USHRT_MAX));
@


1.2
log
@add support for leap seconds
@
text
@d1 2
a2 2
/**	$MirBSD$ */
/*	$OpenBSD: util.c,v 1.8 2004/07/10 22:24:20 alexander Exp $ */
d23 1
d27 1
a27 1
__RCSID("$MirBSD$");
@


1.1
log
@Initial revision
@
text
@d1 1
d5 2
d26 2
d31 1
a31 4
	struct timeval	tv;

	if (gettimeofday(&tv, NULL) == -1)
		fatal("gettimeofday");
d33 2
a34 1
	return (tv.tv_sec + JAN_1970 + 1.0e-6 * tv.tv_usec);
@


1.1.1.1
log
@current ntpd from OpenBSD, for a bit of fun before starting the hard work
@
text
@@


1.1.1.2
log
@another bunch of fixes from obsd, and a big isakmpd update (need testers!)
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.9 2004/11/12 17:24:52 henning Exp $ */
a19 1
#include <limits.h>
@


1.1.1.3
log
@another ntpd update from obsd
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.10 2004/12/08 15:47:38 mickey Exp $ */
d48 2
a49 2
	lfp.int_partl = ntohl(lfp.int_partl);
	lfp.fractionl = ntohl(lfp.fractionl);
d51 1
a51 1
	ret = (double)(lfp.int_partl) + ((double)lfp.fractionl / UINT_MAX);
d61 2
a62 2
	lfp.int_partl = htonl((u_int32_t)d);
	lfp.fractionl = htonl((u_int32_t)((d - (u_int32_t)d) * UINT_MAX));
d72 2
a73 2
	sfp.int_parts = ntohs(sfp.int_parts);
	sfp.fractions = ntohs(sfp.fractions);
d75 1
a75 1
	ret = (double)(sfp.int_parts) + ((double)sfp.fractions / USHRT_MAX);
d85 2
a86 2
	sfp.int_parts = htons((u_int16_t)d);
	sfp.fractions = htons((u_int16_t)((d - (u_int16_t)d) * USHRT_MAX));
@



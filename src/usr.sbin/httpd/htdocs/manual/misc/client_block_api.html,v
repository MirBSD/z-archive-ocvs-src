head	1.4;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.1
	tg-mergefixes-1-branch:1.1.1.1.0.10
	tg-mergefixes-1-base:1.1.1.1
	MIROS_X:1.1.1.1.0.8
	MIROS_X_BASE:1.1.1.1
	tg-mergetmp-3:1.1.1.1
	cvs-200412121715:1.1.1.1
	cvs-200412040100:1.1.1.1
	MIRBSD_XP_MIRPPC:1.4.0.4
	aphttpd-1_3_33:1.1.8.1
	cvs-200410222040:1.1.1.1
	tg-mergetmp-1:1.1.1.1
	MIRBSD_XP_SPARC_BASE:1.4
	MIRBSD_XP_SPARC:1.4.0.2
	cvs-200408220000:1.1.1.1
	aphttpd-1_3_31:1.1.8.1
	ASF:1.1.8
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	apache-1_3_29:1.1.8.1
	apache-1_3_28:1.1.8.1
	apache:1.1.8
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2004.08.21.23.30.35;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2004.08.21.23.10.16;	author tg;	state dead;
branches;
next	1.2;

1.2
date	2004.08.21.22.57.06;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.55.11;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.8.1;
next	;

1.1.1.1
date	2003.03.22.17.55.11;	author tg;	state Exp;
branches;
next	;

1.1.8.1
date	2003.10.29.13.59.08;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@even more sync with old work
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Reading Client Input in Apache 1.2</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" />

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Reading Client Input in Apache 1.2</h1>
    <hr />

    <p>Apache 1.1 and earlier let modules handle POST and PUT
    requests by themselves. The module would, on its own, determine
    whether the request had an entity, how many bytes it was, and
    then called a function (<code>read_client_block</code>) to get
    the data.</p>

    <p>However, HTTP/1.1 requires several things of POST and PUT
    request handlers that did not fit into this module, and all
    existing modules have to be rewritten. The API calls for
    handling this have been further abstracted, so that future HTTP
    protocol changes can be accomplished while remaining
    backwards-compatible.</p>
    <hr />

    <h3>The New API Functions</h3>
<pre>
   int ap_setup_client_block (request_rec *, int read_policy);
   int ap_should_client_block (request_rec *);
   long ap_get_client_block (request_rec *, char *buffer, int buffer_size);
</pre>

    <ol>
      <li>
        Call <code>ap_setup_client_block()</code> near the
        beginning of the request handler. This will set up all the
        necessary properties, and will return either OK, or an
        error code. If the latter, the module should return that
        error code. The second parameter selects the policy to
        apply if the request message indicates a body, and how a
        chunked transfer-coding should be interpreted. Choose one
        of
<pre>
    REQUEST_NO_BODY          Send 413 error if message has any body
    REQUEST_CHUNKED_ERROR    Send 411 error if body without Content-Length
    REQUEST_CHUNKED_DECHUNK  If chunked, remove the chunks for me.
    REQUEST_CHUNKED_PASS     Pass the chunks to me without removal.
</pre>
        In order to use the last two options, the caller MUST
        provide a buffer large enough to hold a chunk-size line,
        including any extensions.
      </li>

      <li>When you are ready to possibly accept input, call
      <code>ap_should_client_block()</code>. This will tell the
      module whether or not to read input. If it is 0, the module
      should assume that the input is of a non-entity type
      (<em>e.g.</em>, a GET request). A nonzero response indicates
      that the module should proceed (to step 3). This step also
      sends a 100 Continue response to HTTP/1.1 clients, so should
      not be called until the module is
      <strong>*definitely*</strong> ready to read content.
      (otherwise, the point of the 100 response is defeated). Never
      call this function more than once.</li>

      <li>Finally, call <code>ap_get_client_block</code> in a loop.
      Pass it a buffer and its size. It will put data into the
      buffer (not necessarily the full buffer, in the case of
      chunked inputs), and return the length of the input block.
      When it is done reading, it will return 0 if EOF, or -1 if
      there was an error.</li>
    </ol>

    <p>As an example, please look at the code in
    <code>mod_cgi.c</code>. This is properly written to the new API
    guidelines.</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

  </body>
</html>
@


1.3
log
@cvs error
@
text
@@


1.2
log
@update to an older version of my httpd work
@
text
@@


1.1
log
@Initial revision
@
text
@d15 1
a15 1
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 
d54 1
a54 1
        of 
a96 1

@


1.1.8.1
log
@Import Apache HTTPD 1.3.28 into vendor branch to ease update
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

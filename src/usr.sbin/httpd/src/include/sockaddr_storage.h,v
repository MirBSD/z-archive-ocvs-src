head	1.2;
access;
symbols
	tg-mergetmp-mirosx-1:1.2
	tg-mergefixes-1-branch:1.2.0.4
	tg-mergefixes-1-base:1.2
	MIROS_X:1.2.0.2
	MIROS_X_BASE:1.2
	tg-mergetmp-3:1.2
	MIRBSD_XP_MIRPPC:1.1.0.10
	MIRBSD_XP_SPARC_BASE:1.1
	MIRBSD_XP_SPARC:1.1.0.8
	MIRBSD_7quater:1.1
	MIRBSD_7_ALPHA:1.1.0.6
	MIRBSD_7:1.1.0.4
	MIRBSD_7ter:1.1
	MIRBSD_7_DEV:1.1.0.2
	MIRBSD_5:1.1
	MIRBSD_4:1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.12.12.18.03.03;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.23.19.57.36;	author tg;	state Stab;
branches;
next	;


desc
@@


1.2
log
@go back from base-upon-ASF-httpd-1.3.33 to 1.3.29 then up via OpenBSD;
unmerge stuff not needed; shuffle stuff around, etc.
add some RCS IDs

builds, serves default pages on odem successfully
@
text
@/* $MirBSD$ */

/*
struct sockaddr_storage

   RFC2553 proposes struct sockaddr_storage.
   This is a placeholder for all sockaddr-variant structures. This is
   implemented like follows:

   You should use this structure to hold any of sockaddr-variant
   structures.
*/
#ifdef NEED_SOCKADDR_STORAGE

struct sockaddr_storage {
#ifdef HAVE_SOCKADDR_LEN
	u_char ss_len;
	u_char ss_family;
#else
	u_short ss_family;
#endif
	u_char __padding[128 - 2];
};

/*
union sockunion

   Alternatively, you may want to implement sockunion.h, with the
   following content:

   NOTE: For better portability, struct sockaddr_storage should be used.
   union sockunion is okay, but is not really portable enough.
*/
union sockunion {
	struct sockinet {
#ifdef HAVE_SOCKADDR_LEN
		u_char si_len;
		u_char si_family;
#else
		u_short si_family;
#endif
		u_short si_port;
	} su_si;
	struct sockaddr_in  su_sin;
#ifdef INET6
	struct sockaddr_in6 su_sin6;
#endif
};
#ifdef HAVE_SOCKADDR_LEN
#define su_len		su_si.si_len
#endif
#define su_family	su_si.si_family
#define su_port		su_si.si_port

#endif /* NEED_SOCKADDR_STORAGE */
@


1.1
log
@merge obsd.httpd
@
text
@d1 2
a2 1
/*	$MirBSD: obsd.httpd,v 1.27 2003/03/22 22:33:25 tg Exp $	*/
@


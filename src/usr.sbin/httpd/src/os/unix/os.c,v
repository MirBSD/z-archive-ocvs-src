head	1.6;
access;
symbols
	tg-mergetmp-mirosx-1:1.6
	tg-mergefixes-1-branch:1.6.0.4
	tg-mergefixes-1-base:1.6
	MIROS_X:1.6.0.2
	MIROS_X_BASE:1.6
	tg-mergetmp-3:1.6
	cvs-200412121715:1.1.1.5
	cvs-200412040100:1.1.1.4
	MIRBSD_XP_MIRPPC:1.5.0.4
	aphttpd-1_3_33:1.1.8.2
	cvs-200410222040:1.1.1.3
	tg-mergetmp-1:1.1.1.3
	MIRBSD_XP_SPARC_BASE:1.5
	MIRBSD_XP_SPARC:1.5.0.2
	cvs-200408220000:1.1.1.3
	aphttpd-1_3_31:1.1.8.2
	ASF:1.1.8
	MIRBSD_7quater:1.2
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.2.0.6
	MIRBSD_7:1.2.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.2
	apache-1_3_29:1.1.8.1
	apache-1_3_28:1.1.8.1
	apache:1.1.8
	MIRBSD_7_DEV:1.2.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309261655:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	cvs-200305071630:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-3203:1.1.1.2
	cvs-20030410-1130:1.1.1.2
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2004.12.12.18.03.27;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.21.23.31.07;	author tg;	state Stab;
branches;
next	1.4;

1.4
date	2004.08.21.22.58.04;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.07.15.19.11.23;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.19.16.11.45;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.55.37;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.8.1;
next	;

1.1.1.1
date	2003.03.22.17.55.37;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.10.15.00.41;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.08.30.23.56.21;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.12.12.15.24.21;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.12.12.17.20.52;	author tg;	state Exp;
branches;
next	;

1.1.8.1
date	2003.10.29.14.10.15;	author tg;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2004.07.15.17.05.44;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@go back from base-upon-ASF-httpd-1.3.33 to 1.3.29 then up via OpenBSD;
unmerge stuff not needed; shuffle stuff around, etc.
add some RCS IDs

builds, serves default pages on odem successfully
@
text
@/* $MirBSD$ */

/*
 * This file will include OS specific functions which are not inlineable.
 * Any inlineable functions should be defined in os-inline.c instead.
 */

#include "ap_config.h"
#include "os.h"


/* some linkers complain unless there's at least one function in each
 * .o file... and extra prototype is for gcc -Wmissing-prototypes
 */
extern void ap_is_not_here(void);
void ap_is_not_here(void) {}

/*
 *  Abstraction layer for loading
 *  Apache modules under run-time via
 *  dynamic shared object (DSO) mechanism
 */

void ap_os_dso_init(void)
{
}

void *ap_os_dso_load(const char *path)
{
    return dlopen(path, RTLD_NOW | RTLD_GLOBAL);
}

void ap_os_dso_unload(void *handle)
{
    dlclose(handle);
    return;
}

void *ap_os_dso_sym(void *handle, const char *symname)
{
    return dlsym(handle, symname);
}

const char *ap_os_dso_error(void)
{
    return dlerror();
}
@


1.5
log
@even more sync with old work
@
text
@d1 1
a1 16
/* $MirBSD: src/usr.sbin/httpd/src/os/unix/os.c,v 1.3 2004/07/15 19:11:23 tg Exp $ */

/* Copyright 1999-2004 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
a18 10
 * Insert the DSO emulation code for AIX for releases of AIX prior
 * to 4.3. Use the native DSO code for 4.3 and later.
 */
#if defined(AIX) && !defined(NO_DL_NEEDED)
#if AIX < 430
#error target not supported
#endif
#endif

/*
a23 56
#ifdef HAVE_DYLD		/* NeXT/Apple dynamic linker */
#include <mach-o/dyld.h>

/*
 * NSUnlinkModule() is a noop in old versions of dyld.
 * Let's install an error handler to deal with "multiply defined
 * symbol" runtime errors.
 */
#ifdef DYLD_CANT_UNLOAD
#include "httpd.h"
#include "http_log.h"

ap_private_extern
void undefined_symbol_handler(const char *symbolName)
{
    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_EMERG, NULL,
                 "dyld found undefined symbol: %s\n"
                 "Aborting.\n",
                 symbolName);
    abort();
}

ap_private_extern
NSModule multiple_symbol_handler (NSSymbol s, NSModule old, NSModule new)
{
    /*
     * Since we can't unload symbols, we're going to run into this
     * every time we reload a module. Workaround here is to just
     * rebind to the new symbol, and forget about the old one.
     * This is crummy, because it's basically a memory leak.
     */

#ifdef DEBUG
    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_DEBUG, NULL,
                 "dyld found a multiply defined symbol %s in modules:\n"
                 "%s\n%s\n",
                 NSNameOfSymbol(s),
                 NSNameOfModule(old), NSNameOfModule(new));
#endif

    return(new);
}

ap_private_extern
void linkEdit_symbol_handler (NSLinkEditErrors c, int errorNumber,
                              const char *fileName, const char *errorString)
{
    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_EMERG, NULL,
                 "dyld errors during link edit for file %s\n%s\n",
                 fileName, errorString);
    abort();
}

#endif /* DYLD_CANT_UNLOAD */
#endif /* HAVE_DYLD */

a25 9
#if defined(HAVE_DYLD) && defined(DYLD_CANT_UNLOAD)
    NSLinkEditErrorHandlers handlers;

    handlers.undefined = undefined_symbol_handler;
    handlers.multiple  = multiple_symbol_handler;
    handlers.linkEdit  = linkEdit_symbol_handler;

    NSInstallLinkEditErrorHandlers(&handlers);
#endif
a29 26
#if defined(HPUX) || defined(HPUX10) || defined(HPUX11)
    shl_t handle;
    handle = shl_load(path, BIND_IMMEDIATE|BIND_VERBOSE, 0L);
    return (void *)handle;

#elif defined(HAVE_DYLD)
    NSObjectFileImage image;
    NSModule handle;
    if (NSCreateObjectFileImageFromFile(path, &image) !=
        NSObjectFileImageSuccess)
        return NULL;
#if defined(NSLINKMODULE_OPTION_RETURN_ON_ERROR) && defined(NSLINKMODULE_OPTION_NONE)
    handle = NSLinkModule(image, path,
                          NSLINKMODULE_OPTION_RETURN_ON_ERROR |
                          NSLINKMODULE_OPTION_NONE);
#else
    handle = NSLinkModule(image, path, FALSE);
#endif
    NSDestroyObjectFileImage(image);
    return handle;

#elif defined(OSF1) || defined(SEQUENT) ||\
    (defined(__FreeBSD_version) && (__FreeBSD_version >= 220000))
    return dlopen((char *)path, RTLD_NOW | RTLD_GLOBAL);

#else
a30 1
#endif
a34 7
#if defined(HPUX) || defined(HPUX10) || defined(HPUX11)
    shl_unload((shl_t)handle);

#elif defined(HAVE_DYLD)
    NSUnLinkModule(handle,FALSE);

#else
a35 2
#endif

a40 29
#if defined(HPUX) || defined(HPUX10) || defined(HPUX11)
    void *symaddr = NULL;
    int status;

    errno = 0;
    status = shl_findsym((shl_t *)&handle, symname, TYPE_PROCEDURE, &symaddr);
    if (status == -1 && errno == 0) /* try TYPE_DATA instead */
        status = shl_findsym((shl_t *)&handle, symname, TYPE_DATA, &symaddr);
    return (status == -1 ? NULL : symaddr);

#elif defined(HAVE_DYLD)
    NSSymbol symbol;
    asprintf(&symname2, "_%s", symname);
    symbol = NSLookupAndBindSymbol(symname2);
    free(symname2);
    return NSAddressOfSymbol(symbol);

#elif defined(DLSYM_NEEDS_UNDERSCORE)
    char *symbol;
    void *retval;
    asprintf(&symbol, "_%s", symname);
    retval = dlsym(handle, symbol);
    free(symbol);
    return retval;

#elif defined(SEQUENT)
    return dlsym(handle, (char *)symname);

#else
a41 1
#endif
a45 5
#if defined(HPUX) || defined(HPUX10) || defined(HPUX11)
    return strerror(errno);
#elif defined(HAVE_DYLD)
    return NULL;
#else
a46 1
#endif
@


1.4
log
@update to an older version of my httpd work
@
text
@@


1.3
log
@merge... attempt I (I hate ASF httpd)
@
text
@d1 1
a1 1
/* $MirBSD$ */
d45 1
a45 1
 *  Apache modules under run-time via 
@


1.2
log
@o Update to Apache 1.3.28
o Retain OpenBSD changes
o Retain IPv6 changes
o Retain local (MirBSD) changes
o Remove some unused files
  o SSL stuff is in src/etc/ssl.certs.shar
  o SSL demonstration stuff is not needed
  o Windows®, Novell® Netware®, OS/2®, Cygwin, etc.
@
text
@d1 17
d39 1
a39 1
#include "os-aix-dso.c"
@


1.1
log
@Initial revision
@
text
@d21 1
a21 1
#if AIX < 43
d105 1
a105 1
    handle = shl_load(path, BIND_IMMEDIATE|BIND_VERBOSE|BIND_NOSTART, 0L);
d162 1
a162 2
    char *symname2 = (char*)malloc(sizeof(char)*(strlen(symname)+2));
    sprintf(symname2, "_%s", symname);
d168 1
a168 1
    char *symbol = (char*)malloc(sizeof(char)*(strlen(symname)+2));
d170 1
a170 1
    sprintf(symbol, "_%s", symname);
@


1.1.8.1
log
@Import Apache HTTPD 1.3.28 into vendor branch to ease update
@
text
@d21 1
a21 1
#if AIX < 430
d105 1
a105 1
    handle = shl_load(path, BIND_IMMEDIATE|BIND_VERBOSE, 0L);
@


1.1.8.2
log
@The Apache(TM) Webserver, version 1.3.31
@
text
@a0 15
/* Copyright 1999-2004 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD cvs as of roughly 11:11 UTC today,
or CTM delta 3188/3189/3190.
@
text
@d162 2
a163 1
    asprintf(&symname2, "_%s", symname);
d169 1
a169 1
    char *symbol;
d171 1
a171 1
    asprintf(&symbol, "_%s", symname);
@


1.1.1.3
log
@Synchronize with OpenBSD 3.4-beta
@
text
@d21 1
a21 1
#if AIX < 430
d105 1
a105 1
    handle = shl_load(path, BIND_IMMEDIATE|BIND_VERBOSE, 0L);
@


1.1.1.4
log
@Import first part of OpenBSD httpd cleanup work (OpenHTTPD? ;)
@
text
@d17 10
d32 56
d90 9
d103 26
d130 1
d135 7
d143 2
d150 18
a167 1
#if defined(DLSYM_NEEDS_UNDERSCORE)
d174 4
d185 5
d191 1
@


1.1.1.5
log
@OpenBSD httpd -HEAD
@
text
@d39 8
d48 1
@



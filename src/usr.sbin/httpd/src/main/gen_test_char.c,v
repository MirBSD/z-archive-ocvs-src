head	1.4;
access;
symbols
	tg-mergetmp-mirosx-1:1.4
	tg-mergefixes-1-branch:1.4.0.4
	tg-mergefixes-1-base:1.4
	MIROS_X:1.4.0.2
	MIROS_X_BASE:1.4
	tg-mergetmp-3:1.4
	cvs-200412121715:1.1.1.2
	cvs-200412040100:1.1.1.2
	MIRBSD_XP_MIRPPC:1.3.0.4
	aphttpd-1_3_33:1.1.8.2
	cvs-200410222040:1.1.1.1
	tg-mergetmp-1:1.1.1.1
	MIRBSD_XP_SPARC_BASE:1.3
	MIRBSD_XP_SPARC:1.3.0.2
	cvs-200408220000:1.1.1.1
	aphttpd-1_3_31:1.1.8.2
	ASF:1.1.8
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	apache-1_3_29:1.1.8.1
	apache-1_3_28:1.1.8.1
	apache:1.1.8
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2004.12.12.18.03.05;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.21.22.57.44;	author tg;	state Stab;
branches;
next	1.2;

1.2
date	2004.07.15.19.11.02;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.55.28;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.8.1;
next	;

1.1.1.1
date	2003.03.22.17.55.28;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.12.15.23.56;	author tg;	state Exp;
branches;
next	;

1.1.8.1
date	2003.10.29.14.06.39;	author tg;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2004.07.15.17.04.44;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@go back from base-upon-ASF-httpd-1.3.33 to 1.3.29 then up via OpenBSD;
unmerge stuff not needed; shuffle stuff around, etc.
add some RCS IDs

builds, serves default pages on odem successfully
@
text
@/* we need some of the portability definitions... for strchr */
#include "httpd.h"

/* A bunch of functions in util.c scan strings looking for certain characters.
 * To make that more efficient we encode a lookup table.
 */
#define T_ESCAPE_SHELL_CMD	(0x01)
#define T_ESCAPE_PATH_SEGMENT	(0x02)
#define T_OS_ESCAPE_PATH	(0x04)
#define T_HTTP_TOKEN_STOP	(0x08)
#define T_ESCAPE_LOGITEM	(0x10)

int main(int argc, char *argv[])
{
    unsigned c;
    unsigned char flags;

    printf(
"/* this file is automatically generated by gen_test_char, do not edit */\n"
"#define T_ESCAPE_SHELL_CMD	0x%02x /* chars with special meaning in the shell */\n"
"#define T_ESCAPE_PATH_SEGMENT	0x%02x /* find path segment, as defined in RFC1808 */\n"
"#define T_OS_ESCAPE_PATH	0x%02x /* escape characters in a path or uri */\n"
"#define T_HTTP_TOKEN_STOP	0x%02x /* find http tokens, as defined in RFC2616 */\n"
"#define T_ESCAPE_LOGITEM	0x%02x /* filter what should go in the log file */\n"
"\n",
	T_ESCAPE_SHELL_CMD,
	T_ESCAPE_PATH_SEGMENT,
	T_OS_ESCAPE_PATH,
	T_HTTP_TOKEN_STOP,
	T_ESCAPE_LOGITEM
	);

    /* we explicitly dealt with NUL above
     * in case some strchr() do bogosity with it */

    printf("static const unsigned char test_char_table[256] = {\n"
	   "    0x00, ");    /* print initial item */

    for (c = 1; c < 256; ++c) {
	flags = 0;

	/* escape_shell_cmd */
        if (strchr("&;`'\"|*?~<>^()[]{}$\\\n", c)) {
	    flags |= T_ESCAPE_SHELL_CMD;
	}

	if (!ap_isalnum(c) && !strchr("$-_.+!*'(),:@@&=~", c)) {
	    flags |= T_ESCAPE_PATH_SEGMENT;
	}

	if (!ap_isalnum(c) && !strchr("$-_.+!*'(),:@@&=/~", c)) {
	    flags |= T_OS_ESCAPE_PATH;
	}

	/* these are the "tspecials" from RFC2068 */
	if (ap_iscntrl(c) || strchr(" \t()<>@@,;:\\/[]?={}", c)) {
	    flags |= T_HTTP_TOKEN_STOP;
	}

	/* For logging, escape all control characters,
	 * double quotes (because they delimit the request in the log file)
	 * backslashes (because we use backslash for escaping)
	 * and 8-bit chars with the high bit set
	 */
	if (!ap_isprint(c) || c == '"' || c == '\\' || ap_iscntrl(c)) {
	    flags |= T_ESCAPE_LOGITEM;
	}
	printf("0x%02x%s", flags, (c < 255) ? ", " : "  ");

	if ((c % 8) == 7)
	    printf(" /*0x%02x...0x%02x*/\n    ", c-7, c);
    }
    printf("\n};\n");

    return 0;
}
@


1.3
log
@update to an older version of my httpd work
@
text
@a0 15
/* Copyright 1999-2004 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

a11 1
#define T_ESCAPE_FORENSIC       (0x20)
a24 1
"#define T_ESCAPE_FORENSIC	0x%02x /* filter what should go in the forensic log */\n"
d30 1
a30 2
	T_ESCAPE_LOGITEM,
	T_ESCAPE_FORENSIC
d33 3
d37 1
a37 1
	   "    ");
d39 1
a39 1
    for (c = 0; c < 256; ++c) {
d43 1
a43 10
#if defined(WIN32) || defined(OS2)
        /* Win32/OS2 have many of the same vulnerable characters
         * as Unix sh, plus the carriage return and percent char.
         * The proper escaping of these characters varies from unix
         * since Win32/OS2 use carets or doubled-double quotes,
         * and neither lf nor cr can be escaped.  We escape unix
         * specific as well, to assure that cross-compiled unix
         * applications behave similiarly when invoked on win32/os2.
         */
        if (c && strchr("&;`'\"|*?~<>^()[]{}$\\\n\r%", c)) {
a45 5
#else
        if (c && strchr("&;`'\"|*?~<>^()[]{}$\\\n", c)) {
	    flags |= T_ESCAPE_SHELL_CMD;
	}
#endif
d56 1
a56 1
	if (c && (ap_iscntrl(c) || strchr(" \t()<>@@,;:\\/[]?={}", c))) {
d65 1
a65 1
	if (c && (!ap_isprint(c) || c == '"' || c == '\\' || ap_iscntrl(c))) {
a67 9

        /* For forensic logging, escape all control characters, top bit set,
         * :, | (used as delimiters) and % (used for escaping).
         */
        if (!ap_isprint(c) || c == ':' || c == '|' || c == '%'
            || ap_iscntrl(c) || !c) {
            flags |= T_ESCAPE_FORENSIC;
        }

@


1.2
log
@merge... attempt I (I hate ASF httpd)
@
text
@d62 3
a64 3
         * since Win32/OS2 use carets or doubled-double quotes, 
         * and neither lf nor cr can be escaped.  We escape unix 
         * specific as well, to assure that cross-compiled unix 
@


1.1
log
@Initial revision
@
text
@d1 15
d27 1
d41 1
d47 2
a48 1
	T_ESCAPE_LOGITEM
a50 3
    /* we explicitly dealt with NUL above
     * in case some strchr() do bogosity with it */

d52 1
a52 1
	   "    0x00, ");    /* print initial item */
d54 1
a54 1
    for (c = 1; c < 256; ++c) {
d67 1
a67 1
        if (strchr("&;`'\"|*?~<>^()[]{}$\\\n\r%", c)) {
d71 1
a71 1
        if (strchr("&;`'\"|*?~<>^()[]{}$\\\n", c)) {
d85 1
a85 1
	if (ap_iscntrl(c) || strchr(" \t()<>@@,;:\\/[]?={}", c)) {
d94 1
a94 1
	if (!ap_isprint(c) || c == '"' || c == '\\' || ap_iscntrl(c)) {
d97 9
@


1.1.8.1
log
@Import Apache HTTPD 1.3.28 into vendor branch to ease update
@
text
@@


1.1.8.2
log
@The Apache(TM) Webserver, version 1.3.31
@
text
@a0 15
/* Copyright 1999-2004 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

a11 1
#define T_ESCAPE_FORENSIC       (0x20)
a24 1
"#define T_ESCAPE_FORENSIC	0x%02x /* filter what should go in the forensic log */\n"
d30 1
a30 2
	T_ESCAPE_LOGITEM,
	T_ESCAPE_FORENSIC
d33 3
d37 1
a37 1
	   "    ");
d39 1
a39 1
    for (c = 0; c < 256; ++c) {
d52 1
a52 1
        if (c && strchr("&;`'\"|*?~<>^()[]{}$\\\n\r%", c)) {
d56 1
a56 1
        if (c && strchr("&;`'\"|*?~<>^()[]{}$\\\n", c)) {
d70 1
a70 1
	if (c && (ap_iscntrl(c) || strchr(" \t()<>@@,;:\\/[]?={}", c))) {
d79 1
a79 1
	if (c && (!ap_isprint(c) || c == '"' || c == '\\' || ap_iscntrl(c))) {
a81 9

        /* For forensic logging, escape all control characters, top bit set,
         * :, | (used as delimiters) and % (used for escaping).
         */
        if (!ap_isprint(c) || c == ':' || c == '|' || c == '%'
            || ap_iscntrl(c) || !c) {
            flags |= T_ESCAPE_FORENSIC;
        }

@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import first part of OpenBSD httpd cleanup work (OpenHTTPD? ;)
@
text
@d43 13
d59 1
@


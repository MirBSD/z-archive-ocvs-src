head	1.4;
access;
symbols
	tg-mergetmp-mirosx-1:1.4
	tg-mergefixes-1-branch:1.4.0.4
	tg-mergefixes-1-base:1.4
	MIROS_X:1.4.0.2
	MIROS_X_BASE:1.4
	tg-mergetmp-3:1.4
	cvs-200412121715:1.1.1.1
	cvs-200412040100:1.1.1.1
	MIRBSD_XP_MIRPPC:1.3.0.4
	aphttpd-1_3_33:1.1.8.2
	cvs-200410222040:1.1.1.1
	tg-mergetmp-1:1.1.1.1
	MIRBSD_XP_SPARC_BASE:1.3
	MIRBSD_XP_SPARC:1.3.0.2
	cvs-200408220000:1.1.1.1
	aphttpd-1_3_31:1.1.8.2
	ASF:1.1.8
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	apache-1_3_29:1.1.8.1
	apache-1_3_28:1.1.8.1
	apache:1.1.8
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309261655:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2004.12.12.18.02.58;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.21.22.57.35;	author tg;	state Stab;
branches;
next	1.2;

1.2
date	2004.07.15.19.10.55;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.55.28;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.8.1;
next	;

1.1.1.1
date	2003.03.22.17.55.28;	author tg;	state Exp;
branches;
next	;

1.1.8.1
date	2003.10.29.14.05.30;	author tg;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2004.07.15.17.04.27;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@go back from base-upon-ASF-httpd-1.3.33 to 1.3.29 then up via OpenBSD;
unmerge stuff not needed; shuffle stuff around, etc.
add some RCS IDs

builds, serves default pages on odem successfully
@
text
@#!/bin/sh
##
##  slo.h -- (S)eparate (L)inker (O)ptions by library class
##  Initially written by Ralf S. Engelschall <rse@@apache.org>
##
#
# This script falls under the Apache License.
# See http://www.apache.org/docs/LICENSE


DIFS='
'

#
#   parse out -L and -l options from command line
#
DIRS=''
LIBS=''
ARGV=''
optprev=""
OIFS="$IFS" IFS="$DIFS"
for opt
do
    #   concatenate with previous option if exists
    if [ "x$optprev" != "x" ]; then
        opt="${optprev}${opt}";
        optprev=''
    fi
    #   remember options for arg when used stand-alone
    if [ "x$opt" = "x-L" -o "x$opt" = "x-l" ]; then
        optprev="$opt"
        continue;
    fi
    #   split argument into option plus option argument
    arg="`echo $opt | cut -c3-`"
    opt="`echo $opt | cut -c1-2`"
    #   store into containers
    case $opt in
        -L) DIRS="$DIRS:$arg" ;;
        -l) LIBS="$LIBS:$arg" ;;
         *) ARGV="$ARGV $opt" ;;
    esac
done
IFS="$OIFS"

#
#   set linker default directories
#
DIRS_DEFAULT='/lib:/usr/lib'
if [ "x$LD_LIBRARY_PATH" != "x" ]; then
    DIRS_DEFAULT="$DIRS_DEFAULT:$LD_LIBRARY_PATH"
fi

#
#   sort options by class
#
DIRS_OBJ=''
LIBS_OBJ=''
DIRS_PIC=''
LIBS_PIC=''
DIRS_DSO=''
LIBS_DSO=''

#    for each library...
OIFS="$IFS" IFS=':'
for lib in $LIBS; do
    [ "x$lib" = "x" ] && continue

    found='no'
    found_indefdir='no'
    found_type=''
    found_dir=''

    #    for each directory...
    OIFS2="$IFS" IFS=":$DIFS"
    for dir in ${DIRS} switch-to-defdirs ${DIRS_DEFAULT}; do
        [ "x$dir" = "x" ] && continue
        [ "x$dir" = "xswitch-to-defdirs" ] && found_indefdir=yes
        [ ! -d $dir ] && continue

        #    search the file
        OIFS3="$IFS" IFS="$DIFS"
        for file in '' `cd $dir && ls lib${lib}.* 2>/dev/null`; do
             [ "x$file" = "x" ] && continue
             case $file in
                 *.so|*.so.[0-9]*|*.sl|*.sl.[0-9]* )
                      found=yes;
                      found_type=DSO;
                      break
                      ;;
                 *.lo|*.la )
                      found=yes;
                      found_type=PIC
                      ;;
                 *.a )
                      if [ "x$found_type" = "x" ]; then
                          found=yes
                          found_type=OBJ
                      fi
                      ;;
             esac
        done
        IFS="$OIFS3"
        if [ "x$found" = "xyes" ]; then
            found_dir="$dir"
            break
        fi
    done
    IFS="$OIFS2"

    if [ "x$found" = "xyes" ]; then
        if [ "x$found_indefdir" != "xyes" ]; then
            eval "dirlist=\"\${DIRS_${found_type}}:\""
            if [ ".`echo \"$dirlist\" | fgrep :$found_dir:`" = . ]; then
                eval "DIRS_${found_type}=\"\$DIRS_${found_type}:${found_dir}\""
            fi
            eval "LIBS_${found_type}=\"\$LIBS_${found_type}:$lib\""
        else
            eval "LIBS_${found_type}=\"\$LIBS_${found_type}:$lib\""
        fi
    else
        LIBS_OBJ="$LIBS_OBJ:$lib"
        #dirlist="`echo $DIRS $DIRS_DEFAULT | sed -e 's/:/ /g'`"
        #echo "splitlibs:Warning: library \"$lib\" not found in any of the following dirs:" 2>&1
        #echo "splitlibs:Warning: $dirlist" 1>&1
    fi
done
IFS="$OIFS"

#
#   also pass-through unused dirs even if it's useless
#
OIFS="$IFS" IFS=':'
for dir in $DIRS; do
    dirlist="${DIRS_OBJ}:${DIRS_PIC}:${DIRS_DSO}:"
    if [ ".`echo \"$dirlist\" | fgrep :$dir:`" = . ]; then
        DIRS_OBJ="$DIRS_OBJ:$dir"
    fi
done
IFS="$OIFS"

#
#   reassemble the options but seperated by type
#
OIFS="$IFS" IFS="$DIFS"
for type in OBJ PIC DSO; do
    OIFS2="$IFS" IFS=':'
    eval "libs=\"\$LIBS_${type}\""
    opts=''
    for lib in $libs; do
        [ "x$lib" = "x" ] && continue
        opts="$opts -l$lib"
    done
    eval "LIBS_${type}=\"$opts\""

    eval "dirs=\"\$DIRS_${type}\""
    opts=''
    for dir in $dirs; do
        [ "x$dir" = "x" ] && continue
        opts="$opts -L$dir"
    done
    eval "DIRS_${type}=\"$opts\""
    IFS="$OIFS2"
done
IFS="$OIFS"

#
#   give back results
#
OIFS="$IFS" IFS="$DIFS"
for var in ARGV DIRS_OBJ LIBS_OBJ DIRS_PIC LIBS_PIC DIRS_DSO LIBS_DSO; do
    eval "val=\"\$${var}\""
    val="`echo $val | sed -e 's/^ *//'`"
    echo "SLO_${var}=\"${val}\""
done
IFS="$OIFS"

##EOF##
@


1.3
log
@update to an older version of my httpd work
@
text
@d2 8
a9 18
#
# Copyright 1999-2004 The Apache Software Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#  slo.h -- (S)eparate (L)inker (O)ptions by library class
#  Initially written by Ralf S. Engelschall <rse apache.org>
@


1.2
log
@merge... attempt I (I hate ASF httpd)
@
text
@d21 1
a21 1
DIFS=' 	
d24 1
a24 1
#   
d98 2
a99 2
                      found_type=DSO; 
                      break 
d103 1
a103 1
                      found_type=PIC 
d108 1
a108 1
                          found_type=OBJ 
@


1.1
log
@Initial revision
@
text
@d2 18
a19 8
##
##  slo.h -- (S)eparate (L)inker (O)ptions by library class
##  Initially written by Ralf S. Engelschall <rse@@apache.org>
##
#
# This script falls under the Apache License.
# See http://www.apache.org/docs/LICENSE

@


1.1.8.1
log
@Import Apache HTTPD 1.3.28 into vendor branch to ease update
@
text
@@


1.1.8.2
log
@The Apache(TM) Webserver, version 1.3.31
@
text
@d2 8
a9 18
#
# Copyright 1999-2004 The Apache Software Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#  slo.h -- (S)eparate (L)inker (O)ptions by library class
#  Initially written by Ralf S. Engelschall <rse apache.org>
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

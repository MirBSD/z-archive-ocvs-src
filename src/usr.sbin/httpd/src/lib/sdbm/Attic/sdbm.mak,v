head	1.2;
access;
symbols
	aphttpd-1_3_33:1.1.8.1
	cvs-200410222040:1.1.1.2
	tg-mergetmp-1:1.1.1.2
	cvs-200408220000:1.1.1.2
	aphttpd-1_3_31:1.1.8.1
	ASF:1.1.8
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	cvs-200312222040:1.1.1.2
	apache-1_3_29:1.1.8.1
	apache-1_3_28:1.1.8.1
	apache:1.1.8
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309261655:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.07.19.16.11.30;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.55.28;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.8.1;
next	;

1.1.1.1
date	2003.03.22.17.55.28;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.30.23.55.12;	author tg;	state Exp;
branches;
next	;

1.1.8.1
date	2003.10.29.14.06.30;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@o Update to Apache 1.3.28
o Retain OpenBSD changes
o Retain IPv6 changes
o Retain local (MirBSD) changes
o Remove some unused files
  o SSL stuff is in src/etc/ssl.certs.shar
  o SSL demonstration stuff is not needed
  o Windows®, Novell® Netware®, OS/2®, Cygwin, etc.
@
text
@# Microsoft Developer Studio Generated NMAKE File, Based on sdbm.dsp
!IF "$(CFG)" == ""
CFG=sdbm - Win32 Debug
!MESSAGE No configuration specified. Defaulting to sdbm - Win32 Debug.
!ENDIF 

!IF "$(CFG)" != "sdbm - Win32 Release" && "$(CFG)" != "sdbm - Win32 Debug"
!MESSAGE Invalid configuration "$(CFG)" specified.
!MESSAGE You can specify a configuration when running NMAKE
!MESSAGE by defining the macro CFG on the command line. For example:
!MESSAGE 
!MESSAGE NMAKE /f "sdbm.mak" CFG="sdbm - Win32 Debug"
!MESSAGE 
!MESSAGE Possible choices for configuration are:
!MESSAGE 
!MESSAGE "sdbm - Win32 Release" (based on "Win32 (x86) Static Library")
!MESSAGE "sdbm - Win32 Debug" (based on "Win32 (x86) Static Library")
!MESSAGE 
!ERROR An invalid configuration is specified.
!ENDIF 

!IF "$(OS)" == "Windows_NT"
NULL=
!ELSE 
NULL=nul
!ENDIF 

!IF  "$(CFG)" == "sdbm - Win32 Release"

OUTDIR=.\LibR
INTDIR=.\LibR
# Begin Custom Macros
OutDir=.\LibR
# End Custom Macros

!IF "$(RECURSE)" == "0" 

ALL : "$(OUTDIR)\sdbm.lib"

!ELSE 

ALL : "$(OUTDIR)\sdbm.lib"

!ENDIF 

CLEAN :
	-@@erase "$(INTDIR)\sdbm.idb"
	-@@erase "$(INTDIR)\sdbm.obj"
	-@@erase "$(INTDIR)\sdbm_hash.obj"
	-@@erase "$(INTDIR)\sdbm_lock.obj"
	-@@erase "$(INTDIR)\sdbm_pair.obj"
	-@@erase "$(OUTDIR)\sdbm.lib"

"$(OUTDIR)" :
    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"

RSC=rc.exe
CPP=cl.exe
CPP_PROJ=/nologo /MD /W3 /O2 /I "..\..\include" /I "..\..\os\win32" /D "WIN32"\
 /D "NDEBUG" /D "_WINDOWS" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\sdbm" /FD /c 
CPP_OBJS=.\LibR/
CPP_SBRS=.

.c{$(CPP_OBJS)}.obj::
   $(CPP) @@<<
   $(CPP_PROJ) $< 
<<

.cpp{$(CPP_OBJS)}.obj::
   $(CPP) @@<<
   $(CPP_PROJ) $< 
<<

.cxx{$(CPP_OBJS)}.obj::
   $(CPP) @@<<
   $(CPP_PROJ) $< 
<<

.c{$(CPP_SBRS)}.sbr::
   $(CPP) @@<<
   $(CPP_PROJ) $< 
<<

.cpp{$(CPP_SBRS)}.sbr::
   $(CPP) @@<<
   $(CPP_PROJ) $< 
<<

.cxx{$(CPP_SBRS)}.sbr::
   $(CPP) @@<<
   $(CPP_PROJ) $< 
<<

BSC32=bscmake.exe
BSC32_FLAGS=/nologo /o"$(OUTDIR)\sdbm.bsc" 
BSC32_SBRS= \
	
LIB32=link.exe -lib
LIB32_FLAGS=/nologo /out:"$(OUTDIR)\sdbm.lib" 
LIB32_OBJS= \
	"$(INTDIR)\sdbm.obj" \
	"$(INTDIR)\sdbm_hash.obj" \
	"$(INTDIR)\sdbm_lock.obj" \
	"$(INTDIR)\sdbm_pair.obj"

"$(OUTDIR)\sdbm.lib" : "$(OUTDIR)" $(DEF_FILE) $(LIB32_OBJS)
    $(LIB32) @@<<
  $(LIB32_FLAGS) $(DEF_FLAGS) $(LIB32_OBJS)
<<

!ELSEIF  "$(CFG)" == "sdbm - Win32 Debug"

OUTDIR=.\LibD
INTDIR=.\LibD
# Begin Custom Macros
OutDir=.\LibD
# End Custom Macros

!IF "$(RECURSE)" == "0" 

ALL : "$(OUTDIR)\sdbm.lib"

!ELSE 

ALL : "$(OUTDIR)\sdbm.lib"

!ENDIF 

CLEAN :
	-@@erase "$(INTDIR)\sdbm.idb"
	-@@erase "$(INTDIR)\sdbm.obj"
	-@@erase "$(INTDIR)\sdbm.pdb"
	-@@erase "$(INTDIR)\sdbm_hash.obj"
	-@@erase "$(INTDIR)\sdbm_lock.obj"
	-@@erase "$(INTDIR)\sdbm_pair.obj"
	-@@erase "$(OUTDIR)\sdbm.lib"

"$(OUTDIR)" :
    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"

RSC=rc.exe
CPP=cl.exe
CPP_PROJ=/nologo /MDd /W3 /GX /Zi /Od /I "..\..\include" /I "..\..\os\win32" /D\
 "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "SHARED_MODULE" /Fo"$(INTDIR)\\"\
 /Fd"$(INTDIR)\sdbm" /FD /c 
CPP_OBJS=.\LibD/
CPP_SBRS=.

.c{$(CPP_OBJS)}.obj::
   $(CPP) @@<<
   $(CPP_PROJ) $< 
<<

.cpp{$(CPP_OBJS)}.obj::
   $(CPP) @@<<
   $(CPP_PROJ) $< 
<<

.cxx{$(CPP_OBJS)}.obj::
   $(CPP) @@<<
   $(CPP_PROJ) $< 
<<

.c{$(CPP_SBRS)}.sbr::
   $(CPP) @@<<
   $(CPP_PROJ) $< 
<<

.cpp{$(CPP_SBRS)}.sbr::
   $(CPP) @@<<
   $(CPP_PROJ) $< 
<<

.cxx{$(CPP_SBRS)}.sbr::
   $(CPP) @@<<
   $(CPP_PROJ) $< 
<<

BSC32=bscmake.exe
BSC32_FLAGS=/nologo /o"$(OUTDIR)\sdbm.bsc" 
BSC32_SBRS= \
	
LIB32=link.exe -lib
LIB32_FLAGS=/nologo /out:"$(OUTDIR)\sdbm.lib" 
LIB32_OBJS= \
	"$(INTDIR)\sdbm.obj" \
	"$(INTDIR)\sdbm_hash.obj" \
	"$(INTDIR)\sdbm_lock.obj" \
	"$(INTDIR)\sdbm_pair.obj"

"$(OUTDIR)\sdbm.lib" : "$(OUTDIR)" $(DEF_FILE) $(LIB32_OBJS)
    $(LIB32) @@<<
  $(LIB32_FLAGS) $(DEF_FLAGS) $(LIB32_OBJS)
<<

!ENDIF 


!IF "$(CFG)" == "sdbm - Win32 Release" || "$(CFG)" == "sdbm - Win32 Debug"
SOURCE=.\sdbm.c
DEP_CPP_SDBM_=\
	".\sdbm.h"\
	".\sdbm_pair.h"\
	".\sdbm_tune.h"\
	

"$(INTDIR)\sdbm.obj" : $(SOURCE) $(DEP_CPP_SDBM_) "$(INTDIR)"


SOURCE=.\sdbm_hash.c
DEP_CPP_SDBM_H=\
	".\sdbm.h"\
	

"$(INTDIR)\sdbm_hash.obj" : $(SOURCE) $(DEP_CPP_SDBM_H) "$(INTDIR)"


SOURCE=.\sdbm_lock.c
DEP_CPP_SDBM_L=\
	"..\..\include\ap_config.h"\
	"..\..\include\ap_ctype.h"\
	"..\..\include\ap_mmn.h"\
	"..\..\include\hsregex.h"\
	"..\..\os\win32\os.h"\
	
NODEP_CPP_SDBM_L=\
	"..\..\include\ap_config_auto.h"\
	

"$(INTDIR)\sdbm_lock.obj" : $(SOURCE) $(DEP_CPP_SDBM_L) "$(INTDIR)"


SOURCE=.\sdbm_pair.c
DEP_CPP_SDBM_P=\
	".\sdbm.h"\
	".\sdbm_pair.h"\
	".\sdbm_tune.h"\
	

"$(INTDIR)\sdbm_pair.obj" : $(SOURCE) $(DEP_CPP_SDBM_P) "$(INTDIR)"



!ENDIF 

@


1.1
log
@Initial revision
@
text
@@


1.1.8.1
log
@Import Apache HTTPD 1.3.28 into vendor branch to ease update
@
text
@d36 2
d40 5
a48 1
	-@@erase "$(INTDIR)\sdbm.pdb"
d57 1
d59 4
a62 1
CPP_PROJ=/nologo /MD /W3 /Zi /O2 /I "..\..\include" /I "..\..\os\win32" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\sdbm" /FD /c 
d64 1
a64 1
.c{$(INTDIR)}.obj::
d69 1
a69 1
.cpp{$(INTDIR)}.obj::
d74 1
a74 1
.cxx{$(INTDIR)}.obj::
d79 1
a79 1
.c{$(INTDIR)}.sbr::
d84 1
a84 1
.cpp{$(INTDIR)}.sbr::
d89 1
a89 1
.cxx{$(INTDIR)}.sbr::
a93 1
RSC=rc.exe
d119 2
d123 5
d141 1
d143 5
a147 1
CPP_PROJ=/nologo /MDd /W3 /GX /Zi /Od /I "..\..\include" /I "..\..\os\win32" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "SHARED_MODULE" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\sdbm" /FD /c 
d149 1
a149 1
.c{$(INTDIR)}.obj::
d154 1
a154 1
.cpp{$(INTDIR)}.obj::
d159 1
a159 1
.cxx{$(INTDIR)}.obj::
d164 1
a164 1
.c{$(INTDIR)}.sbr::
d169 1
a169 1
.cpp{$(INTDIR)}.sbr::
d174 1
a174 1
.cxx{$(INTDIR)}.sbr::
a178 1
RSC=rc.exe
a198 9
!IF "$(NO_EXTERNAL_DEPS)" != "1"
!IF EXISTS("sdbm.dep")
!INCLUDE "sdbm.dep"
!ELSE 
!MESSAGE Warning: cannot find "sdbm.dep"
!ENDIF 
!ENDIF 


d201 5
d207 1
a207 1
"$(INTDIR)\sdbm.obj" : $(SOURCE) "$(INTDIR)"
d211 3
d215 1
a215 1
"$(INTDIR)\sdbm_hash.obj" : $(SOURCE) "$(INTDIR)"
d219 10
d230 1
a230 1
"$(INTDIR)\sdbm_lock.obj" : $(SOURCE) "$(INTDIR)"
d234 5
d240 1
a240 1
"$(INTDIR)\sdbm_pair.obj" : $(SOURCE) "$(INTDIR)"
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Synchronize with OpenBSD 3.4-beta
@
text
@d36 2
d40 5
a48 1
	-@@erase "$(INTDIR)\sdbm.pdb"
d57 1
d59 4
a62 1
CPP_PROJ=/nologo /MD /W3 /Zi /O2 /I "..\..\include" /I "..\..\os\win32" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\sdbm" /FD /c 
d64 1
a64 1
.c{$(INTDIR)}.obj::
d69 1
a69 1
.cpp{$(INTDIR)}.obj::
d74 1
a74 1
.cxx{$(INTDIR)}.obj::
d79 1
a79 1
.c{$(INTDIR)}.sbr::
d84 1
a84 1
.cpp{$(INTDIR)}.sbr::
d89 1
a89 1
.cxx{$(INTDIR)}.sbr::
a93 1
RSC=rc.exe
d119 2
d123 5
d141 1
d143 5
a147 1
CPP_PROJ=/nologo /MDd /W3 /GX /Zi /Od /I "..\..\include" /I "..\..\os\win32" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "SHARED_MODULE" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\sdbm" /FD /c 
d149 1
a149 1
.c{$(INTDIR)}.obj::
d154 1
a154 1
.cpp{$(INTDIR)}.obj::
d159 1
a159 1
.cxx{$(INTDIR)}.obj::
d164 1
a164 1
.c{$(INTDIR)}.sbr::
d169 1
a169 1
.cpp{$(INTDIR)}.sbr::
d174 1
a174 1
.cxx{$(INTDIR)}.sbr::
a178 1
RSC=rc.exe
a198 9
!IF "$(NO_EXTERNAL_DEPS)" != "1"
!IF EXISTS("sdbm.dep")
!INCLUDE "sdbm.dep"
!ELSE 
!MESSAGE Warning: cannot find "sdbm.dep"
!ENDIF 
!ENDIF 


d201 5
d207 1
a207 1
"$(INTDIR)\sdbm.obj" : $(SOURCE) "$(INTDIR)"
d211 3
d215 1
a215 1
"$(INTDIR)\sdbm_hash.obj" : $(SOURCE) "$(INTDIR)"
d219 10
d230 1
a230 1
"$(INTDIR)\sdbm_lock.obj" : $(SOURCE) "$(INTDIR)"
d234 5
d240 1
a240 1
"$(INTDIR)\sdbm_pair.obj" : $(SOURCE) "$(INTDIR)"
@


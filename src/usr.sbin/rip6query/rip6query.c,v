head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.3
	tg-mergefixes-1-branch:1.1.1.3.0.14
	tg-mergefixes-1-base:1.1.1.3
	MIROS_X:1.1.1.3.0.12
	MIROS_X_BASE:1.1.1.3
	tg-mergetmp-3:1.1.1.3
	MIRBSD_XP_MIRPPC:1.1.1.3.0.10
	MIRBSD_XP_SPARC_BASE:1.1.1.3
	MIRBSD_XP_SPARC:1.1.1.3.0.8
	MIRBSD_7quater:1.1.1.3
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	cvs-200305071630:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-3203:1.1.1.2
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.55.58;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.55.58;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.15.17.52.06;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.29.17.42.17;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: rip6query.c,v 1.8 2002/09/08 01:36:37 itojun Exp $	*/
/*	$KAME: rip6query.c,v 1.17 2002/09/08 01:35:17 itojun Exp $	*/

/*
 * Copyright (C) 1995, 1996, 1997, and 1998 WIDE Project.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the project nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdio.h>

#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <signal.h>
#include <errno.h>
#include <err.h>

#include <sys/types.h>
#include <sys/socket.h>
#include <sys/queue.h>

#include <net/if.h>
#if defined(__FreeBSD__) && __FreeBSD__ >= 3
#include <net/if_var.h>
#endif /* __FreeBSD__ >= 3 */
#include <netinet/in.h>
#include <netinet/in_var.h>
#include <arpa/inet.h>
#include <netdb.h>

#include "route6d.h"

#define	DEFAULT_WAIT	5

int	s;
int	query_wait = DEFAULT_WAIT;
struct sockaddr_in6 sin6;
struct rip6	*ripbuf;

#define	RIPSIZE(n)	(sizeof(struct rip6) + (n-1) * sizeof(struct netinfo6))

static void usage(void);
static void sigalrm_handler(int);
static const char *sa_n2a(struct sockaddr *);
static const char *inet6_n2a(struct in6_addr *);

int
main(argc, argv)
	int argc;
	char **argv;
{
	struct netinfo6 *np;
	struct sockaddr_in6 fsock;
	int i, n, len;
	socklen_t flen;
	int c;
	int ifidx = -1;
	int error;
	char pbuf[10];
	struct addrinfo hints, *res;

	while ((c = getopt(argc, argv, "I:w:")) != -1) {
		switch (c) {
		case 'I':
			ifidx = if_nametoindex(optarg);
			if (ifidx == 0) {
				errx(1, "invalid interface %s", optarg);
				/*NOTREACHED*/
			}
			break;
		case 'w':
			query_wait = atoi(optarg);
			break;
		default:
			usage();
			exit(1);
			/*NOTREACHED*/
		}
	}
	argv += optind;
	argc -= optind;

	if (argc != 1) {
		usage();
		exit(1);
	}

	if ((s = socket(AF_INET6, SOCK_DGRAM, 0)) < 0) {
		err(1, "socket");
		/*NOTREACHED*/
	}

	/* getaddrinfo is preferred for addr%scope syntax */
	snprintf(pbuf, sizeof(pbuf), "%d", RIP6_PORT);
	memset(&hints, 0, sizeof(hints));
	hints.ai_family = AF_INET6;
	hints.ai_socktype = SOCK_DGRAM;
	error = getaddrinfo(argv[0], pbuf, &hints, &res);
	if (error) {
		errx(1, "%s: %s", argv[0], gai_strerror(error));
		/*NOTREACHED*/
	}
	if (res->ai_next) {
		errx(1, "%s: %s", argv[0], "resolved to multiple addrs");
		/*NOTREACHED*/
	}
	if (sizeof(sin6) != res->ai_addrlen) {
		errx(1, "%s: %s", argv[0], "invalid addrlen");
		/*NOTREACHED*/
	}
	memcpy(&sin6, res->ai_addr, res->ai_addrlen);
	if (ifidx >= 0)
		sin6.sin6_scope_id = ifidx;

	if ((ripbuf = (struct rip6 *)malloc(BUFSIZ)) == NULL) {
		err(1, "malloc");
		/*NOTREACHED*/
	}
	ripbuf->rip6_cmd = RIP6_REQUEST;
	ripbuf->rip6_vers = RIP6_VERSION;
	ripbuf->rip6_res1[0] = 0;
	ripbuf->rip6_res1[1] = 0;
	np = ripbuf->rip6_nets;
	bzero(&np->rip6_dest, sizeof(struct in6_addr));
	np->rip6_tag = 0;
	np->rip6_plen = 0;
	np->rip6_metric = HOPCNT_INFINITY6;
	if (sendto(s, ripbuf, RIPSIZE(1), 0, (struct sockaddr *)&sin6,
	    sizeof(struct sockaddr_in6)) < 0) {
		err(1, "send");
		/*NOTREACHED*/
	}
	signal(SIGALRM, sigalrm_handler);
	for (;;) {
		flen = sizeof(fsock);
		alarm(query_wait);
		if ((len = recvfrom(s, ripbuf, BUFSIZ, 0,
		    (struct sockaddr *)&fsock, &flen)) < 0) {
			err(1, "recvfrom");
			/*NOTREACHED*/
		}
		alarm(0);
		printf("Response from %s len %d\n",
		    sa_n2a((struct sockaddr *)&fsock), len);
		n = (len - sizeof(struct rip6) + sizeof(struct netinfo6)) /
		    sizeof(struct netinfo6);
		np = ripbuf->rip6_nets;
		for (i = 0; i < n; i++, np++) {
			printf("\t%s/%d [%d]", inet6_n2a(&np->rip6_dest),
			    np->rip6_plen, np->rip6_metric);
			if (np->rip6_tag)
				printf(" tag=0x%x", ntohs(np->rip6_tag));
			printf("\n");
		}
	}

	exit(0);
}

static void
usage()
{
	fprintf(stderr, "Usage: rip6query [-I iface] [-w wait] address\n");
}

/* getnameinfo() is preferred as we may be able to show ifindex as ifname */
static const char *
sa_n2a(sa)
	struct sockaddr *sa;
{
	static char buf[NI_MAXHOST];

	if (getnameinfo(sa, sa->sa_len, buf, sizeof(buf),
	    NULL, 0, NI_NUMERICHOST) != 0) {
		snprintf(buf, sizeof(buf), "%s", "(invalid)");
	}
	return buf;
}

static const char *
inet6_n2a(addr)
	struct in6_addr *addr;
{
	static char buf[NI_MAXHOST];

	return inet_ntop(AF_INET6, addr, buf, sizeof(buf));
}

static void
sigalrm_handler(sig)
	int sig;
{

	_exit(0);
}
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD source with the "new" command line as well,
in order to be able to provide a MirBSD release which bases
upon a fairly current OpenBSD base source code tree deemed
stable enough.
@
text
@d1 1
a1 1
/*	$OpenBSD: rip6query.c,v 1.10 2003/04/15 07:22:45 itojun Exp $	*/
d84 1
a84 1
	char pbuf[NI_MAXSERV];
@


1.1.1.3
log
@the previous cvs import did not finish due to 'memory fault'
sync with OpenBSD-cvs
@
text
@d1 1
a1 1
/*	$OpenBSD: rip6query.c,v 1.11 2003/06/26 19:47:10 deraadt Exp $	*/
d73 3
a75 1
main(int argc, char *argv[])
@



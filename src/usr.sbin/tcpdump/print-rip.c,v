head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.3
	tg-mergefixes-1-branch:1.1.1.3.0.8
	tg-mergefixes-1-base:1.1.1.3
	MIROS_X:1.1.1.3.0.6
	MIROS_X_BASE:1.1.1.3
	tg-mergetmp-3:1.1.1.3
	MIRBSD_XP_MIRPPC:1.1.1.3.0.4
	cvs-200410222040:1.1.1.3
	tg-mergetmp-1:1.1.1.3
	MIRBSD_XP_SPARC_BASE:1.1.1.3
	MIRBSD_XP_SPARC:1.1.1.3.0.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.03.22.17.56.05;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.56.05;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.11.18.56.22;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.01.26.19.14.13;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: print-rip.c,v 1.10 2000/12/05 08:16:15 jakob Exp $	*/

/*
 * Copyright (c) 1989, 1990, 1991, 1993, 1994, 1996
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that: (1) source code distributions
 * retain the above copyright notice and this paragraph in its entirety, (2)
 * distributions including binary code include the above copyright notice and
 * this paragraph in its entirety in the documentation or other materials
 * provided with the distribution, and (3) all advertising materials mentioning
 * features or use of this software display the following acknowledgement:
 * ``This product includes software developed by the University of California,
 * Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
 * the University nor the names of its contributors may be used to endorse
 * or promote products derived from this software without specific prior
 * written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#ifndef lint
static const char rcsid[] =
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-rip.c,v 1.10 2000/12/05 08:16:15 jakob Exp $ (LBL)";
#endif

#include <sys/param.h>
#include <sys/time.h>
#include <sys/socket.h>

#include <netinet/in.h>
#include <netinet/in_systm.h>
#include <netinet/ip.h>
#include <netinet/ip_var.h>
#include <netinet/udp.h>
#include <netinet/udp_var.h>

#include <stdio.h>
#include <string.h>
#include <ctype.h>

#include "interface.h"
#include "addrtoname.h"
#include "extract.h"			/* must come after interface.h */

struct rip {
	u_char rip_cmd;			/* request/response */
	u_char rip_vers;		/* protocol version # */
	u_short rip_zero2;		/* unused */
};
#define	RIPCMD_REQUEST		1	/* want info */
#define	RIPCMD_RESPONSE		2	/* responding to request */
#define	RIPCMD_TRACEON		3	/* turn tracing on */
#define	RIPCMD_TRACEOFF		4	/* turn it off */
#define	RIPCMD_POLL		5	/* want info from everybody */
#define	RIPCMD_POLLENTRY	6	/* poll for entry */

#define RIP_AUTHLEN 16

struct rip_netinfo {
	u_short rip_family;
	u_short rip_tag;
	u_int32_t rip_dest;
	u_int32_t rip_dest_mask;
	u_int32_t rip_router;
	u_int32_t rip_metric;		/* cost of route */
};

static void
rip_printblk(const u_char *cp, const u_char *ep)
{
	for (; cp < ep; cp += 2)
		printf(" %04x", EXTRACT_16BITS(cp));
	return;
}

static void
rip_entry_print_v1(register int vers, register const struct rip_netinfo *ni)
{
	register u_short family;

	/* RFC 1058 */
	family = EXTRACT_16BITS(&ni->rip_family);
	if (family != AF_INET) {
		printf(" [family %d:", family);
		rip_printblk((u_char *)&ni->rip_tag,
			     (u_char *)&ni->rip_metric +
			     sizeof(ni->rip_metric));
		printf("]");
		return;
	}
	if (ni->rip_tag || ni->rip_dest_mask || ni->rip_router) {
		/* MBZ fields not zero */
		printf(" [");
		rip_printblk((u_char *)&ni->rip_family,
			     (u_char *)&ni->rip_metric +
			     sizeof(ni->rip_metric));
		printf("]");
		return;
	}
	printf(" {%s}(%d)", ipaddr_string(&ni->rip_dest),
	       EXTRACT_32BITS(&ni->rip_metric));
}

static void
rip_entry_print_v2(register int vers, register const struct rip_netinfo *ni)
{
	register u_char *p;
	register u_short family;
	char buf[RIP_AUTHLEN];

	/* RFC 1723 */
	family = EXTRACT_16BITS(&ni->rip_family);
	if (family == 0xFFFF) {
		if (EXTRACT_16BITS(&ni->rip_tag) == 2) {
			memcpy(buf, &ni->rip_dest, sizeof(buf));
			buf[sizeof(buf)-1] = '\0';
			for (p = buf; *p; p++) {
				if (!isprint(*p))
					break;
			}
			if (!*p) {
				printf(" [password %s]", buf);
			} else {
				printf(" [password: ");
				rip_printblk((u_char *)&ni->rip_dest,
					     (u_char *)&ni->rip_metric +
					     sizeof(ni->rip_metric));
				printf("]");
			}
		} else {
			printf(" [auth %d:",
			       EXTRACT_16BITS(&ni->rip_tag));
			rip_printblk((u_char *)&ni->rip_dest,
				     (u_char *)&ni->rip_metric +
				     sizeof(ni->rip_metric));
			printf("]");
		}
	} else if (family != AF_INET) {
		printf(" [family %d:", family);
		rip_printblk((u_char *)&ni->rip_tag,
			     (u_char *)&ni->rip_metric +
			     sizeof(ni->rip_metric));
		printf("]");
		return;
	} else { /* AF_INET */
		printf(" {%s", ipaddr_string(&ni->rip_dest));
		if (ni->rip_dest_mask)
			printf("/%s", ipaddr_string(&ni->rip_dest_mask));
		if (ni->rip_router)
			printf("->%s", ipaddr_string(&ni->rip_router));
		if (ni->rip_tag)
			printf(" tag %04x", EXTRACT_16BITS(&ni->rip_tag));
		printf("}(%d)", EXTRACT_32BITS(&ni->rip_metric));
	}
}

void
rip_print(const u_char *dat, u_int length)
{
	register const struct rip *rp;
	register const struct rip_netinfo *ni;
	register int i, j, trunc;

	i = min(length, snapend - dat) - sizeof(*rp);
	if (i < 0) {
		printf(" [|rip]");
		return;
	}

	rp = (struct rip *)dat;
	switch (rp->rip_vers) {
	case 0:
		/* RFC 1058 */
		printf(" RIPv0: ");
		rip_printblk((u_char *)(rp + 1), snapend);
		break;
	default:
		switch (rp->rip_cmd) {
		case RIPCMD_REQUEST:
			printf(" RIPv%d-req %d", rp->rip_vers, length);
			break;
		case RIPCMD_RESPONSE:
			j = length / sizeof(*ni);
			if (j * sizeof(*ni) != length - 4)
				printf(" RIPv%d-resp [items %d] [%d]:",
				       rp->rip_vers, j, length);
			else
				printf(" RIPv%d-resp [items %d]:",
				       rp->rip_vers, j);
			trunc = (i / sizeof(*ni)) != j;
			ni = (struct rip_netinfo *)(rp + 1);
			for (; (i -= sizeof(*ni)) >= 0; ++ni) {
				if (rp->rip_vers == 1)
					rip_entry_print_v1(rp->rip_vers, ni);
				else
					rip_entry_print_v2(rp->rip_vers, ni);
			}
			if (trunc)
				printf("[|rip]");
			break;
		case RIPCMD_TRACEON:
			printf(" RIPv%d-traceon %d: \"", rp->rip_vers, length);
			(void)fn_print((const u_char *)(rp + 1), snapend);
			fputs("\"\n", stdout);
			break;
		case RIPCMD_TRACEOFF:
			printf(" RIPv%d-traceoff %d", rp->rip_vers, length);
			break;
		case RIPCMD_POLL:
			printf(" RIPv%d-poll %d", rp->rip_vers, length);
			break;
		case RIPCMD_POLLENTRY:
			printf(" RIPv%d-pollentry %d", rp->rip_vers, length);
			break;
		default:
			printf(" RIPv%d-#%d %d", rp->rip_vers, rp->rip_cmd,
			       length);
			break;
		}
        }
}
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import the complete OpenBSD source tree (base system)
as of CTM delta 3496 (roughly 1200 UTC today) into the
vendor branch.
Attention: this is a big update. Don't even try to
build this system, OpenBSD 3.4-beta, yet on your own.
@
text
@d26 1
a26 1
    "@@(#) $Header: /ocvs/src/usr.sbin/tcpdump/print-rip.c,v 1.10 2000/12/05 08:16:15 jakob Exp $ (LBL)";
@


1.1.1.3
log
@Import OpenBSD as of today again (seems pretty stable, I hope)

Prominent changes: more bgpd, tcpmd5; tcpdump/isakmpd fixes
@
text
@d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-rip.c,v 1.10 2000/12/05 08:16:15 jakob Exp $ (LBL)";
@



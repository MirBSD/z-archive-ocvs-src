head	1.5;
access;
symbols
	MIRBSD_7quater:1.3
	cvs-200405160640:1.1.1.4
	MIRBSD_7:1.3.0.2
	cvs-200401271800:1.1.1.4
	cvs-200401261630:1.1.1.4
	cvs-200401021645:1.1.1.4
	MIRBSD_7_ALPHA:1.1.1.4.0.6
	cvs-200312222040:1.1.1.4
	MIRBSD_7ter:1.1.1.4
	MIRBSD_7_DEV:1.1.1.4.0.2
	cvs-200310020700:1.1.1.4
	cvs-200309271030:1.1.1.4
	cvs-200309251530:1.1.1.4
	cvs-200308302005:1.1.1.4
	cvs-200308221505:1.1.1.4
	cvs-200308171200:1.1.1.4
	ctm-3496:1.1.1.4
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	cvs-200305071630:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-3203:1.1.1.2
	cvs-20030410-1130:1.1.1.2
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.10.10.21.11.57;	author tg;	state dead;
branches;
next	1.4;

1.4
date	2004.07.21.10.24.31;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2004.02.25.20.20.32;	author tg;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2004.02.25.13.28.10;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.55.49;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.55.49;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.10.15.00.59;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.07.06.15.56.42;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.08.11.18.55.27;	author tg;	state Exp;
branches;
next	;

1.3.2.1
date	2004.12.25.16.43.51;	author tg;	state dead;
branches;
next	;


desc
@@


1.5
log
@package tools in base is dead

agreed bsiegert@@
@
text
@/* $MirBSD: src/usr.sbin/pkg_install/add/main.c,v 1.4 2004/07/21 10:24:31 tg Stab $ */
/* $OpenBSD: main.c,v 1.18 2003/08/06 20:46:36 millert Exp $	*/

/*
 * FreeBSD install - a package for the installation and maintainance
 * of non-core utilities.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * Jordan K. Hubbard
 * 18 July 1993
 *
 * This is the add module.
 */

#include <err.h>
#include <sys/param.h>
#include "lib.h"
#include "add.h"

__RCSID("$MirBSD: src/usr.sbin/pkg_install/add/main.c,v 1.4 2004/07/21 10:24:31 tg Stab $");

static char Options[] = "hvIRfnp:SMt:d:";

char	*Prefix		= NULL;
Boolean	NoInstall	= FALSE;
Boolean	NoRecord	= FALSE;

char	*Mode		= NULL;
char	*Owner		= NULL;
char	*Group		= NULL;
char	*PkgName	= NULL;
char	*Directory	= NULL;
char	FirstPen[FILENAME_MAX];
add_mode_t AddMode	= NORMAL;
display_mode_t DisplayMode = ENV;

char **pkgs;
int pkg_count = 0;

static void usage(void);

int
main(int argc, char **argv)
{
    int ch, err;
    char **start;
    char *cp;

    start = argv;
    while ((ch = getopt(argc, argv, Options)) != -1) {
	switch(ch) {
	case 'd':
	    switch(optarg[0]) {
		case 'c':
		    DisplayMode = CAT;
		    break;
		case 'e':
		    DisplayMode = ENV;
		    break;
		case 'l':
		    DisplayMode = LESS;
		    break;
		case 'm':
		    DisplayMode = MORE;
		    break;
		default:
		    usage();
		    break;
	    }
	    break;
	case 'v':
	    Verbose = TRUE;
	    break;

	case 'p':
	    Prefix = optarg;
	    break;

	case 'I':
	    NoInstall = TRUE;
	    break;

	case 'R':
	    NoRecord = TRUE;
	    break;

	case 'f':
	    Force = TRUE;
	    break;

	case 'n':
	    Fake = TRUE;
	    Verbose = TRUE;
	    break;

	case 't':
	    strlcpy(FirstPen, optarg, sizeof(FirstPen));
	    break;

	case 'S':
	    AddMode = SLAVE;
	    break;

	case 'M':
	    AddMode = MASTER;
	    break;

	case 'h':
	case '?':
	default:
	    usage();
	    break;
	}
    }
    argc -= optind;
    argv += optind;

    pkg_count = argc + 1;
    pkgs = (char **)calloc(pkg_count,  sizeof(char **));
    if (pkgs == NULL) {
    	fprintf(stderr, "malloc failed - abandoning package add.\n");
    	exit(1);
    }

    if (AddMode != SLAVE) {

	/* Get all the remaining package names, if any */
	for (ch = 0; *argv; ch++, argv++) {
	    /* Don't mangle stdin ("-") or URL arguments */
	    if ( (strcmp(*argv, "-") == 0)
		 || (isURL(*argv))) {
	         pkgs[ch] = strdup(*argv);
		 if (pkgs[ch] == NULL) {
		     fprintf(stderr,
			     "malloc failed - abandoning package add.\n");
		     exit(1);
		 }
	    }
	    else {			/* expand all pathnames to fullnames */
		char *s, *tmp;

		s=ensure_tgz(*argv);

		if (fexists(s)) { /* refers to a file directly */
		    pkgs[ch] = (char *) malloc(MAXPATHLEN * sizeof(char));
		    if (pkgs[ch] == NULL) {
		        fprintf(stderr,
				"malloc failed - abandoning package add.\n");
			exit(1);
		    }
		    tmp = realpath(s, pkgs[ch]);
		    if (tmp == NULL) {
		        perror("realpath failed");
			fprintf(stderr, "failing path was %s\n", pkgs[ch]);
			exit(1);
		    }
		}
		else if (ispkgpattern(*argv)
			 && (s=findbestmatchingname(dirname_of(*argv),
						    basename_of(*argv)))
			    != NULL) {
		    if (Verbose)
			printf("Using %s for %s\n",s, *argv);
		    pkgs[ch] = (char *) malloc(MAXPATHLEN * sizeof(char));
		    if (pkgs[ch] == NULL) {
		        fprintf(stderr,
				"malloc failed - abandoning package add.\n");
			exit(1);
		    }
		    tmp = realpath(s, pkgs[ch]);
		    if (tmp == NULL) {
		        perror("realpath failed");
			fprintf(stderr, "failing path was %s\n", pkgs[ch]);
			exit(1);
		    }
		    free(s);
		} else {
		    /* look for the file(pattern) in the expected places */
		    if (!(cp = fileFindByPath(NULL, *argv))) {
		        fprintf(stderr, "can't find package '%s'\n", s);
			exit(1);
		    }
		    else {
			pkgs[ch] = strdup(cp);
			if (pkgs[ch] == NULL) {
			    fprintf(stderr,
				  "malloc failed - abandoning package add.\n");
			    exit(1);
			}
		    }
		}
	    }
	}
	/* If no packages, yelp */
	if (!ch)
	    pwarnx("missing package name(s)"), usage();
	else if (ch > 1 && AddMode == MASTER)
	    pwarnx("only one package name may be specified with master mode"),
	    usage();
    }
    if ((err = pkg_perform(pkgs)) != 0) {
	if (Verbose)
	    pwarnx("%d package addition(s) failed", err);
	return err;
    }
    else
	return 0;
}

static void
usage()
{
    fprintf(stderr, "%s\n",
	"usage: pkg_add [-vInfRMS] [-d celm] [-t template] [-p prefix] pkg-name ...");
    exit(1);
}
@


1.4
log
@sync with mpsup module
@
text
@d1 1
a1 1
/* $MirBSD: mpsup/pkgtools/add/main.c,v 1.2 2004/06/25 11:48:37 tg Exp $ */
d28 1
a28 1
__RCSID("$MirBSD: mpsup/pkgtools/add/main.c,v 1.2 2004/06/25 11:48:37 tg Exp $");
@


1.3
log
@tell the _real_ filename that was looked up, not argv[].
baka. whoever wrote this.
@
text
@d1 1
a1 1
/* $MirBSD: main.c,v 1.2 2004/02/25 13:28:10 tg Exp $ */
a22 3
#include <sys/cdefs.h>
__RCSID("$MirBSD: main.c,v 1.2 2004/02/25 13:28:10 tg Exp $");

d27 2
@


1.3.2.1
log
@remove old MirPorts tools from #7quinquies-to-be
agreed bsiegert@@
@
text
@d1 1
a1 1
/* $MirBSD: src/usr.sbin/pkg_install/add/main.c,v 1.3 2004/02/25 20:20:32 tg Exp $ */
d24 1
a24 1
__RCSID("$MirBSD: src/usr.sbin/pkg_install/add/main.c,v 1.3 2004/02/25 20:20:32 tg Exp $");
@


1.2
log
@* from now on, you can specify pkg_add(1) whether it should use
  cat, less, more or ${PAGER:-more} as the displaying programme
  for packet MESSAGEs (the latter was default).
  Using cat can be useful for bulk unattended installations.

  Annoyed myself and reminded by franciszek holop <fred@@pentacom.sk>
* whitespace cleanup
* use new MirOS-style RCS IDs
* documentation fixes
@
text
@d1 1
a1 1
/* $MirBSD$ */
d24 1
a24 1
__RCSID("$MirBSD$");
d189 1
a189 1
		        fprintf(stderr, "can't find package '%s'\n", *argv);
@


1.1
log
@Initial revision
@
text
@d1 2
a2 5
/*	$OpenBSD: main.c,v 1.15 2002/09/08 22:01:50 tdeval Exp $	*/

#ifndef lint
static char *rcsid = "$OpenBSD: main.c,v 1.15 2002/09/08 22:01:50 tdeval Exp $";
#endif
a4 1
 *
a20 1
 *
d23 3
d31 1
a31 1
static char Options[] = "hvIRfnp:SMt:";
d44 1
d61 19
d106 1
a106 1
	    strcpy(FirstPen, optarg);
d131 3
a133 3
    	exit(1);		
    }      
    
d139 1
a139 1
	    if ( (strcmp(*argv, "-") == 0)  
d143 1
a143 1
		     fprintf(stderr, 
d145 1
a145 1
		     exit(1);		
d152 2
a153 2
		    
		if (fexists(s)) { /* refers to a file directly */ 
d156 1
a156 1
		        fprintf(stderr, 
d158 1
a158 1
			exit(1);		
d175 1
a175 1
		        fprintf(stderr, 
d177 1
a177 1
			exit(1);		
d185 1
d195 1
a195 1
			    fprintf(stderr, 
d197 1
a197 1
			    exit(1);		
d223 1
a223 1
	"usage: pkg_add [-vInfRMS] [-t template] [-p prefix] pkg-name ...");
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD cvs as of roughly 11:11 UTC today,
or CTM delta 3188/3189/3190.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.16 2003/04/03 19:42:53 avsm Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.16 2003/04/03 19:42:53 avsm Exp $";
d88 1
a88 1
	    strlcpy(FirstPen, optarg, sizeof(FirstPen));
@


1.1.1.3
log
@Import OpenBSD base system minus kerberos from CTM,
kernel source from CVS right now (no diffs though)
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.17 2003/07/04 17:31:19 avsm Exp $	*/
d4 1
a4 1
static const char rcsid[] = "$OpenBSD: main.c,v 1.17 2003/07/04 17:31:19 avsm Exp $";
@


1.1.1.4
log
@Import the complete OpenBSD source tree (base system)
as of CTM delta 3496 (roughly 1200 UTC today) into the
vendor branch.
Attention: this is a big update. Don't even try to
build this system, OpenBSD 3.4-beta, yet on your own.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.18 2003/08/06 20:46:36 millert Exp $	*/
d4 1
a4 1
static const char rcsid[] = "$OpenBSD: main.c,v 1.18 2003/08/06 20:46:36 millert Exp $";
a166 1
		    free(s);
@



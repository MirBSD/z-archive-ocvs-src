head	1.2;
access;
symbols
	MIRBSD_7quater:1.1.1.3
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	cvs-200305071630:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-3203:1.1.1.2
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.01.03.04.51.36;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.54.59;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.54.59;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.15.17.50.08;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.29.17.40.25;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remaining merges and bump patchlevel until after mbr/ext change
@
text
@/*	$OpenBSD: catman.c,v 1.5 2002/06/01 20:15:43 deraadt Exp $	*/
/*
 * Copyright (c) 1993 Winning Strategies, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Winning Strategies, Inc.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef lint
static char rcsid[] = "$Id: catman.c,v 1.1 2003/03/22 17:54:59 tg Exp $";
#endif /* not lint */

#include <sys/types.h>
#include <sys/stat.h>
#include <sys/wait.h>
#include <dirent.h>
#include <err.h>
#include <errno.h>
#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <paths.h>

#include "pathnames.h"

int f_nowhatis;
int f_noaction;
int f_noformat;
int f_ignerr;
int f_noprint;

int dowhatis;

char *mp = _PATH_MAN;
char *sp = _MAN_SECTIONS;

void usage(void);
void catman(const char *, char *);
void makewhatis(const char *);
void dosystem(const char *);

int
main(int argc, char **argv)
{
	int c;

	while ((c = getopt(argc, argv, "knpswM:")) != -1) {
		switch (c) {
		case 'k':
			f_ignerr = 1;
			break;
		case 'n':
			f_nowhatis = 1;
			break;
		case 'p':
			f_noaction = 1;
			break;
		case 's':
			f_noprint = 1;
			break;
		case 'w':
			f_noformat = 1;
			break;
		case 'M':
			mp = optarg;
			break;

		case '?':
		default:
			usage();
		}
	}

	argc -= optind;
	argv += optind;

	if (f_noprint && f_noaction)
		f_noprint = 0;

	if (argc > 1)
		usage();
	if (argc == 1)
		sp = *argv;

	if (f_noformat == 0 || f_nowhatis == 0)
		catman(mp, sp);
	if (f_nowhatis == 0 && dowhatis)
		makewhatis(mp);

	exit(0);
}


void
catman(const char *path, char *section)
{
	char mandir[PATH_MAX];
	char catdir[PATH_MAX];
	char manpage[PATH_MAX];
	char catpage[PATH_MAX];
	char sysbuf[1024];
	struct stat manstat;
	struct stat catstat;
	struct dirent *dp;
	DIR *dirp;
	char *s, *tmp;
	int sectlen, error;

	for (s = section; *s; s += sectlen) {
#ifdef notdef
		tmp = s;
		sectlen = 0;
		if (isdigit(*tmp)) {
			sectlen++;
			tmp++;
			while (*tmp && isdigit(*tmp) == 0) {
				sectlen++;
				tmp++;
			}
		}
#else
		sectlen = 1;
#endif
		if (sectlen == 0)
			errx(1, "malformed section string");

		snprintf(mandir, sizeof mandir, "%s/%s%.*s", path,
		    _PATH_MANPAGES, sectlen, s);
		snprintf(catdir, sizeof catdir, "%s/%s%.*s", path,
		    _PATH_CATPAGES, sectlen, s);

		if ((dirp = opendir(mandir)) == 0) {
			warn("can't open %s", mandir);
			continue;
		}

		if (stat(catdir, &catstat) < 0) {
			if (errno != ENOENT) {
				warn("can't stat %s", catdir);
				closedir(dirp);
				continue;
			}
			if (f_noprint == 0)
				printf("mkdir %s\n", catdir);
			if (f_noaction == 0 && mkdir(catdir, 0755) < 0) {
				warn("can't create %s", catdir);
				closedir(dirp);
				return;
			}

		}

		while ((dp = readdir(dirp)) != NULL) {
			if (strcmp(dp->d_name, ".") == 0 ||
			    strcmp(dp->d_name, "..") == 0)
				continue;

			snprintf(manpage, sizeof manpage, "%s/%s",
			    mandir, dp->d_name);
			snprintf(catpage, sizeof catpage, "%s/%s",
			    catdir, dp->d_name);
			if ((tmp = strrchr(catpage, '.')) != NULL)
				strcpy(tmp, ".0");
			else
				continue;

			if (stat(manpage, &manstat) < 0) {
				warn("can't stat %s", manpage);
				continue;
			}

			if (!S_ISREG(manstat.st_mode)) {
				warnx("not a regular file %s", manpage);
				continue;
			}
			if ((error = stat(catpage, &catstat)) &&
			    errno != ENOENT) {
				warn("can't stat %s", catpage);
				continue;
			}

			if ((error && errno == ENOENT) || 
			    manstat.st_mtime >= catstat.st_mtime) {
				if (f_noformat)
					dowhatis = 1;
				else {
					/*
					 * manpage is out of date,
					 * reformat
					 */
					snprintf(sysbuf, sizeof sysbuf,
					    "nroff -mandoc %s > %s",
					    manpage, catpage);
					if (f_noprint == 0)
						printf("%s\n", sysbuf);
					if (f_noaction == 0)
						dosystem(sysbuf);
					dowhatis = 1;
				}
			}
		}
		closedir(dirp);
	}
}

void
makewhatis(const char *path)
{
	char sysbuf[1024];

	snprintf(sysbuf, sizeof sysbuf, "%s %s", _PATH_MAKEWHATIS, path);
	if (f_noprint == 0)
		printf("%s\n", sysbuf);
	if (f_noaction == 0)
		dosystem(sysbuf);
}

void
dosystem(const char *cmd)
{
	int status;

	if ((status = system(cmd)) == 0)
		return;

	if (status == -1)
		err(1, "cannot execute action");
	if (WIFSIGNALED(status))
		errx(1, "child was signaled to quit. aborting");
	if (WIFSTOPPED(status))
		errx(1, "child was stopped. aborting");
	if (f_ignerr == 0)
		errx(1,"*** Exited %d", status);
	warnx("*** Exited %d (continuing)", status);
}

void
usage()
{
	extern char *__progname;

	(void)fprintf(stderr,
	    "usage: %s [-knpsw] [-M manpath] [sections]\n", __progname);
	exit(1);
}
@


1.1
log
@Initial revision
@
text
@d33 1
a33 1
static char rcsid[] = "$Id: catman.c,v 1.5 2002/06/01 20:15:43 deraadt Exp $";
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD source with the "new" command line as well,
in order to be able to provide a MirBSD release which bases
upon a fairly current OpenBSD base source code tree deemed
stable enough.
@
text
@d1 1
a1 1
/*	$OpenBSD: catman.c,v 1.6 2003/04/15 08:32:38 deraadt Exp $	*/
d33 1
a33 1
static char rcsid[] = "$Id: catman.c,v 1.6 2003/04/15 08:32:38 deraadt Exp $";
d188 1
a188 1
				strlcpy(tmp, ".0", catpage + sizeof catpage - tmp);
@


1.1.1.3
log
@the previous cvs import did not finish due to 'memory fault'
sync with OpenBSD-cvs
@
text
@d1 1
a1 1
/*	$OpenBSD: catman.c,v 1.7 2003/06/28 20:37:29 deraadt Exp $	*/
d33 1
a33 1
static char rcsid[] = "$Id: catman.c,v 1.7 2003/06/28 20:37:29 deraadt Exp $";
d263 1
a263 1
usage(void)
@



head	1.2;
access;
symbols
	MIRBSD_7quater:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.3
	MIRBSD_5:1.1.1.3
	cvs-200306091240:1.1.1.3
	cvs-200306082100:1.1.1.3
	ctm-3316:1.1.1.3
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	cvs-200305071630:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-3203:1.1.1.2
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.2
date	2004.05.21.20.08.02;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.54.55;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.54.55;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.15.17.50.07;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.05.17.47.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* merge OpenBSD 3.5-current
* re-sort entries in Makefile
  => not a bunch of adds any more; all alphabetic
  => remove obsolete SUBDIRS_ONLY_BSD for now
     (MirLinux won't come that soon due to a certain lawsuit,
      licence issues with unwillingly GNU fanatics, and my
      chronic unwillingness to do masochistic work)
* spacing, RCS IDs, etc.
* pkg gets folded into pkg_install, so we only have one dir
  to worry about
* pkg_add leaves the tree - nobody cared about this kind
  of package tools anyways, and they're not part of MirBSD
  (although still supported by MirPorts)
* mopd leaves - we don't have VAX support anyways
@
text
@.\" Copyright (c) 1988, 1989, 1991 Carnegie Mellon University
.\"
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootpd.8,v 1.1 2003/03/22 17:54:55 tg Exp $
.\"
.TH BOOTPD 8 "November 06, 1993" "Carnegie Mellon University"
.SH NAME
bootpd, bootpgw \- Internet Boot Protocol server/gateway
.SH SYNOPSIS
.B bootpd
[
.B \-i
.B \-s
.B \-t
timeout
.B \-d
level
.B \-c
chdir\-path
]
[
.I bootptab
[
.I dumpfile
] ]
.br
.B bootpgw
[
.B \-i
.B \-s
.B \-t
timeout
.B \-d
level
] server
.SH DESCRIPTION
.I Bootpd
implements an Internet Bootstrap Protocol (BOOTP) server as defined in
RFC951, RFC1532, and RFC1533.
.I Bootpgw
implements a simple BOOTP gateway which can be used to forward
requests and responses between clients on one subnet and a
BOOTP server (i.e.,
.IR bootpd )
on another subnet. While either
.I bootpd
or
.I bootpgw
will forward BOOTREPLY packets, only
.I bootpgw
will forward BOOTREQUEST packets.
.PP
One host on each network segment is normally configured to run either
.I bootpd
or
.I bootpgw
from
.I inetd
by including one of the following lines in the file
.IR /etc/inetd.conf :
.IP
bootps dgram udp wait root /usr/sbin/bootpd bootpd bootptab
.br
bootps dgram udp wait root /usr/sbin/bootpgw bootpgw server
.PP
This mode of operation is referred to as "inetd mode" and causes
.I bootpd
(or
.IR bootpgw )
to be started only when a boot request arrives.  If it does not
receive another packet within fifteen minutes of the last one
it received, it will exit to conserve system resources.  The
.B \-t
option controls this timeout (see OPTIONS).
.PP
It is also possible to run
.I bootpd
(or
.IR bootpgw )
in "standalone mode" (without
.IR inetd )
by simply invoking it from a shell like any other regular command.
Standalone mode is particularly useful when
.I bootpd
is used with a large configuration database, where the start up
delay might otherwise prevent timely response to client requests.
(Automatic start up in standalone mode can be done by invoking
.I bootpd
from within
.IR /etc/rc.local ,
for example.)
Standalone mode is less useful for
.I bootpgw
which
has very little start up delay because
it does not read a configuration file.
.PP
Either program automatically detects whether it was invoked from inetd
or from a shell and automatically selects the appropriate mode.
The
.B \-s
or
.B \-i
option may be used to force standalone or inetd mode respectively
(see OPTIONS).
.SH OPTIONS
.TP
.BI \-t \ timeout
Specifies the
.I timeout
value (in minutes) that a
.I bootpd
or
.I bootpgw
process will wait for a BOOTP packet before exiting.
If no packets are received for
.I timeout
minutes, then the program will exit.
A timeout value of zero means "run forever".
In standalone mode, this option is forced to zero.
.TP
.BI \-d \ debug\-level
Sets the
.I debug\-level
variable that controls the amount of debugging messages generated.
For example, -d4 or -d 4 will set the debugging level to 4.
For compatibility with older versions of
.IR bootpd ,
omitting the numeric parameter (i.e., just -d) will
simply increment the debug level by one.
.TP
.BI \-c \ chdir\-path
Sets the current directory used by
.I bootpd
while checking the existence and size of client boot files.  This is
useful when client boot files are specified as relative pathnames, and
.I bootpd
needs to use the same current directory as the TFTP server
(typically /tftpboot).  This option is not recognized by
.IR bootpgw .
.TP
.B \-i
Force inetd mode.  This option is obsolete, but remains for
compatibility with older versions of
.IR bootpd .
.TP
.B \-s
Force standalone mode.  This option is obsolete, but remains for
compatibility with older versions of
.IR bootpd .
.TP
.I bootptab
Specifies the name of the configuration file from which
.I bootpd
loads its database of known clients and client options
.RI ( bootpd
only).
.TP
.I dumpfile
Specifies the name of the file that
.I bootpd
will dump its internal database into when it receives a
SIGUSR1 signal
.RI ( bootpd
only).  This option is only recognized if
.I bootpd
was compiled with the -DDEBUG flag.
.TP
.I server
Specifies the name of a BOOTP server to which
.I bootpgw
will forward all BOOTREQUEST packets it receives
.RI ( bootpgw
only).
.SH OPERATION
.PP
Both
.I bootpd
and
.I bootpgw
operate similarly in that both listen for any packets sent to the
.I bootps
port, and both simply forward any BOOTREPLY packets.
They differ in their handling of BOOTREQUEST packets.
.PP
When
.I bootpgw
is started, it determines the address of a BOOTP server
whose name is provided as a command line parameter.  When
.I bootpgw
receives a BOOTREQUEST packet, it sets the "gateway address"
and "hop count" fields in the packet and forwards the packet
to the BOOTP server at the address determined earlier.
Requests are forwarded only if they indicate that
the client has been waiting for at least three seconds.
.PP
When
.I bootpd
is started it reads a configuration file, (normally
.IR /etc/bootptab )
that initializes the internal database of known clients and client
options.  This internal database is reloaded
from the configuration file when
.I bootpd
receives a hangup signal (SIGHUP) or when it discovers that the
configuration file has changed.
.PP
When
.I bootpd
receives a BOOTREQUEST packet, it
.\" checks the modification time of the
.\" configuration file and reloads the database if necessary.  Then it
looks for a database entry matching the client request.
If the client is known,
.I bootpd
composes a BOOTREPLY packet using the database entry found above,
and sends the reply to the client (possibly using a gateway).
If the client is unknown, the request is discarded
(with a notice if debug > 0).
.PP
If
.I bootpd
is compiled with the -DDEBUG option, receipt of a SIGUSR1 signal causes
it to dump its internal database to the file
.I /var/run/bootpd.dump
or the dumpfile specified as a command line parameter.
.PP
During initialization, both programs
determine the UDP port numbers to be used by calling
.I getservbyname
(which normally uses
.IR /etc/services).
Two service names (and port numbers) are used:
.IP
bootps \- BOOTP Server listening port
.br
bootpc \- BOOTP Client destination port
.LP
If the port numbers cannot
be determined using
.I getservbyname
then the values default to boopts=67 and bootpc=68.
.SH FILES
.TP 20
/etc/bootptab
Database file read by
.IR bootpd .
.TP
/var/run/bootpd.dump
Debugging dump file created by
.IR bootpd .
.TP
/etc/services
Internet service numbers.
.TP
/tftpboot
Current directory typically used by the TFTP server and
.IR bootpd .

.SH BUGS
Individual host entries must not exceed 1024 characters.

.SH CREDITS
.PP
This distribution is currently maintained by
Walter L. Wimer <walt+@@cmu.edu>.
.PP
The original BOOTP server was created by
Bill Croft at Stanford University in January 1986.
.PP
The current version of
.I bootpd
is primarily the work of David Kovar,
Drew D. Perkins, and Walter L. Wimer,
at Carnegie Mellon University.
.TP
Enhancements and bug\-fixes have been contributed by:
(in alphabetical order)
.br
Danny Backx <db@@sunbim.be>
.br
John Brezak <brezak@@ch.hp.com>
.br
Frank da Cruz <fdc@@cc.columbia.edu>
.br
David R. Linn <drl@@vuse.vanderbilt.edu>
.br
Jim McKim <mckim@@lerc.nasa.gov>
.br
Gordon W. Ross <gwr@@mc.com>
.br
Jason Zions <jazz@@hal.com>
.SH "SEE ALSO"
.LP
bootptab(5), inetd(8), tftpd(8)
.LP
DARPA Internet Request For Comments:
.TP 10
RFC951
Bootstrap Protocol
.TP 10
RFC1532
Clarifications and Extensions for the Bootstrap Protocol
.TP 10
RFC1533
DHCP Options and BOOTP Vendor Extensions
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootpd.8,v 1.9 2003/03/15 21:01:49 jmc Exp $
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD source with the "new" command line as well,
in order to be able to provide a MirBSD release which bases
upon a fairly current OpenBSD base source code tree deemed
stable enough.
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootpd.8,v 1.10 2003/04/14 06:51:48 jmc Exp $
d79 1
a79 1
in "stand-alone mode" (without
d82 1
a82 1
Stand-alone mode is particularly useful when
d86 1
a86 1
(Automatic start up in stand-alone mode can be done by invoking
d91 1
a91 1
Stand-alone mode is less useful for
d103 1
a103 1
option may be used to force stand-alone or inetd mode respectively
d119 1
a119 1
In stand-alone mode, this option is forced to zero.
d147 1
a147 1
Force stand-alone mode.  This option is obsolete, but remains for
@


1.1.1.3
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
.\"	$OpenBSD: bootpd.8,v 1.11 2003/05/29 18:31:53 jmc Exp $
d3 1
a3 1
.\" Copyright (c) 1988, 1989, 1991 Carnegie Mellon University
d5 32
a36 22
.Dd November 6, 1993
.Dt BOOTPD 8
.Os
.Sh NAME
.Nm bootpd , bootpgw
.Nd Internet Boot Protocol server/gateway
.Sh SYNOPSIS
.Nm bootpd
.Op Fl is
.Op Fl t Ar timeout
.Op Fl d Ar level
.Op Fl c Ar chdir-path
.Bk -words
.Op Ar bootptab Op Ar dumpfile
.Ek
.Nm bootpgw
.Op Fl is
.Op Fl t Ar timeout
.Op Fl d Ar level
.Ar server
.Sh DESCRIPTION
.Nm bootpd
d38 2
a39 2
RFC 951, RFC 1532, and RFC 1533.
.Nm bootpgw
d41 5
a45 6
requests and responses between clients on one subnet and a BOOTP server
(i.e.,
.Nm bootpd )
on another subnet.
While either
.Nm bootpd
d47 1
a47 1
.Nm bootpgw
d49 1
a49 1
.Nm bootpgw
d51 1
a51 1
.Pp
d53 1
a53 1
.Nm bootpd
d55 1
a55 1
.Nm bootpgw
d57 1
a57 1
.Xr inetd 8
d59 2
a60 3
.Pa /etc/inetd.conf :
.Pp
.Bd -literal
d62 1
d64 1
a64 2
.Ed
.Pp
d66 1
a66 1
.Nm bootpd
d68 7
a74 9
.Nm bootpgw )
to be started only when a boot request arrives.
If it does not receive another packet within fifteen minutes of the last one
it received, it will exit to conserve system resources.
The
.Fl t
option controls this timeout (see
.Sx OPTIONS ) .
.Pp
d76 1
a76 1
.Nm bootpd
d78 1
a78 1
.Nm bootpgw )
d80 1
a80 1
.Xr inetd 8 )
d83 1
a83 1
.Nm bootpd
d87 1
a87 1
.Nm bootpd
d89 1
a89 1
.Pa /etc/rc.local ,
d92 1
a92 1
.Nm bootpgw
d96 2
a97 3
.Pp
Either program automatically detects whether it was invoked from
.Xr inetd 8
d100 1
a100 1
.Fl s
d102 6
a107 6
.Fl i
option may be used to force stand-alone or inetd mode, respectively (see
.Sx OPTIONS ) .
.Sh OPTIONS
.Bl -tag -width Ds
.It Fl t Ar timeout
d109 1
a109 1
.Ar timeout
d111 1
a111 1
.Nm bootpd
d113 1
a113 1
.Nm bootpgw
d116 1
a116 1
.Ar timeout
d120 2
a121 1
.It Fl d Ar debug-level
d123 1
a123 1
.Ar debug-level
d127 1
a127 1
.Nm bootpd ,
d130 2
a131 1
.It Fl c Ar chdir-path
d133 4
a136 4
.Nm bootpd
while checking the existence and size of client boot files.
This is useful when client boot files are specified as relative pathnames, and
.Nm bootpd
d138 14
a151 13
(typically
.Pa /tftpboot ) .
This option is not recognized by
.Nm bootpgw .
.It Fl i
Force inetd mode.
This option is obsolete, but remains for compatibility with older versions of
.Nm bootpd .
.It Fl s
Force stand-alone mode.
This option is obsolete, but remains for compatibility with older versions of
.Nm bootpd .
.It Ar bootptab
d153 1
a153 1
.Nm bootpd
d155 1
a155 1
.Pf ( Nm bootpd
d157 2
a158 1
.It Ar dumpfile
d160 1
a160 1
.Nm bootpd
d163 3
a165 4
.Pf ( Nm bootpd
only).
This option is only recognized if
.Nm bootpd
d167 2
a168 1
.It Ar server
d170 1
a170 1
.Nm bootpgw
d172 1
a172 1
.Pf ( Nm bootpgw
d174 2
a175 2
.El
.Sh OPERATION
d177 1
a177 1
.Nm bootpd
d179 1
a179 1
.Nm bootpgw
d181 1
a181 1
.Em bootps
d184 1
a184 1
.Pp
d186 1
a186 1
.Nm bootpgw
d188 2
a189 3
whose name is provided as a command line parameter.
When
.Nm bootpgw
d195 1
a195 1
.Pp
d197 7
a203 6
.Nm bootpd
is started it reads a configuration file (normally
.Pa /etc/bootptab )
that initializes the internal database of known clients and client options.
This internal database is reloaded from the configuration file when
.Nm bootpd
d206 1
a206 1
.Pp
d208 1
a208 1
.Nm bootpd
d211 1
a211 2
.\" configuration file and reloads the database if necessary.
.\" Then it
d214 1
a214 1
.Nm bootpd
d218 2
a219 2
(with a notice if debug \*[Gt] 0).
.Pp
d221 1
a221 1
.Nm bootpd
d224 1
a224 1
.Pa /var/run/bootpd.dump
d226 4
a229 4
.Pp
During initialization, both programs determine the UDP port numbers to be used
by calling
.Xr getservbyname 3
d231 1
a231 1
.Pa /etc/services ) .
d233 8
a240 8
.Pp
.Bd -literal
	bootps - BOOTP Server listening port
	bootpc - BOOTP Client destination port
.Ed
.Pp
If the port numbers cannot be determined using
.Xr getservbyname 3
d242 3
a244 3
.Sh FILES
.Bl -tag -width "/var/run/bootpd.dump" -compact
.It /etc/bootptab
d246 3
a248 2
.Nm bootpd .
.It /var/run/bootpd.dump
d250 3
a252 2
.Nm bootpd .
.It /etc/services
d254 2
a255 1
.It /tftpboot
d257 3
a259 3
.Nm bootpd .
.El
.Sh BUGS
d261 3
a263 1
.Sh CREDITS
d265 2
a266 2
.An Walter L. Wimer Aq walt+@@cmu.edu .
.Pp
d269 1
a269 1
.Pp
d271 1
a271 1
.Nm bootpd
d275 21
a295 18
.Pp
Enhancements and bug-fixes have been contributed by
(in alphabetical order):
.Pp
.Bl -tag -width Ds -compact
.It An Danny Backx Aq db@@sunbim.be
.It An John Brezak Aq brezak@@ch.hp.com
.It An Frank da Cruz Aq fdc@@cc.columbia.edu
.It An David R. Linn Aq drl@@vuse.vanderbilt.edu
.It An Jim McKim Aq mckim@@lerc.nasa.gov
.It An Gordon W. Ross Aq gwr@@mc.com
.It An Jason Zions Aq jazz@@hal.com
.El
.Sh SEE ALSO
.Xr bootptab 5 ,
.Xr inetd 8 ,
.Xr tftpd 8
.Pp
d297 9
a305 5
.Bd -literal
RFC  951 Bootstrap Protocol
RFC 1532 Clarifications and Extensions for the Bootstrap Protocol
RFC 1533 DHCP Options and BOOTP Vendor Extensions
.Ed
@



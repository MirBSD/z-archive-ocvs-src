head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.3
	tg-mergefixes-1-branch:1.1.1.3.0.8
	tg-mergefixes-1-base:1.1.1.3
	MIROS_X:1.1.1.3.0.6
	MIROS_X_BASE:1.1.1.3
	tg-mergetmp-3:1.1.1.3
	MIRBSD_XP_MIRPPC:1.1.1.3.0.4
	MIRBSD_XP_SPARC_BASE:1.1.1.3
	MIRBSD_XP_SPARC:1.1.1.3.0.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308221505:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	cvs-200307072125:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	cvs-200305071630:1.1.1.2
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2003.03.22.17.49.09;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.49.09;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.07.17.45.09;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.05.16.08.28.06;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\"     $OpenBSD: vn_lock.9,v 1.5 2002/08/26 20:18:07 art Exp $
.\"
.\" Copyright (c) 2001 Constantine Sapuntzakis
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
.\" INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
.\" THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
.\" EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLUDING, BUT NOT LIMITED TO,
.\" PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
.\" OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\" WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
.\" OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
.\" ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd March 9, 2001
.Dt VN_LOCK 9
.Os
.Sh NAME
.Nm vn_lock
.Nd acquire the vnode lock
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/vnode.h>
.Ft int
.Fn "vn_lock" "struct vnode *vp" "int flags" "struct proc *p"
.Sh DESCRIPTION
The
.Fn vn_lock
function is used to acquire the vnode lock.
Certain file system operations require that the vnode lock be held when
they are called.
See sys/kern/vnode_if.src for more details.
.Pp
The
.Fn vn_lock
function must not be called when the vnode's reference count is
zero.
Instead, the
.Fn vget
function should be used.
.Pp
The 
.Fa flags 
fields may contain the following flags:
.Bl -column LK_INTERLOCK -offset indent
.It Dv LK_RETRY Ta
Return the vnode even if it has been reclaimed.
.It Dv LK_INTERLOCK Ta
Must be set if the caller owns the vnode interlock.
.It Dv LK_NOWAIT Ta
Don't wait if the vnode lock is held by someone else (may still
wait on reclamation lock on or interlock).
Must not be used with LK_RETRY.
.It Dv LK_EXCLUSIVE Ta
Acquire an exclusive lock
.It Dv LK_SHARED Ta
Acquire a shared lock
.El
.Pp
The
.Fn vn_lock
function can sleep.
The
.Fn vn_lock
releases the vnode interlock before exit.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, one of the following errors is returned.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er ENOENT
The vnode has been reclaimed and is dead.
This error is only returned if the LK_RETRY flag is not passed.
.It Bq Er EBUSY
The LK_NOWAIT flag was set and the vn_lock would have slept.
.El
.Sh SEE ALSO
.Xr vnode 9
.Sh BUGS 
The locking discipline is bizarre.
Many vnode operations are passed locked vnodes on entry but release
the lock before they exit.
Discussions with Kirk McKusick indicate that locking
discipline evolved out of the pre-VFS way of doing inode locking.
In addition, the current locking discipline may actually save
lines of code, esp. if the number of file systems is fewer
then the number of call sites.
However, the VFS interface would
require less wizardry if the locking discipline were simpler.
.Pp
The locking discipline is used in some places to attempt to make a
series of operations atomic (e.g., permissions check +
operation).
This does not work for non-local file systems that do not
support locking (e.g., NFS).
.Pp
Are vnode locks even necessary?
The security checks can be moved into the individual file systems.
Each file system can have the responsibility of ensuring that vnode
operations are suitably atomic.
.Pp
The LK_NOWAIT flag does prevent the caller from sleeping.
.Pp
The locking discipline as it relates to shared locks has yet to be defined.
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD source tree of short before 17:00 UTC today
@
text
@d1 1
a1 1
.\"     $OpenBSD: vn_lock.9,v 1.6 2003/04/20 20:38:28 jmc Exp $
d43 1
a43 3
See
.Pa sys/kern/vnode_if.src
for more details.
d53 2
a54 2
The
.Fa flags
d66 1
a66 1
Acquire an exclusive lock.
d68 1
a68 1
Acquire a shared lock.
d90 1
a90 1
.Sh BUGS
@


1.1.1.3
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
.\"     $OpenBSD: vn_lock.9,v 1.7 2004/04/17 20:30:41 jmc Exp $
d57 1
a57 1
argument may contain the following flags:
d66 1
a66 2
Must not be used with
.Dv LK_RETRY .
d86 1
a86 3
This error is only returned if the
.Dv LK_RETRY
flag is not passed.
d88 1
a88 5
The
.Dv LK_NOWAIT
flag was set and
.Fn vn_lock
would have slept.
d100 1
a100 1
than the number of call sites.
d115 1
a115 3
The
.Dv LK_NOWAIT
flag does prevent the caller from sleeping.
@



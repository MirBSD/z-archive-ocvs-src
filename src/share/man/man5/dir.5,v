head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.3
	tg-mergefixes-1-branch:1.1.1.3.0.14
	tg-mergefixes-1-base:1.1.1.3
	MIROS_X:1.1.1.3.0.12
	MIROS_X_BASE:1.1.1.3
	tg-mergetmp-3:1.1.1.3
	MIRBSD_XP_MIRPPC:1.1.1.3.0.10
	MIRBSD_XP_SPARC_BASE:1.1.1.3
	MIRBSD_XP_SPARC:1.1.1.3.0.8
	MIRBSD_7quater:1.1.1.3
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308221505:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	cvs-200307072125:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2003.03.22.17.49.05;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.49.05;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.17.32.45;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.07.06.15.41.12;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\"	$OpenBSD: dir.5,v 1.8 2000/10/26 00:37:04 aaron Exp $
.\"	$NetBSD: dir.5,v 1.5 1995/03/28 17:30:20 jtc Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)dir.5	8.3 (Berkeley) 4/19/94
.\"
.Dd April 19, 1994
.Dt DIR 5
.Os
.Sh NAME
.Nm dir ,
.Nm dirent
.Nd directory file format
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/dir.h>
.Sh DESCRIPTION
Directories provide a convenient hierarchical method of grouping
files while obscuring the underlying details of the storage medium.
A directory file is differentiated from a plain file by a flag in its
.Xr inode 5
entry.
It consists of records (directory entries) each of which contains
information about a file and a pointer to the file itself.
Directory entries may contain other directories as well as plain files;
such nested directories are referred to as subdirectories.
A hierarchy of directories and files is formed in this manner
and is called a file system (or referred to as a file system tree).
.\" An entry in this tree,
.\" nested or not nested,
.\" is a pathname.
.Pp
Each directory file contains two special directory entries; one is a pointer
to the directory itself called dot
.Pq Dq \&.
and the other a pointer to its parent directory called dot-dot
.Pq Dq \&.. .
Dot and dot-dot are valid pathnames, however, the system root directory
.Pq Dq / ,
has no parent and dot-dot points to itself like dot.
.Pp
File system nodes are ordinary directory files on which has
been grafted a file system object, such as a physical disk or a
partitioned area of such a disk (see
.Xr mount 8 ) .
.Pp
The directory entry format is defined in the file
.Aq Pa dirent.h :
.Bd -literal
#ifndef _DIRENT_H_
#define _DIRENT_H_

/*
* A directory entry has a struct dirent at the front of it, containing its
* inode number, the length of the entry, and the length of the name
* contained in the entry.  These are followed by the name padded to a 4
* byte boundary with null bytes.  All names are guaranteed null terminated.
* The maximum length of a name in a directory is MAXNAMLEN.
*/

struct dirent {
	u_long	d_fileno;	/* file number of entry */
	u_short	d_reclen;	/* length of this record */
	u_short	d_namlen;	/* length of string in d_name */
#ifdef _POSIX_SOURCE
	char	d_name[MAXNAMLEN + 1];	/* maximum name length */
#else
#define MAXNAMLEN       255
	char    d_name[MAXNAMLEN + 1];  /* maximum name length */
#endif

};

#ifdef _POSIX_SOURCE
typedef void *	DIR;
#else

#define	d_ino		d_fileno	/* backward compatibility */

/* definitions for library routines operating on directories. */
#define	DIRBLKSIZ	1024

/* structure describing an open directory. */
typedef struct _dirdesc {
	int	dd_fd;    /* file descriptor associated with directory */
	long	dd_loc;	  /* offset in current buffer */
	long	dd_size;  /* amount of data returned by getdirentries */
	char	*dd_buf;  /* data buffer */
	int	dd_len;   /* size of data buffer */
	long	dd_seek;  /* magic cookie returned by getdirentries */
} DIR;

#define	dirfd(dirp)	((dirp)->dd_fd)

#ifndef NULL
#define	NULL	0
#endif

#endif /* _POSIX_SOURCE */

#ifndef _KERNEL

#include <sys/cdefs.h>

#endif /* !_KERNEL */

#endif /* !_DIRENT_H_ */
.Ed
.Sh SEE ALSO
.Xr fs 5 ,
.Xr inode 5
.Sh HISTORY
A
.Nm dir
file format appeared in
.At v7 .
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
.\"	$OpenBSD: dir.5,v 1.9 2003/06/02 23:30:14 millert Exp $
d15 5
a19 1
.\" 3. Neither the name of the University nor the names of its contributors
@


1.1.1.3
log
@Import OpenBSD base system minus kerberos from CTM,
kernel source from CVS right now (no diffs though)
@
text
@d1 2
a2 1
.\"	$OpenBSD: dir.5,v 1.10 2003/07/04 23:06:01 millert Exp $
d31 1
a31 1
.\"     @@(#)dir.5	8.4 (Berkeley) 5/3/95
d33 1
a33 1
.Dd May 3, 1995
d42 1
a42 1
.Fd #include <dirent.h>
d76 3
d80 6
a85 6
 * A directory entry has a struct dirent at the front of it, containing
 * its inode number, the length of the entry, and the length of the name
 * contained in the entry.  These are followed by the name padded to a 4
 * byte boundary with null bytes.  All names are guaranteed NUL terminated.
 * The maximum length of a name in a directory is MAXNAMLEN.
 */
d88 6
a93 4
	u_int32_t	d_fileno;	/* file number of entry */
	u_int16_t	d_reclen;	/* length of this record */
	u_int8_t	d_type;		/* file type, see below */
	u_int8_t	d_namlen;	/* length of string in d_name */
d96 2
a99 19
/*
 * File types
 */
#define DT_UNKNOWN	0
#define DT_FIFO		1
#define DT_CHR		2
#define DT_DIR		4
#define DT_BLK		6
#define DT_REG		8
#define DT_LNK		10
#define DT_SOCK		12
#define DT_WHT		14

/*
 * Convert between stat structure types and directory types.
 */
#define IFTODT(mode)	(((mode) & 0170000) >> 12)
#define DTTOIF(dirtype)	((dirtype) << 12)

d111 6
a116 8
	int	dd_fd;     /* file descriptor associated with directory */
	long	dd_loc;	   /* offset in current buffer */
	long	dd_size;   /* amount of data returned by getdirentries */
	char	*dd_buf;   /* data buffer */
	int	dd_len;    /* size of data buffer */
	long	dd_seek;   /* magic cookie returned by getdirentries */
	long	dd_rewind; /* magic cookie for rewinding */
	int	dd_flags;  /* flags for readdir */
d121 3
a123 5
/* flags for opendir2 */
#define DTF_HIDEW	0x0001	/* hide whiteout entries */
#define DTF_NODUP	0x0002	/* don't return duplicate names */
#define DTF_REWIND	0x0004	/* rewind after reading union stack */
#define __DTF_READALL	0x0008	/* everything has been read */
d126 8
a135 1
.Xr getdirentries 2 ,
@



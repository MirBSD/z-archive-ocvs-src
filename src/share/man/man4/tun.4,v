head	1.2;
access;
symbols
	tg-mergetmp-mirosx-1:1.2
	tg-mergefixes-1-branch:1.2.0.8
	tg-mergefixes-1-base:1.2
	MIROS_X:1.2.0.6
	MIROS_X_BASE:1.2
	tg-mergetmp-3:1.2
	MIRBSD_XP_MIRPPC:1.2.0.4
	MIRBSD_XP_SPARC_BASE:1.2
	MIRBSD_XP_SPARC:1.2.0.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308221505:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	cvs-200307072125:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.2
date	2004.06.13.20.56.40;	author tg;	state Stab;
branches;
next	1.1;

1.1
date	2003.03.22.17.48.58;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.48.58;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.08.23.00.15;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.12.22.21.11.56;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* regenerate generated files (MAKEDEV, syscalls)
* regenerate i386->FLOPPY and sparc->GENERIC manually
* remove sun4 support from sparc kernel, because our CFLAGS
  prevent v7 from working anyways
* patch in Claudio Jeker's tap-for-tun diff, and fix his
  spelling and whitespace-at-eol (he delivers good KNF tho)
* move cccp.1 manpage to where gcc-local.1 landed as well
  (the FSF COPYING is a bit more restrictive, but easy enough;
  we have worse things in usr.sbin/?????/)
* bcopy, bcmp, bzero removal
* memcpy -> memmove where memcpy() is not available
* overhaul of headers (bcopy, too)
* a bunch more NULL and time_t fixes
@
text
@.\" $MirBSD$
.\" $OpenBSD: tun.4,v 1.27 2003/12/08 10:03:43 markus Exp $
.\"
.\" Copyright (c) 2003 Marcus D. Watts  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, and the entire permission notice in its entirety,
.\"    including the disclaimer of warranties.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of the author may not be used to endorse or promote
.\"    products derived from this software without specific prior
.\"    written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
.\" INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
.\" MARCUS D. WATTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\" BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
.\" OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
.\" ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
.\" TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
.\" USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd March 9, 2003
.Dt TUN 4
.Os
.Sh NAME
.Nm tun
.Nd network tunnel pseudo-device
.Sh SYNOPSIS
.Cd "pseudo-device tun" Op Ar count
.Pp
.Fd #include <sys/types.h>
.Fd #include <net/if_tun.h>
.Sh DESCRIPTION
The
.Nm
driver provides a network interface pseudo-device.
Packets sent to this interface can be read by a userland process
and processed as desired.
Packets written by the userland process are injected back into
the kernel networking subsystem.
.Pp
A
.Nm
interface can be created at runtime using the
.Ic ifconfig tunN create
command or by opening the character special device
.Pa /dev/tunN .
.Pp
Both layer 3 and layer 2 tunnenling is supported.
Layer 3 tunneling is the default mode, to enable layer 2 tunneling mode the
.Ar link0
flag needs to be set with
.Xr ifconfig 8 .
In layer 2 mode the
.Nm
interface is simulating an Ethernet network interface.
.Pp
Each device has the exclusive open property; it cannot be opened
if it is already open and in use by another process.
Each read returns at most one packet; if insufficient
buffer space is provided, the packet is truncated.
Each write supplies exactly one packet.
Each packet read or written is prefixed with a tunnel header consisting of
a 4 byte network byte order integer containing the address family
in the case of layer 3 tunneling.
In layer 2 mode the 4 byte tunnel header is replaced with a Ethernet header.
On the last close of the device, all packets are discarded,
the device is marked down, and all routes via the device
are removed.
.Pp
Writes never block.
If the protocol queue is full, the packet is dropped,
a ``collision'' is counted, and
.Er ENOBUFS
is returned.
.Pp
In addition to the usual network interface
ioctl commands described in
.Xr netintro 4 ,
the following special commands defined in
.Aq Pa net/if_tun.h
are supported:
.Pp
.Bl -tag -width indent -compact
.It Dv TUNGIFINFO (struct tuninfo)
.It Dv TUNSIFINFO (struct tuninfo)
Can be used to get or set the interface characteristics.
.Bd -literal
/* iface info */
struct tuninfo {
        u_int   mtu;
        u_short type;
        u_short flags;
        u_int   baudrate;
};
.Ed
.Pp
.Va flags
sets the interface flags, and
can include one or more of
.Dv IFF_UP ,
.Dv IFF_POINTOPOINT ,
.Dv IFF_MULTICAST ,
.Dv IFF_BROADCAST .
It defaults to
.Dv IFF_POINTOPOINT .
It is an error to set both
.Dv IFF_POINTOPOINT
and
.Dv IFF_BROADCAST .
.\" should say what type affects...
.Va type
defaults to
.Dv IFT_PROPVIRTUAL
but can be set to
.Dv IFT_PPP .
This sets the interface media address header type.
.Pp
.It Dv TUNSIFMODE Fa int *flags
Can be used to just set the interface flags.
.It Dv FIONBIO Fa int *flag
Can be used to set non-blocking I/O.
.It Dv FIOASYNC Fa int *flag
Can be used to cause signal
.Dv SIGIO
to be sent when a packet can be read.
.It Dv TIOCSPGRP Fa int *pgrp
.It Dv TIOCGPGRP Fa int *pgrp
Get or set the process group to which signals might be sent
via
.Dv FIOASYNC .
.It Dv FIONREAD Fa int *count
Gets the byte count of the next packet available to be read.
.It Dv SIOCGIFADDR Fa struct ether_addr *addr
.It Dv SIOCSIFADDR Fa struct ether_addr *addr
Get or set the ethernet address of the device in layer 2 mode.
.El
.Sh FILES
.Bl -tag -width /dev/tun* -compact
.It Pa /dev/tun*
.El
.Sh ERRORS
If open fails,
.Xr errno 2
may be set to one of:
.Bl -tag -width Er
.It Bq Eq EPERM
Only the superuser may open the device.
.It Bq Eq ENXIO
Not that many devices configured.
.It Bq Eq EBUSY
Device was already open.
.El
.Pp
If a
.Xr write 2
call fails,
.Xr errno 2
is set to one of:
.Bl -tag -width Er
.It Bq Eq EMSGSIZE
The packet supplied was too small or too large.
The maximum sized packet allowed is currently 16384 bytes.
.It Bq Eq ENOBUFS
There were no mbufs, or
the queue for the outgoing protocol is full.
.It Bq Eq EAFNOSUPPORT
The address family specified in the tunnel header was not
recognized.
.El
.Pp
Ioctl commands may fail with:
.Bl -tag -width Er
.It Bq EINVAL
Attempt to set both
.Dv IFF_POINTOPOINT
and
.Dv IFF_BROADCAST
with
.Dv TUNSIFMODE
or using
.Dv SIOCGIFADDR
or
.Dv SIOCSIFADDR
in layer 3 mode.
.It Bq ENOTTY
Unrecognized ioctl command.
.El
.Pp
A
.Xr read 2
call may fail because of:
.Bl -tag -width Er
.It Bq Eq EHOSTDOWN
The device is not ready.
The device must have an
.Xr inet 4
interface address assigned to it, such as via
.Dv SIOCSIFADDR .
.It Bq Eq EWOULDBLOCK
Non-blocking I/O was selected and no packets were available.
.El
.Pp
An attempt to send a packet out via the interface may fail with:
.Bl -tag -width Er
.It Bq Eq EHOSTDOWN
The device is not ready.
The device must have an
.Xr inet 4
interface address assigned to it, such as via
.Dv SIOCSIFADDR .
.El
.Sh SEE ALSO
.Xr inet 4 ,
.Xr intro 4 ,
.Xr netintro 4 ,
.Xr ifconfig 8
.Sh HISTORY
The ability to switch from a layer 3 interface (tunnel device) to
a layer 2 interface (ethertap device) has been added in
.Mx 8 .
.Sh BUGS
There is no way to set
.Dv TUN_STAYUP .
.Pp
.Dv TUNSIFINFO
does no checking on
.Va flags .
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
.\"	$OpenBSD: tun.4,v 1.25 2003/03/11 07:54:01 david Exp $
d37 1
a37 1
.Cd pseudo-device tun Op Ar count
a48 1
By default 2 such interfaces are provided.
d50 13
a62 1
The
d64 2
a65 4
driver normally appears as a character special device,
.Pa /dev/tun0 ,
.Pa /dev/tun1 ,
etc.
d72 3
a74 1
a 4 byte network byte order integer containing the address family.
d135 1
a135 1
.It Dv TIOCSPGRP Fa int *pgpp
d142 3
a181 3
.It Bq EBUSY
.Dv TUNSIFMODE
and the interface was up.
d188 6
a193 1
.Dv TUNSIFMODE .
d222 1
a223 1
.Xr inet 4 ,
d226 4
d231 3
a233 2
There is no way to set TUN_STAYUP.
.br
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD CVS of roughly 2000-2200 UTC. Last import before release.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tun.4,v 1.26 2003/06/06 10:29:41 jmc Exp $
d205 1
a206 1
.Xr intro 4 ,
d210 2
a211 3
There is no way to set
.Dv TUN_STAYUP .
.Pp
@


1.1.1.3
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tun.4,v 1.27 2003/12/08 10:03:43 markus Exp $
d36 1
a36 1
.Cd "pseudo-device tun" Op Ar count
d48 1
d50 1
a50 1
A
d52 4
a55 5
interface can be created at runtime using the
.Ic ifconfig tunN create
command or by opening the character special device
.Pa /dev/tunN .
.Pp
@



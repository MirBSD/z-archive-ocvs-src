head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.5
	tg-mergefixes-1-branch:1.1.1.5.0.8
	tg-mergefixes-1-base:1.1.1.5
	MIROS_X:1.1.1.5.0.6
	MIROS_X_BASE:1.1.1.5
	tg-mergetmp-3:1.1.1.5
	MIRBSD_XP_MIRPPC:1.1.1.5.0.4
	MIRBSD_XP_SPARC_BASE:1.1.1.5
	MIRBSD_XP_SPARC:1.1.1.5.0.2
	MIRBSD_7quater:1.1.1.4
	cvs-200405160640:1.1.1.5
	cvs-200401271800:1.1.1.4
	cvs-200401261630:1.1.1.4
	cvs-200401021645:1.1.1.4
	MIRBSD_7_ALPHA:1.1.1.4.0.6
	MIRBSD_7:1.1.1.4.0.4
	cvs-200312222040:1.1.1.4
	MIRBSD_7ter:1.1.1.4
	MIRBSD_7_DEV:1.1.1.4.0.2
	cvs-200310020700:1.1.1.4
	cvs-200309271030:1.1.1.4
	cvs-200309251530:1.1.1.4
	cvs-200308302005:1.1.1.4
	cvs-200308221505:1.1.1.4
	cvs-200308171200:1.1.1.4
	ctm-3496:1.1.1.4
	ctm-3449:1.1.1.4
	ctm-3437:1.1.1.4
	cvs-200307191805:1.1.1.4
	ctm-3425:1.1.1.4
	cvs-200307091500:1.1.1.4
	cvs-200307072125:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.3
	MIRBSD_5:1.1.1.3
	cvs-200306082100:1.1.1.3
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2003.03.22.17.48.58;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.48.58;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.17.32.28;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.08.23.00.29;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.07.09.16.41.12;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.05.16.08.30.14;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\"	$OpenBSD: systrace.4,v 1.5 2002/12/17 10:14:56 miod Exp $
.\"
.\" Copyright (c) 2002 CubeSoft Communications, Inc.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistribution of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Neither the name of CubeSoft Communications, nor the names of its
.\"    contributors may be used to endorse or promote products derived from
.\"    this software without specific prior written permission.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd May 26, 2002
.Dt SYSTRACE 4
.Os
.Sh NAME
.Nm systrace
.Nd enforce and generate policies for system calls
.Sh SYNOPSIS
.Cd "pseudo-device systrace 1"
.Sh DESCRIPTION
.Nm
attaches to processes and enforces policies for system calls.
A pseudo-device,
.Pa /dev/systrace ,
allows userland processes to control the behavior of
.Nm
through an
.Xr ioctl 2
interface.
.Sh SYSTEM CALL POLICIES
.Nm
can assign the following policies to system calls:
.Bl -tag -enum -width SYSTR_POLICY_XXXXXX
.It SYSTR_POLICY_ASK
Send a message of the type
.Dv SYSTR_MSG_ASK ,
and put the process to sleep until a
.Dv STRIOCANSWER
.Xr ioctl 2
is made.
.It SYSTR_POLICY_PERMIT
Immediately allow the system call.
.It SYSTR_POLICY_NEVER
Immediately return an error code.
.El
.Sh SYSTRACE MESSAGES
A
.Xr read 2
operation on the
.Nm
pseudo-device will block if there are no pending messages, or
return the following structure:
.Bd -literal
struct str_message {
	int msg_type;
#define SYSTR_MSG_ASK	1
#define SYSTR_MSG_RES	2
#define SYSTR_MSG_EMUL	3
#define SYSTR_MSG_CHILD	4
	pid_t msg_pid;
	short msg_policy;
	union {
		struct str_msg_emul msg_emul;
		struct str_msg_ask msg_ask;
		struct str_msg_child msg_child;
	} msg_data;
};

struct str_msg_emul {
	char emul[SYSTR_EMULEN];
};

struct str_msg_ask {
	int code;
	int argsize;
	register_t args[SYSTR_MAXARGS];
	register_t rval[2];
	int result;
};

struct str_msg_child {
	pid_t new_pid;
};
.Ed
.Sh IOCTL INTERFACE
.Nm
supports the following
.Xr ioctl 2
commands:
.Bl -tag -width "xxxxxx"
.It Dv SYSTR_CLONE Fa "int"
Return a
.Nm
file descriptor for
further
.Xr ioctl 2
operations.
.El
.Bl -tag -width STRIOCXXXXXXXX
.It Dv STRIOCATTACH Fa "pid_t"
Attach to a process, unless:
.Bl -enum -compact -width 2n
.It
It's the process that's doing the attaching.
.It
It's a system process.
.It
It's being traced already.
.It
You do not own the process and you're not root.
.It
It's
.Xr init 8 ,
and the
kernel was not compiled with
.Cd option INSECURE .
.El
.It Dv STRIOCDETACH Fa "pid_t"
Wake up a process if it is waiting for an answer, and detach from it.
.It Dv STRIOCANSWER Fa "struct systrace_answer"
Tell
.Nm
what to do with a system call that was assigned a policy of
.Dv SYSTR_POLICY_ASK .
.Bd -literal
struct systrace_answer {
	pid_t stra_pid;     /* PID of process being traced */
	int stra_policy;    /* Policy to assign */
	int stra_error;     /* Return value of denied syscall
	                       (will return EPERM if zero) */
	int stra_flags;
#define	SYSTR_FLAGS_RESULT 0x0001    /* Report syscall result */
};
.Ed
.It Dv STRIOCREPORT Fa "pid_t"
Report the current emulation a process is using inside the
.Va msg_emul
structure.
.It Dv STRIOCREPLACE Fa "struct systrace_replace"
Arrange for system call arguments to be replaced by arguments
supplied by the monitoring process.
.Bd -literal
struct systrace_replace {
	pid_t strr_pid;
	int strr_nrepl;		/* # of arguments to replace */
	caddr_t	strr_base;		/* Base user memory */
	size_t strr_len;		/* Length of memory */
	int strr_argind[SYSTR_MAXARGS];	/* Argument indexes */
	size_t strr_off[SYSTR_MAXARGS];	/* Argument offsets */
	size_t strr_offlen[SYSTR_MAXARGS]; /* Argument sizes */
};
.Ed
.It Dv STRIOCIO Fa "struct systrace_io"
Copy data in/out of the process being traced.
.Bd -literal
struct systrace_io {
	pid_t strio_pid;    /* PID of process being traced */
	int strio_ops;
#define	SYSTR_READ	1
#define	SYSTR_WRITE	2
	void *strio_offs;
	void *strio_addr;
	size_t strio_len;
};
.Ed
.It Dv STRIOCPOLICY Fa "struct systrace_policy"
Manipulate the set of policies.
.Bd -literal
struct systrace_policy {
	int strp_op;
#define	SYSTR_POLICY_NEW	1    /* Allocate a new policy */
#define	SYSTR_POLICY_ASSIGN	2    /* Assign policy to process */
#define	SYSTR_POLICY_MODIFY	3    /* Modify an entry */
	int strp_num;
	union {
		struct {
			short code;
#define SYSTR_POLICY_ASK	0
#define SYSTR_POLICY_PERMIT	1
#define SYSTR_POLICY_NEVER	2
			short policy;
		} assign;
		pid_t pid;
		int maxents;
	} strp_data;
#define strp_pid	strp_data.pid
#define strp_maxents	strp_data.maxents
#define strp_code	strp_data.assign.code
#define strp_policy	strp_data.assign.policy
};
.Ed
.Pp
The
.Dv SYSTR_POLICY_NEW
operation allocates a new policy with all entries initialized to
.Dv SYSTR_POLICY_ASK ,
and returns the new policy number into
.Va strp_num .
The
.Dv SYSTR_POLICY_ASSIGN
operation attaches the policy identified by
.Va strp_num
to
.Va strp_pid ,
with a maximum of
.Va strp_maxents
entries.
The
.Dv SYSTR_POLICY_MODIFY
operation changes the entry indexed by
.Va strp_code
to
.Va strp_policy .
.It Dv STRIOCGETCWD Fa "pid_t"
Set the working directory of the current process to that of the
named process.
.It Dv STRIOCRESCWD
Restore the working directory of the current process.
.El
.Sh FILES
.Bl -tag -width "/dev/systrace" -compact
.It Pa /dev/systrace
system call tracing facility
.El
.Sh SEE ALSO
.Xr ioctl 2 ,
.Xr read 2 ,
.Xr options 4 ,
.Xr securelevel 7
.Sh HISTORY
The
.Nm
facility first appeared in
.Ox 3.2 .
.\" .Sh BUGS
.\" .Sh CAVEATS
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.4,v 1.6 2003/06/03 02:08:12 wcobb Exp $
d3 1
a3 1
.\" Copyright (c) 2002, 2003 CubeSoft Communications, Inc.
d9 1
a9 1
.\" 1. Redistributions of source code must retain the above copyright
d11 3
a13 3
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
@


1.1.1.3
log
@Import OpenBSD CVS of roughly 2000-2200 UTC. Last import before release.
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.4,v 1.7 2003/06/06 10:29:41 jmc Exp $
d14 1
a14 1
.\"
@


1.1.1.4
log
@Bring the entire base system and ports tree in sync with OpenBSD
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.4,v 1.8 2003/07/09 13:26:20 jmc Exp $
d48 1
a48 1
.Bl -tag -width SYSTR_POLICY_XXXXXX
@


1.1.1.5
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.4,v 1.10 2004/03/22 20:31:36 miod Exp $
d34 1
a34 1
.Cd "pseudo-device systrace" Op Ar count
d105 1
a105 1
.Bl -tag -width STRIOCXXXXXXXX
@



head	1.20;
access;
symbols
	tg-mergetmp-mirosx-1:1.20
	tg-mergefixes-1-branch:1.20.0.4
	tg-mergefixes-1-base:1.20
	MIROS_X:1.20.0.2
	MIROS_X_BASE:1.20
	tg-mergetmp-3:1.20
	MIRBSD_XP_MIRPPC:1.12.0.4
	MIRBSD_XP_SPARC_BASE:1.12
	MIRBSD_XP_SPARC:1.12.0.2;
locks; strict;
comment	@# @;


1.20
date	2004.12.08.18.42.20;	author tg;	state Exp;
branches;
next	1.19;

1.19
date	2004.11.30.17.05.20;	author tg;	state Exp;
branches;
next	1.18;

1.18
date	2004.11.28.14.07.48;	author tg;	state Exp;
branches;
next	1.17;

1.17
date	2004.11.27.15.41.00;	author tg;	state Exp;
branches;
next	1.16;

1.16
date	2004.11.16.19.15.16;	author tg;	state Exp;
branches;
next	1.15;

1.15
date	2004.11.16.16.57.36;	author tg;	state Exp;
branches;
next	1.14;

1.14
date	2004.11.13.02.25.08;	author tg;	state Exp;
branches;
next	1.13;

1.13
date	2004.10.14.17.43.34;	author tg;	state Exp;
branches;
next	1.12;

1.12
date	2004.08.11.22.03.02;	author tg;	state Stab;
branches;
next	1.11;

1.11
date	2004.08.09.21.31.04;	author tg;	state Exp;
branches;
next	1.10;

1.10
date	2004.07.13.19.42.22;	author tg;	state Exp;
branches;
next	1.9;

1.9
date	2004.07.13.19.01.41;	author tg;	state Exp;
branches;
next	1.8;

1.8
date	2004.07.13.18.48.55;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2004.07.04.19.34.31;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2004.06.17.19.52.43;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2004.06.16.20.07.20;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.16.19.46.00;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.16.19.44.59;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.16.19.36.41;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.16.15.44.30;	author tg;	state Exp;
branches;
next	;


desc
@@


1.20
log
@if hard links fail, do a cp
build break if /usr/bin != /bin noticed by sap@@
@
text
@# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.19 2004/11/30 17:05:20 tg Exp $
#-
# Copyright (c) 2004
#	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publically perform, modi-
# fy, merge, distribute, sell, give away or sublicence, provided the
# above copyright notices, these terms and the disclaimer are retai-
# ned in all redistributions, or reproduced in accompanying documen-
# tation or other materials provided with binary redistributions.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of covered work, even if advised of the possibility of such damage.
#-
# This Makefile include is to be used in various degrees at the file
# top of a "Makefile.bsd-wrapper" around GNU autoconf produced confi-
# gure shell scripts.


.if !defined(BSD_OWN_MK)
.  include <bsd.own.mk>
.endif

.if !target(.MAIN)
.  if exists(${.CURDIR}/../Makefile.inc)
.    include "${.CURDIR}/../Makefile.inc"
.  endif

.MAIN: all
.endif

INSTALL_PROGRAM=	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} \
			    -o ${BINOWN} -g ${BINGRP} -m ${BINMODE}
INSTALL_SCRIPT=		${INSTALL} ${INSTALL_COPY} \
			    -o ${BINOWN} -g ${BINGRP} -m ${BINMODE}
INSTALL_DATA=		${INSTALL} ${INSTALL_COPY} \
			    -o ${BINOWN} -g ${BINGRP} -m ${SHAREMODE}
INSTALL_MAN=		${INSTALL} ${INSTALL_COPY} \
			    -o ${MANOWN} -g ${MANGRP} -m ${MANMODE}
INSTALL_DOC=		${INSTALL} ${INSTALL_COPY} \
			    -o ${DOCOWN} -g ${DOCGRP} -m ${DOCMODE}

GCCHOST?=	${OStriplet}
GCCTARGET?=	${OStriplet}
ALL_TARGET?=	all
INST_TARGET?=	install
FSFMAKEFILE?=	Makefile
CLEANFILES+=	config.cache config.log
FSFMAKE?=	${XVARS} ${MAKE} ${FSFMARGS} ${XARGS}
FSFCC?=		${SHELL} ${GNUSYSTEM_AUX_DIR}/ccwrap.sh
FSFSRC?=	${.CURDIR}
.if !defined(FSFOBJDIR)
FSFOBJDIR!=	readlink ${.OBJDIR} || ( cd ${.OBJDIR} && pwd )
.endif

.PATH: ${FSFSRC}

.if ${FSFMAKEFILE} != "Makefile"
FSFMARGS+=	-f ${FSFMAKEFILE}
.endif

.if !defined(CFWRAP_NO_CCOM)
FSFCFLAGS=	${CFLAGS} ${COPTS}
FSFCXXFLAGS=	${CXXFLAGS} ${CXXOPTS}

XVARS+=	CC="${FSFCC} ${CC}" CFLAGS="${FSFCFLAGS:C/ *$//}" CPP="${CPP}" \
	CXX="${FSFCC} ${CXX}" CXXFLAGS="${FSFCXXFLAGS:C/ *$//}"
.endif

XARGS+=	INSTALL_PROGRAM="${INSTALL_PROGRAM}" INSTALL_DATA="${INSTALL_DATA}" \
	INSTALL_SCRIPT="${INSTALL_SCRIPT}" BSDSRCDIR="${BSDSRCDIR}" \
	GNUSYSTEM_AUX_DIR="${GNUSYSTEM_AUX_DIR}" SHELL="${SHELL}" \
	CONFIG_SHELL="${SHELL}" PICFLAG="${PICFLAG}" DESTDIR="${DESTDIR}"

XVARS+=	CPPFLAGS="${CPPFLAGS}" LDFLAGS="${LDFLAGS} ${LDSTATIC}" \
	INSTALL_STRIP="${INSTALL_STRIP}"

_CFVARS=PATH="/bin:/usr/bin:/sbin:/usr/sbin" ${XVARS} ${XARGS} \
	CCWRAP_FLAGS_POSTFIX=-Wno-error ${CFVARS}

CFARGS+=--build=${OStriplet} --host=${GCCHOST} --srcdir=${FSFSRC}
.if ${GCCTARGET} != ${GCCHOST}
CFARGS+=--target=${GCCTARGET}
.endif
.if ${NOPIC:L} != "no"
CF_PIC=	--disable-shared
.else
CF_PIC=	--enable-shared
.endif

all: _SUBDIRUSE do-build

prereq: config.status

config: config.clean config.status

config.clean:
	rm -f config.cache config.status

config.status: ${FSFMAKEFILE}.in configure
	cd ${FSFOBJDIR} && ${_CFVARS} ${SHELL} ${FSFSRC}/configure ${CFARGS}

build: config.status
	cd ${FSFOBJDIR} && ${FSFMAKE} ${ALL_TARGET}

.if !target(do-build)
do-build: build
.endif

install: _SUBDIRUSE pre-install do-install maninstall linkinstall post-install

.if !target(do-install)
do-install:
	cd ${FSFOBJDIR} && ${FSFMAKE} ${INST_TARGET}
.endif

pre-install:

post-install:

linkinstall:
.if defined(LINKS) && !empty(LINKS)
.  for lnk file in ${LINKS}
	@@l=${DESTDIR}${lnk}; \
	 t=${DESTDIR}${file}; \
	 echo $$t -\> $$l; \
	 rm -f $$t; ln $$l $$t || cp $$l $$t
.  endfor
.endif

.if ${NOMAN:L} != "no"
maninstall:
.endif

.for _tgt in depend lint tags
.  if !target(${_tgt})
${_tgt}: _SUBDIRUSE
	# Nothing here so far...

.  endif
.endfor

clean: _SUBDIRUSE pre-clean do-clean post-clean

pre-clean:

.if !target(do-clean)
do-clean:
	-if test -e ${FSFMAKEFILE}; then \
		cd ${FSFOBJDIR} && ${FSFMAKE} distclean; fi
.endif

post-clean:
	-rm -rf ${CLEANFILES}

cleandir: _SUBDIRUSE clean

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
.if ${NOMAN:L} == "no"
.  include <bsd.man.mk>
.endif

.PHONY:	all prereq config config.clean build do-build install \
	pre-install do-install maninstall post-install depend \
	lint tags clean pre-clean do-clean post-clean cleandir
@


1.19
log
@optimise by giving default values for ${NO*}
and nuking the defined(NO*) checks
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.18 2004/11/28 14:07:48 tg Exp $
d133 1
a133 1
	 rm -f $$t; ln $$l $$t
@


1.18
log
@a non-intrusive way to use -Werror and autotools
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.17 2004/00/11 27:15:41 tg Exp $
d91 1
a91 1
.if defined(NOPIC) && ${NOPIC:L} != "no"
d137 1
a137 1
.if defined(NOMAN) && ${NOMAN:L} != "no"
d166 1
a166 1
.if !defined(NOMAN) || ${NOMAN:L} == "no"
@


1.17
log
@seems like I missed a DESTDIR
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.16 2004/11/16 19:15:16 tg Exp $
d56 1
d72 2
a73 2
XVARS+=	CC="${CC}" CFLAGS="${FSFCFLAGS:S/^-Werror$//g:C/ *$//}" CPP="${CPP}" \
	CXX="${CXX}" CXXFLAGS="${FSFCXXFLAGS:S/^-Werror$//g:C/ *$//}"
d84 3
d107 1
a107 2
	cd ${FSFOBJDIR} && PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
	    ${XVARS} ${XARGS} ${SHELL} ${FSFSRC}/configure ${CFARGS}
@


1.16
log
@-Werror is totally pathetic wrt GNU configure scripts
(one _could_ add them back after configure finished, by
 overriding on the make(1) command line, but that breaks
 some GNU Makefiles, too)
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.15 2004/11/16 16:57:36 tg Exp $
d78 1
a78 1
	CONFIG_SHELL="${SHELL}" PICFLAG="${PICFLAG}"
@


1.15
log
@* optimise <bsd.cfwrap.mk>
* while there, start conversion of .ifndef NOMAN and similar stuff
  to .if !defined(NOMAN) || ${NOMAN:L} != "no" (to start migration
  from boolean on/off to yes/no valued variables)
* remove libgcc.so, with all consequences
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.14 2004/11/13 02:25:08 tg Exp $
d71 2
a72 2
XVARS+=	CC="${CC}" CFLAGS="${FSFCFLAGS:C/ *$//}" CPP="${CPP}" \
	CXX="${CXX}" CXXFLAGS="${FSFCXXFLAGS:C/ *$//}"
@


1.14
log
@welcome back, sparc
(usr.bin/pmdb was never deleted)
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.13 2004/10/14 17:43:34 tg Exp $
d26 1
a26 1
.ifndef	BSD_OWN_MK
d57 1
a57 1
.ifndef	FSFOBJDIR
d67 1
a67 1
.ifndef	CFWRAP_NO_CCOM
d78 1
a78 1
	CONFIG_SHELL="${SHELL}"
d87 5
d134 1
a134 1
.ifdef	NOMAN
d163 1
a163 1
.ifndef	NOMAN
@


1.13
log
@remove trailing blanks from cflags here, too
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.12 2004/08/11 22:03:02 tg Stab $
d84 3
@


1.12
log
@enable relocated source

you must install this before attempting to build the new binutils
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.11 2004/08/09 21:31:04 tg Exp $
d68 5
a72 2
XVARS+=	CC="${CC}" CFLAGS="${CFLAGS} ${COPTS}" CPP="${CPP}" \
	CXX="${CXX}" CXXFLAGS="${CXXFLAGS} ${CXXOPTS}"
@


1.11
log
@one time post-install: is enough
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.10 2004/07/13 19:42:22 tg Exp $
d56 1
d61 2
d80 1
a80 2
CFARGS+=--build=${OStriplet} --host=${GCCHOST}

d93 1
a93 1
	    ${XVARS} ${XARGS} ${SHELL} ${.CURDIR}/configure ${CFARGS}
@


1.10
log
@better way to fix. sync lists.
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.9 2004/07/13 19:01:41 tg Exp $
a107 2

post-install:
@


1.9
log
@easier multilib fuckup
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.8 2004/07/13 18:48:55 tg Exp $
d57 1
a57 1
FSFOBJDIR!=	readlink ${.OBJDIR}
@


1.8
log
@only define FSFOBJDIR if it isn't
I hate libstdc++-v3
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.7 2004/07/04 19:34:31 tg Exp $
d57 1
a57 1
FSFOBJDIR!=	cd ${.OBJDIR} && pwd
@


1.7
log
@remove a few kludges, now that we build libstdc++ shared, not multilib'd
add the gccobjdir kludge as fsfobjdir to <bsd.cfwrap.mk> (just in case...)
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.6 2004/06/17 19:52:43 tg Exp $
d56 1
d58 1
@


1.6
log
@preliminary build fixes, whitespace fixes, dependency fixes,
manpage installation and naming fixes, programme hard-link
fixes & addition to <bsd.cfwrap.mk>, removal-of-NOPROFILE-option
fixes etc.

you should be able to build kernel & userland with this set
of source and the following line in /etc/mk.conf added:
| CSYS+=		-D"ETHER_ALIGN=2"
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.5 2004/06/16 20:07:20 tg Exp $
d56 1
d88 2
a89 2
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" ${XVARS} ${XARGS} \
	    ${SHELL} ${.CURDIR}/configure ${CFARGS}
d92 1
a92 1
	${FSFMAKE} ${ALL_TARGET}
d102 1
a102 1
	${FSFMAKE} ${INST_TARGET}
d139 2
a140 1
	-test -e ${FSFMAKEFILE} && ${FSFMAKE} distclean
@


1.5
log
@oops, both X* should be given to configure
add some more flags
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.4 2004/06/16 19:46:00 tg Exp $
d55 1
a55 2
FSFMAKE?=	${XVARS} ${MAKE} ${XARGS}

d58 1
a58 1
XARGS+=	-f ${FSFMAKEFILE}
d97 1
a97 1
install: _SUBDIRUSE pre-install do-install maninstall post-install
d107 12
@


1.4
log
@use XARGS and XVARS (not XMENV) for clarity, and correct a replaco
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.3 2004/06/16 19:44:59 tg Exp $
d63 1
a63 1
XVARS+=	CC="${CC}" CFLAGS="${CFLAGS} ${COPTS}" \
d68 3
a70 2
	INSTALL_SCRIPT="${INSTALL_SCRIPT}" SHELL="${SHELL}" \
	CONFIG_SHELL="${SHELL}" GNUSYSTEM_AUX_DIR="${GNUSYSTEM_AUX_DIR}"
d72 2
a73 1
XVARS+=	CPPFLAGS="${CPPFLAGS}" LDFLAGS="${LDFLAGS} ${LDSTATIC}"
d88 1
a88 1
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" ${XVARS} \
@


1.3
log
@separate between (MirPorts slang) MAKE_ENV and MAKE_FLAGS
also, support other names for Makefile better
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.2 2004/06/16 19:36:41 tg Exp $
d55 1
a55 1
FSFMAKE?=	${XMENV} ${MAKE} ${XARGS}
d63 2
a64 2
XMENV+=	CC="${CC}" CFLAGS="${CFLAGS} ${COPTS}" \
	CXX="${CXX}" CXXMENV="${CXXMENV} ${CXXOPTS}"
d71 1
a71 1
XMENV+=	CPPFLAGS="${CPPFLAGS}" LDFLAGS="${LDFLAGS} ${LDSTATIC}"
d86 1
a86 1
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" ${XMENV} \
@


1.2
log
@convert texinfo and append cross-compiling basic support
@
text
@d1 1
a1 1
# $MirBSD: src/share/mk/bsd.cfwrap.mk,v 1.1 2004/06/16 15:44:30 tg Exp $
d55 6
a60 1
FSFMAKE?=	${XFLAGS} ${MAKE} ${FSFMFLAGS}
d63 2
a64 2
XFLAGS+=	CC="${CC}" CFLAGS="${CFLAGS} ${COPTS}" \
		CXX="${CXX}" CXXFLAGS="${CXXFLAGS} ${CXXOPTS}"
d67 1
a67 1
XFLAGS+=INSTALL_PROGRAM="${INSTALL_PROGRAM}" INSTALL_DATA="${INSTALL_DATA}" \
d69 3
a71 2
	CONFIG_SHELL="${SHELL}" LDFLAGS="${LDFLAGS} ${LDSTATIC}" \
	GNUSYSTEM_AUX_DIR="${GNUSYSTEM_AUX_DIR}" CPPFLAGS="${CPPFLAGS}"
d86 1
a86 1
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" ${XFLAGS} \
@


1.1
log
@                             Tadaa!

                 MirSolutions proudly presents:
      The GNU Autoconf'd directory configure script wrapper

First, a simple attempt to convert the "easy" cases (CVS, RCS, Lynx)
and the one which _needs_ it (less) to <bsd.cfwrap.mk> - I said it
was impossible, but it's actually possible, tho hard.

More to follow.
@
text
@d1 1
a1 1
# $MirBSD: src/share/misc/licence.template,v 1.11 2004/05/28 15:34:01 tg Rel $
d49 2
a50 1
GCCARCH?=	${OStriplet}
d55 1
a55 1
FSFMAKE?=	${XFLAGS} ${MAKE}
d66 2
@


head	1.2;
access;
symbols
	MIRBSD_XP_MIRPPC:1.1.1.3.0.10
	MIRBSD_XP_SPARC_BASE:1.1.1.3
	MIRBSD_XP_SPARC:1.1.1.3.0.8
	MIRBSD_7quater:1.1.1.3
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.3.0.6
	MIRBSD_7:1.1.1.3.0.4
	cvs-200312222040:1.1.1.3
	MIRBSD_7ter:1.1.1.3
	MIRBSD_7_DEV:1.1.1.3.0.2
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.3
	MIRBSD_5:1.1.1.3
	cvs-200306082100:1.1.1.3
	ctm-3316:1.1.1.3
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.11.13.18.34.43;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.53.15;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.53.15;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.21.19.16.17;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.05.17.44.02;	author tg;	state Stab;
branches;
next	;


desc
@@


1.2
log
@* gprof: I don't know; I think gprof is pointless (since I don't write
  hooks for profiling libraries into gcc3, nor do we build these since
  years), but let's keep it here - the BSD version, not the GNU versi-
  on, and with unused arches deleted
* oldrdist: u-uh, deserves to die
* rdist, rdistd, sup: I don't think anybody would use them willingly;
  if so, please tell me (and I hope you've got a very good reason to
  do so ;-)
* learn: it was nice as a document of UNIX(R) history, but I'm cleaning
  up base right now, so...
@
text
@/*	$OpenBSD: isexec.c,v 1.5 2002/05/09 19:13:02 millert Exp $	*/

/*
 * Copyright (c) 1983 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
#ifndef lint
#if 0
static char RCSid[] = 
"$From: isexec.c,v 6.21 1994/04/01 23:44:10 mcooper Exp $";
#else
static char RCSid[] = 
"$OpenBSD: isexec.c,v 1.5 2002/05/09 19:13:02 millert Exp $";
#endif

static char sccsid[] = "@@(#)client.c";

static char copyright[] =
"@@(#) Copyright (c) 1983 Regents of the University of California.\n\
 All rights reserved.\n";
#endif /* not lint */


#include "defs.h"

#if	EXE_TYPE == EXE_AOUT
/*
 * BSD style A.OUT
 */
#include <a.out.h>

static int _isexec(fd)
	int fd;
{
	struct exec ehdr;

	if ((read(fd, &ehdr, sizeof(ehdr)) == sizeof(ehdr)) && 
	    !N_BADMAG(ehdr))
		return(TRUE);
	else
		return(FALSE);
}
#endif /* EXE_AOUT */


#if	EXE_TYPE == EXE_ELF_AND_COFF || EXE_TYPE == EXE_ELF
/*
 * Elf
 */
#include <elf_abi.h>
#define ISELF(h)	(h.e_type == ET_EXEC)
#endif	/* EXE_ELF_AND_COFF || EXE_ELF */

#if 	EXE_TYPE == EXE_ELF_AND_COFF || EXE_TYPE == EXE_COFF

/*
 * COFF
 */
#if defined(FILEHDR_H)
#include FILEHDR_H
#endif	/* FILEHDR_H */

#if !defined(ISCOFF)

/*
 * Stupid AIX
 */
#if defined(U802WRMAGIC) && defined(U802ROMAGIC) && defined(U802TOCMAGIC)
#define ISCOFF(x) (((x)==U802WRMAGIC) || ((x)==U802TOCMAGIC) || \
		   ((x)==U802TOCMAGIC))
#endif	/* U802... */
/*
 * Stupid Umax4.3
 */
#if 	defined(NS32GMAGIC) || defined(NS32SMAGIC)
#define ISCOFF(x) (((x)==NS32GMAGIC) || ((x)==NS32SMAGIC))
#endif 	/* NS32 ... */

#endif	/* ISCOFF */

#endif /* EXE_TYPE == EXE_ELF_AND_COFF || EXE_TYPE == EXE_COFF */

#if	EXE_TYPE == EXE_ELF_AND_COFF
/*
 * ELF and COFF
 */
typedef union {
    struct filehdr 	coffhdr;
    Elf32_Ehdr 		elfhdr;
} hdr_t;
#endif	/* EXE_TYPE == EXE_ELF_AND_COFF */

#if	EXE_TYPE == EXE_ELF
/*
 * Elf
 */
typedef Elf32_Ehdr 	hdr_t;
#endif	/* EXE_TYPE == EXE_ELF */

#if	EXE_TYPE == EXE_COFF
/*
 * COFF
 */

#if	defined(FILEHDR_H)
#include FILEHDR_H
#endif	/* FILEHDR_H */

typedef struct filehdr 	hdr_t;
#endif	/* EXE_TYPE == EXE_COFF */

#if	EXE_TYPE == EXE_ELF_AND_COFF || EXE_TYPE == EXE_ELF || EXE_TYPE == EXE_COFF
/*
 * System V style COFF and System V R4 style ELF
 */
static int _isexec(fd)
	int fd;
{
	hdr_t hdr;

	if (read(fd, &hdr, sizeof(hdr)) == sizeof(hdr)) {
#if EXE_TYPE == EXE_ELF_AND_COFF
	    if (ISELF(hdr.elfhdr) || ISCOFF(hdr.coffhdr.f_magic))
		return(TRUE);
#endif
#if EXE_TYPE == EXE_ELF
	    if (ISELF(hdr))
		return(TRUE);
#endif
#if EXE_TYPE == EXE_COFF
	    if (ISCOFF(hdr.f_magic))
		return(TRUE);
#endif
	}

	return(FALSE);
}
#endif /* EXE_ELF_AND_COFF */


#if	EXE_TYPE == EXE_MACHO
/*
 * Mach-O format
 */

#if	defined(NEXTSTEP) && NEXTSTEP >= 3
#	include <mach-o/loader.h>
#else
#	include <sys/loader.h>
#endif	/* NEXTSTEP */

#ifndef MH_CIGAM
#define MH_CIGAM  	0xcefaedfe
#endif
#ifndef FAT_MAGIC
#define FAT_MAGIC 	0xcafebabe
#endif
#ifndef FAT_CIGAM
#define FAT_CIGAM 	0xbebafeca
#endif

static int _isexec(fd)
	int fd;
{
	struct mach_header ehdr;

	if ((read(fd, &ehdr, sizeof(ehdr)) == sizeof(ehdr)) && 
	    (ehdr.magic == MH_MAGIC || ehdr.magic == MH_CIGAM ||
	     ehdr.magic == FAT_MAGIC || ehdr.magic == FAT_CIGAM))
		return(TRUE);
	else
		return(FALSE);
}
#endif /* EXE_COFF */


#if	EXE_TYPE == EXE_HPEXEC
/*
 * HP 9000 executable format
 */

#ifdef hp9000s300

#include <a.out.h>
#define header exec
#define ISEXEC(a) ((a.file_type)==EXEC_MAGIC || (a.file_type)==SHARE_MAGIC || \
		   (a.file_type)==DEMAND_MAGIC)

#else	/* ! hp9000s300 */

#define ISEXEC(a) ((a)==EXEC_MAGIC || (a)==SHARE_MAGIC || (a)==DEMAND_MAGIC)
#include <filehdr.h>

#endif	/* hp9000s300 */

static int _isexec(fd)
	int fd;
{
	struct header ehdr;

	if ((read(fd, &ehdr, sizeof(ehdr)) == sizeof(ehdr)) &&
	    ISEXEC(ehdr.a_magic))
		return(TRUE);
	else
		return(FALSE);
}
#endif	/* EXE_HPEXEC */


#if	!defined(EXE_TYPE)
/*
 * Fake _isexec() call for unknown executable formats.
 */
static int _isexec(fd)
	/*ARGSUSED*/
	int fd;
{
	return(FALSE);
}
#endif	/* !defined(EXE_TYPE) */

/*
 * Determine whether 'file' is an executable or not.
 */
extern int isexec(file, statp)
	char *file;
	struct stat *statp;
{
	int fd, r;

	/*
	 * Must be a regular file that has some executable mode bit on
	 */
	if (!S_ISREG(statp->st_mode) ||
	    !(statp->st_mode & (S_IXUSR|S_IXGRP|S_IXOTH)))
		return(FALSE);

	if ((fd = open(file, O_RDONLY, 0)) < 0)
		return(FALSE);
	r = _isexec(fd);
	(void) close(fd);

	return(r);
}

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Sync MirBSD main source tree against OpenBSD-current,
which should be fairly stable after the Hackathon now.
@
text
@d1 1
a1 1
/*	$OpenBSD: isexec.c,v 1.6 2003/05/14 01:34:35 millert Exp $	*/
a34 3

#include "defs.h"

d37 2
a38 2
static char RCSid[] __attribute__((__unused__)) =
"$From: isexec.c,v 1.2 1999/08/04 15:57:33 christos Exp $";
d40 2
a41 2
static char RCSid[] __attribute__((__unused__)) =
"$OpenBSD: isexec.c,v 1.6 2003/05/14 01:34:35 millert Exp $";
d44 1
a44 2
static char sccsid[] __attribute__((__unused__)) =
"@@(#)client.c";
d46 1
a46 1
static char copyright[] __attribute__((__unused__)) =
d51 2
a52 1
static int _isexec(int);
d60 2
a61 2
static int
_isexec(int fd)
d144 2
a145 2
static int
_isexec(int fd)
d190 2
a191 2
static int
_isexec(int fd)
d224 2
a225 2
static int
_isexec(int fd)
d242 3
a244 2
static int
_isexec(int fd)
d253 3
a255 2
int
isexec(char *file, struct stat *statp)
@


1.1.1.3
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d1 1
a1 1
/*	$OpenBSD: isexec.c,v 1.7 2003/06/03 02:56:14 millert Exp $	*/
d15 5
a19 1
 * 3. Neither the name of the University nor the names of its contributors
d44 1
a44 1
"$OpenBSD: isexec.c,v 1.7 2003/06/03 02:56:14 millert Exp $";
@



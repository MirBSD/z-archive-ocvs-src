head	1.2;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.16
	tg-mergefixes-1-branch:1.1.1.16.0.4
	tg-mergefixes-1-base:1.1.1.16
	MIROS_X:1.1.1.16.0.2
	MIROS_X_BASE:1.1.1.16
	tg-mergetmp-3:1.1.1.16
	cvs-200412091955:1.1.1.16
	cvs-200412071730:1.1.1.15
	cvs-200411281330:1.1.1.14
	MIRBSD_XP_MIRPPC:1.1.1.14.0.4
	cvs-200410222040:1.1.1.14
	tg-mergetmp-1:1.1.1.14
	cvs-200410141645:1.1.1.14
	MIRBSD_XP_SPARC_BASE:1.1.1.14
	MIRBSD_XP_SPARC:1.1.1.14.0.2
	cvs-200407041700:1.1.1.14
	MIRBSD_7quater:1.1.1.10
	cvs-200405160640:1.1.1.13
	cvs-200401271800:1.1.1.12
	cvs-200401261630:1.1.1.12
	cvs-200401021645:1.1.1.11
	MIRBSD_7_ALPHA:1.1.1.10.0.6
	MIRBSD_7:1.1.1.10.0.4
	cvs-200312222040:1.1.1.11
	MIRBSD_7ter:1.1.1.10
	MIRBSD_7_DEV:1.1.1.10.0.2
	cvs-200310020700:1.1.1.10
	cvs-200309271030:1.1.1.10
	cvs-200309251530:1.1.1.10
	cvs-200308302005:1.1.1.9
	cvs-200308171200:1.1.1.8
	ctm-3496:1.1.1.8
	ctm-3449:1.1.1.7
	ctm-3437:1.1.1.6
	cvs-200307191805:1.1.1.5
	ctm-3425:1.1.1.5
	cvs-200307091500:1.1.1.5
	cvs-200307081345:1.1.1.4
	cvs-200307072125:1.1.1.3
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.07.26.19.29.30;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.29.17.35.37;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.06.29.17.35.37;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.07.06.15.49.55;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.07.07.21.27.51;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.07.08.13.46.32;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.07.09.16.48.28;	author tg;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.07.22.15.01.35;	author tg;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2003.07.26.13.23.14;	author tg;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2003.08.11.18.43.20;	author tg;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2003.08.30.23.30.45;	author tg;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2003.09.25.16.40.40;	author tg;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2003.12.22.21.12.52;	author tg;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	2004.01.26.18.57.17;	author tg;	state Exp;
branches;
next	1.1.1.13;

1.1.1.13
date	2004.05.16.08.06.58;	author tg;	state Exp;
branches;
next	1.1.1.14;

1.1.1.14
date	2004.07.04.17.01.57;	author tg;	state Stab;
branches;
next	1.1.1.15;

1.1.1.15
date	2004.12.07.17.31.50;	author tg;	state Exp;
branches;
next	1.1.1.16;

1.1.1.16
date	2004.12.09.19.58.58;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fake implement -d, so old scripts don't break into usage()
@
text
@/*	$OpenBSD: diff.c,v 1.34 2003/07/22 16:42:58 millert Exp $	*/

/*
 * Copyright (c) 2003 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F39502-99-1-0512.
 */

#ifndef lint
static const char rcsid[] = "$OpenBSD: diff.c,v 1.34 2003/07/22 16:42:58 millert Exp $";
#endif /* not lint */

#include <sys/param.h>
#include <sys/stat.h>

#include <err.h>
#include <errno.h>
#include <getopt.h>
#include <signal.h>
#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <unistd.h>

#include "diff.h"

int	 aflag, bflag, iflag, lflag, Nflag, Pflag, rflag, sflag, tflag, Tflag,
	 wflag;
int	 format, context, status;
char	*start, *ifdefname, *diffargs, *label;
struct stat stb1, stb2;
struct excludes *excludes_list;

#define	OPTIONS	"abC:cD:defhiL:lnNPqrS:sTtU:uwX:x:"
static struct option longopts[] = {
	{ "text",			no_argument,		0,	'a' },
	{ "ignore-space-change",	no_argument,		0,	'b' },
	{ "context",			optional_argument,	0,	'C' },
	{ "ifdef",			required_argument,	0,	'D' },
	{ "ed",				no_argument,		0,	'e' },
	{ "forward-ed",			no_argument,		0,	'f' },
	{ "ignore-case",		no_argument,		0,	'i' },
	{ "paginate",			no_argument,		0,	'l' },
	{ "label",			required_argument,	0,	'L' },
	{ "new-file",			no_argument,		0,	'N' },
	{ "rcs",			no_argument,		0,	'n' },
	{ "unidirectional-new-file",	no_argument,		0,	'P' },
	{ "brief",			no_argument,		0,	'q' },
	{ "recursive",			no_argument,		0,	'r' },
	{ "report-identical-files",	no_argument,		0,	's' },
	{ "starting-file",		required_argument,	0,	'S' },
	{ "expand-tabs",		no_argument,		0,	't' },
	{ "intial-tab",			no_argument,		0,	'T' },
	{ "unified",			optional_argument,	0,	'U' },
	{ "ignore-all-space",		no_argument,		0,	'w' },
	{ "exclude",			required_argument,	0,	'x' },
	{ "exclude-from",		required_argument,	0,	'X' },
	{ NULL,				0,			0,	'\0'}
};

__dead void usage(void);
void push_excludes(char *);
void read_excludes_file(char *file);
void set_argstr(char **, char **);

int
main(int argc, char **argv)
{
	char *ep, **oargv;
	long  l;
	int   ch, gotstdin;

	oargv = argv;
	gotstdin = 0;

	while ((ch = getopt_long(argc, argv, OPTIONS, longopts, NULL)) != -1) {
		switch (ch) {
		case 'a':
			aflag = 1;
			break;
		case 'b':
			bflag = 1;
			break;
		case 'C':
		case 'c':
			format = D_CONTEXT;
			if (optarg != NULL) {
				l = strtol(optarg, &ep, 10);
				if (*ep != '\0' || l < 0 || l >= INT_MAX)
					usage();
				context = (int)l;
			} else
				context = 3;
			break;
		case 'D':
			format = D_IFDEF;
			ifdefname = optarg;
			break;
		case 'd':
			/* minimal diffs. not implemented. */
			break;
		case 'e':
			format = D_EDIT;
			break;
		case 'f':
			format = D_REVERSE;
			break;
		case 'h':
			/* silently ignore for backwards compatibility */
			break;
		case 'i':
			iflag = 1;
			break;
		case 'L':
			label = optarg;
			break;
		case 'l':
			lflag = 1;
			signal(SIGPIPE, SIG_IGN);
			break;
		case 'N':
			Nflag = 1;
			break;
		case 'n':
			format = D_NREVERSE;
			break;
		case 'P':
			Pflag = 1;
			break;
		case 'r':
			rflag = 1;
			break;
		case 'q':
			format = D_BRIEF;
			break;
		case 'S':
			start = optarg;
			break;
		case 's':
			sflag = 1;
			break;
		case 'T':
			Tflag = 1;
			break;
		case 't':
			tflag = 1;
			break;
		case 'U':
		case 'u':
			format = D_UNIFIED;
			if (optarg != NULL) {
				l = strtol(optarg, &ep, 10);
				if (*ep != '\0' || l < 0 || l >= INT_MAX)
					usage();
				context = (int)l;
			} else
				context = 3;
			break;
		case 'w':
			wflag = 1;
			break;
		case 'X':
			read_excludes_file(optarg);
			break;
		case 'x':
			push_excludes(optarg);
			break;
		default:
			usage();
			break;
		}
	}
	argc -= optind;
	argv += optind;

	/*
	 * Do sanity checks, fill in stb1 and stb2 and call the appropriate
	 * driver routine.  Both drivers use the contents of stb1 and stb2.
	 */
	if (argc != 2)
		usage();
	if (strcmp(argv[0], "-") == 0) {
		fstat(STDIN_FILENO, &stb1);
		gotstdin = 1;
	} else if (stat(argv[0], &stb1) != 0)
		err(2, "%s", argv[0]);
	if (strcmp(argv[1], "-") == 0) {
		fstat(STDIN_FILENO, &stb2);
		gotstdin = 1;
	} else if (stat(argv[1], &stb2) != 0)
		err(2, "%s", argv[1]);
	if (gotstdin && (S_ISDIR(stb1.st_mode) || S_ISDIR(stb2.st_mode)))
		errx(2, "can't compare - to a directory");
	set_argstr(oargv, argv);
	if (S_ISDIR(stb1.st_mode) && S_ISDIR(stb2.st_mode)) {
		if (format == D_IFDEF)
			errx(2, "-D option not supported with directories");
		diffdir(argv[0], argv[1]);
	} else {
		if (S_ISDIR(stb1.st_mode)) {
			argv[0] = splice(argv[0], argv[1]);
			if (stat(argv[0], &stb1) < 0)
				err(2, "%s", argv[0]);
		}
		if (S_ISDIR(stb2.st_mode)) {
			argv[1] = splice(argv[1], argv[0]);
			if (stat(argv[1], &stb2) < 0)
				err(2, "%s", argv[1]);
		}
		print_status(diffreg(argv[0], argv[1], 0), argv[0], argv[1],
		    NULL);
	}
	exit(status);
}

void *
emalloc(size_t n)
{
	void *p;

	if ((p = malloc(n)) == NULL)
		err(2, NULL);
	return (p);
}

void *
erealloc(void *p, size_t n)
{
	void *q;

	if ((q = realloc(p, n)) == NULL)
		err(2, NULL);
	return (q);
}

int
easprintf(char **ret, const char *fmt, ...)
{
	int len;
	va_list ap;

	va_start(ap, fmt);
	len = vasprintf(ret, fmt, ap);
	va_end(ap);

	if (len == -1)
		err(2, NULL);
	return (len);
}

void
set_argstr(char **av, char **ave)
{
	size_t argsize;
	char **ap;

	argsize = 4 + (char *)ave - (char *)av + 1;
	diffargs = emalloc(argsize);
	strlcpy(diffargs, "diff", argsize);
	for (ap = av + 1; ap < ave; ap++) {
		if (strcmp(*ap, "--") != 0) {
			strlcat(diffargs, " ", argsize);
			strlcat(diffargs, *ap, argsize);
		}
	}
}

/*
 * Read in an excludes file and push each line.
 */
void
read_excludes_file(char *file)
{
	FILE *fp;
	char *buf, *pattern;
	size_t len;

	if (strcmp(file, "-") == 0)
		fp = stdin;
	else if ((fp = fopen(file, "r")) == NULL)
		err(2, "%s", file);
	while ((buf = fgetln(fp, &len)) != NULL) {
		if (buf[len - 1] == '\n')
			len--;
		pattern = emalloc(len + 1);
		memcpy(pattern, buf, len);
		pattern[len] = '\0';
		push_excludes(pattern);
	}
	if (strcmp(file, "-") != 0)
		fclose(fp);
}

/*
 * Push a pattern onto the excludes list.
 */
void
push_excludes(char *pattern)
{
	struct excludes *entry;

	entry = emalloc(sizeof(*entry));
	entry->pattern = pattern;
	entry->next = excludes_list;
	excludes_list = entry;
}

void
print_status(int val, char *path1, char *path2, char *entry)
{
	switch (val) {
	case D_ONLY:
		/* must strip off the trailing '/' */
		printf("Only in %.*s: %s\n", (int)(strlen(path1) - 1),
		    path1, entry);
		break;
	case D_COMMON:
		printf("Common subdirectories: %s%s and %s%s\n",
		    path1, entry ? entry : "", path2, entry ? entry : "");
		break;
	case D_BINARY:
		printf("Binary files %s%s and %s%s differ\n",
		    path1, entry ? entry : "", path2, entry ? entry : "");
		break;
	case D_DIFFER:
		if (format == D_BRIEF)
			printf("Files %s%s and %s%s differ\n",
			    path1, entry ? entry : "",
			    path2, entry ? entry : "");
		break;
	case D_SAME:
		if (sflag)
			printf("Files %s%s and %s%s are identical\n",
			    path1, entry ? entry : "",
			    path2, entry ? entry : "");
		break;
	case D_MISMATCH1:
		printf("File %s%s is a directory while file %s%s is a regular file\n",
		    path1, entry ? entry : "", path2, entry ? entry : "");
		break;
	case D_MISMATCH2:
		printf("File %s%s is a regular file while file %s%s is a directory\n",
		    path1, entry ? entry : "", path2, entry ? entry : "");
		break;
	}
}

__dead void
usage(void)
{
	(void)fprintf(stderr,
	    "usage: diff [-bilqtTw] [-c | -e | -f | -n | -u] [-L label] file1 file2\n"
	    "       diff [-bilqtTw] [-L label] -C number file1 file2\n"
	    "       diff [-bilqtw] -D string file1 file2\n"
	    "       diff [-bilqtTw] [-L label] -U number file1 file2\n"
	    "       diff [-bilNPqwtT] [-c | -e | -f | -n | -u ] [-L label] [-r] [-s] [-S name]\n"
	    "            [-X file] [-x pattern] dir1 dir2\n");

	exit(2);
}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.18 2003/06/27 17:08:45 david Exp $	*/
d4 1
a4 2
 * Copyright (C) Caldera International Inc.  2001-2002.
 * All rights reserved.
d6 3
a8 15
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code and documentation must retain the above
 *    copyright notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed or owned by Caldera
 *	International, Inc.
 * 4. Neither the name of Caldera International, Inc. nor the names of other
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.
d10 11
a20 12
 * USE OF THE SOFTWARE PROVIDED FOR UNDER THIS LICENSE BY CALDERA
 * INTERNATIONAL, INC. AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL CALDERA INTERNATIONAL, INC. BE LIABLE FOR ANY DIRECT,
 * INDIRECT INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
d23 8
d32 2
d35 1
a40 42
#include "pathnames.h"

#if 0
static char const sccsid[] = "@@(#)diff.c 4.7 5/11/89";
#endif

/*
 * diff - driver and subroutines
 */
int	opt;
int	aflag;			/* treat all files as text */
int	tflag;			/* expand tabs on output */
/* Algorithm related options. */
int	hflag;			/* -h, use halfhearted DIFFH */
int	bflag;			/* ignore blanks in comparisons */
int	wflag;			/* totally ignore blanks in comparisons */
int	iflag;			/* ignore case in comparisons */
/* Options on hierarchical diffs. */
int	lflag;			/* long output format with header */
int	rflag;			/* recursively trace directories */
int	sflag;			/* announce files which are same */
char	*start;			/* do file only if name >= this */
/* Variables for -D D_IFDEF option. */
char	*ifdefname;		/* What we will print for #ifdef/#endif */
int	inifdef;
/* Variables for -c and -u context option. */
int	context;		/* lines of context to be printed */
/* State for exit status. */
int	status;
int	anychange;
char	*tempfile;		/* used when comparing against std input */
/* Variables for diffdir. */
char	**diffargv;		/* option list to pass to recursive diffs */

/*
 * Input file names.
 * With diffdir, file1 and file2 are allocated BUFSIZ space,
 * and padded with a '/', and then efile0 and efile1 point after
 * the '/'.
 */
char	*file1, *file2, *efile1, *efile2;
struct	stat stb1, stb2;
d42 33
a74 3
const char *diff = _PATH_DIFF;
const char *diffh = _PATH_DIFFH;
const char *pr = _PATH_PR;
d77 3
d84 3
a86 1
	int ch;
d88 2
a89 2
	status = 2;
	diffargv = argv;
d91 1
a91 1
	while ((ch = getopt(argc, argv, "abC:cD:efhilnrS:stU:uw")) != -1) {
d94 1
a94 1
			aflag++;
d97 1
a97 1
			bflag++;
a99 5
			opt = D_CONTEXT;
			if (!isdigit(*optarg))
				usage();
			context = atoi(optarg);	/* XXX - use strtol */
			break;
d101 8
a108 2
			opt = D_CONTEXT;
			context = 3;
d111 1
a111 1
			opt = D_IFDEF;
d114 3
d118 1
a118 1
			opt = D_EDIT;
d121 1
a121 1
			opt = D_REVERSE;
d124 1
a124 1
			hflag++;
d127 4
a130 1
			iflag++;
d133 5
a137 1
			lflag++;
d140 4
a143 1
			opt = D_NREVERSE;
d146 4
a149 1
			rflag++;
d155 4
a158 1
			sflag++;
d161 1
a161 1
			tflag++;
a163 5
			opt = D_UNIFIED;
			if (!isdigit(*optarg))
				usage();
			context = atoi(optarg);	/* XXX - use strtol */
			break;
d165 8
a172 2
			opt = D_UNIFIED;
			context = 3;
d175 7
a181 1
			wflag++;
d191 4
d196 32
a227 43
		errorx("two filename arguments required");
	file1 = argv[0];
	file2 = argv[1];
	if (hflag && opt)
		errorx("-h doesn't support -D, -c, -C, -e, -f, -I, -n, -u or -U");
	if (!strcmp(file1, "-"))
		stb1.st_mode = S_IFREG;
	else if (stat(file1, &stb1) < 0)
		error("%s", file1);
	if (!strcmp(file2, "-"))
		stb2.st_mode = S_IFREG;
	else if (stat(file2, &stb2) < 0)
		error("%s", file2);
	if (S_ISDIR(stb1.st_mode) && S_ISDIR(stb2.st_mode))
		diffdir(argv);
	else
		diffreg();
	done(0);
}

int
min(int a, int b)
{

	return (a < b ? a : b);
}

int
max(int a, int b)
{

	return (a > b ? a : b);
}

__dead void
done(int sig)
{
	if (tempfiles[0] != NULL)
		unlink(tempfiles[0]);
	if (tempfiles[1] != NULL)
		unlink(tempfiles[1]);
	if (sig)
		_exit(status);
d237 1
a237 1
		error("files too big, try -h");
d247 1
a247 1
		error("files too big, try -h");
d251 2
a252 2
__dead void
error(const char *fmt, ...)
d254 1
a255 1
	int sverrno = errno;
a256 5
	if (tempfiles[0] != NULL)
		unlink(tempfiles[0]);
	if (tempfiles[1] != NULL)
		unlink(tempfiles[1]);
	errno = sverrno;
d258 1
a258 1
	verr(status, fmt, ap);
d260 21
d283 31
a313 2
__dead void
errorx(const char *fmt, ...)
d315 7
a321 1
	va_list ap;
d323 38
a360 7
	if (tempfiles[0] != NULL)
		unlink(tempfiles[0]);
	if (tempfiles[1] != NULL)
		unlink(tempfiles[1]);
	va_start(ap, fmt);
	verrx(status, fmt, ap);
	va_end(ap);
d367 6
a372 6
	    "usage: diff [-bitw] [-c | -e | -f | -h | -n | -u ] file1 file2\n"
	    "       diff [-bitw] -C number file1 file2\n"
	    "       diff [-bitw] -D string file1 file2\n"
	    "       diff [-bitw] -U number file1 file2\n"
	    "       diff [-biwt] [-c | -e | -f | -h | -n | -u ] "
	    "[-l] [-r] [-s] [-S name]\n            dir1 dir2\n");
@


1.1.1.1
log
@the previous cvs import did not finish due to 'memory fault'
sync with OpenBSD-cvs
@
text
@@


1.1.1.2
log
@Import OpenBSD base system minus kerberos from CTM,
kernel source from CVS right now (no diffs though)
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.22 2003/07/04 17:52:35 millert Exp $	*/
d57 1
d62 1
d66 1
a66 1
/* Variable for -D D_IFDEF option. */
d68 1
d74 1
d80 2
a81 2
 * With diffdir, file1 and file2 are allocated MAXPATHLEN space,
 * and padded with a '/', and then efile1 and efile2 point after
d87 4
d101 1
a101 1
	while ((ch = getopt(argc, argv, "abC:cD:efhinrS:stU:uw")) != -1) {
d130 1
a130 1
			/* silently ignore for backwards compatibility */
d135 3
d178 2
d227 1
a227 1
		error(NULL);
d237 1
a237 1
		error(NULL);
d275 1
a275 1
	    "usage: diff [-bitw] [-c | -e | -f | -n | -u ] file1 file2\n"
d279 2
a280 2
	    "       diff [-biwt] [-c | -e | -f | -n | -u ] "
	    "[-r] [-s] [-S name]\n            dir1 dir2\n");
@


1.1.1.3
log
@Sync some stuff with OpenBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.25 2003/07/06 22:17:21 millert Exp $	*/
d4 2
a5 1
 * Copyright (c) 2003 Todd C. Miller <Todd.Miller@@courtesan.com>
d7 15
a21 3
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
d23 12
a34 11
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F39502-99-1-0512.
a36 8
#ifndef lint
static const char rcsid[] = "$OpenBSD: diff.c,v 1.25 2003/07/06 22:17:21 millert Exp $";
#endif /* not lint */

#include <sys/param.h>
#include <sys/stat.h>

#include <err.h>
a37 1
#include <getopt.h>
a38 1
#include <stdio.h>
d44 29
d74 8
a81 28
int	 aflag, bflag, iflag, Nflag, Pflag, rflag, sflag, tflag, wflag;
int	 format, context, status;
char	*start, *ifdefname, *diffargs;
struct stat stb1, stb2;
struct excludes *excludes_list;

#define	OPTIONS	"abC:cD:efhinNPqrS:stU:uwX:x:"
static struct option longopts[] = {
	{ "text",			no_argument,		0,	'a' },
	{ "ignore-space-change",	no_argument,		0,	'b' },
	{ "context",			optional_argument,	0,	'C' },
	{ "ifdef",			required_argument,	0,	'D' },
	{ "ed",				no_argument,		0,	'e' },
	{ "forward-ed",			no_argument,		0,	'f' },
	{ "ignore-case",		no_argument,		0,	'i' },
	{ "new-file",			no_argument,		0,	'N' },
	{ "rcs",			no_argument,		0,	'n' },
	{ "unidirectional-new-file",	no_argument,		0,	'P' },
	{ "brief",			no_argument,		0,	'q' },
	{ "recursive",			no_argument,		0,	'r' },
	{ "report-identical-files",	no_argument,		0,	's' },
	{ "starting-file",		required_argument,	0,	'S' },
	{ "expand-tabs",		no_argument,		0,	't' },
	{ "unified",			optional_argument,	0,	'U' },
	{ "ignore-all-space",		no_argument,		0,	'w' },
	{ "exclude",			required_argument,	0,	'x' },
	{ "exclude-from",		required_argument,	0,	'X' },
};
a83 3
void push_excludes(char *);
void read_excludes_file(char *file);
void set_argstr(char **, char **);
d88 1
a88 3
	char *ep, **oargv;
	long  l;
	int   ch, gotstdin;
d90 2
a91 2
	oargv = argv;
	gotstdin = 0;
d93 1
a93 1
	while ((ch = getopt_long(argc, argv, OPTIONS, longopts, NULL)) != -1) {
d96 1
a96 1
			aflag = 1;
d99 1
a99 1
			bflag = 1;
d102 5
d108 2
a109 8
			format = D_CONTEXT;
			if (optarg != NULL) {
				l = strtol(optarg, &ep, 10);
				if (*ep != '\0' || l < 0 || l >= INT_MAX)
					usage();
				context = (int)l;
			} else
				context = 3;
d112 1
a112 1
			format = D_IFDEF;
d116 1
a116 1
			format = D_EDIT;
d119 1
a119 1
			format = D_REVERSE;
d125 1
a125 4
			iflag = 1;
			break;
		case 'N':
			Nflag = 1;
d128 1
a128 4
			format = D_NREVERSE;
			break;
		case 'P':
			Pflag = 1;
d131 1
a131 4
			rflag = 1;
			break;
		case 'q':
			format = D_BRIEF;
d137 1
a137 1
			sflag = 1;
d140 1
a140 1
			tflag = 1;
d143 5
d149 2
a150 8
			format = D_UNIFIED;
			if (optarg != NULL) {
				l = strtol(optarg, &ep, 10);
				if (*ep != '\0' || l < 0 || l >= INT_MAX)
					usage();
				context = (int)l;
			} else
				context = 3;
d153 1
a153 7
			wflag = 1;
			break;
		case 'X':
			read_excludes_file(optarg);
			break;
		case 'x':
			push_excludes(optarg);
a162 4
	/*
	 * Do sanity checks, fill in stb1 and stb2 and call the appropriate
	 * driver routine.  Both drivers use the contents of stb1 and stb2.
	 */
d164 4
a167 2
		usage();
	if (strcmp(argv[0], "-") == 0) {
d169 3
a171 4
		gotstdin = 1;
	} else if (stat(argv[0], &stb1) != 0)
		error("%s", argv[0]);
	if (strcmp(argv[1], "-") == 0) {
d173 21
a193 13
		gotstdin = 1;
	} else if (stat(argv[1], &stb2) != 0)
		error("%s", argv[1]);
	if (gotstdin && (S_ISDIR(stb1.st_mode) || S_ISDIR(stb2.st_mode)))
		errorx("can't compare - to a directory");
	if (S_ISDIR(stb1.st_mode) && S_ISDIR(stb2.st_mode)) {
		if (format == D_IFDEF)
			errorx("-D option not supported with directories");
		set_argstr(oargv, argv);
		diffdir(argv[0], argv[1]);
	} else
		diffreg(argv[0], argv[1], 0);
	exit(status);
d196 2
a197 2
void
quit(int signo)
d203 3
a205 1
	_exit(status);
d240 1
a240 1
	verr(2, fmt, ap);
d254 1
a254 1
	verrx(2, fmt, ap);
a257 57
void
set_argstr(char **av, char **ave)
{
	size_t argsize;
	char **ap;

	argsize = 4 + (char *)ave - (char *)av + 1;
	diffargs = emalloc(argsize);
	strlcpy(diffargs, "diff", argsize);
	for (ap = av + 1; ap < ave; ap++) {
		if (strcmp(*ap, "--") != 0) {
			strlcat(diffargs, " ", argsize);
			strlcat(diffargs, *ap, argsize);
		}
	}
}

/*
 * Read in an excludes file and push each line.
 */
void
read_excludes_file(char *file)
{
	FILE *fp;
	char *buf, *pattern;
	size_t len;

	if (strcmp(file, "-") == 0)
		fp = stdin;
	else if ((fp = fopen(file, "r")) == NULL)
		error("%s", file);
	while ((buf = fgetln(fp, &len)) != NULL) {
		if (buf[len - 1] == '\n')
			len--;
		pattern = emalloc(len + 1);
		memcpy(pattern, buf, len);
		pattern[len] = '\0';
		push_excludes(pattern);
	}
	if (strcmp(file, "-") != 0)
		fclose(fp);
}

/*
 * Push a pattern onto the excludes list.
 */
void
push_excludes(char *pattern)
{
	struct excludes *entry;

	entry = emalloc(sizeof(*entry));
	entry->pattern = pattern;
	entry->next = excludes_list;
	excludes_list = entry;
}

d262 6
a267 6
	    "usage: diff [-biqtw] [-c | -e | -f | -n | -u ] file1 file2\n"
	    "       diff [-biqtw] -C number file1 file2\n"
	    "       diff [-biqtw] -D string file1 file2\n"
	    "       diff [-biqtw] -U number file1 file2\n"
	    "       diff [-biNPqwt] [-c | -e | -f | -n | -u ] [-r] [-s] [-S name]"
	    " [-X file]\n            [-x pattern] dir1 dir2\n");
@


1.1.1.4
log
@Most recent fixes from anoncvs.comstyle.com in:
ports/shells/ast-ksh src/usr.bin/compress src/usr.bin/diff src/sys/netinet6
 src/sys/netinet

From: Christian Weisgerber <naddy@@cvs.openbsd.org>
Log message:
Forced update to 2003-06-21 because older distfiles have been removed.

From: Michael Shalayeff <mickey@@cvs.openbsd.org>
Log message:
fix fd closing logicand close in gzopen(); found by wilfried@@ and millert@@ ok

From: Todd C. Miller <millert@@cvs.openbsd.org>
Log message:
o Avoid a temp file if using stdin and stdin is redirected from a regular file
o Fix a double free in the temmp file case

From: Jun-ichiro itojun Hagino <itojun@@cvs.openbsd.org>
Log message:
on interface removal, clear multicast forwarding stuff.  from kame

From: Markus Friedl <markus@@cvs.openbsd.org>
Log message:
make sure the packets contains a complete inner header
for ip{4,6}-in-ip{4,6} encapsulation; fixes panic
for truncated ip-in-ip over ipsec; ok angelos@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.26 2003/07/08 04:45:32 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.26 2003/07/08 04:45:32 millert Exp $";
d179 1
a179 1
		fstat(STDIN_FILENO, &stb1);
d184 1
a184 1
		fstat(STDIN_FILENO, &stb2);
@


1.1.1.5
log
@Bring the entire base system and ports tree in sync with OpenBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.28 2003/07/09 00:39:25 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.28 2003/07/09 00:39:25 millert Exp $";
a32 1
#include <signal.h>
d41 1
a41 1
int	 aflag, bflag, iflag, lflag, Nflag, Pflag, rflag, sflag, tflag, wflag;
d47 1
a47 1
#define	OPTIONS	"abC:cD:efhilnNPqrS:stU:uwX:x:"
a55 1
	{ "paginate",			no_argument,		0,	'l' },
a119 4
		case 'l':
			lflag = 1;
			signal(SIGPIPE, SIG_IGN);
			break;
d182 1
a182 1
		err(2, "%s", argv[0]);
d187 1
a187 1
		err(2, "%s", argv[1]);
d189 1
a189 2
		errx(2, "can't compare - to a directory");
	set_argstr(oargv, argv);
d192 2
a193 1
			errx(2, "-D option not supported with directories");
d195 2
a196 14
	} else {
		if (S_ISDIR(stb1.st_mode)) {
			argv[0] = splice(argv[0], argv[1]);
			if (stat(argv[0], &stb1) < 0)
				err(2, "%s", argv[0]);
		}
		if (S_ISDIR(stb2.st_mode)) {
			argv[1] = splice(argv[1], argv[0]);
			if (stat(argv[1], &stb2) < 0)
				err(2, "%s", argv[1]);
		}
		print_status(diffreg(argv[0], argv[1], 0), argv[0], argv[1],
		    NULL);
	}
d200 10
d216 1
a216 1
		err(2, NULL);
d226 1
a226 1
		err(2, NULL);
d230 2
a231 2
int
easprintf(char **ret, const char *fmt, ...)
a232 1
	int len;
d234 1
d236 5
d242 1
a242 1
	len = vasprintf(ret, fmt, ap);
d244 1
d246 12
a257 3
	if (len == -1)
		err(2, NULL);
	return(len);
d290 1
a290 1
		err(2, "%s", file);
a314 34
}

void
print_status(int val, char *path1, char *path2, char *entry)
{
	switch (val) {
	case D_ONLY:
		printf("Only in %s: %s\n", path1, entry);
		break;
	case D_COMMON:
		printf("Common subdirectories: %s%s and %s%s\n",
		    path1, entry ? entry : "", path2, entry ? entry : "");
		break;
	case D_BINARY:
		printf("Binary files %s%s and %s%s differ\n",
		    path1, entry ? entry : "", path2, entry ? entry : "");
		break;
	case D_DIFFER:
		if (format == D_BRIEF)
			printf("Files %s%s and %s%s differ\n",
			    path1, entry ? entry : "",
			    path2, entry ? entry : "");
		break;
	case D_SAME:
		if (sflag)
			printf("Files %s%s and %s%s are identical\n",
			    path1, entry ? entry : "",
			    path2, entry ? entry : "");
		break;
	case D_MISMATCH:
		printf("File %s/%s is a directory but file %s/%s is not\n",
		    path1, entry ? entry : "", path2, entry ? entry : "");
		break;
	}
@


1.1.1.6
log
@Sync to OpenBSD 3.3-current
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.33 2003/07/22 01:16:01 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.33 2003/07/22 01:16:01 millert Exp $";
d42 1
a42 2
int	 aflag, bflag, iflag, lflag, Nflag, Pflag, rflag, sflag, tflag, Tflag,
	 wflag;
d44 1
a44 1
char	*start, *ifdefname, *diffargs, *label;
d48 1
a48 1
#define	OPTIONS	"abC:cD:efhiL:lnNPqrS:sTtU:uwX:x:"
a57 1
	{ "label",			required_argument,	0,	'L' },
a65 1
	{ "intial-tab",			no_argument,		0,	'T' },
a121 3
		case 'L':
			label = optarg;
			break;
a146 3
		case 'T':
			Tflag = 1;
			break;
d250 1
a250 1
	return (len);
d315 1
a315 3
		/* must strip off the trailing '/' */
		printf("Only in %.*s: %s\n", (int)(strlen(path1) - 1),
		    path1, entry);
d337 2
a338 6
	case D_MISMATCH1:
		printf("File %s%s is a directory while file %s%s is a regular file\n",
		    path1, entry ? entry : "", path2, entry ? entry : "");
		break;
	case D_MISMATCH2:
		printf("File %s%s is a regular file while file %s%s is a directory\n",
d348 6
a353 6
	    "usage: diff [-bilqtTw] [-c | -e | -f | -n | -u] [-L label] file1 file2\n"
	    "       diff [-bilqtTw] [-L label] -C number file1 file2\n"
	    "       diff [-bilqtw] -D string file1 file2\n"
	    "       diff [-bilqtTw] [-L label] -U number file1 file2\n"
	    "       diff [-bilNPqwtT] [-c | -e | -f | -n | -u ] [-L label] [-r] [-s] [-S name]\n"
	    "            [-X file] [-x pattern] dir1 dir2\n");
@


1.1.1.7
log
@Import latest OpenBSD ports, XFree and source in sync
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.34 2003/07/22 16:42:58 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.34 2003/07/22 16:42:58 millert Exp $";
a72 1
	{ NULL,				0,			0,	'\0'}
@


1.1.1.8
log
@Import the complete OpenBSD source tree (base system)
as of CTM delta 3496 (roughly 1200 UTC today) into the
vendor branch.
Attention: this is a big update. Don't even try to
build this system, OpenBSD 3.4-beta, yet on your own.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.37 2003/07/29 18:38:47 deraadt Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.37 2003/07/29 18:38:47 deraadt Exp $";
d42 2
a43 2
int	 aflag, bflag, dflag, iflag, lflag, Nflag, Pflag, rflag;
int	 sflag, tflag, Tflag, wflag;
d49 1
a49 1
#define	OPTIONS	"abC:cdD:efhiL:lnNPqrS:sTtU:uwX:x:"
a54 1
	{ "minimal",			no_argument,		0,	'd' },
a109 3
		case 'd':
			dflag = 1;
			break;
d206 1
a206 1
	set_argstr(oargv + 1, argv);
d269 1
a269 1
	argsize = 4 + *ave - *av + 1;
d364 5
a368 5
	    "usage: diff [-bdilqtTw] [-c | -e | -f | -n | -u] [-L label] file1 file2\n"
	    "       diff [-bdilqtTw] [-L label] -C number file1 file2\n"
	    "       diff [-bdilqtw] -D string file1 file2\n"
	    "       diff [-bdilqtTw] [-L label] -U number file1 file2\n"
	    "       diff [-bdilNPqwtT] [-c | -e | -f | -n | -u ] [-L label] [-r] [-s] [-S name]\n"
@


1.1.1.9
log
@Synchronize with OpenBSD 3.4-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.38 2003/08/18 02:04:42 david Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.38 2003/08/18 02:04:42 david Exp $";
d69 1
a69 1
	{ "initial-tab",		no_argument,		0,	'T' },
@


1.1.1.10
log
@Release Time. Synchronize with OpenBSD 3.4-current (base system).
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.42 2003/09/07 22:05:30 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.42 2003/09/07 22:05:30 millert Exp $";
a29 1
#include <ctype.h>
d49 1
a49 1
#define	OPTIONS	"0123456789abC:cdD:efhiL:lnNPqrS:sTtU:uwX:x:"
d87 1
a87 1
	int   ch, lastch, gotstdin, prevoptind, newarg;
a91 3
	lastch = '\0';
	prevoptind = 1;
	newarg = 1;
a93 10
		case '0': case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':
			if (newarg)
				usage();	/* disallow -[0-9]+ */
			else if (lastch == 'c' || lastch == 'u')
				context = 0;
			else if (!isdigit(lastch) || context > INT_MAX / 10)
				usage();
			context = (context * 10) + (ch - '0');
			break;
a187 3
		lastch = ch;
		newarg = optind != prevoptind;
		prevoptind = optind;
d368 6
a373 6
	    "usage: diff [-abdilqtTw] [-c | -e | -f | -n | -u] [-L label] file1 file2\n"
	    "       diff [-abdilqtTw] [-L label] -C number file1 file2\n"
	    "       diff [-abdilqtw] -D string file1 file2\n"
	    "       diff [-abdilqtTw] [-L label] -U number file1 file2\n"
	    "       diff [-abdilNPqtTw] [-c | -e | -f | -n | -u ] [-L label] [-r] [-s]\n"
	    "            [-S name] [-X file] [-x pattern] dir1 dir2\n");
@


1.1.1.11
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.43 2003/10/07 23:37:27 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.43 2003/10/07 23:37:27 millert Exp $";
a341 8
print_only(const char *path, size_t dirlen, const char *entry)
{
	if (dirlen > 1)
		dirlen--;
	printf("Only in %.*s: %s\n", (int)dirlen, path, entry);
}

void
d346 3
a348 1
		print_only(path1, strlen(path1), entry);
@


1.1.1.12
log
@Import OpenBSD as of today again (seems pretty stable, I hope)

Prominent changes: more bgpd, tcpmd5; tcpdump/isakmpd fixes
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.44 2004/01/07 17:18:32 otto Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.44 2004/01/07 17:18:32 otto Exp $";
d43 1
a43 1
int	 aflag, bflag, dflag, iflag, lflag, Nflag, Pflag, pflag, rflag;
d50 1
a50 1
#define	OPTIONS	"0123456789abC:cdD:efhiL:lnNPpqrS:sTtU:uwX:x:"
a64 1
	{ "show-c-function",		no_argument,		0,	'p' },
a156 3
		case 'p':
			pflag = 1;
			break;
d391 2
a392 2
	    "usage: diff [-abdilpqtTw] [-c | -e | -f | -n | -u] [-L label] file1 file2\n"
	    "       diff [-abdilpqtTw] [-L label] -C number file1 file2\n"
d394 2
a395 2
	    "       diff [-abdilpqtTw] [-L label] -U number file1 file2\n"
	    "       diff [-abdilNPpqtTw] [-c | -e | -f | -n | -u ] [-L label] [-r] [-s]\n"
@


1.1.1.13
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.45 2004/03/16 00:40:34 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.45 2004/03/16 00:40:34 millert Exp $";
a386 8
		break;
	case D_SKIPPED1:
		printf("File %s%s is not a regular file or directory and was skipped\n",
		    path1, entry ? entry : "");
		break;
	case D_SKIPPED2:
		printf("File %s%s is not a regular file or directory and was skipped\n",
		    path2, entry ? entry : "");
@


1.1.1.14
log
@die GNU diff die!
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.46 2004/06/20 18:47:45 otto Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.46 2004/06/20 18:47:45 otto Exp $";
d46 1
a46 1
char	*start, *ifdefname, *diffargs, *label, *ignore_pats;
a48 1
regex_t	 ignore_re;
d50 1
a50 1
#define	OPTIONS	"0123456789abC:cdD:efhI:iL:lnNPpqrS:sTtU:uwX:x:"
a58 1
	{ "ignore-matching-lines",	required_argument,	0,	'I' },
a80 1
void push_ignore_pats(char *);
a141 3
		case 'I':
			push_ignore_pats(optarg);
			break;
a218 13
	if (ignore_pats != NULL) {
		char buf[BUFSIZ];
		int error;

		if ((error = regcomp(&ignore_re, ignore_pats,
				     REG_NEWLINE | REG_EXTENDED)) != 0) {
			regerror(error, &ignore_re, buf, sizeof(buf));
			if (*ignore_pats != '\0')
				errx(2, "%s: %s", ignore_pats, buf);
			else
				errx(2, "%s", buf);
		}
	}
a345 19
push_ignore_pats(char *pattern)
{
	size_t len;

	if (ignore_pats == NULL) {
		/* XXX: estrdup */
		len = strlen(pattern) + 1;
		ignore_pats = emalloc(len);
		strlcpy(ignore_pats, pattern, len);
	} else {
		/* old + "|" + new + NUL */
		len = strlen(ignore_pats) + strlen(pattern) + 2;
		ignore_pats = erealloc(ignore_pats, len);
		strlcat(ignore_pats, "|", len);
		strlcat(ignore_pats, pattern, len);
	}
}

void
d403 6
a408 8
	    "usage: diff [-abdilpqtTw] [-I pattern] [-c | -e | -f | -n | -u]\n"
	    "            [-L label] file1 file2\n"
	    "       diff [-abdilpqtTw] [-I pattern] [-L label] -C number file1 file2\n"
	    "       diff [-abdilqtw] [-I pattern] -D string file1 file2\n"
	    "       diff [-abdilpqtTw] [-I pattern] [-L label] -U number file1 file2\n"
	    "       diff [-abdilNPpqtTw] [-I pattern] [-c | -e | -f | -n | -u]\n"
	    "            [-L label] [-r] [-s] [-S name] [-X file] [-x pattern] dir1\n"
	    "            dir2\n");
@


1.1.1.15
log
@OpenBSD import fixes du jour
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.47 2004/12/07 11:53:29 espie Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.47 2004/12/07 11:53:29 espie Exp $";
d250 1
a250 1
	set_argstr(oargv, argv);
@


1.1.1.16
log
@mas patches for diff, madam
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.48 2004/12/09 18:56:10 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.48 2004/12/09 18:56:10 millert Exp $";
d46 1
a46 1
char	*start, *ifdefname, *diffargs, *label[2], *ignore_pats;
d152 1
a152 6
			if (label[0] == NULL)
				label[0] = optarg;
			else if (label[1] == NULL)
				label[1] = optarg;
			else
				usage();
@



head	1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1
	tg-mergefixes-1-branch:1.1.0.8
	tg-mergefixes-1-base:1.1
	MIROS_X:1.1.0.6
	MIROS_X_BASE:1.1
	MIRBSD_XP_MIRPPC:1.1.0.4
	MIRBSD_XP_SPARC_BASE:1.1
	MIRBSD_XP_SPARC:1.1.0.2;
locks; strict;
comment	@ * @;


1.1
date	2004.10.06.23.50.58;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@big effort: make nroff 8-bit clean by converting the hi-bit7 characters
to binary values (8 times a symbolic character, preceded by an escape
symbolic character) in a preprocessing step, and reconstructing them in
a postprocessing step.

This only works with "nrcon" because it requires some special magic.
@
text
@/**	$MirBSD: src/share/misc/licence.template,v 1.14 2004/08/15 15:29:11 tg Rel $ */

/*-
 * Copyright (c) 2004
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publically perform, modi-
 * fy, merge, distribute, sell, give away or sublicence, provided the
 * above copyright notices, these terms and the disclaimer are retai-
 * ned in all redistributions, or reproduced in accompanying documen-
 * tation or other materials provided with binary redistributions.
 *
 * Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
 * any kind, expressed or implied, to the maximum extent permitted by
 * applicable law, but with the warranty of being written without ma-
 * licious intent or gross negligence; in no event shall licensor, an
 * author or contributor be held liable for any damage, direct, indi-
 * rect or other, however caused, arising in any way out of the usage
 * of covered work, even if advised of the possibility of such damage.
 */

#include <sys/param.h>
#include <stdio.h>
#include <unistd.h>

__RCSID("$MirBSD$");

#define	putstr(x)	fputs((x), stdout)

int
main()
{
	uint8_t c = 0;
	int i;

	setvbuf(stdin, NULL, _IOFBF, 0);
	setvbuf(stdout, NULL, _IOFBF, 0);

	while (read(0, &c, 1) == 1)
		if (c < 127)
			putchar(c);
		else {
			putstr("\\(88");
			for (i = 128 | 32768; i > 128; i >>= 1)
				if (c & (i & 255))
					putstr("\\(81");
				else
					putstr("\\(80");
		}

	return 0;
}
@

head	1.5;
access;
symbols
	tg-mergetmp-mirosx-1:1.5
	tg-mergefixes-1-branch:1.5.0.4
	tg-mergefixes-1-base:1.5
	MIROS_X:1.5.0.2
	MIROS_X_BASE:1.5
	MIRBSD_XP_MIRPPC:1.4.0.4
	MIRBSD_XP_SPARC_BASE:1.4
	MIRBSD_XP_SPARC:1.4.0.2
	MIRBSD_7quater:1.2
	MIRBSD_7_ALPHA:1.2.0.6
	MIRBSD_7:1.2.0.4
	MIRBSD_7ter:1.2
	MIRBSD_7_DEV:1.2.0.2
	MIRBSD_5:1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.12.05.13.26.07;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.14.14.46.52;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2004.07.03.21.16.31;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.04.13.12.33;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.12.21.56.09;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@* replace all occurences of old eMail addresses of mine
  with their more recent counterparts
* no $Log keyword!
* update licence template to most recent version in files touched
* in some places, don't add our own licence boilerplate, just
  add my name to the others
* make dev/rndvar.h suitable for inclusion in asm code
* include dev/rndvar.h by in_cksum.s instead of
  hardcoding pool size
* ENTRY(a); ENTRY(b) -> NENTRY(a); ENTRY(b)
* RCS IDs belong into .comment not .text
@
text
@/* $MirBSD$ */

/*-
 * Copyright (c) 1979, 1980, 1981, 1986, 1988, 1990, 1991, 1992
 *     The Regents of the University of California.
 * Copyright (C) Caldera International Inc.  2001-2002.
 * Copyright (c) 2003, 2004
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms,
 * with or without modification, are permitted provided
 * that the following conditions are met:
 *
 * Redistributions of source code and documentation must retain
 * the above copyright notice, this list of conditions and the
 * following disclaimer.  Redistributions in binary form must
 * reproduce the above copyright notice, this list of conditions
 * and the following disclaimer in the documentation and/or other
 * materials provided with the distribution.
 *
 * All advertising materials mentioning features or use of this
 * software must display the following acknowledgement:
 *   This product includes software developed or owned by
 *   Caldera International, Inc.
 *
 * Neither the name of Caldera International, Inc. nor the names
 * of other contributors may be used to endorse or promote products
 * derived from this software without specific prior written permission.
 *
 * USE OF THE SOFTWARE PROVIDED FOR UNDER THIS LICENSE BY CALDERA
 * INTERNATIONAL, INC. AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL CALDERA INTERNATIONAL, INC. BE
 * LIABLE FOR ANY DIRECT, INDIRECT INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef lint
static char sccsid[] = "@@(#)t6.c	4.5 (Berkeley) 4/18/91";
#endif /* not lint */

 /* t6.c: compute tab stops */

# include "t..c"

maktab()
{
# define FN(i,c) font[stynum[i]][c]
# define SZ(i,c) csize[stynum[i]][c]
/* define the tab stops of the table */
int icol, ilin, tsep, k, ik, vforml, il, text;
int doubled[MAXCOL], acase[MAXCOL];
char *s;
for(icol=0; icol <ncol; icol++)
	{
	doubled[icol] = acase[icol] = 0;
	fprintf(tabout, ".nr %d 0\n", icol+CRIGHT);
   for(text=0; text<2; text++)
	{
	if (text)
		fprintf(tabout, ".%02d\n.rm %02d\n", icol+80, icol+80);
	for(ilin=0; ilin<nlin; ilin++)
		{
		if (instead[ilin]|| fullbot[ilin]) continue;
		vforml=ilin;
		for(il=prev(ilin); il>=0 && vspen(table[il][icol].col); il=prev(il))
			vforml=il;
		if (fspan(vforml,icol)) continue;
		if (filler(table[ilin][icol].col)) continue;
		switch(ctype(vforml,icol))
			{
			case 'a':
				acase[icol]=1;
				s = table[ilin][icol].col;
				if (tx(s) && text)
					{
					if (doubled[icol]==0)
						fprintf(tabout, ".nr %d 0\n.nr %d 0\n",S1,S2);
					doubled[icol]=1;
					fprintf(tabout, ".if \\n(%c->\\n(%d .nr %d \\n(%c-\n",
					    (int)(long)s, S2, S2, (int)(long)s);
					}
			case 'n':
				if (table[ilin][icol].rcol!=0)
					{
					if (doubled[icol]==0 && text==0)
						fprintf(tabout, ".nr %d 0\n.nr %d 0\n", S1, S2);
					doubled[icol]=1;
					if (real(s=table[ilin][icol].col) && !vspen(s))
						{
						if (tx(s) != text) continue;
						fprintf(tabout, ".nr %d ", TMP);
						wide(s, FN(vforml,icol), SZ(vforml,icol)); fprintf(tabout, "\n");
						fprintf(tabout, ".if \\n(%d<\\n(%d .nr %d \\n(%d\n", S1, TMP, S1, TMP);
						}
					if (text==0 && real(s=table[ilin][icol].rcol) && !vspen(s) && !barent(s))
						{
						fprintf(tabout, ".nr %d \\w%c%s%c\n",TMP, F1, s, F1);
						fprintf(tabout, ".if \\n(%d<\\n(%d .nr %d \\n(%d\n",S2,TMP,S2,TMP);
						}
					continue;
					}
			case 'r':
			case 'c':
			case 'l':
				if (real(s=table[ilin][icol].col) && !vspen(s))
					{
					if (tx(s) != text) continue;
					fprintf(tabout, ".nr %d ", TMP);
					wide(s, FN(vforml,icol), SZ(vforml,icol)); fprintf(tabout, "\n");
					fprintf(tabout, ".if \\n(%d<\\n(%d .nr %d \\n(%d\n", icol+CRIGHT, TMP, icol+CRIGHT, TMP);
					}
			}
		}
		}
	if (acase[icol])
		{
		fprintf(tabout, ".if \\n(%d>=\\n(%d .nr %d \\n(%du+2n\n",S2,icol+CRIGHT,icol+CRIGHT,S2);
		}
	if (doubled[icol])
		{
		fprintf(tabout, ".nr %d \\n(%d\n", icol+CMID, S1);
		fprintf(tabout, ".nr %d \\n(%d+\\n(%d\n",TMP,icol+CMID,S2);
		fprintf(tabout, ".if \\n(%d>\\n(%d .nr %d \\n(%d\n",TMP,icol+CRIGHT,icol+CRIGHT,TMP);
		fprintf(tabout, ".if \\n(%d<\\n(%d .nr %d +(\\n(%d-\\n(%d)/2\n",TMP,icol+CRIGHT,icol+CMID,icol+CRIGHT,TMP);
		}
	if (cll[icol][0])
		{
		fprintf(tabout, ".nr %d %sn\n", TMP, cll[icol]);
		fprintf(tabout, ".if \\n(%d<\\n(%d .nr %d \\n(%d\n",icol+CRIGHT, TMP, icol+CRIGHT, TMP);
		}
	for(ilin=0; ilin<nlin; ilin++)
	if (k=lspan(ilin, icol))
		{
		s=table[ilin][icol-k].col;
		if (!real(s) || barent(s) || vspen(s) ) continue;
		fprintf(tabout, ".nr %d ", TMP);
		wide(table[ilin][icol-k].col, FN(ilin,icol-k), SZ(ilin,icol-k));
		for(ik=k; ik>=0; ik--)
			{
			fprintf(tabout, "-\\n(%d",CRIGHT+icol-ik);
			if (!expflg && ik>0) fprintf(tabout, "-%dn", sep[icol-ik]);
			}
		fprintf(tabout, "\n");
		fprintf(tabout, ".if \\n(%d>0 .nr %d \\n(%d/%d\n", TMP, TMP, TMP, k);
		fprintf(tabout, ".if \\n(%d<0 .nr %d 0\n", TMP, TMP);
		for(ik=1; ik<=k; ik++)
			{
			if (doubled[icol-k+ik])
				fprintf(tabout, ".nr %d +\\n(%d/2\n", icol-k+ik+CMID, TMP);
			fprintf(tabout, ".nr %d +\\n(%d\n", icol-k+ik+CRIGHT, TMP);
			}
		}
	}
if (textflg) untext();
/* if even requested, make all columns widest width */
# define TMP1 S1
# define TMP2 S2
if (evenflg)
	{
	fprintf(tabout, ".nr %d 0\n", TMP);
	for(icol=0; icol<ncol; icol++)
		{
		if (evenup[icol]==0) continue;
		fprintf(tabout, ".if \\n(%d>\\n(%d .nr %d \\n(%d\n",
		icol+CRIGHT, TMP, TMP, icol+CRIGHT);
		}
	for(icol=0; icol<ncol; icol++)
		{
		if (evenup[icol]==0)
			/* if column not evened just retain old interval */
			continue;
		if (doubled[icol])
			fprintf(tabout, ".nr %d (100*\\n(%d/\\n(%d)*\\n(%d/100\n",
				icol+CMID, icol+CMID, icol+CRIGHT, TMP);
				/* that nonsense with the 100's and parens tries
				   to avoid overflow while proportionally shifting
				   the middle of the number */
		fprintf(tabout, ".nr %d \\n(%d\n", icol+CRIGHT, TMP);
		}
	}
/* now adjust for total table width */
for(tsep=icol=0; icol<ncol; icol++)
	tsep+= sep[icol];
if (expflg)
	{
	fprintf(tabout, ".nr %d 0", TMP);
	for(icol=0; icol<ncol; icol++)
		fprintf(tabout, "+\\n(%d", icol+CRIGHT);
	fprintf(tabout, "\n");
	fprintf(tabout, ".nr %d \\n(.l-\\n(%d\n", TMP, TMP);
	if (boxflg || dboxflg || allflg)
		tsep += 1;
	else
		tsep -= sep[ncol-1];
	fprintf(tabout, ".nr %d \\n(%d/%d\n", TMP, TMP,  tsep);
	fprintf(tabout, ".if \\n(%d<0 .nr %d 0\n", TMP, TMP);
	}
else
	fprintf(tabout, ".nr %d 1n\n", TMP);
fprintf(tabout, ".nr %d 0\n",CRIGHT-1);
tsep= (boxflg || allflg || dboxflg || left1flg) ? 1 : 0;
for(icol=0; icol<ncol; icol++)
	{
	fprintf(tabout, ".nr %d \\n(%d+(%d*\\n(%d)\n",icol+CLEFT, icol+CRIGHT-1, tsep, TMP);
	fprintf(tabout, ".nr %d +\\n(%d\n",icol+CRIGHT, icol+CLEFT);
	if (doubled[icol])
		{
		/* the next line is last-ditch effort to avoid zero field width */
		/*fprintf(tabout, ".if \\n(%d=0 .nr %d 1\n",icol+CMID, icol+CMID);*/
		fprintf(tabout, ".nr %d +\\n(%d\n", icol+CMID, icol+CLEFT);
	/*  fprintf(tabout, ".if n .if \\n(%d%%24>0 .nr %d +12u\n",icol+CMID, icol+CMID); */
		}
	tsep=sep[icol];
	}
if (rightl)
	fprintf(tabout, ".nr %d (\\n(%d+\\n(%d)/2\n",ncol+CRIGHT-1, ncol+CLEFT-1, ncol+CRIGHT-2);
fprintf(tabout, ".nr TW \\n(%d\n", ncol+CRIGHT-1);
if (boxflg || allflg || dboxflg)
	fprintf(tabout, ".nr TW +%d*\\n(%d\n", sep[ncol-1], TMP);
fprintf(tabout,
 ".if t .if \\n(TW>\\n(.li .tm Table at line %d file %s is too wide - \\n(TW units\n", iline-1, ifile);
return;
}
wide(s, fn, size)
	char *s, *size, *fn;
{
if (point(s))
	{
	fprintf(tabout, "\\w%c", F1);
	if (*fn>0) putfont(fn);
	if (*size) putsize(size);
	fprintf(tabout, "%s", s);
	if (*fn>0) putfont("P");
	if (*size) putsize("0");
	fprintf(tabout, "%c", F1);
	}
else
	fprintf(tabout, "\\n(%c-", (int)(long)s);
}
filler(s)
	char *s;
{
return (point(s) && s[0]=='\\' && s[1] == 'R');
}
@


1.4
log
@hmm, AT&T code surely is weird

char *s;
printf("...%c...",s);

correct way to fix: casting s into a character, wtf?
@
text
@d1 2
a2 1
/* $MirBSD: src/usr.bin/roff/tbl/t6.c,v 1.3 2004/07/03 21:16:31 tg Exp $ */
d7 2
a8 1
 * Copyright (c) 2003 Thorsten Glaser <x86@@ePost.de>
@


1.3
log
@first round of format string fixes
XXX someone should look at ps(1)
@
text
@d1 1
a1 1
/* $MirBSD: src/usr.bin/roff/tbl/t6.c,v 1.2 2003/09/04 13:12:33 tg Exp $ */
d86 1
a86 1
					    *s, S2, S2, *s);
d244 1
a244 1
	fprintf(tabout, "\\n(%c-", *s);
@


1.2
log
@Tack a proper Caldera / UCB copyright onto "modules suspected to
be subject to your Western Electric License Agreement", with RCS
IDs added, etc.
Unify the copyright header between these files.
@
text
@d1 1
a1 1
/* $MirBSD: tmac.an.old,v 1.8 2003/09/04 12:12:21 tg Exp $ */
d85 2
a86 1
					fprintf(tabout, ".if \\n(%c->\\n(%d .nr %d \\n(%c-\n",s,S2,S2,s);
d241 1
a241 1
	fprintf(tabout, "%c",F1);
d244 1
a244 1
	fprintf(tabout, "\\n(%c-", s);
@


1.1
log
@add tbl from 4.4BSD-Alpha tbl sources
@
text
@d1 1
d3 38
a40 3
 * This module is believed to contain source code proprietary to AT&T.
 * Use and redistribution is subject to the Berkeley Software License
 * Agreement and your Software Agreement with AT&T (Western Electric).
@


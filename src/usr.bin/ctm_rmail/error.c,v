head	1.2;
access;
symbols
	tg-mergetmp-mirosx-1:1.2
	tg-mergefixes-1-branch:1.2.0.4
	tg-mergefixes-1-base:1.2
	MIROS_X:1.2.0.2
	MIROS_X_BASE:1.2
	MIRBSD_XP_MIRPPC:1.1.1.1.0.10
	MIRBSD_XP_SPARC_BASE:1.1.1.1
	MIRBSD_XP_SPARC:1.1.1.1.0.8
	MIRBSD_7quater:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	MIRBSD_5:1.1.1.1
	MIRBSD_4:1.1.1.1
	cvs-2003-04-05:1.1.1.1
	freebsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.11.23.16.44.07;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.04.05.20.02.52;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.04.05.20.02.52;	author tg;	state Stab;
branches;
next	;


desc
@@


1.2
log
@fix the remaining build fallout, mostly time related
@
text
@/*
 * Routines for logging error messages or other informative messages.
 *
 * Log messages can easily contain the program name, a time stamp, system
 * error messages, and arbitrary printf-style strings, and can be directed
 * to stderr or a log file.
 *
 * Author: Stephen McKay
 *
 * NOTICE: This is free software.  I hope you get some use from this program.
 * In return you should think about all the nice people who give away software.
 * Maybe you should write some free software too.
 */

#if 0 /*ndef lint*/
static const char rcsid[] =
  "$FreeBSD: src/usr.sbin/ctm/ctm_rmail/error.c,v 1.3 2001/05/06 03:03:45 kris Exp $";
#endif /* not lint */

#include <sys/types.h>
#include <stdio.h>
#include <string.h>
#include <stdarg.h>
#include <time.h>
#include <errno.h>
#include "error.h"

__RCSID("$MirBSD$");

static FILE *error_fp = NULL;
static char *prog = NULL;


/*
 * Log errors to the given file.
 */
void
err_set_log(char *log_file)
    {
    FILE *fp;

    if ((fp = fopen(log_file, "a")) == NULL)
	err("cannot log to '%s'", log_file);
    else
	error_fp = fp;
    }


/*
 * Set the error prefix if not logging to a file.
 */
void
err_prog_name(char *name)
    {
    if ((prog = strrchr(name, '/')) == NULL)
	prog = name;
    else
	prog++;
    }


/*
 * Log an error.
 *
 * A leading '*' in the message format means we want the system errno
 * decoded and appended.
 */
void
err(const char *fmt, ...)
    {
    va_list ap;
    time_t now;
    struct tm *tm;
    FILE *fp;
    int x = errno;
    int want_errno;

    if ((fp = error_fp) == NULL)
	{
	fp = stderr;
	if (prog != NULL)
	    fprintf(fp, "%s: ", prog);
	}
    else
	{
	time(&now);
	tm = localtime(&now);
	fprintf(fp, "%04lld-%02d-%02d %02d:%02d ", (int64_t)tm->tm_year+1900,
	    tm->tm_mon+1, tm->tm_mday, tm->tm_hour, tm->tm_min);
	}

    want_errno = 0;
    if (*fmt == '*')
	want_errno++, fmt++;

    va_start(ap, fmt);
    vfprintf(fp, fmt, ap);
    va_end(ap);

    if (want_errno)
	fprintf(fp, ": %s", strerror(x));

    fprintf(fp, "\n");
    fflush(fp);
    }
@


1.1
log
@Initial revision
@
text
@d15 1
a15 1
#ifndef lint
d20 1
d28 2
d88 1
a88 1
	fprintf(fp, "%04d-%02d-%02d %02d:%02d ", tm->tm_year+1900,
@


1.1.1.1
log
@Import CTM from FreeBSD-current
@
text
@@

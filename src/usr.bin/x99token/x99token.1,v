head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.2
	tg-mergefixes-1-branch:1.1.1.2.0.14
	tg-mergefixes-1-base:1.1.1.2
	MIROS_X:1.1.1.2.0.12
	MIROS_X_BASE:1.1.1.2
	tg-mergetmp-3:1.1.1.2
	MIRBSD_XP_MIRPPC:1.1.1.2.0.10
	MIRBSD_XP_SPARC_BASE:1.1.1.2
	MIRBSD_XP_SPARC:1.1.1.2.0.8
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2003.03.22.17.53.51;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.53.51;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.19.12.54.43;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@.\" $OpenBSD: x99token.1,v 1.6 2003/02/15 09:44:42 jmc Exp $
.\"
.\" X9.9 calculator
.\" This software is provided AS IS with no express or implied warranty
.\" October 1995, Paul Borman <prb@@krystal.com>
.\" 
.\" Donated to the Public Domain by Paul Borman
.\"
.Dd August 1, 2001
.Dt X99TOKEN 1
.Os
.Sh NAME
.Nm x99token
.Nd X9.9 software token calculator
.Sh SYNOPSIS
.Nm x99token
.Op Fl d
.Op Fl i
.Op Fl k Ar keyfile
.Op Fl n Ar count
.Sh DESCRIPTION
The
.Nm x99token
program is a simple X9.9 software token calculator.
The token is initialized by using the
.Fl i
option.
In this mode,
.Nm
requests a key.
The key consists of 8 bytes encoded in either hex or octal.
When encoded in hex the key must consist of 16 hex digits,
no spaces (e.g., "0123456789abcdef").
When encoded in octal the key must consist of 8 3-digit octets,
each separated by exactly one space
(e.g., "001 010 100 002 020 200 003 030").
Once the key is entered, a PIN number is requested.
The PIN number is used to perturb the key before it is stored in a keyfile.
This perturbation is not terribly secure.
You should assume that anyone with access to your
keyfile will also have access to your key.
.Pp
When
.Fl i
is not specified,
.Nm
is in calculator mode.
In this mode you must enter the same PIN as used in the initialization step.
The PIN is used to decode the key read from the keyfile.
Next you enter the challenge you have been presented with.
The
.Nm
program will provide you with a response to the challenge.
If the
.Fl d
option is used, the response will fold any hex digits to decimal.
If a
.Ar count
is specified by
.Fl n ,
it indicates the number of challenges to predict.
The first challenge is always the entered challenge.
By default the value of
.Ar count
is 1, which implies only the entered challenge is resolved.
.Pp
Future challenges are predicted by the following algorithm:
.Bl -bullet -offset indent
.It
Encrypt the current challenge with the shared secret key
.It
AND each byte of the response with 0x0f
.It
Modulo each byte by 10 (0x0a)
.It
ADD 0x30 (ASCII value of '0') to each byte
.El
.Pp
The resulting 8 bytes are all ASCII decimal digits and are the
predicted challenge.  This process may be repeated.
.Sh FILES
.Bl -tag -width $HOME/.keyfile.des -compact
.It Pa $HOME/.keyfile.des
default keyfile
.El
.Sh SEE ALSO
.Xr tokenadm 8 ,
.Xr tokeninit 8
.Sh AUTHORS
Paul Borman <prb@@krystal.com>
.Sh CAVEATS
This is a very simple-minded program.  
The keyfile should be placed on a floppy disk which is kept physically secure.
.Pp
Having not read the X9.9 standard, this may not be a complete or accurate
implementation of the standard.  
This software is provided AS IS
with no express or implied warranty.
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@sync with OpenBSD, this gives us a fair amount of fixes
@
text
@d1 1
a1 1
.\" $OpenBSD: x99token.1,v 1.7 2003/06/10 09:12:13 jmc Exp $
d6 1
a6 1
.\"
d80 1
a80 2
predicted challenge.
This process may be repeated.
d90 1
a90 1
.An Paul Borman Aq prb@@krystal.com
d92 1
a92 1
This is a very simple-minded program.
d96 1
a96 1
implementation of the standard.
@


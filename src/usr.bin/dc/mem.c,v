head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.4
	tg-mergefixes-1-branch:1.1.1.4.0.4
	tg-mergefixes-1-base:1.1.1.4
	MIROS_X:1.1.1.4.0.2
	MIROS_X_BASE:1.1.1.4
	tg-mergetmp-3:1.1.1.4
	cvs-200412031430:1.1.1.4
	MIRBSD_XP_MIRPPC:1.1.1.3.0.4
	cvs-200410222040:1.1.1.4
	tg-mergetmp-1:1.1.1.3
	MIRBSD_XP_SPARC_BASE:1.1.1.3
	MIRBSD_XP_SPARC:1.1.1.3.0.2
	MIRBSD_7quater:1.1.1.2.2.1
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.2.2.1.0.4
	MIRBSD_7:1.1.1.2.2.1.0.2
	cvs-200312222040:1.1.1.3
	cvs-200312031730:1.1.1.3
	MIRBSD_7ter:1.1.1.2.2.1
	cvs-200310232020:1.1.1.3
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310081755:1.1.1.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.1
	cvs-200309261610:1.1.1.1
	cvs-200309251530:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.09.25.16.40.42;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.09.25.16.40.42;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.10.02.07.49.35;	author tg;	state Exp;
branches
	1.1.1.2.2.1;
next	1.1.1.3;

1.1.1.3
date	2003.10.23.20.23.37;	author tg;	state Stab;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.10.22.20.49.21;	author tg;	state Exp;
branches;
next	;

1.1.1.2.2.1
date	2003.10.23.20.49.14;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: mem.c,v 1.1 2003/09/19 17:58:25 otto Exp $	*/

/*
 * Copyright (c) 2003, Otto Moerbeek <otto@@drijf.net>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef lint
static const char rcsid[] = "$OpenBSD: mem.c,v 1.1 2003/09/19 17:58:25 otto Exp $";
#endif /* not lint */

#include <ssl/err.h>

#include <err.h>
#include <stdlib.h>
#include <string.h>

#include "extern.h"

struct number *
new_number(void)
{
	struct number *n;

	n = bmalloc(sizeof(*n));
	n->scale = 0;
	n->number = BN_new();
	if (n->number == NULL)
		err(1, "cannot allocate number");
	return n;
}

void
free_number(struct number *n)
{
	BN_free(n->number);
	free(n);
}

struct number *
dup_number(const struct number *a)
{
	struct number *n;

	n = bmalloc(sizeof(*n));
	n->scale = a->scale;
	n->number = BN_dup(a->number);
	bn_checkp(n->number);
	return n;
}

void *
bmalloc(size_t sz)
{
	void *p;

	p = malloc(sz);
	if (p == NULL)
		err(1, "malloc failed");
	return p;
}

void *
brealloc(void *p, size_t sz)
{
	void *q;

	q = realloc(p, sz);
	if (q == NULL)
		err(1, "realloc failed");
	return q;
}

char *
bstrdup(const char *p)
{
	char *q;

	q = strdup(p);
	if (q == NULL)
		err(1, "stdup failed");
	return q;
}

void
bn_check(int x)						\
{
	if (x == 0)
		err(1, "big number failure %lx", ERR_get_error());
}

void
bn_checkp(const void *p)						\
{
	if (p == NULL)
		err(1, "allocation failure %lx", ERR_get_error());
}
@


1.1.1.1
log
@Release Time. Synchronize with OpenBSD 3.4-current (base system).
@
text
@@


1.1.1.2
log
@Import OpenBSD source tree again, with critical bug fixes
(OpenSSL, bc, dc, sensorsd, pf, ...)
@
text
@d1 1
a1 1
/*	$OpenBSD: mem.c,v 1.2 2003/09/28 19:17:21 otto Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: mem.c,v 1.2 2003/09/28 19:17:21 otto Exp $";
d80 1
a80 2
	if (q == NULL) {
		free(p);
a81 1
	}
@


1.1.1.2.2.1
log
@that bc/dc fix sync with OpenBSD (must-have fix :)
@
text
@d1 1
a1 1
/*	$OpenBSD: mem.c,v 1.3 2003/10/18 20:34:26 otto Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: mem.c,v 1.3 2003/10/18 20:34:26 otto Exp $";
d40 1
a40 1
		err(1, NULL);
d70 1
a70 1
		err(1, NULL);
d82 1
a82 1
		err(1, NULL);
d94 1
a94 1
		err(1, NULL);
@


1.1.1.3
log
@Import fixed bc and dc from OpenBSD-current (a must-have :)
@
text
@d1 1
a1 1
/*	$OpenBSD: mem.c,v 1.3 2003/10/18 20:34:26 otto Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: mem.c,v 1.3 2003/10/18 20:34:26 otto Exp $";
d40 1
a40 1
		err(1, NULL);
d70 1
a70 1
		err(1, NULL);
d82 1
a82 1
		err(1, NULL);
d94 1
a94 1
		err(1, NULL);
@


1.1.1.4
log
@import some updates/fixes from openbsd
@
text
@d1 1
a1 1
/*	$OpenBSD: mem.c,v 1.4 2004/07/11 06:41:48 otto Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: mem.c,v 1.4 2004/07/11 06:41:48 otto Exp $";
d80 2
a81 1
	if (q == NULL)
d83 1
@



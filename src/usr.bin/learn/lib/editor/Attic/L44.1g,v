head	1.2;
access;
symbols
	MIRBSD_XP_MIRPPC:1.1.1.2.0.10
	MIRBSD_XP_SPARC_BASE:1.1.1.2
	MIRBSD_XP_SPARC:1.1.1.2.0.8
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.2
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.2
	cvs-200308171200:1.1.1.2
	ctm-3496:1.1.1.2
	ctm-3449:1.1.1.2
	ctm-3437:1.1.1.2
	cvs-200307191805:1.1.1.2
	ctm-3425:1.1.1.2
	cvs-200307091500:1.1.1.2
	ctm-3389:1.1.1.2
	cvs-200306291430:1.1.1.2
	ctm-3341:1.1.1.2
	MIRBSD_5:1.1.1.2
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.2
	ctm-3264:1.1.1.2
	cvs-200305071630:1.1.1.2
	MIRBSD_4:1.1.1.2
	ctm-3203:1.1.1.2
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.11.13.18.33.36;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.52.52;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.52.52;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.04.15.17.46.43;	author tg;	state Stab;
branches;
next	;


desc
@@


1.2
log
@* gprof: I don't know; I think gprof is pointless (since I don't write
  hooks for profiling libraries into gcc3, nor do we build these since
  years), but let's keep it here - the BSD version, not the GNU versi-
  on, and with unused arches deleted
* oldrdist: u-uh, deserves to die
* rdist, rdistd, sup: I don't think anybody would use them willingly;
  if so, please tell me (and I hope you've got a very good reason to
  do so ;-)
* learn: it was nice as a document of UNIX(R) history, but I'm cleaning
  up base right now, so...
@
text
@#print
Of course, you can also search for lines that
contain backslashes; again, it's simply a matter
of doubling the backslash in the search pattern.
That is,
   /\\/
finds the next line with a backslash.

Find the second occurrence of "\n\n" in the file
"prog.c", and type "answer N", where N is its
line number.
#create prog.c

int  nsave  = 0;

selunit()
{
  char fnam[20], s[50];
  static char dobuff[50];
  char posslev[20][20];
  int diff[20], i, k, m, n, best, alts, statb[20];
  FILE *f;
  char zb[200];
  static char saved[20];

  while (ask) {
    printf("What lesson? ");
    fflush(stdout);
    gets(dobuff);
    if (strcmp(dobuff, "bye") == 0)
      wrapup(0);
    level = todo = dobuff;
    sprintf(s, "../L%s", dobuff);
    if (access(s, 04) == 0)
      return;
    printf("no such lesson\n");
  }
  alts = 0;
retry:
  f=scrin;
  if (f==NULL) {
    sprintf(fnam, "../L%s", level);
    f = fopen(fnam, "r");
    if (f==NULL) {
      fprintf(stderr, "No script for lesson %s.\n", level);
      wrapup(1);
    }
    while (fgets(zb, 200, f)) {
      trim(zb);
      if (strcmp(zb, "#next")==0)
        break;
    }
  }
  if (feof(f)) {
    printf("Congratulations\n\n.You have finished this sequence.\n");
    fflush(stdout);
    todo = 0;
    return;
  }
  for(i=0; fgets(s, 50, f); i++) {
    sscanf(s, "%s %d", &posslev[i], &diff[i]);
  }
  best = -1;
  /* cycle through lessons from random start */
  /* first try the current place, failing that back up to
       last place there are untried alternatives (but only one backup) */
  n = grand()%i;
  for(k=0; k<i; k++) {
    m = (n+k)%i;
    if (already(posslev[m])) continue;
    if (best<0) best=m;
    /* real alternatives */
    alts++;
    if (abs(diff[m]-speed) < abs(diff[best]-speed))
      best=m;
  }
  if (best < 0 && nsave) {
    nsave--;
    strcpy(level, saved);
    goto retry;
  }
  if (best <0) {
    /* lessons exhausted or missing */
    printf("Sorry, there are no alternative lessons at this stage.\n");
    printf("See someone for help.\n\n");
    fflush(stdout);
    todo = 0;
    return;
  }
  strcpy (dobuff, posslev[best]);
  if (alts>1) {
    nsave=1;
    strcpy (saved, level);
  }
  todo = dobuff;
  fclose(f);
}

abs(x)
{
  return(x>=0? x: -x);
}

grand()
{
  static int garbage;
  int a[2], b;

  time(a);
  b = a[1]+10*garbage++;
  return(b&077777);
}
#copyin
#user
#uncopyin
#match 73
#bad 43
The second______ one.
#log
#next
44.1h 10
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import OpenBSD source with the "new" command line as well,
in order to be able to provide a MirBSD release which bases
upon a fairly current OpenBSD base source code tree deemed
stable enough.
@
text
@d33 1
a33 1
    snprintf(s, sizeof s, "../L%s", dobuff);
d42 1
a42 1
    snprintf(fnam, sizeof fnam, "../L%s", level);
d79 1
a79 1
    strlcpy(level, saved, sizeof level);
d90 1
a90 1
  strlcpy(dobuff, posslev[best], sizeof dobuff);
d93 1
a93 1
    strcpy(saved, level, sizeof saved);
@


head	1.2;
access;
symbols
	tg-mergetmp-mirosx-1:1.2
	tg-mergefixes-1-branch:1.2.0.8
	tg-mergefixes-1-base:1.2
	MIROS_X:1.2.0.6
	MIROS_X_BASE:1.2
	tg-mergetmp-3:1.2
	MIRBSD_XP_MIRPPC:1.2.0.4
	MIRBSD_XP_SPARC_BASE:1.2
	MIRBSD_XP_SPARC:1.2.0.2
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.3
	cvs-200401271800:1.1.1.2
	cvs-200401261630:1.1.1.2
	cvs-200401021645:1.1.1.2
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.09.07.16.08.47;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.53.03;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.53.03;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.22.21.13.37;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.05.16.08.09.21;	author tg;	state Stab;
branches;
next	;


desc
@@


1.2
log
@cleanup a bit; use mirbsdksh for everything
mirbsdksh is destined at build time:
 - in Makefile via ${MKSH} inherited from <bsd.own.mk>-current
 - in Makefile.boot via editing the file itself
 - if not given to the C code, the manpage will look evil and
   the C code will use _PATH_BSHELL (and warn) or fall back to
   "/bin/mksh" (and not warn)
 - for the manpage via Makefile
mirbsdksh is given at run time in ${SHELL} by <sys.mk>-current
@
text
@/**	$MirBSD$ */
/*	$OpenPackages$ */
/*	$OpenBSD: cmd_exec.c,v 1.5 2004/04/07 13:11:35 espie Exp $ */

/*
 * Copyright (c) 2001 Marc Espie.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE OPENBSD PROJECT AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENBSD
 * PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/wait.h>
#include <errno.h>
#include <stdio.h>
#include <unistd.h>
#include "config.h"
#include "defines.h"
#include "cmd_exec.h"
#include "buf.h"
#include "memory.h"
#include "pathnames.h"

__RCSID("$MirBSD$");

char *
Cmd_Exec(const char *cmd, char **err)
{
    char	*args[4];	/* Args for invoking the shell */
    int 	fds[2]; 	/* Pipe streams */
    pid_t 	cpid;		/* Child PID */
    pid_t 	pid;		/* PID from wait() */
    char	*result;	/* Result */
    int 	status; 	/* Command exit status */
    BUFFER	buf;		/* Buffer to store the result. */
    char	*cp;		/* Pointer into result. */
    ssize_t	cc;		/* Characters read from pipe. */
    size_t	length;		/* Total length of result. */


    *err = NULL;

    /* Set up arguments for the shell. */
    args[0] = "ksh";
    args[1] = "-c";
    args[2] = (char *)cmd;
    args[3] = NULL;

    /* Open a pipe for retrieving shell's output. */
    if (pipe(fds) == -1) {
	*err = "Couldn't create pipe for \"%s\"";
	goto bad;
    }

    /* Fork */
    switch (cpid = fork()) {
    case 0:
	/* Close input side of pipe */
	(void)close(fds[0]);

	/* Duplicate the output stream to the shell's output, then
	 * shut the extra thing down. Note we don't fetch the error
	 * stream: user can use redirection to grab it as this goes
	 * through /bin/ksh.
	 */
	if (fds[1] != 1) {
	    (void)dup2(fds[1], 1);
	    (void)close(fds[1]);
	}

	(void)execv(_PATH_MIRBSDKSH, args);
	_exit(1);
	/*NOTREACHED*/

    case -1:
	*err = "Couldn't exec \"%s\"";
	goto bad;

    default:
	/* No need for the writing half. */
	(void)close(fds[1]);

	Buf_Init(&buf, MAKE_BSIZE);

	do {
	    char   grab[BUFSIZ];

	    cc = read(fds[0], grab, sizeof(grab));
	    if (cc > 0)
		Buf_AddChars(&buf, cc, grab);
	}
	while (cc > 0 || (cc == -1 && errno == EINTR));

	/* Close the input side of the pipe.  */
	(void)close(fds[0]);

	/* Wait for the child to exit.  */
	while ((pid = wait(&status)) != cpid && pid >= 0)
	    continue;

	if (cc == -1)
	    *err = "Couldn't read shell's output for \"%s\"";

	if (status)
	    *err = "\"%s\" returned non-zero status";

	length = Buf_Size(&buf);
	result = Buf_Retrieve(&buf);

	/* The result is null terminated, Convert newlines to spaces. */
	cp = result + length - 1;

	if (cp >= result && *cp == '\n')
	    /* A final newline is just stripped.  */
	    *cp-- = '\0';

	while (cp >= result) {
	    if (*cp == '\n')
		*cp = ' ';
	    cp--;
	}
	break;
    }
    return result;
bad:
    return estrdup("");
}

@


1.1
log
@Initial revision
@
text
@d1 1
d3 2
a4 1
/*	$OpenBSD: cmd_exec.c,v 1.3 2002/08/05 17:04:36 millert Exp $ */
d42 2
d45 1
a45 3
Cmd_Exec(cmd, err)
    const char	*cmd;
    char	**err;
d62 1
a62 1
    args[0] = "sh";
d82 1
a82 1
	 * through /bin/sh.
d89 1
a89 1
	(void)execv(_PATH_BSHELL, args);
d131 1
a131 1
	if (*cp == '\n')
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Time to import OpenBSD once again. Expect breakage.
@
text
@d2 1
a2 1
/*	$OpenBSD: cmd_exec.c,v 1.4 2003/10/19 20:23:34 tedu Exp $ */
d129 1
a129 1
	if (cp >= result && *cp == '\n')
@


1.1.1.3
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d2 1
a2 1
/*	$OpenBSD: cmd_exec.c,v 1.5 2004/04/07 13:11:35 espie Exp $ */
d41 3
a43 1
Cmd_Exec(const char *cmd, char **err)
@



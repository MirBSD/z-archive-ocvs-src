head	1.7;
access;
symbols
	tg-mergetmp-mirosx-1:1.7
	tg-mergefixes-1-branch:1.7.0.4
	tg-mergefixes-1-base:1.7
	MIROS_X:1.7.0.2
	MIROS_X_BASE:1.7
	tg-mergetmp-3:1.7
	MIRBSD_XP_MIRPPC:1.6.0.4
	MIRBSD_XP_SPARC_BASE:1.6
	MIRBSD_XP_SPARC:1.6.0.2
	MIRBSD_7quater:1.2
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.2.0.6
	MIRBSD_7:1.2.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.2
	MIRBSD_7_DEV:1.2.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2004.10.14.16.57.56;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.11.19.56.36;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.07.16.08.47;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.27.21.08.34;	author tg;	state Stab;
branches;
next	1.3;

1.3
date	2004.06.23.14.57.41;	author bsiegert;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.01.16.10.33;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.22.17.53.03;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.53.03;	author tg;	state Exp;
branches;
next	;


desc
@@


1.7
log
@add support for gmake $^
from "ray" via tech@@openbsd.org
@
text
@# $MirBSD: src/usr.bin/make/Makefile.boot,v 1.6 2004/09/11 19:56:36 tg Exp $
# $OpenPackages: Makefile.boot,v 1.5 2001/04/06 00:09:55 will Exp $
# $OpenBSD: Makefile.boot,v 1.8 2001/05/29 12:41:18 espie Exp $
#
# a very simple makefile...
#
# You only want to use this if you aren't running MirOS.
#
# modify MACHINE and MACHINE_ARCH as appropriate for your target architecture

#------------------------------
# System dependencies
#------------------------------

#MACHINE=sun
#MACHINE_ARCH=sparc
MACHINE=i386
MACHINE_ARCH=i386
MACHINE_OS=BSD

# set this to the true path of mirbsdksh
MKSH=/bin/ksh

# some make(1)s don't support +=
DEFS=		-DMAKE_BOOTSTRAP -DNEED_FGETLN
#DEFS_VSN=	-DNEED_VSNPRINTF
#FILES_STRL=	strlfun.o
#FILES_GETOPT=	getopt_long.o

# a stupid way to do .if/.else/.endif with make
COPY_OHASH=	copy_ohash
COPY_STRL=	copy_strl
#COPY_GETOPT=	copy_getopt
COPY_GETOPT=	copy_dummy

# paths
LIBCDIR=	/usr/src/lib/libc
INCLDIR=	/usr/src/include

#==============================

.c.o:
	${CC} ${CFLAGS} -c $< -o $@@

CFLAGS= -Iohash -I. -DTARGET_MACHINE=\"${MACHINE}\" \
	-DTARGET_MACHINE_ARCH=\"${MACHINE_ARCH}\" \
	-DTARGET_MACHINE_OS=\"${MACHINE_OS}\" \
	-DMACHINE=\"${MACHINE}\" \
	-D_PATH_MIRBSDKSH=\"${MKSH}\" ${DEFS} ${DEFS_VSN} ${COPTS}
LIBS=	ohash/libohash.a

OBJ=	arch.o buf.o compat.o cond.o dir.o for.o job.o main.o make.o \
	parse.o str.o suff.o targ.o var.o util.o error.o lowparse.o \
	varmodifiers.o memory.o cmd_exec.o timestamp.o parsevar.o \
	varname.o init.o ${FILES_STRL} ${FILES_GETOPT}

LIBOBJ=	lst.lib/lstAddNew.o lst.lib/lstAppend.o \
	lst.lib/lstConcat.o lst.lib/lstConcatDestroy.o lst.lib/lstDeQueue.o \
	lst.lib/lstDestroy.o lst.lib/lstDupl.o lst.lib/lstFindFrom.o \
	lst.lib/lstForEachFrom.o lst.lib/lstInsert.o \
	lst.lib/lstMember.o lst.lib/lstRemove.o lst.lib/lstReplace.o \
	lst.lib/lstSucc.o

bmake: varhashconsts.h condhashconsts.h ${OBJ} ${LIBOBJ}
#	@@echo 'make of make and make.0 started.'
	${CC} ${CFLAGS} ${OBJ} ${LIBOBJ} -o bmake ${LIBS}
	@@ls -l $@@
#	nroff -h -man make.1 > make.0
#	@@echo 'make of make and make.0 completed.'

GENOBJ= generate.o stats.o memory.o ohash/libohash.a

OHASHOBJ= ohash/ohash_create_entry.o ohash/ohash_delete.o ohash/ohash_do.o \
	ohash/ohash_entries.o ohash/ohash_enum.o ohash/ohash_init.o \
	ohash/ohash_interval.o ohash/ohash_lookup_interval.o \
	ohash/ohash_lookup_memory.o ohash/ohash_qlookup.o \
	ohash/ohash_qlookupi.o

ohash/libohash.a: ${OHASHOBJ}
	ar cq ohash/libohash.a ${OHASHOBJ}
	ranlib ohash/libohash.a

generate: ${GENOBJ}
	${CC} ${CFLAGS} ${GENOBJ} -o generate ${LIBS}

varhashconsts.h: generate
	./generate 1 82 > varhashconsts.h

condhashconsts.h: generate
	./generate 2 65 > condhashconsts.h

clean:
	rm -f ${OBJ} ${LIBOBJ} ${PORTOBJ} ${GENOBJ} ${OHASHOBJ} bmake
	rm -f varhashconsts.h condhashconsts.h generate

copy-sources: ${COPY_OHASH} ${COPY_STRL} ${COPY_GETOPT}

copy_dummy:

copy_ohash:
	cp -R ${LIBCDIR}/ohash .
	cp ${INCLDIR}/ohash.h .

copy_strl:
	cp ${LIBCDIR}/string/strlfun.c .

copy_getopt:
	cp ${LIBCDIR}/stdlib/getopt_long.c .
	cp ${INCLDIR}/getopt.h .
@


1.6
log
@add support for passing COPTS via command line
(for MirMake)
@
text
@d1 1
a1 1
# $MirBSD: src/usr.bin/make/Makefile.boot,v 1.5 2004/09/07 16:08:47 tg Exp $
d87 1
a87 1
	./generate 1 77 > varhashconsts.h
@


1.5
log
@cleanup a bit; use mirbsdksh for everything
mirbsdksh is destined at build time:
 - in Makefile via ${MKSH} inherited from <bsd.own.mk>-current
 - in Makefile.boot via editing the file itself
 - if not given to the C code, the manpage will look evil and
   the C code will use _PATH_BSHELL (and warn) or fall back to
   "/bin/mksh" (and not warn)
 - for the manpage via Makefile
mirbsdksh is given at run time in ${SHELL} by <sys.mk>-current
@
text
@d1 1
a1 1
# $MirBSD: src/usr.bin/make/Makefile.boot,v 1.4 2004/07/27 21:08:34 tg Stab $
d49 1
a49 1
	-D_PATH_MIRBSDKSH=\"${MKSH}\" ${DEFS} ${DEFS_VSN}
@


1.4
log
@almost better infrastructure for building MirMake on
tg@@linuxsys:/services/homes/tg $ uname -a
Linux LinuxSys.de 2.6.4 #1 Sat Mar 20 01:04:34 CET 2004 i686 GNU/Linux

I think my .if/.else/.endif replacement is "good enough" to
even work on very old makes (seen at FSF makefiles for ancient
systems)
@
text
@d1 1
a1 1
# $MirBSD: src/usr.bin/make/Makefile.boot,v 1.3 2004/06/23 14:57:41 bsiegert Exp $
d7 1
a7 1
# You only want to use this if you aren't running OpenBSD.
d21 3
d49 1
a49 1
	${DEFS} ${DEFS_VSN}
@


1.3
log
@Bring Makefile.boot up to shape. This allows you to build our make under
other operating systems.

Darwin needs <sys/time.h> in job.c, don't ask why I know this
@
text
@d1 3
a3 3
#	$MirBSD: src/usr.bin/make/Makefile.boot,v 1.2 2003/09/01 16:10:33 tg Exp $
#	$OpenPackages: Makefile.boot,v 1.5 2001/04/06 00:09:55 will Exp $
#	$OpenBSD: Makefile.boot,v 1.8 2001/05/29 12:41:18 espie Exp $
a9 1
#
d11 3
a13 2
.c.o:
	${CC} ${CFLAGS} -c $< -o $@@
d20 22
d46 2
a47 2
	-DMAKE_BOOTSTRAP -DNEED_FGETLN
LIBS= ohash/libohash.a
d49 4
a52 4
OBJ=arch.o buf.o compat.o cond.o dir.o for.o job.o main.o make.o \
    parse.o str.o suff.o targ.o var.o util.o error.o lowparse.o \
    varmodifiers.o memory.o cmd_exec.o timestamp.o parsevar.o \
    varname.o init.o
d85 1
a85 1
	
d92 15
@


1.2
log
@employ MACHINE_OS as make(1) global variable
will be used soon

falls back to:
 -DTARGET_MACHINE_OS in Makefile.boot
 "BSD" #ifdef BSD
 "Linux" #ifdef __Linux__
 "unknown" else
@
text
@d1 1
a1 1
#	$MirBSD$
d35 1
a35 1
	lst.lib/lstForEachFrom.o lst.lib/lstInit.o lst.lib/lstInsert.o \
d39 1
a39 1
bmake: varhashconsts.h ${OBJ} ${LIBOBJ}
d63 3
d69 1
a69 1
	rm -f varhashconsts.h generate
@


1.1
log
@Initial revision
@
text
@d1 1
d15 9
a23 3
MACHINE=sun
MACHINE_ARCH=sparc
CFLAGS= -Iohash -I. -DTARGET_MACHINE=\"${MACHINE}\" -DTARGET_MACHINE_ARCH=\"${MACHINE_ARCH}\" -DMACHINE=\"${MACHINE}\" \
a66 1

@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.3
	tg-mergefixes-1-branch:1.1.1.3.0.4
	tg-mergefixes-1-base:1.1.1.3
	MIROS_X:1.1.1.3.0.2
	MIROS_X_BASE:1.1.1.3
	tg-mergetmp-3:1.1.1.3
	cvs-200412031430:1.1.1.3
	cvs-200411231430:1.1.1.2
	MIRBSD_XP_MIRPPC:1.1.1.1.0.10
	cvs-200411131700:1.1.1.2
	cvs-200410141645:1.1.1.2
	MIRBSD_XP_SPARC_BASE:1.1.1.1
	MIRBSD_XP_SPARC:1.1.1.1.0.8
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.17.53.27;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.53.27;	author tg;	state Stab;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.10.14.17.18.31;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.12.03.14.35.44;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl -w
#
# Generate sudo_defs_table and associated defines
#
# Input should be formatted thusly:
#
# var_name
#	TYPE
#	description (or NULL)

# Deal with optional -o (output) argument
if ($#ARGV > 0 && $ARGV[0] eq "-o") {
    shift;
    $header = $cfile = shift;
    $header .= '.h';
    $cfile .= '.c';
}
die "usage: $0 input_file" unless $#ARGV == 0;

$infile = $ARGV[0];
if (!defined($header)) {
    $header = $infile;
    $header =~ s/(\.in)?$/.h/;
}
if (!defined($cfile)) {
    $cfile = $infile;
    $cfile =~ s/(\.in)?$/.c/;
}

open(IN, "<$infile") || die "$0: can't open $infile: $!\n";
open(HEADER, ">$header") || die "$0: can't open $header: $!\n";
open(CFILE, ">$cfile") || die "$0: can't open $cfile: $!\n";

print CFILE "struct sudo_defs_types sudo_defs_table[] = {\n    {\n";

$count = -1;
while(<IN>) {
    chomp;
    next if /^\s*$/;
    next if /^\s*#/;

    if (/^\S/) {
	# Print last record
	&print_record() if defined($var);

	$var = $_;
	($type, $desc) = (undef, undef);
	$count++;
    } else {
	s/^\s+//;
	s/\s+$//;
	die "$0: syntax error near line $.\n" if
	    defined($type) && defined($desc);
	next if /^NULL$/;
	if (defined($type)) {
	    # Strip leading and trailing double quote and escape the rest
	    s/^"//;
	    s/"$//;
	    s/"/\\"/g;
	    $desc = "\"$_\"";
	} else {
	    $type = $_;
	}
    }
}
&print_record();
print CFILE "\tNULL, 0, NULL\n    }\n};\n";

close(IN);
close(HEADER);
close(CFILE);

sub print_record {
    $defname = "I_" . uc($var);
    printf HEADER "#define %-24s%d", $defname, $count;
    #print HEADER "\t/* $desc */" if defined($desc);
    print HEADER "\n";

    $desc = "NULL" unless defined($desc);
    print CFILE "\t\"$var\", $type,\n\t$desc\n    }, {\n";
}
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@newer sudo
@
text
@a9 1
#	array of struct def_values if TYPE == T_TUPLE
d18 1
a18 1
die "usage: $0 input_file\n" unless $#ARGV == 0;
d34 3
a36 3
$count = 0;
@@tuple_values = ( "never" );
@@records = ();
a38 1
    s/\s*#.*$//;
d40 1
d43 2
a44 2
	# Store previous record and begin new one
	$records[$count++] = [$var, $type, $desc, $values, $callback] if defined($var);
d47 2
a48 5
	$type = '';
	$desc = undef;
	$values = undef;
	$callback = undef;
	$field = 0;
a49 1
	$field++;
d52 10
a61 2
	if ($field == 1) {
	    # type
a62 23
	} elsif ($field == 2) {
	    # description
	    if ($_ eq "NULL") {
		$desc = "NULL";
	    } else {
		# Strip leading and trailing double quote and escape the rest
		s/^"//;
		s/"$//;
		s/"/\\"/g;
		$desc = "\"$_\"";
	    }
	} elsif ($field == 3 || $field == 4) {
	    if (s/^\*//) {
		$callback = $_;
	    } else {
		die "$0: syntax error near line $.\n" if $type !~ /^T_TUPLE/;
		$values = [ split ];
		foreach $v (@@$values) {
		    push(@@tuple_values, $v) unless grep(/^$v$/, @@tuple_values);
		}
	    }
	} else {
	    die "$0: syntax error near line $.\n";
d66 1
a66 21
$records[$count++] = [$var, $type, $desc, $values, $callback] if defined($var);

# Print out value arrays
for ($i = 0; $i < $count; $i++) {
    if (defined($records[$i]->[3])) {
	die "Values list specified for non-tupple\n" unless
	    $records[$i]->[1] =~ /^T_TUPLE/;
	printf CFILE "static struct def_values def_data_%s[] = {\n", $records[$i]->[0];
	foreach (@@{$records[$i]->[3]}) {
	    print CFILE "    { \"$_\", $_ },\n";
	}
	print CFILE "    { NULL, 0 },\n";
	print CFILE "};\n\n";
    }
}

# Print each record
print CFILE "struct sudo_defs_types sudo_defs_table[] = {\n    {\n";
for ($i = 0; $i < $count; $i++) {
    &print_record($records[$i], $i);
}
a68 9
# Print out def_tuple
if (@@tuple_values) {
    print HEADER "\nenum def_tupple {\n";
    foreach (@@tuple_values) {
	print HEADER "\t$_,\n";
    }
    print HEADER "};\n";
}

d74 3
a76 20
    my ($rec, $recnum) = @@_;
    my ($i, $v, $defname);
    # each variable gets a macro to access its value
    for ($rec->[1]) {
	if    (/^T_U?INT/)  { $v = "ival"; }
	elsif (/^T_STR/)    { $v = "str"; }
	elsif (/^T_FLAG/)   { $v = "flag"; }
	elsif (/^T_MODE/)   { $v = "mode"; }
	elsif (/^T_LIST/)   { $v = "list"; }
	elsif (/^T_LOGFAC/) { $v = "ival"; }
	elsif (/^T_LOGPRI/) { $v = "ival"; }
	elsif (/^T_TUPLE/)  { $v = "tuple"; }
	else { die "$0: unknown defaults type: $type\n"; }
    }
    printf HEADER "#define %-23s (sudo_defs_table[$recnum].sd_un.${v})\n",
	"def_$rec->[0]";

    $defname = "I_" . uc($rec->[0]);
    printf HEADER "#define %-24s%d", $defname, $recnum;
    #print HEADER "\t/* $rec->[2] */" if defined($rec->[2]);
d79 2
a80 8
    print CFILE "\t\"$rec->[0]\", $rec->[1],\n\t$rec->[2],\n";
    if (defined($rec->[3])) {
	printf CFILE "\tdef_data_$rec->[0],\n";
    } else {
	printf CFILE "\tNULL,\n";
    }
    printf CFILE "\t$rec->[4],\n" if defined($rec->[4]);
    print CFILE "    }, {\n";
@


1.1.1.3
log
@your daily dose of bugfixes and security updates from obsd
@
text
@d112 2
a113 3
    for ($i = 0; $i <= $#tuple_values; $i++) {
	printf HEADER "\t%s%s\n", $tuple_values[$i],
	    $i != $#tuple_values ? "," : "";
@



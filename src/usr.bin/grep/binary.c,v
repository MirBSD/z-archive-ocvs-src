head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.5
	tg-mergefixes-1-branch:1.1.1.5.0.4
	tg-mergefixes-1-base:1.1.1.5
	MIROS_X:1.1.1.5.0.2
	MIROS_X_BASE:1.1.1.5
	tg-mergetmp-3:1.1.1.5
	MIRBSD_XP_MIRPPC:1.1.1.4.0.4
	cvs-200410141645:1.1.1.5
	MIRBSD_XP_SPARC_BASE:1.1.1.4
	MIRBSD_XP_SPARC:1.1.1.4.0.2
	MIRBSD_7quater:1.1.1.2
	cvs-200405160640:1.1.1.4
	cvs-200401271800:1.1.1.3
	cvs-200401261630:1.1.1.3
	cvs-200401021645:1.1.1.3
	MIRBSD_7_ALPHA:1.1.1.2.0.6
	MIRBSD_7:1.1.1.2.0.4
	cvs-200312222040:1.1.1.2
	MIRBSD_7ter:1.1.1.2
	MIRBSD_7_DEV:1.1.1.2.0.2
	cvs-200310020700:1.1.1.2
	cvs-200309271030:1.1.1.2
	cvs-200309251530:1.1.1.2
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.06.29.17.35.54;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.06.29.17.35.54;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.09.25.16.40.52;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.01.02.18.04.08;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.05.16.08.07.37;	author tg;	state Stab;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.10.14.17.17.36;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: binary.c,v 1.7 2003/06/25 17:28:00 millert Exp $	*/

/*-
 * Copyright (c) 1999 James Howard and Dag-Erling Coïdan Smørgrav
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <ctype.h>
#include <stdio.h>
#include <zlib.h>

#include "grep.h"

#define BUFFER_SIZE 32

int
bin_file(FILE *f)
{
	char		buf[BUFFER_SIZE];
	int		i, m;

	if (fseek(f, 0L, SEEK_SET) == -1)
		return 0;

	if ((m = (int)fread(buf, 1, BUFFER_SIZE, f)) == 0)
		return 0;

	for (i = 0; i < m; i++)
		if (!isprint(buf[i]) && !isspace(buf[i]))
			return 1;

	rewind(f);
	return 0;
}

#ifndef NOZ
int
gzbin_file(gzFile *f)
{
	char		buf[BUFFER_SIZE];
	int		i, m;

	if (gzseek(f, 0L, SEEK_SET) == -1)
		return 0;

	if ((m = gzread(f, buf, BUFFER_SIZE)) == 0)
		return 0;

	for (i = 0; i < m; i++)
		if (!isprint(buf[i]))
			return 1;

	gzrewind(f);
	return 0;
}
#endif

int
mmbin_file(mmf_t *f)
{
	int i;

	/* XXX knows too much about mmf internals */
	for (i = 0; i < BUFFER_SIZE && i < f->len; i++)
		if (!isprint(f->base[i]) && !isspace(f->base[i]))
			return 1;
	mmrewind(f);
	return 0;
}
@


1.1.1.1
log
@the previous cvs import did not finish due to 'memory fault'
sync with OpenBSD-cvs
@
text
@@


1.1.1.2
log
@Release Time. Synchronize with OpenBSD 3.4-current (base system).
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.9 2003/09/18 22:29:30 beck Exp $	*/
d35 2
d40 1
a40 1
	char		buf[BUFSIZ];
d46 1
a46 1
	if ((m = (int)fread(buf, 1, BUFSIZ, f)) == 0)
d61 1
a61 1
	char		buf[BUFSIZ];
d67 1
a67 1
	if ((m = gzread(f, buf, BUFSIZ)) == 0)
d71 1
a71 1
		if (!isprint(buf[i]) && !isspace(buf[i]))
d85 1
a85 1
	for (i = 0; i < BUFSIZ && i < f->len; i++)
@


1.1.1.3
log
@Import OpenBSD again, for various reasons.
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.10 2003/12/29 21:20:55 canacar Exp $	*/
a39 1
	int		ret = 0;
d48 2
a49 4
		if (!isprint(buf[i]) && !isspace(buf[i])) {
			ret = 1;
			break;
		}
d52 1
a52 1
	return ret;
a60 1
	int		ret = 0;
d69 2
a70 4
		if (!isprint(buf[i]) && !isspace(buf[i])) {
			ret = 1;
			break;
		}
d73 1
a73 1
	return ret;
d86 1
@


1.1.1.4
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.12 2004/05/06 20:18:51 otto Exp $	*/
a34 2
#define	isbinary(ch)	(!isprint((ch)) && !isspace((ch)) && (ch) != '\b')

d42 1
a42 1
	if (isatty(fileno(f)) || fseek(f, 0L, SEEK_SET) == -1)
d49 1
a49 1
		if (isbinary(buf[i])) {
d73 1
a73 1
		if (isbinary(buf[i])) {
d90 1
a90 1
		if (isbinary(f->base[i]))
@


1.1.1.5
log
@fixes for grep
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.13 2004/09/15 22:35:36 deraadt Exp $	*/
d68 1
a68 1
	if (gzseek(f, (z_off_t)0, SEEK_SET) == -1)
@



head	1.1;
branch	1.1.1;
access;
symbols
	tg-mergetmp-mirosx-1:1.1.1.1
	tg-mergefixes-1-branch:1.1.1.1.0.14
	tg-mergefixes-1-base:1.1.1.1
	MIROS_X:1.1.1.1.0.12
	MIROS_X_BASE:1.1.1.1
	tg-mergetmp-3:1.1.1.1
	MIRBSD_XP_MIRPPC:1.1.1.1.0.10
	MIRBSD_XP_SPARC_BASE:1.1.1.1
	MIRBSD_XP_SPARC:1.1.1.1.0.8
	MIRBSD_7quater:1.1.1.1
	cvs-200405160640:1.1.1.1
	cvs-200401271800:1.1.1.1
	cvs-200401261630:1.1.1.1
	cvs-200401021645:1.1.1.1
	MIRBSD_7_ALPHA:1.1.1.1.0.6
	MIRBSD_7:1.1.1.1.0.4
	cvs-200312222040:1.1.1.1
	MIRBSD_7ter:1.1.1.1
	MIRBSD_7_DEV:1.1.1.1.0.2
	cvs-200310020700:1.1.1.1
	cvs-200309271030:1.1.1.1
	cvs-200309251530:1.1.1.1
	cvs-200308302005:1.1.1.1
	cvs-200308171200:1.1.1.1
	ctm-3496:1.1.1.1
	ctm-3449:1.1.1.1
	ctm-3437:1.1.1.1
	cvs-200307191805:1.1.1.1
	ctm-3425:1.1.1.1
	cvs-200307091500:1.1.1.1
	ctm-3389:1.1.1.1
	cvs-200306291430:1.1.1.1
	ctm-3341:1.1.1.1
	MIRBSD_5:1.1.1.1
	cvs-200306082100:1.1.1.1
	ctm-3316:1.1.1.1
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	MIRBSD_4:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.03.22.17.53.47;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.53.47;	author tg;	state Stab;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@=head1 NAME

VI - VI module within perl embedded nvi

=head1 SYNOPSIS

    sub wc {
      my $words;
      $i = $VI::StartLine;
      while ($i <= $VI::StopLine) {
        $_ = VI::GetLine($VI::ScreenId, $i++);
        $words+=split;
      }
      VI::Msg($VI::ScreenId,"$words words");
    }

=head1 DESCRIPTION

This pseudo module is available to perl programs run from within nvi and
provides access to the files being edited and some internal data.

Beware that you should not use this module from within a C<perldo> or
from within an C<END> block or a C<DESTROY> method.

=head2 Variables

These are set by nvi before starting each perl command.

=over 8

=item * $ScreenId

Screen id of the current screen.

=item * $StartLine

Line number of the first line of the selected range or of the file if no
range was specified.

=item * $StopLine

Line number of the last line of the selected range or of the file if no
range was specified.

=back

=head2 Functions

=over 8

=item * AppendLine

    VI::AppendLine(screenId,lineNumber,text);

Append the string text after the line in lineNumber.

=item * DelLine

    VI::DelLine(screenId,lineNum);

Delete lineNum.

=item * EndScreen

VI::EndScreen(screenId);

End a screen.

=item * FindScreen

    VI::FindScreen(file);

Return the screen id associated with file name.

=item * GetCursor

    ($line, $column) = VI::GetCursor(screenId);

Return the current cursor position as a list with two elements.

=item * GetLine

    VI::GetLine(screenId,lineNumber);

Return lineNumber.

=item * GetMark

    ($line, $column) = VI::GetMark(screenId,mark);

Return the mark's cursor position as a list with two elements.

=item * GetOpt

    VI::GetOpt(screenId,option);

Return the value of an option.

=item * InsertLine

    VI::InsertLine(screenId,lineNumber,text);

Insert the string text before the line in lineNumber.

=item * LastLine

    VI::LastLine(screenId);

Return the last line in the screen.

=item * MapKey

    VI::MapKey(screenId,key,perlproc);

Associate a key with a perl procedure.

=item * Msg

    VI::Msg(screenId,text);

Set the message line to text.

=item * NewScreen

    VI::NewScreen(screenId);
    VI::NewScreen(screenId,file);

Create a new screen.  If a filename is specified then the screen is
opened with that file.

=item * Run

    VI::Run(screenId,cmd);

Run the ex command cmd.

=item * SetCursor

    VI::SetCursor(screenId,line,column);

Set the cursor to the line and column numbers supplied.

=item * SetLine

    VI::SetLine(screenId,lineNumber,text);

Set lineNumber to the text supplied.

=item * SetMark

    VI::SetMark(screenId,mark,line,column);

Set the mark to the line and column numbers supplied.

=item * SetOpt

    VI::SetOpt(screenId,command);

Set an option.

=item * SwitchScreen

    VI::SwitchScreen(screenId,screenId);

Change the current focus to screen.

=item * UnmapKey

    VI::UnmmapKey(screenId,key);

Unmap a key.

=item * Warn

This is the default warning handler.
It adds any warnings to the error string.

=back

=head1 EXAMPLES

    sub showmarks {
      my ($mark, $all);
      for $mark ('a' .. 'z') {
        eval {VI::GetMark($VI::ScreenId, $mark)};
        $all .= $mark unless ($@@);
      }
      VI::Msg($VI::ScreenId,"Set marks: $all");
    }

    sub forall {
      my ($code) = shift;
      my ($i) = $VI::StartLine-1;
      while (++$i <= $VI::StopLine) {
        $_ = VI::GetLine($VI::ScreenId, $i);
        VI::SetLine($VI::ScreenId, $i, $_) if(&$code);
      }
    }

Now you can do

    :perl forall sub{s/perlre/substitution/}

Although you'll probably use

    :perldo s/perlre/substitution/

instead.

See L<perlre> for perl regular expressions.

=head1 SEE ALSO

L<nviperl>

=head1 AUTHOR

Sven Verdoolaege <skimo@@dns.ufsia.ac.be>
@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@

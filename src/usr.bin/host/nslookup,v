head	1.4;
access;
symbols
	tg-mergetmp-mirosx-1:1.4
	tg-mergefixes-1-branch:1.4.0.4
	tg-mergefixes-1-base:1.4
	MIROS_X:1.4.0.2
	MIROS_X_BASE:1.4
	MIRBSD_XP_MIRPPC:1.3.0.10
	MIRBSD_XP_SPARC_BASE:1.3
	MIRBSD_XP_SPARC:1.3.0.8
	MIRBSD_7quater:1.3
	MIRBSD_7_ALPHA:1.3.0.6
	MIRBSD_7:1.3.0.4
	MIRBSD_7ter:1.3
	MIRBSD_7_DEV:1.3.0.2
	MIRBSD_5:1.2
	MIRBSD_4:1.1;
locks; strict;
comment	@# @;


1.4
date	2004.12.05.13.25.47;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.06.20.22.52;	author tg;	state Stab;
branches;
next	1.2;

1.2
date	2003.06.02.19.56.30;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.23.22.50.12;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@* replace all occurences of old eMail addresses of mine
  with their more recent counterparts
* no $Log keyword!
* update licence template to most recent version in files touched
* in some places, don't add our own licence boilerplate, just
  add my name to the others
* make dev/rndvar.h suitable for inclusion in asm code
* include dev/rndvar.h by in_cksum.s instead of
  hardcoding pool size
* ENTRY(a); ENTRY(b) -> NENTRY(a); ENTRY(b)
* RCS IDs belong into .comment not .text
@
text
@#!/bin/sh
# $MirBSD: src/usr.bin/host/nslookup,v 1.3 2003/07/06 20:22:52 tg Stab $
# $OpenBSD: nslookup,v 1.2 1997/03/12 10:41:55 downsj Exp $
# @@(#)nslookup            e07@@nikhef.nl (Eric Wassenaar) 940919
#-
# Copyright (c) 2003
#	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
#-
# Based upon code by:
# Copyright (c) by Eric Wassenaar, Nikhef-H, <e07@@nikhef.nl>
#-
# This utility emulates nslookup as a wrapper to host.
# It performs most, but not all, functions.

exec=echo
exec=

echo "Warning! nslookup is deprecated. Use host(1) instead."

# ----------------------------------------------------------------------
# Setup environment.
# ----------------------------------------------------------------------

# This is where the "host" executable lives.
BINDIR=/usr/sbin

PATH=${BINDIR}:/bin:/usr/bin; export PATH

cmd=$(basename $0)

options="[-l]"
usage="Usage: $cmd $options [server]"

# ----------------------------------------------------------------------
# Exit codes from <sysexits.h>
# ----------------------------------------------------------------------

EX_OK=0
EX_USAGE=64
EX_UNAVAILABLE=69

# ----------------------------------------------------------------------
# Setup defaults.
# ----------------------------------------------------------------------

name=""
zone=""

type=""
class=""

server=""

debug=""
verbose=""
norecurse=""
vc=""

# ----------------------------------------------------------------------
# Process arguments.
# ----------------------------------------------------------------------

for i
do
	if [ "X$server" != "X" ]
	then
		echo "$usage" 1>&2 ; exit $EX_USAGE
	fi

	case "$i" in
	-d)	exec=echo		;;
	-l)	server=$(hostname)	;;
	-*)	echo "$cmd: Unknown option $i" 1>&2 ; exit $EX_USAGE ;;
	*)	server="$i"		;;
	esac
done

# ----------------------------------------------------------------------
# Choose between BSD or SYSV echo command.
# ----------------------------------------------------------------------

n=$(echo -n)
if [ "$n" = "-n" ]
then
	c='\c' ; n=''
else
	n='-n' ; c=''
fi

# ----------------------------------------------------------------------
# Main loop.
# ----------------------------------------------------------------------

trap continue 2

while echo $n "> $c" ; read line
do
	case "$line" in
	"")	continue	;;
	*\**)	continue	;;
	*\!*)	continue	;;
	*\?*)	line="help"	;;
	esac

	set - $line
	command="$1"
	case "$command" in

	help)
		cat <<!
	exit | quit	- exit from the program
	help | ?	- print this help message
	set  | set all	- show all current settings
	set [no]debug	- increase debug output level
	set [no]verbose	- increase verbose output level
	set [no]recurse	- request recursive nameserver queries
	set [no]vc	- use virtual circuit for queries
	set type=TYPE	- query about the given resource record TYPE
	set class=CLASS	- query about the given resource record CLASS
	server SERVER	- contact the explicit server with name SERVER
	server		- show the name of the current explicit SERVER
	NAME		- query for NAME using all current settings
	NAME SERVER	- query for NAME at the given SERVER
	ls ZONE		- generate listing of the given name ZONE
	ls		- generate listing of the last given ZONE
	ls ZONE [>]FILE	- copy resource record output also to FILE
!
		;;

	exit|quit)
		break
		;;

	set)
		option="$2"
		case "$option" in

		""|all)
			echo "name=$name"
			echo "zone=$zone"
			echo "server=$server"
			echo "set type=$type"
			echo "set class=$class"
			echo "set debug=$debug"
			echo "set verbose=$verbose"
			echo "set norecurse=$norecurse"
			echo "set vc=$vc"
			;;

		debug|debu|deb|de|d)
			debug="-d $debug"
			;;

		nodebug|nodebu|nodeb|node|nod)
			debug=""
			;;

		d2)
			debug="-d -d"
			verbose="-v -v"
			;;

		nod2)
			debug=""
			verbose=""
			;;

		verbose|verbos|verbo|verb|ver|ve|v)
			verbose="-v $verbose"
			;;

		noverbose|noverbos|noverbo|noverb|nover|nove|nov)
			verbose=""
			;;

		recurse|recurs|recur|recu|rec|re|r)
			norecurse=""
			;;

		norecurse|norecurs|norecur|norecu|norec|nore|nor)
			norecurse="-r"
			;;

		vc)
			vc="-u"
			;;

		novc)
			vc=""
			;;

		querytype=*|querytyp=*|queryty=*|queryt=*|\
		query=*|quer=*|que=*|qu=*|q=*|\
		type=*|typ=*|ty=*|t=*)
			type=$(echo $option | sed 's/.*=//')
			if [ "X$type" != "X" ]
			then
				type="-t $type"
			fi
			;;

		querytype|querytyp|queryty|queryt|\
		query|quer|que|qu|q|\
		type|typ|ty|t)
			type=""
			;;

		class=*|clas=*|cla=*|cl=*|c=*)
			class=$(echo $option | sed 's/.*=//')
			if [ "X$class" != "X" ]
			then
				class="-c $class"
			fi
			;;

		class*|clas*|cla*|cl*|c*)
			class=""
			;;

		*)
			echo "Unknown option $option"
			;;

		esac
		;;

	server)
		nserver="$2"
		if [ "X$nserver" = "X" ]
		then
			if [ "X$server" = "X" ]
			then
				echo "No server defined"
			else
				echo "server=$server"
			fi
		else
			server="$nserver"
		fi
		;;

	ls)
		nzone="$2"
		if [ "X$nzone" = "X" ]
		then
			if [ "X$zone" = "X" ]
			then
				echo "No zone defined"
				continue
			fi
		else
			zone="$nzone"
		fi

		file=$(echo "$3$4" | sed 's/>*//')
		if [ "X$file" != "X" ]
		then
			file="-f $file"
		fi

		options="$debug $verbose $norecurse $vc $file"
		$exec host $options $type $class -l $zone $nserver
		;;

	[a-zA-Z0-9]*)
		name="$1"

		nserver="$2"
		if [ "X$nserver" = "X" ]
		then
			nserver="$server"
		fi

		options="$debug $verbose $norecurse $vc"
		$exec host $options $type $class $name $nserver
		;;

	*)
		echo "Unknown command $command"
		;;

	esac
done

exit $EX_OK
@


1.3
log
@mop up
@
text
@d2 13
a14 3
#	$MirBSD: nslookup,v 1.2 2003/06/02 19:56:30 tg Exp $
#	$OpenBSD: nslookup,v 1.2 1997/03/12 10:41:55 downsj Exp $
#	@@(#)nslookup            e07@@nikhef.nl (Eric Wassenaar) 940919
d16 7
d24 1
a24 1
# Copyright (c) 1982-2003 Thorsten Glaser <x86@@ePost.de>
a25 12
#
# Subject to these terms, everybody who obtained a copy of this work
# is hereby permitted to deal in the work without restriction inclu-
# ding without limitation the rights to use, distribute, sell, modi-
# fy, give away, merge or sublicense it provided this notice is kept
# and the authors and contributors are given due credit in derivates
# or accompanying documents.
# This work is provided "as is" with no explicit or implicit warran-
# ties whatsoever to the maximum extend permitted by applicable law;
# in no event may an author or contributor be held liable for damage
# that is, directly or indirectly, caused by the work, even if advi-
# sed of the possibility of such damage.
@


1.2
log
@licence cleanup
@
text
@d2 1
a2 1
#	$MirBSD: nslookup,v 1.1 2003/03/23 22:50:12 tg Exp $
d10 6
a15 5
# Everybody who obtained a copy of this work is hereby permitted to,
# without further restrictions as long as due credit is given to the
# authors and the notice below is retained, use, distribute, modify,
# sell, give away, merge or sublicense it.
#
d17 4
a20 3
# ty whatsoever. Use it only at your own risk. In no event an author
# or contributor may be held liable for any damage that, directly or
# indirectly, originated through or is caused by this work.
a21 292
# This utility emulates nslookup as a wrapper to host.
# It performs most, but not all, functions.

exec=echo
exec=

echo "Warning! nslookup is deprecated. Use host(1) instead."

# ----------------------------------------------------------------------
# Setup environment.
# ----------------------------------------------------------------------

# This is where the "host" executable lives.
BINDIR=/usr/sbin

PATH=${BINDIR}:/bin:/usr/bin; export PATH

cmd=$(basename $0)

options="[-l]"
usage="Usage: $cmd $options [server]"

# ----------------------------------------------------------------------
# Exit codes from <sysexits.h>
# ----------------------------------------------------------------------

EX_OK=0
EX_USAGE=64
EX_UNAVAILABLE=69

# ----------------------------------------------------------------------
# Setup defaults.
# ----------------------------------------------------------------------

name=""
zone=""

type=""
class=""

server=""

debug=""
verbose=""
norecurse=""
vc=""

# ----------------------------------------------------------------------
# Process arguments.
# ----------------------------------------------------------------------

for i
do
	if [ "X$server" != "X" ]
	then
		echo "$usage" 1>&2 ; exit $EX_USAGE
	fi

	case "$i" in
	-d)	exec=echo		;;
	-l)	server=$(hostname)	;;
	-*)	echo "$cmd: Unknown option $i" 1>&2 ; exit $EX_USAGE ;;
	*)	server="$i"		;;
	esac
done

# ----------------------------------------------------------------------
# Choose between BSD or SYSV echo command.
# ----------------------------------------------------------------------

n=$(echo -n)
if [ "$n" = "-n" ]
then
	c='\c' ; n=''
else
	n='-n' ; c=''
fi

# ----------------------------------------------------------------------
# Main loop.
# ----------------------------------------------------------------------

trap continue 2

while echo $n "> $c" ; read line
do
	case "$line" in
	"")	continue	;;
	*\**)	continue	;;
	*\!*)	continue	;;
	*\?*)	line="help"	;;
	esac

	set - $line
	command="$1"
	case "$command" in

	help)
		cat <<!
	exit | quit	- exit from the program
	help | ?	- print this help message
	set  | set all	- show all current settings
	set [no]debug	- increase debug output level
	set [no]verbose	- increase verbose output level
	set [no]recurse	- request recursive nameserver queries
	set [no]vc	- use virtual circuit for queries
	set type=TYPE	- query about the given resource record TYPE
	set class=CLASS	- query about the given resource record CLASS
	server SERVER	- contact the explicit server with name SERVER
	server		- show the name of the current explicit SERVER
	NAME		- query for NAME using all current settings
	NAME SERVER	- query for NAME at the given SERVER
	ls ZONE		- generate listing of the given name ZONE
	ls		- generate listing of the last given ZONE
	ls ZONE [>]FILE	- copy resource record output also to FILE
!
		;;

	exit|quit)
		break
		;;

	set)
		option="$2"
		case "$option" in

		""|all)
			echo "name=$name"
			echo "zone=$zone"
			echo "server=$server"
			echo "set type=$type"
			echo "set class=$class"
			echo "set debug=$debug"
			echo "set verbose=$verbose"
			echo "set norecurse=$norecurse"
			echo "set vc=$vc"
			;;

		debug|debu|deb|de|d)
			debug="-d $debug"
			;;

		nodebug|nodebu|nodeb|node|nod)
			debug=""
			;;

		d2)
			debug="-d -d"
			verbose="-v -v"
			;;

		nod2)
			debug=""
			verbose=""
			;;

		verbose|verbos|verbo|verb|ver|ve|v)
			verbose="-v $verbose"
			;;

		noverbose|noverbos|noverbo|noverb|nover|nove|nov)
			verbose=""
			;;

		recurse|recurs|recur|recu|rec|re|r)
			norecurse=""
			;;

		norecurse|norecurs|norecur|norecu|norec|nore|nor)
			norecurse="-r"
			;;

		vc)
			vc="-u"
			;;

		novc)
			vc=""
			;;

		querytype=*|querytyp=*|queryty=*|queryt=*|\
		query=*|quer=*|que=*|qu=*|q=*|\
		type=*|typ=*|ty=*|t=*)
			type=$(echo $option | sed 's/.*=//')
			if [ "X$type" != "X" ]
			then
				type="-t $type"
			fi
			;;

		querytype|querytyp|queryty|queryt|\
		query|quer|que|qu|q|\
		type|typ|ty|t)
			type=""
			;;

		class=*|clas=*|cla=*|cl=*|c=*)
			class=$(echo $option | sed 's/.*=//')
			if [ "X$class" != "X" ]
			then
				class="-c $class"
			fi
			;;

		class*|clas*|cla*|cl*|c*)
			class=""
			;;

		*)
			echo "Unknown option $option"
			;;

		esac
		;;

	server)
		nserver="$2"
		if [ "X$nserver" = "X" ]
		then
			if [ "X$server" = "X" ]
			then
				echo "No server defined"
			else
				echo "server=$server"
			fi
		else
			server="$nserver"
		fi
		;;

	ls)
		nzone="$2"
		if [ "X$nzone" = "X" ]
		then
			if [ "X$zone" = "X" ]
			then
				echo "No zone defined"
				continue
			fi
		else
			zone="$nzone"
		fi

		file=$(echo "$3$4" | sed 's/>*//')
		if [ "X$file" != "X" ]
		then
			file="-f $file"
		fi

		options="$debug $verbose $norecurse $vc $file"
		$exec host $options $type $class -l $zone $nserver
		;;

	[a-zA-Z0-9]*)
		name="$1"

		nserver="$2"
		if [ "X$nserver" = "X" ]
		then
			nserver="$server"
		fi

		options="$debug $verbose $norecurse $vc"
		$exec host $options $type $class $name $nserver
		;;

	*)
		echo "Unknown command $command"
		;;

	esac
done

exit $EX_OK
#!/bin/sh -
#	$MirBSD: nslookup,v 1.1 2003/03/23 22:50:12 tg Exp $
#	$OpenBSD: nslookup,v 1.2 1997/03/12 10:41:55 downsj Exp $
#	@@(#)nslookup            e07@@nikhef.nl (Eric Wassenaar) 940919
#
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright (c) by Eric Wassenaar, Nikhef-H, <e07@@nikhef.nl>
#
# I hereby permit everyone who obtained a copy of this work to distri-
# bute, sell, give away, modify, sublicense, merge and use it, freely.
# I retain the right to be known as the author of the work.
#
# The work is provided "as is", with no explicit or implicit warranty.
# Use it at your own risk. Neither the author, nor contributors may be
# held liable for any damage, directly or indirectly, which originated
# by the creation or modification of this work. Since modern computing
# devices are error-prone, flawless behaviour cannot be expected.

@


1.1
log
@forgot to cvs add these files as well...
@
text
@d2 1
a2 1
#	$MirBSD: obsd.util,v 1.34 2003/03/22 22:33:31 tg Exp $
d6 2
a7 1
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
d10 4
a13 3
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
d15 5
a19 5
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

d295 1
a295 1
#	$MirBSD: obsd.util,v 1.34 2003/03/22 22:33:31 tg Exp $
@


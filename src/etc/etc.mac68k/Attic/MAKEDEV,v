head	1.2;
access;
symbols
	cvs-200405160640:1.1.1.6
	cvs-200401271800:1.1.1.5
	cvs-200401261630:1.1.1.5
	cvs-200401021645:1.1.1.4
	cvs-200312222040:1.1.1.4
	cvs-200312031730:1.1.1.4
	cvs-200310020700:1.1.1.3
	cvs-200309271030:1.1.1.3
	cvs-200309251530:1.1.1.3
	cvs-200308302005:1.1.1.3
	cvs-200308221505:1.1.1.3
	cvs-200308171200:1.1.1.3
	ctm-3496:1.1.1.3
	ctm-3449:1.1.1.3
	ctm-3437:1.1.1.3
	cvs-200307191805:1.1.1.3
	ctm-3425:1.1.1.3
	cvs-200307091500:1.1.1.3
	cvs-200307072125:1.1.1.3
	ctm-3389:1.1.1.3
	cvs-200307021520:1.1.1.3
	cvs-200306291430:1.1.1.3
	ctm-3341:1.1.1.3
	cvs-200306082100:1.1.1.2
	ctm-3316:1.1.1.2
	ctm-3272:1.1.1.1
	ctm-3264:1.1.1.1
	cvs-200305071630:1.1.1.1
	ctm-3203:1.1.1.1
	cvs-20030410-1130:1.1.1.1
	ctm-3155:1.1.1.1
	ctm-3132:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.04.06.14.19.49;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2003.03.22.17.35.21;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.03.22.17.35.21;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.06.05.16.59.09;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.06.19.12.16.25;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.12.03.17.58.27;	author tg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.01.26.16.55.37;	author tg;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2004.05.16.07.18.19;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove more non-i386 files (they slow down generic directory
cvs ci and up operations)
@
text
@#!/bin/sh -
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.10 2002/12/05 04:30:21 kjc Exp 
#	OpenBSD: MAKEDEV.mi,v 1.56 2003/01/06 17:19:16 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.7 2002/02/16 01:19:52 deraadt Exp 
#
#
# Copyright (c) 2001,2002 Todd T. Fries <todd@@OpenBSD.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
# THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	std	standard devices
#	fd	makes fd/* for the fdescfs
#	local	configuration specific devices
#	ramdisk	makes all devices for a ramdisk kernel
#	st*	SCSI tapes
#	sd*	SCSI disks
#	cd*	SCSI cdrom drives
#	rd*	"rd" pseudo-disks
#	ch*	SCSI media changer
#	vnd*	"file" pseudo-disks
#	ccd*	concatenated disk devices
# Terminal ports:
#	ttye*	ite bitmapped consoles
#	tty00	standard serial port
# Pseudo terminals:
#	tty*	set of 16 slave psuedo terminals
#	pty*	set of 16 master pseudo terminals
# Graphics devices:
#	grf*	custom chip (grf0), Retina Z2/Z3 (grf1/grf2),
#		Cirrus boards (grf3), A2410 (grf4) video or
#		CyberVision 64 (grf5)
# Special purpose devices:
#	bpf*	Berkeley Packet Filter
#	tun*	network tunnel driver
#	pf*	Packet Filter
#	lkm	loadable kernel modules interface
#	*random	inkernel random data source
#	uk*	SCSI Unknown device
#	ss*	SCSI scanners
#	xfs*	XFS filesystem devices
#	adb	Apple Desktop bus event interface
#	asc*	ASC Audio device
#	systrace*	system call tracing device
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

trunc()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg1="$1"
	arg2="$2"
	case $3 in
	l)   echo ${arg2#$arg1} ;;
	r|*) echo ${arg1#$arg2} ;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	RMlist="$RMlist $1$2? r$1$2?"
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
		let count=count+1
	done
	MKlist="$MKlist;chown root.operator $1$2? r$1$2?"
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist="rm -f"
MKlist=":"

mkl() {
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
}

M() {
	RMlist="$RMlist $1"
	mkl ${5-666} $1 $2 $3 $4
	mklist="$mklist $1"
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist="$MKlist;chown $7.$G $1"
	} || {
		case $G in
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
		esac
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
std)
	M console	c 0 0 600
	M tty		c 1 0
	M mem		c 2 0 640 kmem
	M kmem		c 2 1 640 kmem
	M null		c 2 2
	M zero		c 2 12
	M stdin		c 21 0
	M stdout	c 21 1
	M stderr	c 21 2
	M ksyms		c 37 0 640 kmem
	M drum		c 3 0 640 kmem
	M klog		c 6 0 600
	;;

tty0*)
	case $U in
	00|01)
		M tty$U c 12 $U 660 dialer uucp
		;;
	*)
		echo bad unit for serial tty in: $i
		;;
	esac
	;;

ttye*)
	case $U in
	0|1)
		M ttye$U c 11 $U 600
		;;
	*)
		echo bad unit for ttye in: $i
		;;
	esac
	;;

grf*)
	case $U in
	0|1|2|3)
		M grf$U c 10 $U
		;;
	*)
		echo bad unit for grf in: $i
		;;
	esac
	;;

adb)
	M adb c 23 0
	;;

asc*)
        M asc$U c 36 $U
        ;;

systrace)
	M systrace c 50 0 644
	;;

asc*)
	M asc$U 36 0
	;;

adb)
	M adb c 23 0
	;;

xfs*)
	M xfs$U c 51 $U 600
	;;

ss*)
	M ss$U c 33 $(($U*16)) 640 operator
	M nss$U c 33 $(($(($U*16))+1)) 640 operator
	M enss$U c 33 $(($(($U*16))+3)) 640 operator
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
	;;

uk*)
	M uk$U c 34 $U 640 operator
	;;

*random)
	n=0
	for pre in " " s u p a
	do
		M ${pre}random c 32 $n 644
		n=$(($n+1))
	done
	;;

lkm)
	M lkm c 25 0 640 _lkm
	;;

pf*)
	M pf c 35 0 600
	;;

tun*)
	M tun$U c 24 $U 600
	;;

bpf*)
	M bpf$U c 22 $U 600
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A tbl p q r s t u v w x y z P Q R S T
	name=${tbl[$U]}
	n=0
	while [ $n -lt 16 ]
	do
		nam=$name$(hex $n)
		off=$(($U*16))
		M tty$nam c 4 $(($off+$n))
		M pty$nam c 5 $(($off+$n))
		n=$(($n+1))
	done
	;;

vnd*)
	dodisk vnd $U 8 19 $U 0
	dodisk svnd $U 8 19 $U 128
	;;

ch*)
	M ch$U c 17 $U 660 operator
	;;

rd*)
	dodisk2 rd $U 13 18 $U 0
	;;

cd*)
	dodisk2 cd $U 6 15 $U 0
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 5 $n 660 operator
		M ${pre}rst$U	c 14 $n 660 operator
		n=$(($n+1))
	done
	;;

ramdisk)
	R pty0 tty00 tty01 asc0 adb rd0 rd1 st0 st1 sd0 sd1 sd2 sd3
	R bpf0 std
	;;

local)
	test -s $T.local && sh $T.local
	;;

fd)
	RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c 21 $n;n=$(($n+1));done
	MKlist="$MKlist;chmod 555 fd"
	;;

all)
	R ccd0 ccd1 ccd2 ccd3 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0
	R bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1 pty2
	R xfs0 ss0 ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4
	R local grf0 grf1 grf2 grf3 adb asc0 uk0 random lkm ttye0
	R tty00 tty01 pf systrace std st0 st1 fd
	;;

sd*|ccd*)
	case $i in
	sd*) dodisk sd $U 4 13 $U 0;;
	ccd*) dodisk ccd $U 9 20 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
if [ "$os" = "SunOS" ]; then
	eo=transform
	transform() {
		case $mode in
		600) mask=077;;
		640) mask=027;;
		660) mask=007;;
		644) mask=022;;
		666) mask=0;;
		440) mask=227;;
		esac
		echo `echo "$@@"|sed \
		    's/mknod -m \([0-9]*\) /umask '$mask';mknod /;s/-m [0-9]* //g;\
		    s/operator/5/g;s/root.kmem/root.2/g;s/root\./root:/g'`
	}
fi
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" -o "$eo" = "transform" ]; then
	$eo "$list"
else
	echo "$list" | sh
fi
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import OpenBSD 3.3 source repository from CTM 3132 the first time
This opens an OpenBSD-mirabile (aka MirBSD) repository.

### MirBSD is:
# Copyright (c) 1982-2003 by Thorsten "mirabile" Glaser <x86@@ePost.de>
# Copyright © 1968-2003  The authors of And contributors to UNIX®, the
#       C Language, BSD/Berkeley Unix; 386BSD, NetBSD 1.1 and OpenBSD.
#
# Anyone who obtained a copy of this work is hereby permitted to freely use,
# distribute, modify, merge, sublicence, give away or sell it as long as the
# authors are given due credit and the following notice is retained:
#
# This work is provided "as is", with no explicit or implicit warranty what-
# soever. Use it only at your own risk. In no event may an author or contri-
# butor be held liable for any damage, directly or indirectly, that origina-
# ted through or is caused by creation or modification of this work.

MirBSD is my private tree. MirBSD does not differ very much from OpenBSD
and intentionally tracks OpenBSD. That's why it _is_ OpenBSD, just not the
official one. It's like with DarrenBSD.

At time of this writing, no advertising for MirBSD must be done,
because the advertising clause has not yet been sorted out.

http://templeofhate.com/tglaser/MirBSD/index.php
@
text
@@


1.1.1.2
log
@Import latest OpenBSD CVS tree by CTM in order
to sync the base system and ports tree with Them.

This includes the recent licence changes as well - by
importing the changed base and re-applying the diffs
(with cvs up -j -j) they are inherited, and we're not
bound to the removed clauses any longer.
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.59 2003/05/21 18:48:59 jason Exp 
d128 1
a128 1
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
d160 1
a160 1
		MKlist="$MKlist;chown $7:$G $1"
@


1.1.1.3
log
@sync with OpenBSD, this gives us a fair amount of fixes
@
text
@d6 3
a8 3
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.11 2003/06/18 18:08:59 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.60 2003/06/18 18:08:59 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.8 2003/06/18 18:08:59 todd Exp 
d11 2
a12 1
# Copyright (c) 2001,2002,2003 Todd T. Fries <todd@@OpenBSD.org>
d14 7
a20 3
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
d22 10
a31 7
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
@


1.1.1.4
log
@Import selected parts of the OpenBSD base system:
 * vnd change - you'll have to re-run MAKEDEV after booting a new kernel
 * misc. changes in /etc, mostly user related
 * Perl 5.8.2 (diff to MirPorts will be committed RSN)
 * some changes to binutils
 * Updates in bc and dc
@
text
@d7 1
a7 1
#	OpenBSD: MAKEDEV.mi,v 1.63 2003/10/15 02:01:04 todd Exp 
d80 1
a80 1
h2d()
d82 7
a88 16
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
d304 1
a304 1
	dodisk svnd $U 8 19 $U 2048
@


1.1.1.5
log
@Import OpenBSD as of today again (seems pretty stable, I hope)

Prominent changes: more bgpd, tcpmd5; tcpdump/isakmpd fixes
@
text
@d6 3
a8 3
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.12 2004/01/13 15:13:14 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.66 2004/01/13 15:13:14 todd Exp 
#	OpenBSD: MAKEDEV.sub,v 1.9 2004/01/12 22:18:24 todd Exp 
a79 8
alph2d()
{
	local t="$1"  
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
	echo ${#sub}
}

d354 5
a358 5
	R ttye0 ccd0 ccd1 ccd2 ccd3 cd0 cd1 rd0 tun0 tun1 tun2 tun3
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 pty1
	R pty2 xfs0 ss0 ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3
	R sd4 local grf0 grf1 grf2 grf3 adb asc0 uk0 random lkm tty00
	R tty01 pf systrace std st0 st1 fd
@


1.1.1.6
log
@large-scale import of OpenBSD 3.5-current source base including many fixes
note: from now, we will not be binary compatible with OpenBSD apps any
longer (due to syscall numbering differences); both an OpenBSD compat and
a conversion tool for old MirOS #7 apps will be delivered later.

The src/ tree is locked from now.
@
text
@d6 3
a8 4
#	OpenBSD: etc.mac68k/MAKEDEV.md,v 1.17 2004/04/11 18:05:23 millert Exp 
#	OpenBSD: MAKEDEV.common,v 1.7 2004/04/11 18:14:59 millert Exp 
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
d11 1
a11 1
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
d28 7
a34 6
#	ramdisk	Ramdisk kernel devices
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	ccd*	Concatenated disk devices
#	cd*	ATAPI and SCSI CD-ROM drives
d36 3
a38 5
#	sd*	SCSI disks, including flopticals
#	vnd*	"file" pseudo-disk devices
# Tapes:
#	ch*	SCSI media changers
#	st*	SCSI tape drives
d40 2
a41 2
#	tty00	Standard serial port
#	ttye*	ITE bitmapped consoles
d43 6
a48 6
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Console ports:
#	adb	Apple Desktop bus event interface
#	grf*	Raw interface to the mac68k graphics devices
a49 1
#	asc*	ASC Audio device
d51 1
a51 2
#	fd	fd/* nodes for fdescfs
#	lkm	Loadable kernel modules interface
d53 3
a55 1
#	*random	In-kernel random data source
d57 4
a60 4
#	systrace*	System call tracing device
#	tun*	Network tunnel driver
#	uk*	SCSI unknown devices
#	xfs*	XFS filesystem node
d248 2
a249 2
xfs*)
	M xfs$U c 51 $U 600
d252 2
a253 2
uk*)
	M uk$U c 34 $U 640 operator
d256 2
a257 2
tun*)
	M tun$U c 24 $U 600
d260 2
a261 2
systrace)
	M systrace c 50 0 644
d272 4
d285 4
d293 2
a294 8
lkm)
	M lkm c 25 0 640 _lkm
	;;

fd)
	RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c 21 $n;n=$(($n+1));done
	MKlist="$MKlist;chmod 555 fd"
a300 8
asc*)
	M asc$U 36 0
	;;

adb)
	M adb c 23 0
	;;

d306 2
a307 6
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z

	name=${letters[$U]}
d309 1
a309 1
	while [ $n -lt 62 ]
d311 2
a312 2
		nam=$name${suffixes[$n]}
		off=$(($U*62))
d319 3
a321 12
ptm)
	M ptm c 52 0 666
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 5 $n 660 operator
		M ${pre}rst$U	c 14 $n 660 operator
		n=$(($n+1))
	done
a327 5
vnd*)
	dodisk vnd $U 8 19 $U 0
	dodisk svnd $U 8 19 $U 2048
	;;

d336 8
a343 2
local)
	test -s $T.local && sh $T.local
d351 10
d363 3
a365 3
	R bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 xfs0
	R ss0 ss1 ch0 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 ptm
	R local grf0 grf1 grf2 grf3 adb asc0 uk0 random lkm tty00
d383 16
d407 1
a407 1
if [ "$eo" = "echo" ]; then
@


